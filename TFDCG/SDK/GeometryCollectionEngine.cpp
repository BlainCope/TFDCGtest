/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/GeometryCollectionEngine_ENUMS.h"
#include "Headers/GeometryCollectionEngine_PARAMS.h"
#include "Headers/GeometryCollectionEngine_UChaosDestructionListener.h"
#include "Headers/GeometryCollectionEngine_AGeometryCollectionActor.h"
#include "Headers/GeometryCollectionEngine_UGeometryCollectionCache.h"
#include "Headers/GeometryCollectionEngine_UGeometryCollectionComponent.h"
#include "Headers/GeometryCollectionEngine_AGeometryCollectionDebugDrawActor.h"
#include "Headers/GeometryCollectionEngine_UGeometryCollectionDebugDrawComponent.h"
#include "Headers/GeometryCollectionEngine_AGeometryCollectionISMPoolActor.h"
#include "Headers/GeometryCollectionEngine_UGeometryCollectionISMPoolComponent.h"
#include "Headers/GeometryCollectionEngine_UGeometryCollection.h"
#include "Headers/GeometryCollectionEngine_AGeometryCollectionRenderLevelSetActor.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GeometryCollectionEngine
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x05005040
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortTrailingEvents
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<GeometryCollectionEngine::FChaosTrailingEventData> TrailingEvents                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GeometryCollectionEngine::EChaosTrailingSortMethod SortMethod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SortTrailingEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosTrailingEventData>* TrailingEvents, GeometryCollectionEngine::EChaosTrailingSortMethod SortMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortTrailingEvents");
        
        UChaosDestructionListener_SortTrailingEvents_Params params {};
        params.SortMethod = SortMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (TrailingEvents != nullptr)
            *TrailingEvents = params.TrailingEvents;
    }

    /**
     * Function:
     *         RVA    -> 0x05004E70
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortRemovalEvents
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<GeometryCollectionEngine::FChaosRemovalEventData> RemovalEvents                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GeometryCollectionEngine::EChaosRemovalSortMethod  SortMethod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SortRemovalEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosRemovalEventData>* RemovalEvents, GeometryCollectionEngine::EChaosRemovalSortMethod SortMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortRemovalEvents");
        
        UChaosDestructionListener_SortRemovalEvents_Params params {};
        params.SortMethod = SortMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RemovalEvents != nullptr)
            *RemovalEvents = params.RemovalEvents;
    }

    /**
     * Function:
     *         RVA    -> 0x050053E0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortCollisionEvents
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<GeometryCollectionEngine::FChaosCollisionEventData> CollisionEvents                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GeometryCollectionEngine::EChaosCollisionSortMethod SortMethod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SortCollisionEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosCollisionEventData>* CollisionEvents, GeometryCollectionEngine::EChaosCollisionSortMethod SortMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortCollisionEvents");
        
        UChaosDestructionListener_SortCollisionEvents_Params params {};
        params.SortMethod = SortMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (CollisionEvents != nullptr)
            *CollisionEvents = params.CollisionEvents;
    }

    /**
     * Function:
     *         RVA    -> 0x05005210
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortBreakingEvents
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<GeometryCollectionEngine::FChaosBreakingEventData> BreakingEvents                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         GeometryCollectionEngine::EChaosBreakingSortMethod SortMethod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SortBreakingEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosBreakingEventData>* BreakingEvents, GeometryCollectionEngine::EChaosBreakingSortMethod SortMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SortBreakingEvents");
        
        UChaosDestructionListener_SortBreakingEvents_Params params {};
        params.SortMethod = SortMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (BreakingEvents != nullptr)
            *BreakingEvents = params.BreakingEvents;
    }

    /**
     * Function:
     *         RVA    -> 0x05005AE0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetTrailingEventRequestSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::FChaosTrailingEventRequestSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetTrailingEventRequestSettings(const GeometryCollectionEngine::FChaosTrailingEventRequestSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetTrailingEventRequestSettings");
        
        UChaosDestructionListener_SetTrailingEventRequestSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050056E0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetTrailingEventEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetTrailingEventEnabled(bool bIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetTrailingEventEnabled");
        
        UChaosDestructionListener_SetTrailingEventEnabled_Params params {};
        params.bIsEnabled = bIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050059E0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetRemovalEventRequestSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::FChaosRemovalEventRequestSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetRemovalEventRequestSettings(const GeometryCollectionEngine::FChaosRemovalEventRequestSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetRemovalEventRequestSettings");
        
        UChaosDestructionListener_SetRemovalEventRequestSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050055E0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetRemovalEventEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetRemovalEventEnabled(bool bIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetRemovalEventEnabled");
        
        UChaosDestructionListener_SetRemovalEventEnabled_Params params {};
        params.bIsEnabled = bIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05005D00
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetCollisionEventRequestSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::FChaosCollisionEventRequestSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetCollisionEventRequestSettings(const GeometryCollectionEngine::FChaosCollisionEventRequestSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetCollisionEventRequestSettings");
        
        UChaosDestructionListener_SetCollisionEventRequestSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050058E0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetCollisionEventEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetCollisionEventEnabled(bool bIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetCollisionEventEnabled");
        
        UChaosDestructionListener_SetCollisionEventEnabled_Params params {};
        params.bIsEnabled = bIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05005BF0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetBreakingEventRequestSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::FChaosBreakingEventRequestSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetBreakingEventRequestSettings(const GeometryCollectionEngine::FChaosBreakingEventRequestSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetBreakingEventRequestSettings");
        
        UChaosDestructionListener_SetBreakingEventRequestSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050057E0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetBreakingEventEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::SetBreakingEventEnabled(bool bIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.SetBreakingEventEnabled");
        
        UChaosDestructionListener_SetBreakingEventEnabled_Params params {};
        params.bIsEnabled = bIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05005E10
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.RemoveGeometryCollectionActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::AGeometryCollectionActor* GeometryCollectionActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::RemoveGeometryCollectionActor(GeometryCollectionEngine::AGeometryCollectionActor* GeometryCollectionActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.RemoveGeometryCollectionActor");
        
        UChaosDestructionListener_RemoveGeometryCollectionActor_Params params {};
        params.GeometryCollectionActor = GeometryCollectionActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.RemoveChaosSolverActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         ChaosSolverEngine::AChaosSolverActor*              ChaosSolverActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::RemoveChaosSolverActor(ChaosSolverEngine::AChaosSolverActor* ChaosSolverActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.RemoveChaosSolverActor");
        
        UChaosDestructionListener_RemoveChaosSolverActor_Params params {};
        params.ChaosSolverActor = ChaosSolverActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050055B0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.IsEventListening
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UChaosDestructionListener::IsEventListening()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.IsEventListening");
        
        UChaosDestructionListener_IsEventListening_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05005FD0
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.AddGeometryCollectionActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::AGeometryCollectionActor* GeometryCollectionActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::AddGeometryCollectionActor(GeometryCollectionEngine::AGeometryCollectionActor* GeometryCollectionActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.AddGeometryCollectionActor");
        
        UChaosDestructionListener_AddGeometryCollectionActor_Params params {};
        params.GeometryCollectionActor = GeometryCollectionActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/GeometryCollectionEngine.ChaosDestructionListener.AddChaosSolverActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         ChaosSolverEngine::AChaosSolverActor*              ChaosSolverActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UChaosDestructionListener::AddChaosSolverActor(ChaosSolverEngine::AChaosSolverActor* ChaosSolverActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.ChaosDestructionListener.AddChaosSolverActor");
        
        UChaosDestructionListener_AddChaosSolverActor_Params params {};
        params.ChaosSolverActor = ChaosSolverActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05009370
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionActor.RaycastSingle
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               End                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AGeometryCollectionActor::RaycastSingle(const CoreUObject::FVector& Start, const CoreUObject::FVector& End, Engine::FHitResult* OutHit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionActor.RaycastSingle");
        
        AGeometryCollectionActor_RaycastSingle_Params params {};
        params.Start = Start;
        params.End = End;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutHit != nullptr)
            *OutHit = params.OutHit;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0500C100
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetRestCollection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         GeometryCollectionEngine::UGeometryCollection*     RestCollectionIn                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetRestCollection(GeometryCollectionEngine::UGeometryCollection* RestCollectionIn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetRestCollection");
        
        UGeometryCollectionComponent_SetRestCollection_Params params {};
        params.RestCollectionIn = RestCollectionIn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500B120
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyRemovals
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewNotifyRemovals                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetNotifyRemovals(bool bNewNotifyRemovals)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyRemovals");
        
        UGeometryCollectionComponent_SetNotifyRemovals_Params params {};
        params.bNewNotifyRemovals = bNewNotifyRemovals;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500AE20
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyCrumblings
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewNotifyCrumblings                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bNewCrumblingEventIncludesChildren                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetNotifyCrumblings(bool bNewNotifyCrumblings, bool bNewCrumblingEventIncludesChildren)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyCrumblings");
        
        UGeometryCollectionComponent_SetNotifyCrumblings_Params params {};
        params.bNewNotifyCrumblings = bNewNotifyCrumblings;
        params.bNewCrumblingEventIncludesChildren = bNewCrumblingEventIncludesChildren;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500B340
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyBreaks
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewNotifyBreaks                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetNotifyBreaks(bool bNewNotifyBreaks)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyBreaks");
        
        UGeometryCollectionComponent_SetNotifyBreaks_Params params {};
        params.bNewNotifyBreaks = bNewNotifyBreaks;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500BF50
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetEnableDamageFromCollision
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetEnableDamageFromCollision(bool bValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetEnableDamageFromCollision");
        
        UGeometryCollectionComponent_SetEnableDamageFromCollision_Params params {};
        params.bValue = bValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500D080
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetAnchoredByTransformedBox
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FBox                                  Box                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            Transform                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAnchored                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MaxLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetAnchoredByTransformedBox(const CoreUObject::FBox& Box, const CoreUObject::FTransform& Transform, bool bAnchored, int32_t MaxLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetAnchoredByTransformedBox");
        
        UGeometryCollectionComponent_SetAnchoredByTransformedBox_Params params {};
        params.Box = Box;
        params.Transform = Transform;
        params.bAnchored = bAnchored;
        params.MaxLevel = MaxLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500D6A0
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetAnchoredByIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAnchored                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetAnchoredByIndex(int32_t Index, bool bAnchored)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetAnchoredByIndex");
        
        UGeometryCollectionComponent_SetAnchoredByIndex_Params params {};
        params.Index = Index;
        params.bAnchored = bAnchored;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500D3F0
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetAnchoredByBox
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FBox                                  WorldSpaceBox                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               bAnchored                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MaxLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::SetAnchoredByBox(const CoreUObject::FBox& WorldSpaceBox, bool bAnchored, int32_t MaxLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.SetAnchoredByBox");
        
        UGeometryCollectionComponent_SetAnchoredByBox_Params params {};
        params.WorldSpaceBox = WorldSpaceBox;
        params.bAnchored = bAnchored;
        params.MaxLevel = MaxLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500CF00
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.RemoveAllAnchors
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::RemoveAllAnchors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.RemoveAllAnchors");
        
        UGeometryCollectionComponent_RemoveAllAnchors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ReceivePhysicsCollision
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         ChaosSolverEngine::FChaosPhysicsCollisionInfo      CollisionInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ReceivePhysicsCollision(const ChaosSolverEngine::FChaosPhysicsCollisionInfo& CollisionInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ReceivePhysicsCollision");
        
        UGeometryCollectionComponent_ReceivePhysicsCollision_Params params {};
        params.CollisionInfo = CollisionInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/GeometryCollectionEngine.GeometryCollectionComponent.NotifyGeometryCollectionPhysicsStateChange__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         GeometryCollectionEngine::UGeometryCollectionComponent* FracturedComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::NotifyGeometryCollectionPhysicsStateChange__DelegateSignature(GeometryCollectionEngine::UGeometryCollectionComponent* FracturedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GeometryCollectionEngine.GeometryCollectionComponent.NotifyGeometryCollectionPhysicsStateChange__DelegateSignature");
        
        UGeometryCollectionComponent_NotifyGeometryCollectionPhysicsStateChange__DelegateSignature_Params params {};
        params.FracturedComponent = FracturedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/GeometryCollectionEngine.GeometryCollectionComponent.NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         GeometryCollectionEngine::UGeometryCollectionComponent* FracturedComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature(GeometryCollectionEngine::UGeometryCollectionComponent* FracturedComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/GeometryCollectionEngine.GeometryCollectionComponent.NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature");
        
        UGeometryCollectionComponent_NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature_Params params {};
        params.FracturedComponent = FracturedComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500C630
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetRootIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGeometryCollectionComponent::GetRootIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetRootIndex");
        
        UGeometryCollectionComponent_GetRootIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0500C400
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetMassAndExtents
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutMass                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FBox                                  OutExtents                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::GetMassAndExtents(int32_t ItemIndex, float* OutMass, CoreUObject::FBox* OutExtents)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetMassAndExtents");
        
        UGeometryCollectionComponent_GetMassAndExtents_Params params {};
        params.ItemIndex = ItemIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutMass != nullptr)
            *OutMass = params.OutMass;
        if (OutExtents != nullptr)
            *OutExtents = params.OutExtents;
    }

    /**
     * Function:
     *         RVA    -> 0x0500E4A0
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetLocalBounds
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FBox                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FBox UGeometryCollectionComponent::GetLocalBounds()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetLocalBounds");
        
        UGeometryCollectionComponent_GetLocalBounds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0500C660
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetInitialLevel
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UGeometryCollectionComponent::GetInitialLevel(int32_t ItemIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetInitialLevel");
        
        UGeometryCollectionComponent_GetInitialLevel_Params params {};
        params.ItemIndex = ItemIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0500C080
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetDebugInfo
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UGeometryCollectionComponent::GetDebugInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.GetDebugInfo");
        
        UGeometryCollectionComponent_GetDebugInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0500DAF0
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.CrumbleCluster
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::CrumbleCluster(int32_t ItemIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.CrumbleCluster");
        
        UGeometryCollectionComponent_CrumbleCluster_Params params {};
        params.ItemIndex = ItemIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500D970
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.CrumbleActiveClusters
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::CrumbleActiveClusters()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.CrumbleActiveClusters");
        
        UGeometryCollectionComponent_CrumbleActiveClusters_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500B560
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyPhysicsField
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               Enabled                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Chaos::EGeometryCollectionPhysicsTypeEnum          Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         FieldSystemEngine::UFieldSystemMetaData*           MetaData                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         FieldSystemEngine::UFieldNodeBase*                 Field                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyPhysicsField(bool Enabled, Chaos::EGeometryCollectionPhysicsTypeEnum Target, FieldSystemEngine::UFieldSystemMetaData* MetaData, FieldSystemEngine::UFieldNodeBase* Field)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyPhysicsField");
        
        UGeometryCollectionComponent_ApplyPhysicsField_Params params {};
        params.Enabled = Enabled;
        params.Target = Target;
        params.MetaData = MetaData;
        params.Field = Field;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500CA40
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyLinearVelocity
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinearVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyLinearVelocity(int32_t ItemIndex, const CoreUObject::FVector& LinearVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyLinearVelocity");
        
        UGeometryCollectionComponent_ApplyLinearVelocity_Params params {};
        params.ItemIndex = ItemIndex;
        params.LinearVelocity = LinearVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500BC80
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyKinematicField
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyKinematicField(float Radius, const CoreUObject::FVector& Position)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyKinematicField");
        
        UGeometryCollectionComponent_ApplyKinematicField_Params params {};
        params.Radius = Radius;
        params.Position = Position;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500DC60
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyInternalStrain
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PropagationDepth                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PropagationFactor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Strain                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyInternalStrain(int32_t ItemIndex, const CoreUObject::FVector& Location, float Radius, int32_t PropagationDepth, float PropagationFactor, float Strain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyInternalStrain");
        
        UGeometryCollectionComponent_ApplyInternalStrain_Params params {};
        params.ItemIndex = ItemIndex;
        params.Location = Location;
        params.Radius = Radius;
        params.PropagationDepth = PropagationDepth;
        params.PropagationFactor = PropagationFactor;
        params.Strain = Strain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500E080
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyExternalStrain
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PropagationDepth                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PropagationFactor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Strain                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyExternalStrain(int32_t ItemIndex, const CoreUObject::FVector& Location, float Radius, int32_t PropagationDepth, float PropagationFactor, float Strain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyExternalStrain");
        
        UGeometryCollectionComponent_ApplyExternalStrain_Params params {};
        params.ItemIndex = ItemIndex;
        params.Location = Location;
        params.Radius = Radius;
        params.PropagationDepth = PropagationDepth;
        params.PropagationFactor = PropagationFactor;
        params.Strain = Strain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500CD30
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyBreakingLinearVelocity
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               LinearVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyBreakingLinearVelocity(int32_t ItemIndex, const CoreUObject::FVector& LinearVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyBreakingLinearVelocity");
        
        UGeometryCollectionComponent_ApplyBreakingLinearVelocity_Params params {};
        params.ItemIndex = ItemIndex;
        params.LinearVelocity = LinearVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500CD30
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyBreakingAngularVelocity
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               AngularVelocity                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyBreakingAngularVelocity(int32_t ItemIndex, const CoreUObject::FVector& AngularVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyBreakingAngularVelocity");
        
        UGeometryCollectionComponent_ApplyBreakingAngularVelocity_Params params {};
        params.ItemIndex = ItemIndex;
        params.AngularVelocity = AngularVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0500C750
     *         Name   -> Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyAngularVelocity
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               AngularVelocity                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGeometryCollectionComponent::ApplyAngularVelocity(int32_t ItemIndex, const CoreUObject::FVector& AngularVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/GeometryCollectionEngine.GeometryCollectionComponent.ApplyAngularVelocity");
        
        UGeometryCollectionComponent_ApplyAngularVelocity_Params params {};
        params.ItemIndex = ItemIndex;
        params.AngularVelocity = AngularVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
