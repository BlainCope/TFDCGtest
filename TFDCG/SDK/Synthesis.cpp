/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/Synthesis_ENUMS.h"
#include "Headers/Synthesis_PARAMS.h"
#include "Headers/Synthesis_USubmixEffectConvolutionReverbPreset.h"
#include "Headers/Synthesis_USubmixEffectDelayStatics.h"
#include "Headers/Synthesis_USubmixEffectDelayPreset.h"
#include "Headers/Synthesis_USynthKnob.h"
#include "Headers/Synthesis_USubmixEffectFilterPreset.h"
#include "Headers/Synthesis_USubmixEffectFlexiverbPreset.h"
#include "Headers/Synthesis_USourceEffectConvolutionReverbPreset.h"
#include "Headers/Synthesis_USourceEffectDynamicsProcessorPreset.h"
#include "Headers/Synthesis_UEnvelopeFollowerListener.h"
#include "Headers/Synthesis_USourceEffectEnvelopeFollowerPreset.h"
#include "Headers/Synthesis_USourceEffectEQPreset.h"
#include "Headers/Synthesis_USourceEffectFilterPreset.h"
#include "Headers/Synthesis_USourceEffectFoldbackDistortionPreset.h"
#include "Headers/Synthesis_USourceEffectMidSideSpreaderPreset.h"
#include "Headers/Synthesis_USourceEffectMotionFilterPreset.h"
#include "Headers/Synthesis_USourceEffectPannerPreset.h"
#include "Headers/Synthesis_USourceEffectPhaserPreset.h"
#include "Headers/Synthesis_USourceEffectRingModulationPreset.h"
#include "Headers/Synthesis_USourceEffectSimpleDelayPreset.h"
#include "Headers/Synthesis_USourceEffectStereoDelayPreset.h"
#include "Headers/Synthesis_USourceEffectWaveShaperPreset.h"
#include "Headers/Synthesis_UAudioImpulseResponse.h"
#include "Headers/Synthesis_UModularSynthPresetBank.h"
#include "Headers/Synthesis_UModularSynthLibrary.h"
#include "Headers/Synthesis_UModularSynthComponent.h"
#include "Headers/Synthesis_USubmixEffectMultibandCompressorPreset.h"
#include "Headers/Synthesis_USubmixEffectStereoDelayPreset.h"
#include "Headers/Synthesis_USubmixEffectStereoToQuadPreset.h"
#include "Headers/Synthesis_USubmixEffectTapDelayPreset.h"
#include "Headers/Synthesis_UGranularSynth.h"
#include "Headers/Synthesis_USourceEffectBitCrusherPreset.h"
#include "Headers/Synthesis_USourceEffectChorusPreset.h"
#include "Headers/Synthesis_UMonoWaveTableSynthPreset.h"
#include "Headers/Synthesis_USynthComponentMonoWaveTable.h"
#include "Headers/Synthesis_USynthComponentToneGenerator.h"
#include "Headers/Synthesis_USynthSamplePlayer.h"
#include "Headers/Synthesis_USynthesisUtilitiesBlueprintFunctionLibrary.h"
#include "Headers/Synthesis_USynth2DSlider.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Synthesis
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x029A0B60
     *         Name   -> Function /Script/Synthesis.SubmixEffectConvolutionReverbPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectConvolutionReverbSettings  InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectConvolutionReverbPreset::SetSettings(const Synthesis::FSubmixEffectConvolutionReverbSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectConvolutionReverbPreset.SetSettings");
        
        USubmixEffectConvolutionReverbPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A0980
     *         Name   -> Function /Script/Synthesis.SubmixEffectConvolutionReverbPreset.SetImpulseResponse
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::UAudioImpulseResponse*                  InImpulseResponse                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectConvolutionReverbPreset::SetImpulseResponse(Synthesis::UAudioImpulseResponse* InImpulseResponse)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectConvolutionReverbPreset.SetImpulseResponse");
        
        USubmixEffectConvolutionReverbPreset_SetImpulseResponse_Params params {};
        params.InImpulseResponse = InImpulseResponse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A23E0
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayStatics.SetMaximumDelayLength
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectDelaySettings              DelaySettings                                              (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              MaximumDelayLength                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FSubmixEffectDelaySettings              ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Synthesis::FSubmixEffectDelaySettings USubmixEffectDelayStatics::STATIC_SetMaximumDelayLength(Synthesis::FSubmixEffectDelaySettings* DelaySettings, float MaximumDelayLength)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayStatics.SetMaximumDelayLength");
        
        USubmixEffectDelayStatics_SetMaximumDelayLength_Params params {};
        params.MaximumDelayLength = MaximumDelayLength;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DelaySettings != nullptr)
            *DelaySettings = params.DelaySettings;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029A2200
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayStatics.SetInterpolationTime
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectDelaySettings              DelaySettings                                              (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              InterpolationTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FSubmixEffectDelaySettings              ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Synthesis::FSubmixEffectDelaySettings USubmixEffectDelayStatics::STATIC_SetInterpolationTime(Synthesis::FSubmixEffectDelaySettings* DelaySettings, float InterpolationTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayStatics.SetInterpolationTime");
        
        USubmixEffectDelayStatics_SetInterpolationTime_Params params {};
        params.InterpolationTime = InterpolationTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DelaySettings != nullptr)
            *DelaySettings = params.DelaySettings;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029A2020
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayStatics.SetDelayLength
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectDelaySettings              DelaySettings                                              (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              DelayLength                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FSubmixEffectDelaySettings              ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Synthesis::FSubmixEffectDelaySettings USubmixEffectDelayStatics::STATIC_SetDelayLength(Synthesis::FSubmixEffectDelaySettings* DelaySettings, float DelayLength)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayStatics.SetDelayLength");
        
        USubmixEffectDelayStatics_SetDelayLength_Params params {};
        params.DelayLength = DelayLength;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DelaySettings != nullptr)
            *DelaySettings = params.DelaySettings;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029A2A90
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectDelaySettings              InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDelayPreset::SetSettings(const Synthesis::FSubmixEffectDelaySettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayPreset.SetSettings");
        
        USubmixEffectDelayPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A27D0
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayPreset.SetInterpolationTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDelayPreset::SetInterpolationTime(float Time)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayPreset.SetInterpolationTime");
        
        USubmixEffectDelayPreset_SetInterpolationTime_Params params {};
        params.Time = Time;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A26B0
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayPreset.SetDelay
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Length                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDelayPreset::SetDelay(float Length)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayPreset.SetDelay");
        
        USubmixEffectDelayPreset_SetDelay_Params params {};
        params.Length = Length;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A2910
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayPreset.SetDefaultSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectDelaySettings              InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDelayPreset::SetDefaultSettings(const Synthesis::FSubmixEffectDelaySettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayPreset.SetDefaultSettings");
        
        USubmixEffectDelayPreset_SetDefaultSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A28F0
     *         Name   -> Function /Script/Synthesis.SubmixEffectDelayPreset.GetMaxDelayInMilliseconds
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USubmixEffectDelayPreset::GetMaxDelayInMilliseconds()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectDelayPreset.GetMaxDelayInMilliseconds");
        
        USubmixEffectDelayPreset_GetMaxDelayInMilliseconds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029BF590
     *         Name   -> Function /Script/Synthesis.SynthKnob.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthKnob::SetValue(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthKnob.SetValue");
        
        USynthKnob_SetValue_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BF350
     *         Name   -> Function /Script/Synthesis.SynthKnob.SetStepSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthKnob::SetStepSize(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthKnob.SetStepSize");
        
        USynthKnob_SetStepSize_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BF450
     *         Name   -> Function /Script/Synthesis.SynthKnob.SetLocked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthKnob::SetLocked(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthKnob.SetLocked");
        
        USynthKnob_SetLocked_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BF6D0
     *         Name   -> Function /Script/Synthesis.SynthKnob.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthKnob::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthKnob.GetValue");
        
        USynthKnob_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029A4270
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectFilterSettings             InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetSettings(const Synthesis::FSubmixEffectFilterSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetSettings");
        
        USubmixEffectFilterPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A4160
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESubmixFilterType                       InType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetFilterType(Synthesis::ESubmixFilterType InType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterType");
        
        USubmixEffectFilterPreset_SetFilterType_Params params {};
        params.InType = InType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A3C10
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterQMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InQ                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetFilterQMod(float InQ)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterQMod");
        
        USubmixEffectFilterPreset_SetFilterQMod_Params params {};
        params.InQ = InQ;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A3D20
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterQ
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InQ                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetFilterQ(float InQ)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterQ");
        
        USubmixEffectFilterPreset_SetFilterQ_Params params {};
        params.InQ = InQ;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A3E30
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterCutoffFrequencyMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InFrequency                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetFilterCutoffFrequencyMod(float InFrequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterCutoffFrequencyMod");
        
        USubmixEffectFilterPreset_SetFilterCutoffFrequencyMod_Params params {};
        params.InFrequency = InFrequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A3F40
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterCutoffFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InFrequency                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetFilterCutoffFrequency(float InFrequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterCutoffFrequency");
        
        USubmixEffectFilterPreset_SetFilterCutoffFrequency_Params params {};
        params.InFrequency = InFrequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A4050
     *         Name   -> Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterAlgorithm
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESubmixFilterAlgorithm                  InAlgorithm                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFilterPreset::SetFilterAlgorithm(Synthesis::ESubmixFilterAlgorithm InAlgorithm)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFilterPreset.SetFilterAlgorithm");
        
        USubmixEffectFilterPreset_SetFilterAlgorithm_Params params {};
        params.InAlgorithm = InAlgorithm;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A5050
     *         Name   -> Function /Script/Synthesis.SubmixEffectFlexiverbPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectFlexiverbSettings          InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectFlexiverbPreset::SetSettings(const Synthesis::FSubmixEffectFlexiverbSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectFlexiverbPreset.SetSettings");
        
        USubmixEffectFlexiverbPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298F1F0
     *         Name   -> Function /Script/Synthesis.SourceEffectConvolutionReverbPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectConvolutionReverbSettings  InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectConvolutionReverbPreset::SetSettings(const Synthesis::FSourceEffectConvolutionReverbSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectConvolutionReverbPreset.SetSettings");
        
        USourceEffectConvolutionReverbPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298F010
     *         Name   -> Function /Script/Synthesis.SourceEffectConvolutionReverbPreset.SetImpulseResponse
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::UAudioImpulseResponse*                  InImpulseResponse                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectConvolutionReverbPreset::SetImpulseResponse(Synthesis::UAudioImpulseResponse* InImpulseResponse)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectConvolutionReverbPreset.SetImpulseResponse");
        
        USourceEffectConvolutionReverbPreset_SetImpulseResponse_Params params {};
        params.InImpulseResponse = InImpulseResponse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02990590
     *         Name   -> Function /Script/Synthesis.SourceEffectDynamicsProcessorPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectDynamicsProcessorSettings  InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectDynamicsProcessorPreset::SetSettings(const Synthesis::FSourceEffectDynamicsProcessorSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectDynamicsProcessorPreset.SetSettings");
        
        USourceEffectDynamicsProcessorPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029914C0
     *         Name   -> Function /Script/Synthesis.SourceEffectEnvelopeFollowerPreset.UnregisterEnvelopeFollowerListener
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::UEnvelopeFollowerListener*              EnvelopeFollowerListener                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectEnvelopeFollowerPreset::UnregisterEnvelopeFollowerListener(Synthesis::UEnvelopeFollowerListener* EnvelopeFollowerListener)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectEnvelopeFollowerPreset.UnregisterEnvelopeFollowerListener");
        
        USourceEffectEnvelopeFollowerPreset_UnregisterEnvelopeFollowerListener_Params params {};
        params.EnvelopeFollowerListener = EnvelopeFollowerListener;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029916C0
     *         Name   -> Function /Script/Synthesis.SourceEffectEnvelopeFollowerPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectEnvelopeFollowerSettings   InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectEnvelopeFollowerPreset::SetSettings(const Synthesis::FSourceEffectEnvelopeFollowerSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectEnvelopeFollowerPreset.SetSettings");
        
        USourceEffectEnvelopeFollowerPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029915C0
     *         Name   -> Function /Script/Synthesis.SourceEffectEnvelopeFollowerPreset.RegisterEnvelopeFollowerListener
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::UEnvelopeFollowerListener*              EnvelopeFollowerListener                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectEnvelopeFollowerPreset::RegisterEnvelopeFollowerListener(Synthesis::UEnvelopeFollowerListener* EnvelopeFollowerListener)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectEnvelopeFollowerPreset.RegisterEnvelopeFollowerListener");
        
        USourceEffectEnvelopeFollowerPreset_RegisterEnvelopeFollowerListener_Params params {};
        params.EnvelopeFollowerListener = EnvelopeFollowerListener;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02993370
     *         Name   -> Function /Script/Synthesis.SourceEffectEQPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectEQSettings                 InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectEQPreset::SetSettings(const Synthesis::FSourceEffectEQSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectEQPreset.SetSettings");
        
        USourceEffectEQPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029946F0
     *         Name   -> Function /Script/Synthesis.SourceEffectFilterPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectFilterSettings             InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectFilterPreset::SetSettings(const Synthesis::FSourceEffectFilterSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectFilterPreset.SetSettings");
        
        USourceEffectFilterPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029958D0
     *         Name   -> Function /Script/Synthesis.SourceEffectFoldbackDistortionPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectFoldbackDistortionSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectFoldbackDistortionPreset::SetSettings(const Synthesis::FSourceEffectFoldbackDistortionSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectFoldbackDistortionPreset.SetSettings");
        
        USourceEffectFoldbackDistortionPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02996350
     *         Name   -> Function /Script/Synthesis.SourceEffectMidSideSpreaderPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectMidSideSpreaderSettings    InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectMidSideSpreaderPreset::SetSettings(const Synthesis::FSourceEffectMidSideSpreaderSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectMidSideSpreaderPreset.SetSettings");
        
        USourceEffectMidSideSpreaderPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02997A90
     *         Name   -> Function /Script/Synthesis.SourceEffectMotionFilterPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectMotionFilterSettings       InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectMotionFilterPreset::SetSettings(const Synthesis::FSourceEffectMotionFilterSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectMotionFilterPreset.SetSettings");
        
        USourceEffectMotionFilterPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299A670
     *         Name   -> Function /Script/Synthesis.SourceEffectPannerPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectPannerSettings             InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectPannerPreset::SetSettings(const Synthesis::FSourceEffectPannerSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectPannerPreset.SetSettings");
        
        USourceEffectPannerPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299B400
     *         Name   -> Function /Script/Synthesis.SourceEffectPhaserPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectPhaserSettings             InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectPhaserPreset::SetSettings(const Synthesis::FSourceEffectPhaserSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectPhaserPreset.SetSettings");
        
        USourceEffectPhaserPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299C080
     *         Name   -> Function /Script/Synthesis.SourceEffectRingModulationPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectRingModulationSettings     InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectRingModulationPreset::SetSettings(const Synthesis::FSourceEffectRingModulationSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectRingModulationPreset.SetSettings");
        
        USourceEffectRingModulationPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299CD90
     *         Name   -> Function /Script/Synthesis.SourceEffectSimpleDelayPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectSimpleDelaySettings        InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectSimpleDelayPreset::SetSettings(const Synthesis::FSourceEffectSimpleDelaySettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectSimpleDelayPreset.SetSettings");
        
        USourceEffectSimpleDelayPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299DC10
     *         Name   -> Function /Script/Synthesis.SourceEffectStereoDelayPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectStereoDelaySettings        InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectStereoDelayPreset::SetSettings(const Synthesis::FSourceEffectStereoDelaySettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectStereoDelayPreset.SetSettings");
        
        USourceEffectStereoDelayPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299A670
     *         Name   -> Function /Script/Synthesis.SourceEffectWaveShaperPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectWaveShaperSettings         InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectWaveShaperPreset::SetSettings(const Synthesis::FSourceEffectWaveShaperSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectWaveShaperPreset.SetSettings");
        
        USourceEffectWaveShaperPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297EA70
     *         Name   -> Function /Script/Synthesis.ModularSynthLibrary.AddModularSynthPresetToBankAsset
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::UModularSynthPresetBank*                InBank                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FModularSynthPreset                     Preset                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                PresetName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthLibrary::STATIC_AddModularSynthPresetToBankAsset(Synthesis::UModularSynthPresetBank* InBank, const Synthesis::FModularSynthPreset& Preset, const BasicTypes::FString& PresetName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthLibrary.AddModularSynthPresetToBankAsset");
        
        UModularSynthLibrary_AddModularSynthPresetToBankAsset_Params params {};
        params.InBank = InBank;
        params.Preset = Preset;
        params.PresetName = PresetName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297F270
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetSynthPreset
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FModularSynthPreset                     SynthPreset                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetSynthPreset(const Synthesis::FModularSynthPreset& SynthPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetSynthPreset");
        
        UModularSynthComponent_SetSynthPreset_Params params {};
        params.SynthPreset = SynthPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029815C0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetSustainGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              SustainGain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetSustainGain(float SustainGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetSustainGain");
        
        UModularSynthComponent_SetSustainGain_Params params {};
        params.SustainGain = SustainGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297FA80
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayWetlevel
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DelayWetlevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetStereoDelayWetlevel(float DelayWetlevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayWetlevel");
        
        UModularSynthComponent_SetStereoDelayWetlevel_Params params {};
        params.DelayWetlevel = DelayWetlevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297FC60
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DelayTimeMsec                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetStereoDelayTime(float DelayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayTime");
        
        UModularSynthComponent_SetStereoDelayTime_Params params {};
        params.DelayTimeMsec = DelayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297F990
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayRatio
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DelayRatio                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetStereoDelayRatio(float DelayRatio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayRatio");
        
        UModularSynthComponent_SetStereoDelayRatio_Params params {};
        params.DelayRatio = DelayRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297FDC0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynthStereoDelayMode                   StereoDelayMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetStereoDelayMode(Synthesis::ESynthStereoDelayMode StereoDelayMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayMode");
        
        UModularSynthComponent_SetStereoDelayMode_Params params {};
        params.StereoDelayMode = StereoDelayMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297FEB0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayIsEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               StereoDelayEnabled                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetStereoDelayIsEnabled(bool StereoDelayEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayIsEnabled");
        
        UModularSynthComponent_SetStereoDelayIsEnabled_Params params {};
        params.StereoDelayEnabled = StereoDelayEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297FB70
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayFeedback
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DelayFeedback                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetStereoDelayFeedback(float DelayFeedback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetStereoDelayFeedback");
        
        UModularSynthComponent_SetStereoDelayFeedback_Params params {};
        params.DelayFeedback = DelayFeedback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982860
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetSpread
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Spread                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetSpread(float Spread)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetSpread");
        
        UModularSynthComponent_SetSpread_Params params {};
        params.Spread = Spread;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029814D0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetReleaseTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReleaseTimeMsec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetReleaseTime(float ReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetReleaseTime");
        
        UModularSynthComponent_SetReleaseTime_Params params {};
        params.ReleaseTimeMsec = ReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982E80
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetPortamento
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Portamento                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetPortamento(float Portamento)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetPortamento");
        
        UModularSynthComponent_SetPortamento_Params params {};
        params.Portamento = Portamento;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982FE0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetPitchBend
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              PitchBend                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetPitchBend(float PitchBend)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetPitchBend");
        
        UModularSynthComponent_SetPitchBend_Params params {};
        params.PitchBend = PitchBend;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982950
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetPan
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Pan                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetPan(float Pan)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetPan");
        
        UModularSynthComponent_SetPan_Params params {};
        params.Pan = Pan;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983700
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::ESynth1OscType                          OscType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscType(int32_t OscIndex, Synthesis::ESynth1OscType OscType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscType");
        
        UModularSynthComponent_SetOscType_Params params {};
        params.OscIndex = OscIndex;
        params.OscType = OscType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982AB0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscSync
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsSynced                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscSync(bool bIsSynced)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscSync");
        
        UModularSynthComponent_SetOscSync_Params params {};
        params.bIsSynced = bIsSynced;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029832C0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscSemitones
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Semitones                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscSemitones(int32_t OscIndex, float Semitones)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscSemitones");
        
        UModularSynthComponent_SetOscSemitones_Params params {};
        params.OscIndex = OscIndex;
        params.Semitones = Semitones;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982D00
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscPulsewidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Pulsewidth                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscPulsewidth(int32_t OscIndex, float Pulsewidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscPulsewidth");
        
        UModularSynthComponent_SetOscPulsewidth_Params params {};
        params.OscIndex = OscIndex;
        params.Pulsewidth = Pulsewidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029834E0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscOctave
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Octave                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscOctave(int32_t OscIndex, float Octave)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscOctave");
        
        UModularSynthComponent_SetOscOctave_Params params {};
        params.OscIndex = OscIndex;
        params.Octave = Octave;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983AA0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscGainMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OscGainMod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscGainMod(int32_t OscIndex, float OscGainMod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscGainMod");
        
        UModularSynthComponent_SetOscGainMod_Params params {};
        params.OscIndex = OscIndex;
        params.OscGainMod = OscGainMod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983CC0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OscGain                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscGain(int32_t OscIndex, float OscGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscGain");
        
        UModularSynthComponent_SetOscGain_Params params {};
        params.OscIndex = OscIndex;
        params.OscGain = OscGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983880
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscFrequencyMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OscFreqMod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscFrequencyMod(int32_t OscIndex, float OscFreqMod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscFrequencyMod");
        
        UModularSynthComponent_SetOscFrequencyMod_Params params {};
        params.OscIndex = OscIndex;
        params.OscFreqMod = OscFreqMod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983140
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetOscCents
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            OscIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Cents                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetOscCents(int32_t OscIndex, float Cents)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetOscCents");
        
        UModularSynthComponent_SetOscCents_Params params {};
        params.OscIndex = OscIndex;
        params.Cents = Cents;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029809D0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvSustainGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              SustainGain                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvSustainGain(float SustainGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvSustainGain");
        
        UModularSynthComponent_SetModEnvSustainGain_Params params {};
        params.SustainGain = SustainGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980870
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvReleaseTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Release                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvReleaseTime(float Release)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvReleaseTime");
        
        UModularSynthComponent_SetModEnvReleaseTime_Params params {};
        params.Release = Release;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981370
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvPatch
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynthModEnvPatch                       InPatchType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvPatch(Synthesis::ESynthModEnvPatch InPatchType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvPatch");
        
        UModularSynthComponent_SetModEnvPatch_Params params {};
        params.InPatchType = InPatchType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029810B0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInvert                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvInvert(bool bInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvInvert");
        
        UModularSynthComponent_SetModEnvInvert_Params params {};
        params.bInvert = bInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980DF0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Depth                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvDepth(float Depth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvDepth");
        
        UModularSynthComponent_SetModEnvDepth_Params params {};
        params.Depth = Depth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980B30
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvDecayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DecayTimeMsec                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvDecayTime(float DecayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvDecayTime");
        
        UModularSynthComponent_SetModEnvDecayTime_Params params {};
        params.DecayTimeMsec = DecayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981210
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvBiasPatch
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynthModEnvBiasPatch                   InPatchType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvBiasPatch(Synthesis::ESynthModEnvBiasPatch InPatchType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvBiasPatch");
        
        UModularSynthComponent_SetModEnvBiasPatch_Params params {};
        params.InPatchType = InPatchType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980F50
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvBiasInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInvert                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvBiasInvert(bool bInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvBiasInvert");
        
        UModularSynthComponent_SetModEnvBiasInvert_Params params {};
        params.bInvert = bInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980C90
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetModEnvAttackTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              AttackTimeMsec                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetModEnvAttackTime(float AttackTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetModEnvAttackTime");
        
        UModularSynthComponent_SetModEnvAttackTime_Params params {};
        params.AttackTimeMsec = AttackTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981DC0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::ESynthLFOType                           LFOType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOType(int32_t LFOIndex, Synthesis::ESynthLFOType LFOType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOType");
        
        UModularSynthComponent_SetLFOType_Params params {};
        params.LFOIndex = LFOIndex;
        params.LFOType = LFOType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981980
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOPatch
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::ESynthLFOPatchType                      LFOPatchType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOPatch(int32_t LFOIndex, Synthesis::ESynthLFOPatchType LFOPatchType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOPatch");
        
        UModularSynthComponent_SetLFOPatch_Params params {};
        params.LFOIndex = LFOIndex;
        params.LFOPatchType = LFOPatchType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981BA0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::ESynthLFOMode                           LFOMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOMode(int32_t LFOIndex, Synthesis::ESynthLFOMode LFOMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOMode");
        
        UModularSynthComponent_SetLFOMode_Params params {};
        params.LFOIndex = LFOIndex;
        params.LFOMode = LFOMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981FE0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOGainMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              GainMod                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOGainMod(int32_t LFOIndex, float GainMod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOGainMod");
        
        UModularSynthComponent_SetLFOGainMod_Params params {};
        params.LFOIndex = LFOIndex;
        params.GainMod = GainMod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982200
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Gain                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOGain(int32_t LFOIndex, float Gain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOGain");
        
        UModularSynthComponent_SetLFOGain_Params params {};
        params.LFOIndex = LFOIndex;
        params.Gain = Gain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982420
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOFrequencyMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FrequencyModHz                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOFrequencyMod(int32_t LFOIndex, float FrequencyModHz)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOFrequencyMod");
        
        UModularSynthComponent_SetLFOFrequencyMod_Params params {};
        params.LFOIndex = LFOIndex;
        params.FrequencyModHz = FrequencyModHz;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982640
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetLFOFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LFOIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FrequencyHz                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetLFOFrequency(int32_t LFOIndex, float FrequencyHz)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetLFOFrequency");
        
        UModularSynthComponent_SetLFOFrequency_Params params {};
        params.LFOIndex = LFOIndex;
        params.FrequencyHz = FrequencyHz;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02981890
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetGainDb
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              GainDb                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetGainDb(float GainDb)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetGainDb");
        
        UModularSynthComponent_SetGainDb_Params params {};
        params.GainDb = GainDb;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980090
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetFilterType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynthFilterType                        FilterType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetFilterType(Synthesis::ESynthFilterType FilterType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetFilterType");
        
        UModularSynthComponent_SetFilterType_Params params {};
        params.FilterType = FilterType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029801F0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetFilterQMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              FilterQ                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetFilterQMod(float FilterQ)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetFilterQMod");
        
        UModularSynthComponent_SetFilterQMod_Params params {};
        params.FilterQ = FilterQ;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980350
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetFilterQ
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              FilterQ                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetFilterQ(float FilterQ)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetFilterQ");
        
        UModularSynthComponent_SetFilterQ_Params params {};
        params.FilterQ = FilterQ;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980440
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetFilterFrequencyMod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              FilterFrequencyHz                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetFilterFrequencyMod(float FilterFrequencyHz)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetFilterFrequencyMod");
        
        UModularSynthComponent_SetFilterFrequencyMod_Params params {};
        params.FilterFrequencyHz = FilterFrequencyHz;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029805A0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetFilterFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              FilterFrequencyHz                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetFilterFrequency(float FilterFrequencyHz)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetFilterFrequency");
        
        UModularSynthComponent_SetFilterFrequency_Params params {};
        params.FilterFrequencyHz = FilterFrequencyHz;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297FFA0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetFilterAlgorithm
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynthFilterAlgorithm                   FilterAlgorithm                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetFilterAlgorithm(Synthesis::ESynthFilterAlgorithm FilterAlgorithm)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetFilterAlgorithm");
        
        UModularSynthComponent_SetFilterAlgorithm_Params params {};
        params.FilterAlgorithm = FilterAlgorithm;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02982C10
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetEnableUnison
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               EnableUnison                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetEnableUnison(bool EnableUnison)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetEnableUnison");
        
        UModularSynthComponent_SetEnableUnison_Params params {};
        params.EnableUnison = EnableUnison;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02980690
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetEnableRetrigger
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               RetriggerEnabled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetEnableRetrigger(bool RetriggerEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetEnableRetrigger");
        
        UModularSynthComponent_SetEnableRetrigger_Params params {};
        params.RetriggerEnabled = RetriggerEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983EE0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetEnablePolyphony
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bEnablePolyphony                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetEnablePolyphony(bool bEnablePolyphony)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetEnablePolyphony");
        
        UModularSynthComponent_SetEnablePolyphony_Params params {};
        params.bEnablePolyphony = bEnablePolyphony;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297ED70
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetEnablePatch
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::FPatchId                                PatchId                                                    (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               bIsEnabled                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UModularSynthComponent::SetEnablePatch(const Synthesis::FPatchId& PatchId, bool bIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetEnablePatch");
        
        UModularSynthComponent_SetEnablePatch_Params params {};
        params.PatchId = PatchId;
        params.bIsEnabled = bIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02980780
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetEnableLegato
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               LegatoEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetEnableLegato(bool LegatoEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetEnableLegato");
        
        UModularSynthComponent_SetEnableLegato_Params params {};
        params.LegatoEnabled = LegatoEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029816B0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetDecayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DecayTimeMsec                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetDecayTime(float DecayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetDecayTime");
        
        UModularSynthComponent_SetDecayTime_Params params {};
        params.DecayTimeMsec = DecayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297F480
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetChorusFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Frequency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetChorusFrequency(float Frequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetChorusFrequency");
        
        UModularSynthComponent_SetChorusFrequency_Params params {};
        params.Frequency = Frequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297F5E0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetChorusFeedback
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Feedback                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetChorusFeedback(float Feedback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetChorusFeedback");
        
        UModularSynthComponent_SetChorusFeedback_Params params {};
        params.Feedback = Feedback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297F8A0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetChorusEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               EnableChorus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetChorusEnabled(bool EnableChorus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetChorusEnabled");
        
        UModularSynthComponent_SetChorusEnabled_Params params {};
        params.EnableChorus = EnableChorus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297F740
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetChorusDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Depth                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetChorusDepth(float Depth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetChorusDepth");
        
        UModularSynthComponent_SetChorusDepth_Params params {};
        params.Depth = Depth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029817A0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.SetAttackTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              AttackTimeMsec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::SetAttackTime(float AttackTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.SetAttackTime");
        
        UModularSynthComponent_SetAttackTime_Params params {};
        params.AttackTimeMsec = AttackTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02984270
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.NoteOn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Note                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Velocity                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::NoteOn(float Note, int32_t Velocity, float Duration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.NoteOn");
        
        UModularSynthComponent_NoteOn_Params params {};
        params.Note = Note;
        params.Velocity = Velocity;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02983FD0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.NoteOff
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Note                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllNotesOff                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bKillAllNotes                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UModularSynthComponent::NoteOff(float Note, bool bAllNotesOff, bool bKillAllNotes)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.NoteOff");
        
        UModularSynthComponent_NoteOff_Params params {};
        params.Note = Note;
        params.bAllNotesOff = bAllNotesOff;
        params.bKillAllNotes = bKillAllNotes;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0297EFB0
     *         Name   -> Function /Script/Synthesis.ModularSynthComponent.CreatePatch
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynth1PatchSource                      PatchSource                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Synthesis::FSynth1PatchCable>   PatchCables                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bEnableByDefault                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FPatchId                                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Synthesis::FPatchId UModularSynthComponent::CreatePatch(Synthesis::ESynth1PatchSource PatchSource, BasicTypes::TArray<Synthesis::FSynth1PatchCable> PatchCables, bool bEnableByDefault)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.ModularSynthComponent.CreatePatch");
        
        UModularSynthComponent_CreatePatch_Params params {};
        params.PatchSource = PatchSource;
        params.PatchCables = PatchCables;
        params.bEnableByDefault = bEnableByDefault;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029A62F0
     *         Name   -> Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectMultibandCompressorSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectMultibandCompressorPreset::SetSettings(const Synthesis::FSubmixEffectMultibandCompressorSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.SetSettings");
        
        USubmixEffectMultibandCompressorPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A6490
     *         Name   -> Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.SetExternalSubmix
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundSubmix*                              Submix                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectMultibandCompressorPreset::SetExternalSubmix(Engine::USoundSubmix* Submix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.SetExternalSubmix");
        
        USubmixEffectMultibandCompressorPreset_SetExternalSubmix_Params params {};
        params.Submix = Submix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A65F0
     *         Name   -> Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.SetAudioBus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UAudioBus*                                 AudioBus                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectMultibandCompressorPreset::SetAudioBus(Engine::UAudioBus* AudioBus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.SetAudioBus");
        
        USubmixEffectMultibandCompressorPreset_SetAudioBus_Params params {};
        params.AudioBus = AudioBus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A6760
     *         Name   -> Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.ResetKey
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USubmixEffectMultibandCompressorPreset::ResetKey()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectMultibandCompressorPreset.ResetKey");
        
        USubmixEffectMultibandCompressorPreset_ResetKey_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0299DC10
     *         Name   -> Function /Script/Synthesis.SubmixEffectStereoDelayPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectStereoDelaySettings        InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectStereoDelayPreset::SetSettings(const Synthesis::FSubmixEffectStereoDelaySettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectStereoDelayPreset.SetSettings");
        
        USubmixEffectStereoDelayPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029A9390
     *         Name   -> Function /Script/Synthesis.SubmixEffectStereoToQuadPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectStereoToQuadSettings       InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectStereoToQuadPreset::SetSettings(const Synthesis::FSubmixEffectStereoToQuadSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectStereoToQuadPreset.SetSettings");
        
        USubmixEffectStereoToQuadPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA530
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.SetTap
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TapId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FTapDelayInfo                           TapInfo                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::SetTap(int32_t TapId, const Synthesis::FTapDelayInfo& TapInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.SetTap");
        
        USubmixEffectTapDelayPreset_SetTap_Params params {};
        params.TapId = TapId;
        params.TapInfo = TapInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AAAF0
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSubmixEffectTapDelaySettings           InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::SetSettings(const Synthesis::FSubmixEffectTapDelaySettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.SetSettings");
        
        USubmixEffectTapDelayPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA080
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.SetInterpolationTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::SetInterpolationTime(float Time)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.SetInterpolationTime");
        
        USubmixEffectTapDelayPreset_SetInterpolationTime_Params params {};
        params.Time = Time;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA7E0
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.RemoveTap
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TapId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::RemoveTap(int32_t TapId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.RemoveTap");
        
        USubmixEffectTapDelayPreset_RemoveTap_Params params {};
        params.TapId = TapId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA1C0
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.GetTapIds
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<int32_t>                        TapIds                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::GetTapIds(BasicTypes::TArray<int32_t>* TapIds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.GetTapIds");
        
        USubmixEffectTapDelayPreset_GetTapIds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (TapIds != nullptr)
            *TapIds = params.TapIds;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA320
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.GetTap
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TapId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::FTapDelayInfo                           TapInfo                                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::GetTap(int32_t TapId, Synthesis::FTapDelayInfo* TapInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.GetTap");
        
        USubmixEffectTapDelayPreset_GetTap_Params params {};
        params.TapId = TapId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (TapInfo != nullptr)
            *TapInfo = params.TapInfo;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA1A0
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.GetMaxDelayInMilliseconds
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USubmixEffectTapDelayPreset::GetMaxDelayInMilliseconds()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.GetMaxDelayInMilliseconds");
        
        USubmixEffectTapDelayPreset_GetMaxDelayInMilliseconds_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AA930
     *         Name   -> Function /Script/Synthesis.SubmixEffectTapDelayPreset.AddTap
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TapId                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectTapDelayPreset::AddTap(int32_t* TapId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SubmixEffectTapDelayPreset.AddTap");
        
        USubmixEffectTapDelayPreset_AddTap_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (TapId != nullptr)
            *TapId = params.TapId;
    }

    /**
     * Function:
     *         RVA    -> 0x029ADE00
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetSustainGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              SustainGain                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetSustainGain(float SustainGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetSustainGain");
        
        UGranularSynth_SetSustainGain_Params params {};
        params.SustainGain = SustainGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AE0C0
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetSoundWave
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundWave*                                InSoundWave                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetSoundWave(Engine::USoundWave* InSoundWave)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetSoundWave");
        
        UGranularSynth_SetSoundWave_Params params {};
        params.InSoundWave = InSoundWave;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AC820
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetScrubMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bScrubMode                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetScrubMode(bool bScrubMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetScrubMode");
        
        UGranularSynth_SetScrubMode_Params params {};
        params.bScrubMode = bScrubMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029ADCA0
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetReleaseTimeMsec
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReleaseTimeMsec                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetReleaseTimeMsec(float ReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetReleaseTimeMsec");
        
        UGranularSynth_SetReleaseTimeMsec_Params params {};
        params.ReleaseTimeMsec = ReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AC570
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetPlayheadTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InPositionSec                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              LerpTimeSec                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::EGranularSynthSeekType                  SeekType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetPlayheadTime(float InPositionSec, float LerpTimeSec, Synthesis::EGranularSynthSeekType SeekType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetPlayheadTime");
        
        UGranularSynth_SetPlayheadTime_Params params {};
        params.InPositionSec = InPositionSec;
        params.LerpTimeSec = LerpTimeSec;
        params.SeekType = SeekType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AD260
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetPlaybackSpeed
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InPlayheadRate                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetPlaybackSpeed(float InPlayheadRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetPlaybackSpeed");
        
        UGranularSynth_SetPlaybackSpeed_Params params {};
        params.InPlayheadRate = InPlayheadRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029ACE00
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainVolume
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         float                                              BaseVolume                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             VolumeRange                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainVolume(float BaseVolume, const CoreUObject::FVector2D& VolumeRange)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainVolume");
        
        UGranularSynth_SetGrainVolume_Params params {};
        params.BaseVolume = BaseVolume;
        params.VolumeRange = VolumeRange;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AD680
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainsPerSecond
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InGrainsPerSecond                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainsPerSecond(float InGrainsPerSecond)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainsPerSecond");
        
        UGranularSynth_SetGrainsPerSecond_Params params {};
        params.InGrainsPerSecond = InGrainsPerSecond;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AD520
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainProbability
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InGrainProbability                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainProbability(float InGrainProbability)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainProbability");
        
        UGranularSynth_SetGrainProbability_Params params {};
        params.InGrainProbability = InGrainProbability;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AD030
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainPitch
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         float                                              BasePitch                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             PitchRange                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainPitch(float BasePitch, const CoreUObject::FVector2D& PitchRange)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainPitch");
        
        UGranularSynth_SetGrainPitch_Params params {};
        params.BasePitch = BasePitch;
        params.PitchRange = PitchRange;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029ACBD0
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainPan
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         float                                              BasePan                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             PanRange                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainPan(float BasePan, const CoreUObject::FVector2D& PanRange)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainPan");
        
        UGranularSynth_SetGrainPan_Params params {};
        params.BasePan = BasePan;
        params.PanRange = PanRange;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AD3C0
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainEnvelopeType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::EGranularSynthEnvelopeType              EnvelopeType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainEnvelopeType(Synthesis::EGranularSynthEnvelopeType EnvelopeType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainEnvelopeType");
        
        UGranularSynth_SetGrainEnvelopeType_Params params {};
        params.EnvelopeType = EnvelopeType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AC9A0
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetGrainDuration
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         float                                              BaseDurationMsec                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             DurationRange                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetGrainDuration(float BaseDurationMsec, const CoreUObject::FVector2D& DurationRange)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetGrainDuration");
        
        UGranularSynth_SetGrainDuration_Params params {};
        params.BaseDurationMsec = BaseDurationMsec;
        params.DurationRange = DurationRange;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029ADF60
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetDecayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DecayTimeMsec                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetDecayTime(float DecayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetDecayTime");
        
        UGranularSynth_SetDecayTime_Params params {};
        params.DecayTimeMsec = DecayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029ADF60
     *         Name   -> Function /Script/Synthesis.GranularSynth.SetAttackTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              AttackTimeMsec                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::SetAttackTime(float AttackTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.SetAttackTime");
        
        UGranularSynth_SetAttackTime_Params params {};
        params.AttackTimeMsec = AttackTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029ADA00
     *         Name   -> Function /Script/Synthesis.GranularSynth.NoteOn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Note                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Velocity                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::NoteOn(float Note, int32_t Velocity, float Duration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.NoteOn");
        
        UGranularSynth_NoteOn_Params params {};
        params.Note = Note;
        params.Velocity = Velocity;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AD7E0
     *         Name   -> Function /Script/Synthesis.GranularSynth.NoteOff
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Note                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bKill                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGranularSynth::NoteOff(float Note, bool bKill)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.NoteOff");
        
        UGranularSynth_NoteOff_Params params {};
        params.Note = Note;
        params.bKill = bKill;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AC530
     *         Name   -> Function /Script/Synthesis.GranularSynth.IsLoaded
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGranularSynth::IsLoaded()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.IsLoaded");
        
        UGranularSynth_IsLoaded_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AC980
     *         Name   -> Function /Script/Synthesis.GranularSynth.GetSampleDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGranularSynth::GetSampleDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.GetSampleDuration");
        
        UGranularSynth_GetSampleDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AC550
     *         Name   -> Function /Script/Synthesis.GranularSynth.GetCurrentPlayheadTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UGranularSynth::GetCurrentPlayheadTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.GranularSynth.GetCurrentPlayheadTime");
        
        UGranularSynth_GetCurrentPlayheadTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02989700
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectBitCrusherBaseSettings     Settings                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetSettings(const Synthesis::FSourceEffectBitCrusherBaseSettings& Settings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSettings");
        
        USourceEffectBitCrusherPreset_SetSettings_Params params {};
        params.Settings = Settings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989840
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSampleRateModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> InModulators                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetSampleRateModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> InModulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSampleRateModulators");
        
        USourceEffectBitCrusherPreset_SetSampleRateModulators_Params params {};
        params.InModulators = InModulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989A00
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSampleRateModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetSampleRateModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSampleRateModulator");
        
        USourceEffectBitCrusherPreset_SetSampleRateModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989B10
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSampleRate
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              SampleRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetSampleRate(float SampleRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetSampleRate");
        
        USourceEffectBitCrusherPreset_SetSampleRate_Params params {};
        params.SampleRate = SampleRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989460
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetModulationSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectBitCrusherSettings         ModulationSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetModulationSettings(const Synthesis::FSourceEffectBitCrusherSettings& ModulationSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetModulationSettings");
        
        USourceEffectBitCrusherPreset_SetModulationSettings_Params params {};
        params.ModulationSettings = ModulationSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989EF0
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetBits
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Bits                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetBits(float Bits)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetBits");
        
        USourceEffectBitCrusherPreset_SetBits_Params params {};
        params.Bits = Bits;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989C20
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetBitModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> InModulators                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetBitModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> InModulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetBitModulators");
        
        USourceEffectBitCrusherPreset_SetBitModulators_Params params {};
        params.InModulators = InModulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02989DE0
     *         Name   -> Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetBitModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectBitCrusherPreset::SetBitModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectBitCrusherPreset.SetBitModulator");
        
        USourceEffectBitCrusherPreset_SetBitModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C860
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetWetModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetWetModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetWetModulators");
        
        USourceEffectChorusPreset_SetWetModulators_Params params {};
        params.Modulators = Modulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298CA20
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetWetModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetWetModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetWetModulator");
        
        USourceEffectChorusPreset_SetWetModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298CB30
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetWet
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              WetAmount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetWet(float WetAmount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetWet");
        
        USourceEffectChorusPreset_SetWet_Params params {};
        params.WetAmount = WetAmount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C0A0
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetSpreadModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetSpreadModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetSpreadModulators");
        
        USourceEffectChorusPreset_SetSpreadModulators_Params params {};
        params.Modulators = Modulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C260
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetSpreadModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetSpreadModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetSpreadModulator");
        
        USourceEffectChorusPreset_SetSpreadModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C370
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetSpread
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Spread                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetSpread(float Spread)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetSpread");
        
        USourceEffectChorusPreset_SetSpread_Params params {};
        params.Spread = Spread;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298BF50
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectChorusBaseSettings         Settings                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetSettings(const Synthesis::FSourceEffectChorusBaseSettings& Settings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetSettings");
        
        USourceEffectChorusPreset_SetSettings_Params params {};
        params.Settings = Settings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298BDF0
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetModulationSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Synthesis::FSourceEffectChorusSettings             ModulationSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetModulationSettings(const Synthesis::FSourceEffectChorusSettings& ModulationSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetModulationSettings");
        
        USourceEffectChorusPreset_SetModulationSettings_Params params {};
        params.ModulationSettings = ModulationSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298CC40
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetFrequencyModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetFrequencyModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetFrequencyModulators");
        
        USourceEffectChorusPreset_SetFrequencyModulators_Params params {};
        params.Modulators = Modulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298CE00
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetFrequencyModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetFrequencyModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetFrequencyModulator");
        
        USourceEffectChorusPreset_SetFrequencyModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298CF10
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Frequency                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetFrequency(float Frequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetFrequency");
        
        USourceEffectChorusPreset_SetFrequency_Params params {};
        params.Frequency = Frequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298D020
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetFeedbackModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetFeedbackModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetFeedbackModulators");
        
        USourceEffectChorusPreset_SetFeedbackModulators_Params params {};
        params.Modulators = Modulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298D1E0
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetFeedbackModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetFeedbackModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetFeedbackModulator");
        
        USourceEffectChorusPreset_SetFeedbackModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298D2F0
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetFeedback
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Feedback                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetFeedback(float Feedback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetFeedback");
        
        USourceEffectChorusPreset_SetFeedback_Params params {};
        params.Feedback = Feedback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C480
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetDryModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetDryModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetDryModulators");
        
        USourceEffectChorusPreset_SetDryModulators_Params params {};
        params.Modulators = Modulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C640
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetDryModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetDryModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetDryModulator");
        
        USourceEffectChorusPreset_SetDryModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298C750
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetDry
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              DryAmount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetDry(float DryAmount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetDry");
        
        USourceEffectChorusPreset_SetDry_Params params {};
        params.DryAmount = DryAmount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298D400
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetDepthModulators
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetDepthModulators(BasicTypes::TSet<AudioExtensions::USoundModulatorBase*> Modulators)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetDepthModulators");
        
        USourceEffectChorusPreset_SetDepthModulators_Params params {};
        params.Modulators = Modulators;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298D5C0
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetDepthModulator
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioExtensions::USoundModulatorBase*              Modulator                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetDepthModulator(AudioExtensions::USoundModulatorBase* Modulator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetDepthModulator");
        
        USourceEffectChorusPreset_SetDepthModulator_Params params {};
        params.Modulator = Modulator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0298D6D0
     *         Name   -> Function /Script/Synthesis.SourceEffectChorusPreset.SetDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Depth                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USourceEffectChorusPreset::SetDepth(float Depth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SourceEffectChorusPreset.SetDepth");
        
        USourceEffectChorusPreset_SetDepth_Params params {};
        params.Depth = Depth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2620
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetWaveTablePosition
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InPosition                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetWaveTablePosition(float InPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetWaveTablePosition");
        
        USynthComponentMonoWaveTable_SetWaveTablePosition_Params params {};
        params.InPosition = InPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2AE0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetSustainPedalState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InSustainPedalState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetSustainPedalState(bool InSustainPedalState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetSustainPedalState");
        
        USynthComponentMonoWaveTable_SetSustainPedalState_Params params {};
        params.InSustainPedalState = InSustainPedalState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B20B0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPosLfoType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ESynthLFOType                           InLfoType                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPosLfoType(Synthesis::ESynthLFOType InLfoType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPosLfoType");
        
        USynthComponentMonoWaveTable_SetPosLfoType_Params params {};
        params.InLfoType = InLfoType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2370
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPosLfoFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InLfoFrequency                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPosLfoFrequency(float InLfoFrequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPosLfoFrequency");
        
        USynthComponentMonoWaveTable_SetPosLfoFrequency_Params params {};
        params.InLfoFrequency = InLfoFrequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2210
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPosLfoDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InLfoDepth                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPosLfoDepth(float InLfoDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPosLfoDepth");
        
        USynthComponentMonoWaveTable_SetPosLfoDepth_Params params {};
        params.InLfoDepth = InLfoDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0530
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeSustainGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InSustainGain                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeSustainGain(float InSustainGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeSustainGain");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeSustainGain_Params params {};
        params.InSustainGain = InSustainGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B03D0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeReleaseTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InReleaseTimeMsec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeReleaseTime(float InReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeReleaseTime");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeReleaseTime_Params params {};
        params.InReleaseTimeMsec = InReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0270
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInInvert                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeInvert(bool bInInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeInvert");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeInvert_Params params {};
        params.bInInvert = bInInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AFFB0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDepth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeDepth(float InDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeDepth");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeDepth_Params params {};
        params.InDepth = InDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0690
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeDecayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDecayTimeMsec                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeDecayTime(float InDecayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeDecayTime");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeDecayTime_Params params {};
        params.InDecayTimeMsec = InDecayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0110
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeBiasInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInBiasInvert                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeBiasInvert(bool bInBiasInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeBiasInvert");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeBiasInvert_Params params {};
        params.bInBiasInvert = bInBiasInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AFE50
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeBiasDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDepth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeBiasDepth(float InDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeBiasDepth");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeBiasDepth_Params params {};
        params.InDepth = InDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B07F0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeAttackTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InAttackTimeMsec                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetPositionEnvelopeAttackTime(float InAttackTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetPositionEnvelopeAttackTime");
        
        USynthComponentMonoWaveTable_SetPositionEnvelopeAttackTime_Params params {};
        params.InAttackTimeMsec = InAttackTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1F50
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetLowPassFilterResonance
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewQ                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetLowPassFilterResonance(float InNewQ)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetLowPassFilterResonance");
        
        USynthComponentMonoWaveTable_SetLowPassFilterResonance_Params params {};
        params.InNewQ = InNewQ;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2780
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFrequencyWithMidiNote
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMidiNote                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFrequencyWithMidiNote(float InMidiNote)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFrequencyWithMidiNote");
        
        USynthComponentMonoWaveTable_SetFrequencyWithMidiNote_Params params {};
        params.InMidiNote = InMidiNote;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2890
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFrequencyPitchBend
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              FrequencyOffsetCents                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFrequencyPitchBend(float FrequencyOffsetCents)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFrequencyPitchBend");
        
        USynthComponentMonoWaveTable_SetFrequencyPitchBend_Params params {};
        params.FrequencyOffsetCents = FrequencyOffsetCents;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B29F0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              FrequencyHz                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFrequency(float FrequencyHz)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFrequency");
        
        USynthComponentMonoWaveTable_SetFrequency_Params params {};
        params.FrequencyHz = FrequencyHz;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1030
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeSustainGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InSustainGain                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeSustainGain(float InSustainGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeSustainGain");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeSustainGain_Params params {};
        params.InSustainGain = InSustainGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0ED0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeReleaseTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InReleaseTimeMsec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeReleaseTime(float InReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeReleaseTime");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeReleaseTime_Params params {};
        params.InReleaseTimeMsec = InReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1190
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopenDecayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDecayTimeMsec                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopenDecayTime(float InDecayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopenDecayTime");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopenDecayTime_Params params {};
        params.InDecayTimeMsec = InDecayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0D70
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInInvert                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeInvert(bool bInInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeInvert");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeInvert_Params params {};
        params.bInInvert = bInInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0AB0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDepth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeDepth(float InDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeDepth");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeDepth_Params params {};
        params.InDepth = InDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0C10
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeBiasInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInBiasInvert                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeBiasInvert(bool bInBiasInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeBiasInvert");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeBiasInvert_Params params {};
        params.bInBiasInvert = bInBiasInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B0950
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeBiasDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDepth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeBiasDepth(float InDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeBiasDepth");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeBiasDepth_Params params {};
        params.InDepth = InDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B12F0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeAttackTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InAttackTimeMsec                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetFilterEnvelopeAttackTime(float InAttackTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetFilterEnvelopeAttackTime");
        
        USynthComponentMonoWaveTable_SetFilterEnvelopeAttackTime_Params params {};
        params.InAttackTimeMsec = InAttackTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029AFB20
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetCurveValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TableIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            KeyframeIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewValue                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USynthComponentMonoWaveTable::SetCurveValue(int32_t TableIndex, int32_t KeyframeIndex, float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetCurveValue");
        
        USynthComponentMonoWaveTable_SetCurveValue_Params params {};
        params.TableIndex = TableIndex;
        params.KeyframeIndex = KeyframeIndex;
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AF770
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetCurveTangent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TableIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InNewTangent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USynthComponentMonoWaveTable::SetCurveTangent(int32_t TableIndex, float InNewTangent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetCurveTangent");
        
        USynthComponentMonoWaveTable_SetCurveTangent_Params params {};
        params.TableIndex = TableIndex;
        params.InNewTangent = InNewTangent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AF8F0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetCurveInterpolationType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Synthesis::ECurveInterpolationType                 InterpolationType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            TableIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USynthComponentMonoWaveTable::SetCurveInterpolationType(Synthesis::ECurveInterpolationType InterpolationType, int32_t TableIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetCurveInterpolationType");
        
        USynthComponentMonoWaveTable_SetCurveInterpolationType_Params params {};
        params.InterpolationType = InterpolationType;
        params.TableIndex = TableIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1B30
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeSustainGain
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InSustainGain                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeSustainGain(float InSustainGain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeSustainGain");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeSustainGain_Params params {};
        params.InSustainGain = InSustainGain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B19D0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeReleaseTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InReleaseTimeMsec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeReleaseTime(float InReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeReleaseTime");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeReleaseTime_Params params {};
        params.InReleaseTimeMsec = InReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1870
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInInvert                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeInvert(bool bInInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeInvert");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeInvert_Params params {};
        params.bInInvert = bInInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B15B0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDepth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeDepth(float InDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeDepth");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeDepth_Params params {};
        params.InDepth = InDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1C90
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeDecayTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDecayTimeMsec                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeDecayTime(float InDecayTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeDecayTime");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeDecayTime_Params params {};
        params.InDecayTimeMsec = InDecayTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1710
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeBiasInvert
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInBiasInvert                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeBiasInvert(bool bInBiasInvert)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeBiasInvert");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeBiasInvert_Params params {};
        params.bInBiasInvert = bInBiasInvert;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1450
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeBiasDepth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDepth                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeBiasDepth(float InDepth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeBiasDepth");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeBiasDepth_Params params {};
        params.InDepth = InDepth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B1DF0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeAttackTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InAttackTimeMsec                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::SetAmpEnvelopeAttackTime(float InAttackTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.SetAmpEnvelopeAttackTime");
        
        USynthComponentMonoWaveTable_SetAmpEnvelopeAttackTime_Params params {};
        params.InAttackTimeMsec = InAttackTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2530
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.RefreshWaveTable
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::RefreshWaveTable(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.RefreshWaveTable");
        
        USynthComponentMonoWaveTable_RefreshWaveTable_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B24D0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.RefreshAllWaveTables
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::RefreshAllWaveTables()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.RefreshAllWaveTables");
        
        USynthComponentMonoWaveTable_RefreshAllWaveTables_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2DD0
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.NoteOn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMidiNote                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InVelocity                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::NoteOn(float InMidiNote, float InVelocity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.NoteOn");
        
        USynthComponentMonoWaveTable_NoteOn_Params params {};
        params.InMidiNote = InMidiNote;
        params.InVelocity = InVelocity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B2C40
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.NoteOff
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMidiNote                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentMonoWaveTable::NoteOff(float InMidiNote)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.NoteOff");
        
        USynthComponentMonoWaveTable_NoteOff_Params params {};
        params.InMidiNote = InMidiNote;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B3040
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.GetNumTableEntries
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t USynthComponentMonoWaveTable::GetNumTableEntries()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.GetNumTableEntries");
        
        USynthComponentMonoWaveTable_GetNumTableEntries_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AFE10
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.GetMaxTableIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t USynthComponentMonoWaveTable::GetMaxTableIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.GetMaxTableIndex");
        
        USynthComponentMonoWaveTable_GetMaxTableIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AF500
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.GetKeyFrameValuesForTable
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              TableIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<float> USynthComponentMonoWaveTable::GetKeyFrameValuesForTable(float TableIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.GetKeyFrameValuesForTable");
        
        USynthComponentMonoWaveTable_GetKeyFrameValuesForTable_Params params {};
        params.TableIndex = TableIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029AF640
     *         Name   -> Function /Script/Synthesis.SynthComponentMonoWaveTable.GetCurveTangent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            TableIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthComponentMonoWaveTable::GetCurveTangent(int32_t TableIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentMonoWaveTable.GetCurveTangent");
        
        USynthComponentMonoWaveTable_GetCurveTangent_Params params {};
        params.TableIndex = TableIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B5940
     *         Name   -> Function /Script/Synthesis.SynthComponentToneGenerator.SetVolume
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InVolume                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentToneGenerator::SetVolume(float InVolume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentToneGenerator.SetVolume");
        
        USynthComponentToneGenerator_SetVolume_Params params {};
        params.InVolume = InVolume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B5A90
     *         Name   -> Function /Script/Synthesis.SynthComponentToneGenerator.SetFrequency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InFrequency                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponentToneGenerator::SetFrequency(float InFrequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthComponentToneGenerator.SetFrequency");
        
        USynthComponentToneGenerator_SetFrequency_Params params {};
        params.InFrequency = InFrequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6FD0
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.SetSoundWave
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundWave*                                InSoundWave                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthSamplePlayer::SetSoundWave(Engine::USoundWave* InSoundWave)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.SetSoundWave");
        
        USynthSamplePlayer_SetSoundWave_Params params {};
        params.InSoundWave = InSoundWave;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6830
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.SetScrubTimeWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InScrubTimeWidthSec                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthSamplePlayer::SetScrubTimeWidth(float InScrubTimeWidthSec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.SetScrubTimeWidth");
        
        USynthSamplePlayer_SetScrubTimeWidth_Params params {};
        params.InScrubTimeWidthSec = InScrubTimeWidthSec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6990
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.SetScrubMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bScrubMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthSamplePlayer::SetScrubMode(bool bScrubMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.SetScrubMode");
        
        USynthSamplePlayer_SetScrubMode_Params params {};
        params.bScrubMode = bScrubMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6DB0
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.SetPitch
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InPitch                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TimeSec                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthSamplePlayer::SetPitch(float InPitch, float TimeSec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.SetPitch");
        
        USynthSamplePlayer_SetPitch_Params params {};
        params.InPitch = InPitch;
        params.TimeSec = TimeSec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6AF0
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.SeekToTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              TimeSec                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Synthesis::ESamplePlayerSeekType                   SeekType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bWrap                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthSamplePlayer::SeekToTime(float TimeSec, Synthesis::ESamplePlayerSeekType SeekType, bool bWrap)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.SeekToTime");
        
        USynthSamplePlayer_SeekToTime_Params params {};
        params.TimeSec = TimeSec;
        params.SeekType = SeekType;
        params.bWrap = bWrap;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6790
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.IsLoaded
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USynthSamplePlayer::IsLoaded()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.IsLoaded");
        
        USynthSamplePlayer_IsLoaded_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B6810
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.GetSampleDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthSamplePlayer::GetSampleDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.GetSampleDuration");
        
        USynthSamplePlayer_GetSampleDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B67F0
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.GetCurrentPlaybackProgressTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthSamplePlayer::GetCurrentPlaybackProgressTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.GetCurrentPlaybackProgressTime");
        
        USynthSamplePlayer_GetCurrentPlaybackProgressTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B67B0
     *         Name   -> Function /Script/Synthesis.SynthSamplePlayer.GetCurrentPlaybackProgressPercent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthSamplePlayer::GetCurrentPlaybackProgressPercent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthSamplePlayer.GetCurrentPlaybackProgressPercent");
        
        USynthSamplePlayer_GetCurrentPlaybackProgressPercent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B7F50
     *         Name   -> Function /Script/Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary.GetLogFrequency
     *         Flags  -> (Final, Native, Static, Private, BlueprintCallable)
     * Parameters:
     *         float                                              InLinearValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InDomainMin                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InDomainMax                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InRangeMin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InRangeMax                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthesisUtilitiesBlueprintFunctionLibrary::STATIC_GetLogFrequency(float InLinearValue, float InDomainMin, float InDomainMax, float InRangeMin, float InRangeMax)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary.GetLogFrequency");
        
        USynthesisUtilitiesBlueprintFunctionLibrary_GetLogFrequency_Params params {};
        params.InLinearValue = InLinearValue;
        params.InDomainMin = InDomainMin;
        params.InDomainMax = InDomainMax;
        params.InRangeMin = InRangeMin;
        params.InRangeMax = InRangeMax;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029B7AE0
     *         Name   -> Function /Script/Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary.GetLinearFrequency
     *         Flags  -> (Final, Native, Static, Private, BlueprintCallable)
     * Parameters:
     *         float                                              InLogFrequencyValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InDomainMin                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InDomainMax                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InRangeMin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InRangeMax                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USynthesisUtilitiesBlueprintFunctionLibrary::STATIC_GetLinearFrequency(float InLogFrequencyValue, float InDomainMin, float InDomainMax, float InRangeMin, float InRangeMax)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.SynthesisUtilitiesBlueprintFunctionLibrary.GetLinearFrequency");
        
        USynthesisUtilitiesBlueprintFunctionLibrary_GetLinearFrequency_Params params {};
        params.InLogFrequencyValue = InLogFrequencyValue;
        params.InDomainMin = InDomainMin;
        params.InDomainMax = InDomainMax;
        params.InRangeMin = InRangeMin;
        params.InRangeMax = InRangeMax;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029BD250
     *         Name   -> Function /Script/Synthesis.Synth2DSlider.SetValue
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynth2DSlider::SetValue(const CoreUObject::FVector2D& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.Synth2DSlider.SetValue");
        
        USynth2DSlider_SetValue_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BCE90
     *         Name   -> Function /Script/Synthesis.Synth2DSlider.SetStepSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynth2DSlider::SetStepSize(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.Synth2DSlider.SetStepSize");
        
        USynth2DSlider_SetStepSize_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BCD10
     *         Name   -> Function /Script/Synthesis.Synth2DSlider.SetSliderHandleColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynth2DSlider::SetSliderHandleColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.Synth2DSlider.SetSliderHandleColor");
        
        USynth2DSlider_SetSliderHandleColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BCFD0
     *         Name   -> Function /Script/Synthesis.Synth2DSlider.SetLocked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynth2DSlider::SetLocked(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.Synth2DSlider.SetLocked");
        
        USynth2DSlider_SetLocked_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BD110
     *         Name   -> Function /Script/Synthesis.Synth2DSlider.SetIndentHandle
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynth2DSlider::SetIndentHandle(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.Synth2DSlider.SetIndentHandle");
        
        USynth2DSlider_SetIndentHandle_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029BD400
     *         Name   -> Function /Script/Synthesis.Synth2DSlider.GetValue
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D USynth2DSlider::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Synthesis.Synth2DSlider.GetValue");
        
        USynth2DSlider_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
