/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/ImgMedia_PARAMS.h"
#include "Headers/ImgMedia_UImgMediaSource.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ImgMedia
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x028D3220
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.SetTokenizedSequencePath
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::SetTokenizedSequencePath(const BasicTypes::FString& Path)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.SetTokenizedSequencePath");
        
        UImgMediaSource_SetTokenizedSequencePath_Params params {};
        params.Path = Path;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x028D3360
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.SetSequencePath
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::SetSequencePath(const BasicTypes::FString& Path)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.SetSequencePath");
        
        UImgMediaSource_SetSequencePath_Params params {};
        params.Path = Path;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x028D2E50
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.SetMipLevelDistance
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Distance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::SetMipLevelDistance(float Distance)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.SetMipLevelDistance");
        
        UImgMediaSource_SetMipLevelDistance_Params params {};
        params.Distance = Distance;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x028D2F20
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.RemoveTargetObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    InActor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::RemoveTargetObject(Engine::AActor* InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.RemoveTargetObject");
        
        UImgMediaSource_RemoveTargetObject_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.RemoveGlobalCamera
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    InActor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::RemoveGlobalCamera(Engine::AActor* InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.RemoveGlobalCamera");
        
        UImgMediaSource_RemoveGlobalCamera_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x028D3460
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.GetSequencePath
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UImgMediaSource::GetSequencePath()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.GetSequencePath");
        
        UImgMediaSource_GetSequencePath_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x028D34D0
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.GetProxies
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            OutProxies                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::GetProxies(BasicTypes::TArray<BasicTypes::FString>* OutProxies)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.GetProxies");
        
        UImgMediaSource_GetProxies_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutProxies != nullptr)
            *OutProxies = params.OutProxies;
    }

    /**
     * Function:
     *         RVA    -> 0x028D3150
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.AddTargetObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    InActor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::AddTargetObject(Engine::AActor* InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.AddTargetObject");
        
        UImgMediaSource_AddTargetObject_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/ImgMedia.ImgMediaSource.AddGlobalCamera
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    InActor                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImgMediaSource::AddGlobalCamera(Engine::AActor* InActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ImgMedia.ImgMediaSource.AddGlobalCamera");
        
        UImgMediaSource_AddGlobalCamera_Params params {};
        params.InActor = InActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
