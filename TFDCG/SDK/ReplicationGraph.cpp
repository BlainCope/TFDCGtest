/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/ReplicationGraph_PARAMS.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_GridCell.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_ActorListFrequencyBuckets.h"
#include "Headers/ReplicationGraph_AReplicationGraphDebugActor.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_DormancyNode.h"
#include "Headers/ReplicationGraph_UReplicationGraph.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_AlwaysRelevant.h"
#include "Headers/ReplicationGraph_UBasicReplicationGraph.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_ActorList.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_ConnectionDormancyNode.h"
#include "Headers/ReplicationGraph_UNetReplicationGraphConnection.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_GridSpatialization2D.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_AlwaysRelevant_ForConnection.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_TearOff_ForConnection.h"
#include "Headers/ReplicationGraph_UReplicationGraphNode_DynamicSpatialFrequency.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ReplicationGraph
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x00ED2BA0
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerStopDebugging
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerStopDebugging()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerStopDebugging");
        
        AReplicationGraphDebugActor_ServerStopDebugging_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED2BC0
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerStartDebugging
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerStartDebugging()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerStartDebugging");
        
        AReplicationGraphDebugActor_ServerStartDebugging_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED2760
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerSetPeriodFrameForClass
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         CoreUObject::UObject*                              Class                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PeriodFrame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerSetPeriodFrameForClass(CoreUObject::UObject* Class, int32_t PeriodFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerSetPeriodFrameForClass");
        
        AReplicationGraphDebugActor_ServerSetPeriodFrameForClass_Params params {};
        params.Class = Class;
        params.PeriodFrame = PeriodFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED28F0
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerSetCullDistanceForClass
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         CoreUObject::UObject*                              Class                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CullDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerSetCullDistanceForClass(CoreUObject::UObject* Class, float CullDistance)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerSetCullDistanceForClass");
        
        AReplicationGraphDebugActor_ServerSetCullDistanceForClass_Params params {};
        params.Class = Class;
        params.CullDistance = CullDistance;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED2670
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerSetConditionalActorBreakpoint
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerSetConditionalActorBreakpoint(Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerSetConditionalActorBreakpoint");
        
        AReplicationGraphDebugActor_ServerSetConditionalActorBreakpoint_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED2650
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerPrintCullDistances
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerPrintCullDistances()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerPrintCullDistances");
        
        AReplicationGraphDebugActor_ServerPrintCullDistances_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED2A80
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerPrintAllActorInfo
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         BasicTypes::FString                                Str                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerPrintAllActorInfo(const BasicTypes::FString& Str)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerPrintAllActorInfo");
        
        AReplicationGraphDebugActor_ServerPrintAllActorInfo_Params params {};
        params.Str = Str;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED2B80
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerCellInfo
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ServerCellInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ServerCellInfo");
        
        AReplicationGraphDebugActor_ServerCellInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00ED23E0
     *         Name   -> Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ClientCellInfo
     *         Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
     * Parameters:
     *         CoreUObject::FVector                               CellLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               CellExtent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                Actors                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AReplicationGraphDebugActor::ClientCellInfo(const CoreUObject::FVector& CellLocation, const CoreUObject::FVector& CellExtent, BasicTypes::TArray<Engine::AActor*> Actors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/ReplicationGraph.ReplicationGraphDebugActor.ClientCellInfo");
        
        AReplicationGraphDebugActor_ClientCellInfo_Params params {};
        params.CellLocation = CellLocation;
        params.CellExtent = CellExtent;
        params.Actors = Actors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
