/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AkAudio_ENUMS.h"
#include "Headers/AkAudio_PARAMS.h"
#include "Headers/AkAudio_UAkAcousticTextureSetComponent.h"
#include "Headers/AkAudio_AAkAmbientSound.h"
#include "Headers/AkAudio_UAkAndroidInitializationSettings.h"
#include "Headers/AkAudio_UAkPlatformInfo.h"
#include "Headers/AkAudio_UAkAndroidPlatformInfo.h"
#include "Headers/AkAudio_UAkAssetBase.h"
#include "Headers/AkAudio_UAkAssetData.h"
#include "Headers/AkAudio_UAkAssetDataWithMedia.h"
#include "Headers/AkAudio_UAkAssetPlatformData.h"
#include "Headers/AkAudio_UAkAssetDataSwitchContainerData.h"
#include "Headers/AkAudio_UAkAssetDataSwitchContainer.h"
#include "Headers/AkAudio_UAkAudioEventData.h"
#include "Headers/AkAudio_UAkAudioBank.h"
#include "Headers/AkAudio_UAkAudioEvent.h"
#include "Headers/AkAudio_UAkGameObject.h"
#include "Headers/AkAudio_UAkAudioInputComponent.h"
#include "Headers/AkAudio_UAkAuxBus.h"
#include "Headers/AkAudio_UAkCheckBox.h"
#include "Headers/AkAudio_UAkItemBoolProperties.h"
#include "Headers/AkAudio_UAkItemPropertiesConv.h"
#include "Headers/AkAudio_UAkItemProperties.h"
#include "Headers/AkAudio_UAkLateReverbComponent.h"
#include "Headers/AkAudio_UAkLinuxInitializationSettings.h"
#include "Headers/AkAudio_UAkGroupValue.h"
#include "Headers/AkAudio_UAkHololensInitializationSettings.h"
#include "Headers/AkAudio_UAkHololensPlatformInfo.h"
#include "Headers/AkAudio_UAkInitBankAssetData.h"
#include "Headers/AkAudio_UAkInitBank.h"
#include "Headers/AkAudio_UAkIOSInitializationSettings.h"
#include "Headers/AkAudio_UAkIOSPlatformInfo.h"
#include "Headers/AkAudio_UAkItemBoolPropertiesConv.h"
#include "Headers/AkAudio_UAkMediaAssetData.h"
#include "Headers/AkAudio_UAkMediaAsset.h"
#include "Headers/AkAudio_UAkLocalizedMediaAsset.h"
#include "Headers/AkAudio_UAkExternalMediaAsset.h"
#include "Headers/AkAudio_UAkTrigger.h"
#include "Headers/AkAudio_UAkTVOSInitializationSettings.h"
#include "Headers/AkAudio_UAkTVOSPlatformInfo.h"
#include "Headers/AkAudio_UAkGameplayStatics.h"
#include "Headers/AkAudio_UAkCallbackInfo.h"
#include "Headers/AkAudio_UAkEventCallbackInfo.h"
#include "Headers/AkAudio_UAkMIDIEventCallbackInfo.h"
#include "Headers/AkAudio_UAkMarkerCallbackInfo.h"
#include "Headers/AkAudio_UAkDurationCallbackInfo.h"
#include "Headers/AkAudio_UAkMusicSyncCallbackInfo.h"
#include "Headers/AkAudio_UAkGeometryComponent.h"
#include "Headers/AkAudio_UAkWaapiCalls.h"
#include "Headers/AkAudio_USAkWaapiFieldNamesConv.h"
#include "Headers/AkAudio_UAkWaapiJsonManager.h"
#include "Headers/AkAudio_UAkWaapiUriConv.h"
#include "Headers/AkAudio_UAkWindowsInitializationSettings.h"
#include "Headers/AkAudio_UAkWin32PlatformInfo.h"
#include "Headers/AkAudio_UAkWin64PlatformInfo.h"
#include "Headers/AkAudio_UMovieSceneAkAudioRTPCSection.h"
#include "Headers/AkAudio_UAkLinuxPlatformInfo.h"
#include "Headers/AkAudio_UAkMacInitializationSettings.h"
#include "Headers/AkAudio_UAkMacPlatformInfo.h"
#include "Headers/AkAudio_UAkComponent.h"
#include "Headers/AkAudio_IAkPlatformInitialisationSettingsBase.h"
#include "Headers/AkAudio_UAkPS4InitializationSettings.h"
#include "Headers/AkAudio_UAkPS4PlatformInfo.h"
#include "Headers/AkAudio_UAkPS5InitializationSettings.h"
#include "Headers/AkAudio_UAkDPXInitializationSettings.h"
#include "Headers/AkAudio_UAkPS5PlatformInfo.h"
#include "Headers/AkAudio_AAkReverbVolume.h"
#include "Headers/AkAudio_UAkRoomComponent.h"
#include "Headers/AkAudio_UAkRtpc.h"
#include "Headers/AkAudio_UAkWwiseTree.h"
#include "Headers/AkAudio_UAkWwiseTreeSelector.h"
#include "Headers/AkAudio_UAkXboxOneGDKInitializationSettings.h"
#include "Headers/AkAudio_UAkXboxOneAnvilInitializationSettings.h"
#include "Headers/AkAudio_UAkXB1InitializationSettings.h"
#include "Headers/AkAudio_UAkXboxOneGDKPlatformInfo.h"
#include "Headers/AkAudio_UAkSettings.h"
#include "Headers/AkAudio_UMovieSceneAkAudioRTPCTrack.h"
#include "Headers/AkAudio_UPostEventAsync.h"
#include "Headers/AkAudio_UPostEventAtLocationAsync.h"
#include "Headers/AkAudio_UAkWindowsPlatformInfo.h"
#include "Headers/AkAudio_UAkWinGDKInitializationSettings.h"
#include "Headers/AkAudio_UAkSettingsPerUser.h"
#include "Headers/AkAudio_UAkSlider.h"
#include "Headers/AkAudio_AAkSpatialAudioVolume.h"
#include "Headers/AkAudio_AAkSpotReflector.h"
#include "Headers/AkAudio_UAkStateValue.h"
#include "Headers/AkAudio_UAkWinAnvilInitializationSettings.h"
#include "Headers/AkAudio_UAkWinGDKPlatformInfo.h"
#include "Headers/AkAudio_UAkWinAnvilPlatformInfo.h"
#include "Headers/AkAudio_UAkXboxOneAnvilPlatformInfo.h"
#include "Headers/AkAudio_UAkXB1PlatformInfo.h"
#include "Headers/AkAudio_UAkSubmixInputComponent.h"
#include "Headers/AkAudio_UAkSurfaceReflectorSetComponent.h"
#include "Headers/AkAudio_UAkSwitchInitializationSettings.h"
#include "Headers/AkAudio_UAkSwitchPlatformInfo.h"
#include "Headers/AkAudio_UAkSwitchValue.h"
#include "Headers/AkAudio_UDrawPortalComponent.h"
#include "Headers/AkAudio_UDrawRoomComponent.h"
#include "Headers/AkAudio_UAkXboxOneInitializationSettings.h"
#include "Headers/AkAudio_UAkXboxOnePlatformInfo.h"
#include "Headers/AkAudio_UAkXSXInitializationSettings.h"
#include "Headers/AkAudio_UAkMPXInitializationSettings.h"
#include "Headers/AkAudio_UAkXSXPlatformInfo.h"
#include "Headers/AkAudio_UAkFolder.h"
#include "Headers/AkAudio_UAkPortalComponent.h"
#include "Headers/AkAudio_AAkAcousticPortal.h"
#include "Headers/AkAudio_UAkAudioType.h"
#include "Headers/AkAudio_UAkAcousticTexture.h"
#include "Headers/AkAudio_UMovieSceneAkAudioEventSection.h"
#include "Headers/AkAudio_UMovieSceneAkTrack.h"
#include "Headers/AkAudio_UMovieSceneAkAudioEventTrack.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AkAudio
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x02718B00
     *         Name   -> Function /Script/AkAudio.AkAmbientSound.StopAmbientSound
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AAkAmbientSound::StopAmbientSound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAmbientSound.StopAmbientSound");
        
        AAkAmbientSound_StopAmbientSound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02718B50
     *         Name   -> Function /Script/AkAudio.AkAmbientSound.StartAmbientSound
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AAkAmbientSound::StartAmbientSound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAmbientSound.StartAmbientSound");
        
        AAkAmbientSound_StartAmbientSound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkAndroidInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkAndroidInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAndroidInitializationSettings.MigrateMultiCoreRendering");
        
        UAkAndroidInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271A5A0
     *         Name   -> Function /Script/AkAudio.AkAudioEvent.GetMinimumDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkAudioEvent::GetMinimumDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAudioEvent.GetMinimumDuration");
        
        UAkAudioEvent_GetMinimumDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271A520
     *         Name   -> Function /Script/AkAudio.AkAudioEvent.GetMaximumDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkAudioEvent::GetMaximumDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAudioEvent.GetMaximumDuration");
        
        UAkAudioEvent_GetMaximumDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271A6A0
     *         Name   -> Function /Script/AkAudio.AkAudioEvent.GetMaxAttenuationRadius
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkAudioEvent::GetMaxAttenuationRadius()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAudioEvent.GetMaxAttenuationRadius");
        
        UAkAudioEvent_GetMaxAttenuationRadius_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271A620
     *         Name   -> Function /Script/AkAudio.AkAudioEvent.GetIsInfinite
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkAudioEvent::GetIsInfinite()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAudioEvent.GetIsInfinite");
        
        UAkAudioEvent_GetIsInfinite_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02720690
     *         Name   -> Function /Script/AkAudio.AkGameObject.Stop
     *         Flags  -> (BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGameObject::Stop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.Stop");
        
        UAkGameObject_Stop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02720360
     *         Name   -> Function /Script/AkAudio.AkGameObject.SetRTPCValue
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         AkAudio::UAkRtpc*                                  RTPCValue                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InterpolationTimeMs                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                RTPC                                                       (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameObject::SetRTPCValue(AkAudio::UAkRtpc* RTPCValue, float Value, int32_t InterpolationTimeMs, const BasicTypes::FString& RTPC)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.SetRTPCValue");
        
        UAkGameObject_SetRTPCValue_Params params {};
        params.RTPCValue = RTPCValue;
        params.Value = Value;
        params.InterpolationTimeMs = InterpolationTimeMs;
        params.RTPC = RTPC;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02720FD0
     *         Name   -> Function /Script/AkAudio.AkGameObject.PostAssociatedAkEventAsync
     *         Flags  -> (BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            CallbackMask                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameObject::PostAssociatedAkEventAsync(CoreUObject::UObject* WorldContextObject, int32_t CallbackMask, const BasicTypes::UScriptDelegate& PostEventCallback, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo, int32_t* PlayingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.PostAssociatedAkEventAsync");
        
        UAkGameObject_PostAssociatedAkEventAsync_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CallbackMask = CallbackMask;
        params.PostEventCallback = PostEventCallback;
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PlayingID != nullptr)
            *PlayingID = params.PlayingID;
    }

    /**
     * Function:
     *         RVA    -> 0x02721470
     *         Name   -> Function /Script/AkAudio.AkGameObject.PostAssociatedAkEvent
     *         Flags  -> (BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         int32_t                                            CallbackMask                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkGameObject::PostAssociatedAkEvent(int32_t CallbackMask, const BasicTypes::UScriptDelegate& PostEventCallback, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.PostAssociatedAkEvent");
        
        UAkGameObject_PostAssociatedAkEvent_Params params {};
        params.CallbackMask = CallbackMask;
        params.PostEventCallback = PostEventCallback;
        params.ExternalSources = ExternalSources;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027206B0
     *         Name   -> Function /Script/AkAudio.AkGameObject.PostAkEventAsync
     *         Flags  -> (BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            CallbackMask                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameObject::PostAkEventAsync(CoreUObject::UObject* WorldContextObject, AkAudio::UAkAudioEvent* AkEvent, int32_t* PlayingID, int32_t CallbackMask, const BasicTypes::UScriptDelegate& PostEventCallback, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.PostAkEventAsync");
        
        UAkGameObject_PostAkEventAsync_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AkEvent = AkEvent;
        params.CallbackMask = CallbackMask;
        params.PostEventCallback = PostEventCallback;
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PlayingID != nullptr)
            *PlayingID = params.PlayingID;
    }

    /**
     * Function:
     *         RVA    -> 0x02720BE0
     *         Name   -> Function /Script/AkAudio.AkGameObject.PostAkEvent
     *         Flags  -> (BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            CallbackMask                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                in_EventName                                               (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkGameObject::PostAkEvent(AkAudio::UAkAudioEvent* AkEvent, int32_t CallbackMask, const BasicTypes::UScriptDelegate& PostEventCallback, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const BasicTypes::FString& in_EventName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.PostAkEvent");
        
        UAkGameObject_PostAkEvent_Params params {};
        params.AkEvent = AkEvent;
        params.CallbackMask = CallbackMask;
        params.PostEventCallback = PostEventCallback;
        params.ExternalSources = ExternalSources;
        params.in_EventName = in_EventName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271FF00
     *         Name   -> Function /Script/AkAudio.AkGameObject.GetRTPCValue
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AkAudio::UAkRtpc*                                  RTPCValue                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::ERTPCValueType                            InputValueType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::ERTPCValueType                            OutputValueType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                RTPC                                                       (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameObject::GetRTPCValue(AkAudio::UAkRtpc* RTPCValue, AkAudio::ERTPCValueType InputValueType, float* Value, AkAudio::ERTPCValueType* OutputValueType, const BasicTypes::FString& RTPC, int32_t PlayingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameObject.GetRTPCValue");
        
        UAkGameObject_GetRTPCValue_Params params {};
        params.RTPCValue = RTPCValue;
        params.InputValueType = InputValueType;
        params.RTPC = RTPC;
        params.PlayingID = PlayingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        if (OutputValueType != nullptr)
            *OutputValueType = params.OutputValueType;
    }

    /**
     * Function:
     *         RVA    -> 0x0271AB90
     *         Name   -> Function /Script/AkAudio.AkAudioInputComponent.PostAssociatedAudioInputEvent
     *         Flags  -> (BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkAudioInputComponent::PostAssociatedAudioInputEvent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAudioInputComponent.PostAssociatedAudioInputEvent");
        
        UAkAudioInputComponent_PostAssociatedAudioInputEvent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271BCA0
     *         Name   -> Function /Script/AkAudio.AkCheckBox.SetIsChecked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InIsChecked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkCheckBox::SetIsChecked(bool InIsChecked)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.SetIsChecked");
        
        UAkCheckBox_SetIsChecked_Params params {};
        params.InIsChecked = InIsChecked;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271BA90
     *         Name   -> Function /Script/AkAudio.AkCheckBox.SetCheckedState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::ECheckBoxState                          InCheckedState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkCheckBox::SetCheckedState(SlateCore::ECheckBoxState InCheckedState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.SetCheckedState");
        
        UAkCheckBox_SetCheckedState_Params params {};
        params.InCheckedState = InCheckedState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271B9A0
     *         Name   -> Function /Script/AkAudio.AkCheckBox.SetAkItemId
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FGuid                                 ItemId                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkCheckBox::SetAkItemId(const CoreUObject::FGuid& ItemId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.SetAkItemId");
        
        UAkCheckBox_SetAkItemId_Params params {};
        params.ItemId = ItemId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271B7E0
     *         Name   -> Function /Script/AkAudio.AkCheckBox.SetAkBoolProperty
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ItemProperty                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkCheckBox::SetAkBoolProperty(const BasicTypes::FString& ItemProperty)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.SetAkBoolProperty");
        
        UAkCheckBox_SetAkBoolProperty_Params params {};
        params.ItemProperty = ItemProperty;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271BE30
     *         Name   -> Function /Script/AkAudio.AkCheckBox.IsPressed
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkCheckBox::IsPressed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.IsPressed");
        
        UAkCheckBox_IsPressed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271BDE0
     *         Name   -> Function /Script/AkAudio.AkCheckBox.IsChecked
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkCheckBox::IsChecked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.IsChecked");
        
        UAkCheckBox_IsChecked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271BD90
     *         Name   -> Function /Script/AkAudio.AkCheckBox.GetCheckedState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SlateCore::ECheckBoxState                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SlateCore::ECheckBoxState UAkCheckBox::GetCheckedState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.GetCheckedState");
        
        UAkCheckBox_GetCheckedState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271B730
     *         Name   -> Function /Script/AkAudio.AkCheckBox.GetAkProperty
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkCheckBox::GetAkProperty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.GetAkProperty");
        
        UAkCheckBox_GetAkProperty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271B940
     *         Name   -> Function /Script/AkAudio.AkCheckBox.GetAkItemId
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FGuid                                 ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FGuid UAkCheckBox::GetAkItemId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkCheckBox.GetAkItemId");
        
        UAkCheckBox_GetAkItemId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027340E0
     *         Name   -> Function /Script/AkAudio.AkItemBoolProperties.SetSearchText
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                newText                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkItemBoolProperties::SetSearchText(const BasicTypes::FString& newText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemBoolProperties.SetSearchText");
        
        UAkItemBoolProperties_SetSearchText_Params params {};
        params.newText = newText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02734330
     *         Name   -> Function /Script/AkAudio.AkItemBoolProperties.GetSelectedProperty
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkItemBoolProperties::GetSelectedProperty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemBoolProperties.GetSelectedProperty");
        
        UAkItemBoolProperties_GetSelectedProperty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027341E0
     *         Name   -> Function /Script/AkAudio.AkItemBoolProperties.GetSearchText
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkItemBoolProperties::GetSearchText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemBoolProperties.GetSearchText");
        
        UAkItemBoolProperties_GetSearchText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733C90
     *         Name   -> Function /Script/AkAudio.AkItemPropertiesConv.Conv_FAkPropertyToControlToText
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkPropertyToControl                      INAkPropertyToControl                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UAkItemPropertiesConv::STATIC_Conv_FAkPropertyToControlToText(const AkAudio::FAkPropertyToControl& INAkPropertyToControl)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemPropertiesConv.Conv_FAkPropertyToControlToText");
        
        UAkItemPropertiesConv_Conv_FAkPropertyToControlToText_Params params {};
        params.INAkPropertyToControl = INAkPropertyToControl;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733E90
     *         Name   -> Function /Script/AkAudio.AkItemPropertiesConv.Conv_FAkPropertyToControlToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkPropertyToControl                      INAkPropertyToControl                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkItemPropertiesConv::STATIC_Conv_FAkPropertyToControlToString(const AkAudio::FAkPropertyToControl& INAkPropertyToControl)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemPropertiesConv.Conv_FAkPropertyToControlToString");
        
        UAkItemPropertiesConv_Conv_FAkPropertyToControlToString_Params params {};
        params.INAkPropertyToControl = INAkPropertyToControl;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027340E0
     *         Name   -> Function /Script/AkAudio.AkItemProperties.SetSearchText
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                newText                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkItemProperties::SetSearchText(const BasicTypes::FString& newText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemProperties.SetSearchText");
        
        UAkItemProperties_SetSearchText_Params params {};
        params.newText = newText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02734AC0
     *         Name   -> Function /Script/AkAudio.AkItemProperties.GetSelectedProperty
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkItemProperties::GetSelectedProperty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemProperties.GetSelectedProperty");
        
        UAkItemProperties_GetSelectedProperty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027341E0
     *         Name   -> Function /Script/AkAudio.AkItemProperties.GetSearchText
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkItemProperties::GetSearchText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemProperties.GetSearchText");
        
        UAkItemProperties_GetSearchText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02734ED0
     *         Name   -> Function /Script/AkAudio.AkLateReverbComponent.AssociateAkTextureSetComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAcousticTextureSetComponent*           textureSetComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkLateReverbComponent::AssociateAkTextureSetComponent(AkAudio::UAkAcousticTextureSetComponent* textureSetComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkLateReverbComponent.AssociateAkTextureSetComponent");
        
        UAkLateReverbComponent_AssociateAkTextureSetComponent_Params params {};
        params.textureSetComponent = textureSetComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkLinuxInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkLinuxInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkLinuxInitializationSettings.MigrateMultiCoreRendering");
        
        UAkLinuxInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkHololensInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkHololensInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkHololensInitializationSettings.MigrateMultiCoreRendering");
        
        UAkHololensInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02733C90
     *         Name   -> Function /Script/AkAudio.AkItemBoolPropertiesConv.Conv_FAkBoolPropertyToControlToText
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkBoolPropertyToControl                  INAkBoolPropertyToControl                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UAkItemBoolPropertiesConv::STATIC_Conv_FAkBoolPropertyToControlToText(const AkAudio::FAkBoolPropertyToControl& INAkBoolPropertyToControl)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemBoolPropertiesConv.Conv_FAkBoolPropertyToControlToText");
        
        UAkItemBoolPropertiesConv_Conv_FAkBoolPropertyToControlToText_Params params {};
        params.INAkBoolPropertyToControl = INAkBoolPropertyToControl;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733E90
     *         Name   -> Function /Script/AkAudio.AkItemBoolPropertiesConv.Conv_FAkBoolPropertyToControlToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkBoolPropertyToControl                  INAkBoolPropertyToControl                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkItemBoolPropertiesConv::STATIC_Conv_FAkBoolPropertyToControlToString(const AkAudio::FAkBoolPropertyToControl& INAkBoolPropertyToControl)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkItemBoolPropertiesConv.Conv_FAkBoolPropertyToControlToString");
        
        UAkItemBoolPropertiesConv_Conv_FAkBoolPropertyToControlToString_Params params {};
        params.INAkBoolPropertyToControl = INAkBoolPropertyToControl;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02725B70
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.UseReverbVolumes
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               inUseReverbVolumes                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_UseReverbVolumes(bool inUseReverbVolumes, Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.UseReverbVolumes");
        
        UAkGameplayStatics_UseReverbVolumes_Params params {};
        params.inUseReverbVolumes = inUseReverbVolumes;
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02725730
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.UseEarlyReflections
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAuxBus*                                AuxBus                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Order                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              BusSendGain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxPathLength                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               SpotReflectors                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                AuxBusName                                                 (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_UseEarlyReflections(Engine::AActor* Actor, AkAudio::UAkAuxBus* AuxBus, int32_t Order, float BusSendGain, float MaxPathLength, bool SpotReflectors, const BasicTypes::FString& AuxBusName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.UseEarlyReflections");
        
        UAkGameplayStatics_UseEarlyReflections_Params params {};
        params.Actor = Actor;
        params.AuxBus = AuxBus;
        params.Order = Order;
        params.BusSendGain = BusSendGain;
        params.MaxPathLength = MaxPathLength;
        params.SpotReflectors = SpotReflectors;
        params.AuxBusName = AuxBusName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722A00
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.UnloadBankByName
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                BankName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_UnloadBankByName(const BasicTypes::FString& BankName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.UnloadBankByName");
        
        UAkGameplayStatics_UnloadBankByName_Params params {};
        params.BankName = BankName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722AF0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.UnloadBankAsync
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioBank*                             Bank                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        BankUnloadedCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_UnloadBankAsync(AkAudio::UAkAudioBank* Bank, const BasicTypes::UScriptDelegate& BankUnloadedCallback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.UnloadBankAsync");
        
        UAkGameplayStatics_UnloadBankAsync_Params params {};
        params.Bank = Bank;
        params.BankUnloadedCallback = BankUnloadedCallback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722CA0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.UnloadBank
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioBank*                             Bank                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                BankName                                                   (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_UnloadBank(AkAudio::UAkAudioBank* Bank, const BasicTypes::FString& BankName, const Engine::FLatentActionInfo& LatentInfo, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.UnloadBank");
        
        UAkGameplayStatics_UnloadBank_Params params {};
        params.Bank = Bank;
        params.BankName = BankName;
        params.LatentInfo = LatentInfo;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722640
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StopProfilerCapture
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StopProfilerCapture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StopProfilerCapture");
        
        UAkGameplayStatics_StopProfilerCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722770
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StopOutputCapture
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StopOutputCapture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StopOutputCapture");
        
        UAkGameplayStatics_StopOutputCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723AE0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StopAllAmbientSounds
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StopAllAmbientSounds(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StopAllAmbientSounds");
        
        UAkGameplayStatics_StopAllAmbientSounds_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723F10
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StopAll
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StopAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StopAll");
        
        UAkGameplayStatics_StopAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723F40
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StopActor
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StopActor(Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StopActor");
        
        UAkGameplayStatics_StopActor_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722680
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StartProfilerCapture
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StartProfilerCapture(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StartProfilerCapture");
        
        UAkGameplayStatics_StartProfilerCapture_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722910
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StartOutputCapture
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StartOutputCapture(const BasicTypes::FString& Filename)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StartOutputCapture");
        
        UAkGameplayStatics_StartOutputCapture_Params params {};
        params.Filename = Filename;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723BB0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.StartAllAmbientSounds
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_StartAllAmbientSounds(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.StartAllAmbientSounds");
        
        UAkGameplayStatics_StartAllAmbientSounds_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02728610
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SpawnAkComponentAtLocation
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Orientation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               AutoPost                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               AutoDestroy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* UAkGameplayStatics::STATIC_SpawnAkComponentAtLocation(CoreUObject::UObject* WorldContextObject, AkAudio::UAkAudioEvent* AkEvent, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Orientation, bool AutoPost, const BasicTypes::FString& EventName, bool AutoDestroy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SpawnAkComponentAtLocation");
        
        UAkGameplayStatics_SpawnAkComponentAtLocation_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AkEvent = AkEvent;
        params.Location = Location;
        params.Orientation = Orientation;
        params.AutoPost = AutoPost;
        params.EventName = EventName;
        params.AutoDestroy = AutoDestroy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02726EA0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetSwitch
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkSwitchValue*                           SwitchValue                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SwitchGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  SwitchState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetSwitch(AkAudio::UAkSwitchValue* SwitchValue, Engine::AActor* Actor, const BasicTypes::FName& SwitchGroup, const BasicTypes::FName& SwitchState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetSwitch");
        
        UAkGameplayStatics_SetSwitch_Params params {};
        params.SwitchValue = SwitchValue;
        params.Actor = Actor;
        params.SwitchGroup = SwitchGroup;
        params.SwitchState = SwitchState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02727620
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetState
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkStateValue*                            StateValue                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  StateGroup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetState(AkAudio::UAkStateValue* StateValue, const BasicTypes::FName& StateGroup, const BasicTypes::FName& State)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetState");
        
        UAkGameplayStatics_SetState_Params params {};
        params.StateValue = StateValue;
        params.StateGroup = StateGroup;
        params.State = State;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02724230
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetSpeakerAngles
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<float>                          SpeakerAngles                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              HeightAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                DeviceShareset                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetSpeakerAngles(BasicTypes::TArray<float> SpeakerAngles, float HeightAngle, const BasicTypes::FString& DeviceShareset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetSpeakerAngles");
        
        UAkGameplayStatics_SetSpeakerAngles_Params params {};
        params.SpeakerAngles = SpeakerAngles;
        params.HeightAngle = HeightAngle;
        params.DeviceShareset = DeviceShareset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027281A0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetRTPCValue
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkRtpc*                                  RTPCValue                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InterpolationTimeMs                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  RTPC                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetRTPCValue(AkAudio::UAkRtpc* RTPCValue, float Value, int32_t InterpolationTimeMs, Engine::AActor* Actor, const BasicTypes::FName& RTPC)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetRTPCValue");
        
        UAkGameplayStatics_SetRTPCValue_Params params {};
        params.RTPCValue = RTPCValue;
        params.Value = Value;
        params.InterpolationTimeMs = InterpolationTimeMs;
        params.Actor = Actor;
        params.RTPC = RTPC;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02725580
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetReflectionsOrder
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Order                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               RefreshPaths                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetReflectionsOrder(int32_t Order, bool RefreshPaths)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetReflectionsOrder");
        
        UAkGameplayStatics_SetReflectionsOrder_Params params {};
        params.Order = Order;
        params.RefreshPaths = RefreshPaths;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02724DF0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetPortalToPortalObstruction
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkPortalComponent*                       PortalComponent0                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkPortalComponent*                       PortalComponent1                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ObstructionValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetPortalToPortalObstruction(AkAudio::UAkPortalComponent* PortalComponent0, AkAudio::UAkPortalComponent* PortalComponent1, float ObstructionValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetPortalToPortalObstruction");
        
        UAkGameplayStatics_SetPortalToPortalObstruction_Params params {};
        params.PortalComponent0 = PortalComponent0;
        params.PortalComponent1 = PortalComponent1;
        params.ObstructionValue = ObstructionValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027252D0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetPortalObstructionAndOcclusion
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkPortalComponent*                       PortalComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ObstructionValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OcclusionValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetPortalObstructionAndOcclusion(AkAudio::UAkPortalComponent* PortalComponent, float ObstructionValue, float OcclusionValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetPortalObstructionAndOcclusion");
        
        UAkGameplayStatics_SetPortalObstructionAndOcclusion_Params params {};
        params.PortalComponent = PortalComponent;
        params.ObstructionValue = ObstructionValue;
        params.OcclusionValue = OcclusionValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02724900
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetPanningRule
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::EPanningRule                              PanRule                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetPanningRule(AkAudio::EPanningRule PanRule)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetPanningRule");
        
        UAkGameplayStatics_SetPanningRule_Params params {};
        params.PanRule = PanRule;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02724C20
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetOutputBusVolume
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         float                                              BusVolume                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetOutputBusVolume(float BusVolume, Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetOutputBusVolume");
        
        UAkGameplayStatics_SetOutputBusVolume_Params params {};
        params.BusVolume = BusVolume;
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02722560
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetOcclusionScalingFactor
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ScalingFactor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetOcclusionScalingFactor(float ScalingFactor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetOcclusionScalingFactor");
        
        UAkGameplayStatics_SetOcclusionScalingFactor_Params params {};
        params.ScalingFactor = ScalingFactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02724060
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetOcclusionRefreshInterval
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         float                                              RefreshInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetOcclusionRefreshInterval(float RefreshInterval, Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetOcclusionRefreshInterval");
        
        UAkGameplayStatics_SetOcclusionRefreshInterval_Params params {};
        params.RefreshInterval = RefreshInterval;
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027269A0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetMultiplePositions
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkComponent*                             GameObjectAkComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FTransform>        Positions                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         AkAudio::EAkMultiPositionType                      MultiPositionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetMultiplePositions(AkAudio::UAkComponent* GameObjectAkComponent, BasicTypes::TArray<CoreUObject::FTransform> Positions, AkAudio::EAkMultiPositionType MultiPositionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetMultiplePositions");
        
        UAkGameplayStatics_SetMultiplePositions_Params params {};
        params.GameObjectAkComponent = GameObjectAkComponent;
        params.Positions = Positions;
        params.MultiPositionType = MultiPositionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02725D20
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetMultipleChannelMaskEmitterPositions
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkComponent*                             GameObjectAkComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkChannelMask>        ChannelMasks                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FTransform>        Positions                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         AkAudio::EAkMultiPositionType                      MultiPositionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetMultipleChannelMaskEmitterPositions(AkAudio::UAkComponent* GameObjectAkComponent, BasicTypes::TArray<AkAudio::FAkChannelMask> ChannelMasks, BasicTypes::TArray<CoreUObject::FTransform> Positions, AkAudio::EAkMultiPositionType MultiPositionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetMultipleChannelMaskEmitterPositions");
        
        UAkGameplayStatics_SetMultipleChannelMaskEmitterPositions_Params params {};
        params.GameObjectAkComponent = GameObjectAkComponent;
        params.ChannelMasks = ChannelMasks;
        params.Positions = Positions;
        params.MultiPositionType = MultiPositionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02726370
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetMultipleChannelEmitterPositions
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkComponent*                             GameObjectAkComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::EAkChannelConfiguration> ChannelMasks                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FTransform>        Positions                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         AkAudio::EAkMultiPositionType                      MultiPositionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetMultipleChannelEmitterPositions(AkAudio::UAkComponent* GameObjectAkComponent, BasicTypes::TArray<AkAudio::EAkChannelConfiguration> ChannelMasks, BasicTypes::TArray<CoreUObject::FTransform> Positions, AkAudio::EAkMultiPositionType MultiPositionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetMultipleChannelEmitterPositions");
        
        UAkGameplayStatics_SetMultipleChannelEmitterPositions_Params params {};
        params.GameObjectAkComponent = GameObjectAkComponent;
        params.ChannelMasks = ChannelMasks;
        params.Positions = Positions;
        params.MultiPositionType = MultiPositionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02725060
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetGameObjectToPortalObstruction
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkComponent*                             GameObjectAkComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkPortalComponent*                       PortalComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ObstructionValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetGameObjectToPortalObstruction(AkAudio::UAkComponent* GameObjectAkComponent, AkAudio::UAkPortalComponent* PortalComponent, float ObstructionValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetGameObjectToPortalObstruction");
        
        UAkGameplayStatics_SetGameObjectToPortalObstruction_Params params {};
        params.GameObjectAkComponent = GameObjectAkComponent;
        params.PortalComponent = PortalComponent;
        params.ObstructionValue = ObstructionValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02721E10
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetCurrentAudioCultureAsync
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                AudioCulture                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Completed                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetCurrentAudioCultureAsync(const BasicTypes::FString& AudioCulture, const BasicTypes::UScriptDelegate& Completed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetCurrentAudioCultureAsync");
        
        UAkGameplayStatics_SetCurrentAudioCultureAsync_Params params {};
        params.AudioCulture = AudioCulture;
        params.Completed = Completed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027220E0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetCurrentAudioCulture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                AudioCulture                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetCurrentAudioCulture(const BasicTypes::FString& AudioCulture, const Engine::FLatentActionInfo& LatentInfo, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetCurrentAudioCulture");
        
        UAkGameplayStatics_SetCurrentAudioCulture_Params params {};
        params.AudioCulture = AudioCulture;
        params.LatentInfo = LatentInfo;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027249F0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.SetBusConfig
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                BusName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::EAkChannelConfiguration                   ChannelConfiguration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_SetBusConfig(const BasicTypes::FString& BusName, AkAudio::EAkChannelConfiguration ChannelConfiguration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.SetBusConfig");
        
        UAkGameplayStatics_SetBusConfig_Params params {};
        params.BusName = BusName;
        params.ChannelConfiguration = ChannelConfiguration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02727910
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.ResetRTPCValue
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkRtpc*                                  RTPCValue                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InterpolationTimeMs                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  RTPC                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_ResetRTPCValue(AkAudio::UAkRtpc* RTPCValue, int32_t InterpolationTimeMs, Engine::AActor* Actor, const BasicTypes::FName& RTPC)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.ResetRTPCValue");
        
        UAkGameplayStatics_ResetRTPCValue_Params params {};
        params.RTPCValue = RTPCValue;
        params.InterpolationTimeMs = InterpolationTimeMs;
        params.Actor = Actor;
        params.RTPC = RTPC;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027247B0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.ReplaceMainOutput
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkOutputSettings                         MainOutputSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_ReplaceMainOutput(const AkAudio::FAkOutputSettings& MainOutputSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.ReplaceMainOutput");
        
        UAkGameplayStatics_ReplaceMainOutput_Params params {};
        params.MainOutputSettings = MainOutputSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027272C0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostTrigger
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkTrigger*                               TriggerValue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Trigger                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_PostTrigger(AkAudio::UAkTrigger* TriggerValue, Engine::AActor* Actor, const BasicTypes::FName& Trigger)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostTrigger");
        
        UAkGameplayStatics_PostTrigger_Params params {};
        params.TriggerValue = TriggerValue;
        params.Actor = Actor;
        params.Trigger = Trigger;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02729A80
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostEventByName
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_PostEventByName(const BasicTypes::FString& EventName, Engine::AActor* Actor, bool bStopWhenAttachedToDestroyed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostEventByName");
        
        UAkGameplayStatics_PostEventByName_Params params {};
        params.EventName = EventName;
        params.Actor = Actor;
        params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0272AB90
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostEventAttached
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  AttachPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkGameplayStatics::STATIC_PostEventAttached(AkAudio::UAkAudioEvent* AkEvent, Engine::AActor* Actor, const BasicTypes::FName& AttachPointName, bool bStopWhenAttachedToDestroyed, const BasicTypes::FString& EventName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostEventAttached");
        
        UAkGameplayStatics_PostEventAttached_Params params {};
        params.AkEvent = AkEvent;
        params.Actor = Actor;
        params.AttachPointName = AttachPointName;
        params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
        params.EventName = EventName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027291F0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostEventAtLocationByName
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Orientation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_PostEventAtLocationByName(const BasicTypes::FString& EventName, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Orientation, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostEventAtLocationByName");
        
        UAkGameplayStatics_PostEventAtLocationByName_Params params {};
        params.EventName = EventName;
        params.Location = Location;
        params.Orientation = Orientation;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027295C0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostEventAtLocation
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Orientation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkGameplayStatics::STATIC_PostEventAtLocation(AkAudio::UAkAudioEvent* AkEvent, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Orientation, const BasicTypes::FString& EventName, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostEventAtLocation");
        
        UAkGameplayStatics_PostEventAtLocation_Params params {};
        params.AkEvent = AkEvent;
        params.Location = Location;
        params.Orientation = Orientation;
        params.EventName = EventName;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272A660
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostEvent
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            CallbackMask                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkGameplayStatics::STATIC_PostEvent(AkAudio::UAkAudioEvent* AkEvent, Engine::AActor* Actor, int32_t CallbackMask, const BasicTypes::UScriptDelegate& PostEventCallback, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, bool bStopWhenAttachedToDestroyed, const BasicTypes::FString& EventName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostEvent");
        
        UAkGameplayStatics_PostEvent_Params params {};
        params.AkEvent = AkEvent;
        params.Actor = Actor;
        params.CallbackMask = CallbackMask;
        params.PostEventCallback = PostEventCallback;
        params.ExternalSources = ExternalSources;
        params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
        params.EventName = EventName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02729D50
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostAndWaitForEndOfEventAsync
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_PostAndWaitForEndOfEventAsync(AkAudio::UAkAudioEvent* AkEvent, Engine::AActor* Actor, int32_t* PlayingID, bool bStopWhenAttachedToDestroyed, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostAndWaitForEndOfEventAsync");
        
        UAkGameplayStatics_PostAndWaitForEndOfEventAsync_Params params {};
        params.AkEvent = AkEvent;
        params.Actor = Actor;
        params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PlayingID != nullptr)
            *PlayingID = params.PlayingID;
    }

    /**
     * Function:
     *         RVA    -> 0x0272A1C0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.PostAndWaitForEndOfEvent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                EventName                                                  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkGameplayStatics::STATIC_PostAndWaitForEndOfEvent(AkAudio::UAkAudioEvent* AkEvent, Engine::AActor* Actor, bool bStopWhenAttachedToDestroyed, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const BasicTypes::FString& EventName, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.PostAndWaitForEndOfEvent");
        
        UAkGameplayStatics_PostAndWaitForEndOfEvent_Params params {};
        params.AkEvent = AkEvent;
        params.Actor = Actor;
        params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
        params.ExternalSources = ExternalSources;
        params.EventName = EventName;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02723060
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.LoadInitBank
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_LoadInitBank()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.LoadInitBank");
        
        UAkGameplayStatics_LoadInitBank_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027230B0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.LoadBanks
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AkAudio::UAkAudioBank*>         SoundBanks                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               SynchronizeSoundBanks                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_LoadBanks(BasicTypes::TArray<AkAudio::UAkAudioBank*> SoundBanks, bool SynchronizeSoundBanks)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.LoadBanks");
        
        UAkGameplayStatics_LoadBanks_Params params {};
        params.SoundBanks = SoundBanks;
        params.SynchronizeSoundBanks = SynchronizeSoundBanks;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723430
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.LoadBankByName
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                BankName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_LoadBankByName(const BasicTypes::FString& BankName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.LoadBankByName");
        
        UAkGameplayStatics_LoadBankByName_Params params {};
        params.BankName = BankName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723260
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.LoadBankAsyncByName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                BankName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        BankLoadedCallback                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_LoadBankAsyncByName(const BasicTypes::FString& BankName, const BasicTypes::UScriptDelegate& BankLoadedCallback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.LoadBankAsyncByName");
        
        UAkGameplayStatics_LoadBankAsyncByName_Params params {};
        params.BankName = BankName;
        params.BankLoadedCallback = BankLoadedCallback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723520
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.LoadBankAsync
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioBank*                             Bank                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        BankLoadedCallback                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_LoadBankAsync(AkAudio::UAkAudioBank* Bank, const BasicTypes::UScriptDelegate& BankLoadedCallback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.LoadBankAsync");
        
        UAkGameplayStatics_LoadBankAsync_Params params {};
        params.Bank = Bank;
        params.BankLoadedCallback = BankLoadedCallback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027236D0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.LoadBank
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioBank*                             Bank                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                BankName                                                   (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_LoadBank(AkAudio::UAkAudioBank* Bank, const BasicTypes::FString& BankName, const Engine::FLatentActionInfo& LatentInfo, CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.LoadBank");
        
        UAkGameplayStatics_LoadBank_Params params {};
        params.Bank = Bank;
        params.BankName = BankName;
        params.LatentInfo = LatentInfo;
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0272B090
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.IsGame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkGameplayStatics::STATIC_IsGame(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.IsGame");
        
        UAkGameplayStatics_IsGame_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272B1B0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.IsEditor
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkGameplayStatics::STATIC_IsEditor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.IsEditor");
        
        UAkGameplayStatics_IsEditor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027244D0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetSpeakerAngles
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<float>                          SpeakerAngles                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         float                                              HeightAngle                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                DeviceShareset                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_GetSpeakerAngles(BasicTypes::TArray<float>* SpeakerAngles, float* HeightAngle, const BasicTypes::FString& DeviceShareset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetSpeakerAngles");
        
        UAkGameplayStatics_GetSpeakerAngles_Params params {};
        params.DeviceShareset = DeviceShareset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SpeakerAngles != nullptr)
            *SpeakerAngles = params.SpeakerAngles;
        if (HeightAngle != nullptr)
            *HeightAngle = params.HeightAngle;
    }

    /**
     * Function:
     *         RVA    -> 0x02727C80
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetRTPCValue
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkRtpc*                                  RTPCValue                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::ERTPCValueType                            InputValueType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::ERTPCValueType                            OutputValueType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  RTPC                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_GetRTPCValue(AkAudio::UAkRtpc* RTPCValue, int32_t PlayingID, AkAudio::ERTPCValueType InputValueType, float* Value, AkAudio::ERTPCValueType* OutputValueType, Engine::AActor* Actor, const BasicTypes::FName& RTPC)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetRTPCValue");
        
        UAkGameplayStatics_GetRTPCValue_Params params {};
        params.RTPCValue = RTPCValue;
        params.PlayingID = PlayingID;
        params.InputValueType = InputValueType;
        params.Actor = Actor;
        params.RTPC = RTPC;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Value != nullptr)
            *Value = params.Value;
        if (OutputValueType != nullptr)
            *OutputValueType = params.OutputValueType;
    }

    /**
     * Function:
     *         RVA    -> 0x02722530
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetOcclusionScalingFactor
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkGameplayStatics::STATIC_GetOcclusionScalingFactor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetOcclusionScalingFactor");
        
        UAkGameplayStatics_GetOcclusionScalingFactor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027223F0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetCurrentAudioCulture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkGameplayStatics::STATIC_GetCurrentAudioCulture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetCurrentAudioCulture");
        
        UAkGameplayStatics_GetCurrentAudioCulture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02722340
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetAvailableAudioCultures
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UAkGameplayStatics::STATIC_GetAvailableAudioCultures()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetAvailableAudioCultures");
        
        UAkGameplayStatics_GetAvailableAudioCultures_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02721A70
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetAkMediaAssetUserData
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkMediaAsset*                            Instance                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Type                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UAkGameplayStatics::STATIC_GetAkMediaAssetUserData(AkAudio::UAkMediaAsset* Instance, CoreUObject::UObject* Type)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetAkMediaAssetUserData");
        
        UAkGameplayStatics_GetAkMediaAssetUserData_Params params {};
        params.Instance = Instance;
        params.Type = Type;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272B1D0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetAkComponent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           AttachToComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ComponentCreated                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  AttachPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAttachLocation                            LocationType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UAkComponent* UAkGameplayStatics::STATIC_GetAkComponent(Engine::USceneComponent* AttachToComponent, bool* ComponentCreated, const BasicTypes::FName& AttachPointName, const CoreUObject::FVector& Location, Engine::EAttachLocation LocationType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetAkComponent");
        
        UAkGameplayStatics_GetAkComponent_Params params {};
        params.AttachToComponent = AttachToComponent;
        params.AttachPointName = AttachPointName;
        params.Location = Location;
        params.LocationType = LocationType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ComponentCreated != nullptr)
            *ComponentCreated = params.ComponentCreated;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02721C40
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.GetAkAudioTypeUserData
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioType*                             Instance                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Type                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UAkGameplayStatics::STATIC_GetAkAudioTypeUserData(AkAudio::UAkAudioType* Instance, CoreUObject::UObject* Type)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.GetAkAudioTypeUserData");
        
        UAkGameplayStatics_GetAkAudioTypeUserData_Params params {};
        params.Instance = Instance;
        params.Type = Type;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02728AF0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.ExecuteActionOnPlayingID
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::EAkActionOnEventType                      ActionType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            TransitionDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::EAkCurveInterpolation                     FadeCurve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_ExecuteActionOnPlayingID(AkAudio::EAkActionOnEventType ActionType, int32_t PlayingID, int32_t TransitionDuration, AkAudio::EAkCurveInterpolation FadeCurve)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.ExecuteActionOnPlayingID");
        
        UAkGameplayStatics_ExecuteActionOnPlayingID_Params params {};
        params.ActionType = ActionType;
        params.PlayingID = PlayingID;
        params.TransitionDuration = TransitionDuration;
        params.FadeCurve = FadeCurve;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02728DA0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.ExecuteActionOnEvent
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::EAkActionOnEventType                      ActionType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            TransitionDuration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::EAkCurveInterpolation                     FadeCurve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_ExecuteActionOnEvent(AkAudio::UAkAudioEvent* AkEvent, AkAudio::EAkActionOnEventType ActionType, Engine::AActor* Actor, int32_t TransitionDuration, AkAudio::EAkCurveInterpolation FadeCurve, int32_t PlayingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.ExecuteActionOnEvent");
        
        UAkGameplayStatics_ExecuteActionOnEvent_Params params {};
        params.AkEvent = AkEvent;
        params.ActionType = ActionType;
        params.Actor = Actor;
        params.TransitionDuration = TransitionDuration;
        params.FadeCurve = FadeCurve;
        params.PlayingID = PlayingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723A90
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.ClearBanks
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_ClearBanks()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.ClearBanks");
        
        UAkGameplayStatics_ClearBanks_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02723E00
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.CancelEventCallback
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_CancelEventCallback(const BasicTypes::UScriptDelegate& PostEventCallback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.CancelEventCallback");
        
        UAkGameplayStatics_CancelEventCallback_Params params {};
        params.PostEventCallback = PostEventCallback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027227B0
     *         Name   -> Function /Script/AkAudio.AkGameplayStatics.AddOutputCaptureMarker
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                MarkerText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkGameplayStatics::STATIC_AddOutputCaptureMarker(const BasicTypes::FString& MarkerText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGameplayStatics.AddOutputCaptureMarker");
        
        UAkGameplayStatics_AddOutputCaptureMarker_Params params {};
        params.MarkerText = MarkerText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0272F640
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::EAkMidiEventType                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::EAkMidiEventType UAkMIDIEventCallbackInfo::GetType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetType");
        
        UAkMIDIEventCallbackInfo_GetType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272EBD0
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetProgramChange
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiProgramChange                      AsProgramChange                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetProgramChange(AkAudio::FAkMidiProgramChange* AsProgramChange)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetProgramChange");
        
        UAkMIDIEventCallbackInfo_GetProgramChange_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsProgramChange != nullptr)
            *AsProgramChange = params.AsProgramChange;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272EFA0
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetPitchBend
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiPitchBend                          AsPitchBend                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetPitchBend(AkAudio::FAkMidiPitchBend* AsPitchBend)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetPitchBend");
        
        UAkMIDIEventCallbackInfo_GetPitchBend_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsPitchBend != nullptr)
            *AsPitchBend = params.AsPitchBend;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272F3A0
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetNoteOn
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiNoteOnOff                          AsNoteOn                                                   (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetNoteOn(AkAudio::FAkMidiNoteOnOff* AsNoteOn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetNoteOn");
        
        UAkMIDIEventCallbackInfo_GetNoteOn_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsNoteOn != nullptr)
            *AsNoteOn = params.AsNoteOn;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272F250
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetNoteOff
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiNoteOnOff                          AsNoteOff                                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetNoteOff(AkAudio::FAkMidiNoteOnOff* AsNoteOff)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetNoteOff");
        
        UAkMIDIEventCallbackInfo_GetNoteOff_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsNoteOff != nullptr)
            *AsNoteOff = params.AsNoteOff;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272EE50
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetNoteAftertouch
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiNoteAftertouch                     AsNoteAftertouch                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetNoteAftertouch(AkAudio::FAkMidiNoteAftertouch* AsNoteAftertouch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetNoteAftertouch");
        
        UAkMIDIEventCallbackInfo_GetNoteAftertouch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsNoteAftertouch != nullptr)
            *AsNoteAftertouch = params.AsNoteAftertouch;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272F4F0
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetGeneric
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiGeneric                            AsGeneric                                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetGeneric(AkAudio::FAkMidiGeneric* AsGeneric)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetGeneric");
        
        UAkMIDIEventCallbackInfo_GetGeneric_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsGeneric != nullptr)
            *AsGeneric = params.AsGeneric;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272ED10
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetChannelAftertouch
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiChannelAftertouch                  AsChannelAftertouch                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetChannelAftertouch(AkAudio::FAkMidiChannelAftertouch* AsChannelAftertouch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetChannelAftertouch");
        
        UAkMIDIEventCallbackInfo_GetChannelAftertouch_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsChannelAftertouch != nullptr)
            *AsChannelAftertouch = params.AsChannelAftertouch;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272F620
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetChannel
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UAkMIDIEventCallbackInfo::GetChannel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetChannel");
        
        UAkMIDIEventCallbackInfo_GetChannel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272F100
     *         Name   -> Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetCc
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkMidiCc                                 AsCc                                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkMIDIEventCallbackInfo::GetCc(AkAudio::FAkMidiCc* AsCc)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMIDIEventCallbackInfo.GetCc");
        
        UAkMIDIEventCallbackInfo_GetCc_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AsCc != nullptr)
            *AsCc = params.AsCc;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027304E0
     *         Name   -> Function /Script/AkAudio.AkGeometryComponent.UpdateGeometry
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGeometryComponent::UpdateGeometry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGeometryComponent.UpdateGeometry");
        
        UAkGeometryComponent_UpdateGeometry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027304C0
     *         Name   -> Function /Script/AkAudio.AkGeometryComponent.SendGeometry
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGeometryComponent::SendGeometry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGeometryComponent.SendGeometry");
        
        UAkGeometryComponent_SendGeometry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02730500
     *         Name   -> Function /Script/AkAudio.AkGeometryComponent.RemoveGeometry
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGeometryComponent::RemoveGeometry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGeometryComponent.RemoveGeometry");
        
        UAkGeometryComponent_RemoveGeometry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02730520
     *         Name   -> Function /Script/AkAudio.AkGeometryComponent.ConvertMesh
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkGeometryComponent::ConvertMesh()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkGeometryComponent.ConvertMesh");
        
        UAkGeometryComponent_ConvertMesh_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273CAF0
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.Unsubscribe
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiSubscriptionId                    SubscriptionId                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               UnsubscriptionDone                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiCalls::STATIC_Unsubscribe(const AkAudio::FAkWaapiSubscriptionId& SubscriptionId, bool* UnsubscriptionDone)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.Unsubscribe");
        
        UAkWaapiCalls_Unsubscribe_Params params {};
        params.SubscriptionId = SubscriptionId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (UnsubscriptionDone != nullptr)
            *UnsubscriptionDone = params.UnsubscriptionDone;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273CCC0
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.SubscribeToWaapi
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiUri                               WaapiUri                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        WaapiOptions                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        callback                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::FAkWaapiSubscriptionId                    SubscriptionId                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               SubscriptionDone                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiCalls::STATIC_SubscribeToWaapi(const AkAudio::FAkWaapiUri& WaapiUri, const AkAudio::FAKWaapiJsonObject& WaapiOptions, const BasicTypes::UScriptDelegate& callback, AkAudio::FAkWaapiSubscriptionId* SubscriptionId, bool* SubscriptionDone)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.SubscribeToWaapi");
        
        UAkWaapiCalls_SubscribeToWaapi_Params params {};
        params.WaapiUri = WaapiUri;
        params.WaapiOptions = WaapiOptions;
        params.callback = callback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubscriptionId != nullptr)
            *SubscriptionId = params.SubscriptionId;
        if (SubscriptionDone != nullptr)
            *SubscriptionDone = params.SubscriptionDone;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273D750
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.SetSubscriptionID
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiSubscriptionId                    Subscription                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkWaapiCalls::STATIC_SetSubscriptionID(const AkAudio::FAkWaapiSubscriptionId& Subscription, int32_t ID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.SetSubscriptionID");
        
        UAkWaapiCalls_SetSubscriptionID_Params params {};
        params.Subscription = Subscription;
        params.ID = ID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273D530
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.RegisterWaapiProjectLoadedCallback
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::UScriptDelegate                        callback                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkWaapiCalls::STATIC_RegisterWaapiProjectLoadedCallback(const BasicTypes::UScriptDelegate& callback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.RegisterWaapiProjectLoadedCallback");
        
        UAkWaapiCalls_RegisterWaapiProjectLoadedCallback_Params params {};
        params.callback = callback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273D400
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.RegisterWaapiConnectionLostCallback
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::UScriptDelegate                        callback                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkWaapiCalls::STATIC_RegisterWaapiConnectionLostCallback(const BasicTypes::UScriptDelegate& callback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.RegisterWaapiConnectionLostCallback");
        
        UAkWaapiCalls_RegisterWaapiConnectionLostCallback_Params params {};
        params.callback = callback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273D660
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.GetSubscriptionID
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiSubscriptionId                    Subscription                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkWaapiCalls::STATIC_GetSubscriptionID(const AkAudio::FAkWaapiSubscriptionId& Subscription)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.GetSubscriptionID");
        
        UAkWaapiCalls_GetSubscriptionID_Params params {};
        params.Subscription = Subscription;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273C7A0
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.Conv_FAkWaapiSubscriptionIdToText
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkWaapiSubscriptionId                    INAkWaapiSubscriptionId                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UAkWaapiCalls::STATIC_Conv_FAkWaapiSubscriptionIdToText(const AkAudio::FAkWaapiSubscriptionId& INAkWaapiSubscriptionId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.Conv_FAkWaapiSubscriptionIdToText");
        
        UAkWaapiCalls_Conv_FAkWaapiSubscriptionIdToText_Params params {};
        params.INAkWaapiSubscriptionId = INAkWaapiSubscriptionId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273C9B0
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.Conv_FAkWaapiSubscriptionIdToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkWaapiSubscriptionId                    INAkWaapiSubscriptionId                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkWaapiCalls::STATIC_Conv_FAkWaapiSubscriptionIdToString(const AkAudio::FAkWaapiSubscriptionId& INAkWaapiSubscriptionId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.Conv_FAkWaapiSubscriptionIdToString");
        
        UAkWaapiCalls_Conv_FAkWaapiSubscriptionIdToString_Params params {};
        params.INAkWaapiSubscriptionId = INAkWaapiSubscriptionId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273D0D0
     *         Name   -> Function /Script/AkAudio.AkWaapiCalls.CallWaapi
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiUri                               WaapiUri                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        WaapiArgs                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        WaapiOptions                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiCalls::STATIC_CallWaapi(const AkAudio::FAkWaapiUri& WaapiUri, const AkAudio::FAKWaapiJsonObject& WaapiArgs, const AkAudio::FAKWaapiJsonObject& WaapiOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiCalls.CallWaapi");
        
        UAkWaapiCalls_CallWaapi_Params params {};
        params.WaapiUri = WaapiUri;
        params.WaapiArgs = WaapiArgs;
        params.WaapiOptions = WaapiOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733C90
     *         Name   -> Function /Script/AkAudio.SAkWaapiFieldNamesConv.Conv_FAkWaapiFieldNamesToText
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        INAkWaapiFieldNames                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText USAkWaapiFieldNamesConv::STATIC_Conv_FAkWaapiFieldNamesToText(const AkAudio::FAkWaapiFieldNames& INAkWaapiFieldNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.SAkWaapiFieldNamesConv.Conv_FAkWaapiFieldNamesToText");
        
        USAkWaapiFieldNamesConv_Conv_FAkWaapiFieldNamesToText_Params params {};
        params.INAkWaapiFieldNames = INAkWaapiFieldNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733E90
     *         Name   -> Function /Script/AkAudio.SAkWaapiFieldNamesConv.Conv_FAkWaapiFieldNamesToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        INAkWaapiFieldNames                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString USAkWaapiFieldNamesConv::STATIC_Conv_FAkWaapiFieldNamesToString(const AkAudio::FAkWaapiFieldNames& INAkWaapiFieldNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.SAkWaapiFieldNamesConv.Conv_FAkWaapiFieldNamesToString");
        
        USAkWaapiFieldNamesConv_Conv_FAkWaapiFieldNamesToString_Params params {};
        params.INAkWaapiFieldNames = INAkWaapiFieldNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027412A0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.SetStringField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                FieldValue                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_SetStringField(const AkAudio::FAkWaapiFieldNames& FieldName, const BasicTypes::FString& FieldValue, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.SetStringField");
        
        UAkWaapiJsonManager_SetStringField_Params params {};
        params.FieldName = FieldName;
        params.FieldValue = FieldValue;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02740920
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.SetObjectField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        FieldValue                                                 (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_SetObjectField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& FieldValue, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.SetObjectField");
        
        UAkWaapiJsonManager_SetObjectField_Params params {};
        params.FieldName = FieldName;
        params.FieldValue = FieldValue;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02740CB0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.SetNumberField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              FieldValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_SetNumberField(const AkAudio::FAkWaapiFieldNames& FieldName, float FieldValue, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.SetNumberField");
        
        UAkWaapiJsonManager_SetNumberField_Params params {};
        params.FieldName = FieldName;
        params.FieldValue = FieldValue;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02740FA0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.SetBoolField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               FieldValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_SetBoolField(const AkAudio::FAkWaapiFieldNames& FieldName, bool FieldValue, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.SetBoolField");
        
        UAkWaapiJsonManager_SetBoolField_Params params {};
        params.FieldName = FieldName;
        params.FieldValue = FieldValue;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027405E0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.SetArrayStringFields
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            FieldStringValues                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_SetArrayStringFields(const AkAudio::FAkWaapiFieldNames& FieldName, BasicTypes::TArray<BasicTypes::FString> FieldStringValues, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.SetArrayStringFields");
        
        UAkWaapiJsonManager_SetArrayStringFields_Params params {};
        params.FieldName = FieldName;
        params.FieldStringValues = FieldStringValues;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02740260
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.SetArrayObjectFields
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAKWaapiJsonObject>    FieldObjectValues                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_SetArrayObjectFields(const AkAudio::FAkWaapiFieldNames& FieldName, BasicTypes::TArray<AkAudio::FAKWaapiJsonObject> FieldObjectValues, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.SetArrayObjectFields");
        
        UAkWaapiJsonManager_SetArrayObjectFields_Params params {};
        params.FieldName = FieldName;
        params.FieldObjectValues = FieldObjectValues;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273FFD0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.GetStringField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkWaapiJsonManager::STATIC_GetStringField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.GetStringField");
        
        UAkWaapiJsonManager_GetStringField_Params params {};
        params.FieldName = FieldName;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273F5B0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.GetObjectField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAKWaapiJsonObject UAkWaapiJsonManager::STATIC_GetObjectField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.GetObjectField");
        
        UAkWaapiJsonManager_GetObjectField_Params params {};
        params.FieldName = FieldName;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273FB20
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.GetNumberField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkWaapiJsonManager::STATIC_GetNumberField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.GetNumberField");
        
        UAkWaapiJsonManager_GetNumberField_Params params {};
        params.FieldName = FieldName;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273F8D0
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.GetIntegerField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkWaapiJsonManager::STATIC_GetIntegerField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.GetIntegerField");
        
        UAkWaapiJsonManager_GetIntegerField_Params params {};
        params.FieldName = FieldName;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273FD80
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.GetBoolField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkWaapiJsonManager::STATIC_GetBoolField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.GetBoolField");
        
        UAkWaapiJsonManager_GetBoolField_Params params {};
        params.FieldName = FieldName;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273F280
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.GetArrayField
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::FAkWaapiFieldNames                        FieldName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AkAudio::FAKWaapiJsonObject                        Target                                                     (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAKWaapiJsonObject>    ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AkAudio::FAKWaapiJsonObject> UAkWaapiJsonManager::STATIC_GetArrayField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.GetArrayField");
        
        UAkWaapiJsonManager_GetArrayField_Params params {};
        params.FieldName = FieldName;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273EF60
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.Conv_FAKWaapiJsonObjectToText
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAKWaapiJsonObject                        INAKWaapiJsonObject                                        (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UAkWaapiJsonManager::STATIC_Conv_FAKWaapiJsonObjectToText(const AkAudio::FAKWaapiJsonObject& INAKWaapiJsonObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.Conv_FAKWaapiJsonObjectToText");
        
        UAkWaapiJsonManager_Conv_FAKWaapiJsonObjectToText_Params params {};
        params.INAKWaapiJsonObject = INAKWaapiJsonObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273F100
     *         Name   -> Function /Script/AkAudio.AkWaapiJsonManager.Conv_FAKWaapiJsonObjectToString
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAKWaapiJsonObject                        INAKWaapiJsonObject                                        (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkWaapiJsonManager::STATIC_Conv_FAKWaapiJsonObjectToString(const AkAudio::FAKWaapiJsonObject& INAKWaapiJsonObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiJsonManager.Conv_FAKWaapiJsonObjectToString");
        
        UAkWaapiJsonManager_Conv_FAKWaapiJsonObjectToString_Params params {};
        params.INAKWaapiJsonObject = INAKWaapiJsonObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733C90
     *         Name   -> Function /Script/AkAudio.AkWaapiUriConv.Conv_FAkWaapiUriToText
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkWaapiUri                               INAkWaapiUri                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UAkWaapiUriConv::STATIC_Conv_FAkWaapiUriToText(const AkAudio::FAkWaapiUri& INAkWaapiUri)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiUriConv.Conv_FAkWaapiUriToText");
        
        UAkWaapiUriConv_Conv_FAkWaapiUriToText_Params params {};
        params.INAkWaapiUri = INAkWaapiUri;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02733E90
     *         Name   -> Function /Script/AkAudio.AkWaapiUriConv.Conv_FAkWaapiUriToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AkAudio::FAkWaapiUri                               INAkWaapiUri                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkWaapiUriConv::STATIC_Conv_FAkWaapiUriToString(const AkAudio::FAkWaapiUri& INAkWaapiUri)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWaapiUriConv.Conv_FAkWaapiUriToString");
        
        UAkWaapiUriConv_Conv_FAkWaapiUriToString_Params params {};
        params.INAkWaapiUri = INAkWaapiUri;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkWindowsInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkWindowsInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWindowsInitializationSettings.MigrateMultiCoreRendering");
        
        UAkWindowsInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkMacInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkMacInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkMacInitializationSettings.MigrateMultiCoreRendering");
        
        UAkMacInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271CD00
     *         Name   -> Function /Script/AkAudio.AkComponent.UseReverbVolumes
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               inUseReverbVolumes                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::UseReverbVolumes(bool inUseReverbVolumes)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.UseReverbVolumes");
        
        UAkComponent_UseReverbVolumes_Params params {};
        params.inUseReverbVolumes = inUseReverbVolumes;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271C930
     *         Name   -> Function /Script/AkAudio.AkComponent.UseEarlyReflections
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAuxBus*                                AuxBus                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Order                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              BusSendGain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxPathLength                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               SpotReflectors                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                AuxBusName                                                 (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::UseEarlyReflections(AkAudio::UAkAuxBus* AuxBus, int32_t Order, float BusSendGain, float MaxPathLength, bool SpotReflectors, const BasicTypes::FString& AuxBusName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.UseEarlyReflections");
        
        UAkComponent_UseEarlyReflections_Params params {};
        params.AuxBus = AuxBus;
        params.Order = Order;
        params.BusSendGain = BusSendGain;
        params.MaxPathLength = MaxPathLength;
        params.SpotReflectors = SpotReflectors;
        params.AuxBusName = AuxBusName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271CFE0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetSwitch
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkSwitchValue*                           SwitchValue                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                SwitchGroup                                                (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                SwitchState                                                (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetSwitch(AkAudio::UAkSwitchValue* SwitchValue, const BasicTypes::FString& SwitchGroup, const BasicTypes::FString& SwitchState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetSwitch");
        
        UAkComponent_SetSwitch_Params params {};
        params.SwitchValue = SwitchValue;
        params.SwitchGroup = SwitchGroup;
        params.SwitchState = SwitchState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271CEF0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetStopWhenOwnerDestroyed
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bStopWhenOwnerDestroyed                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetStopWhenOwnerDestroyed(bool bStopWhenOwnerDestroyed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetStopWhenOwnerDestroyed");
        
        UAkComponent_SetStopWhenOwnerDestroyed_Params params {};
        params.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271C5B0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetOutputBusVolume
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              BusVolume                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetOutputBusVolume(float BusVolume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetOutputBusVolume");
        
        UAkComponent_SetOutputBusVolume_Params params {};
        params.BusVolume = BusVolume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271CDF0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetListeners
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AkAudio::UAkComponent*>         Listeners                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetListeners(BasicTypes::TArray<AkAudio::UAkComponent*> Listeners)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetListeners");
        
        UAkComponent_SetListeners_Params params {};
        params.Listeners = Listeners;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271E1A0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetGameObjectRadius
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              in_outerRadius                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              in_innerRadius                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetGameObjectRadius(float in_outerRadius, float in_innerRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetGameObjectRadius");
        
        UAkComponent_SetGameObjectRadius_Params params {};
        params.in_outerRadius = in_outerRadius;
        params.in_innerRadius = in_innerRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271C6A0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetEarlyReflectionsVolume
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              SendVolume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetEarlyReflectionsVolume(float SendVolume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetEarlyReflectionsVolume");
        
        UAkComponent_SetEarlyReflectionsVolume_Params params {};
        params.SendVolume = SendVolume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271C7B0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetEarlyReflectionsAuxBus
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                AuxBusName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetEarlyReflectionsAuxBus(const BasicTypes::FString& AuxBusName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetEarlyReflectionsAuxBus");
        
        UAkComponent_SetEarlyReflectionsAuxBus_Params params {};
        params.AuxBusName = AuxBusName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271C4A0
     *         Name   -> Function /Script/AkAudio.AkComponent.SetAttenuationScalingFactor
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::SetAttenuationScalingFactor(float Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.SetAttenuationScalingFactor");
        
        UAkComponent_SetAttenuationScalingFactor_Params params {};
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271D2D0
     *         Name   -> Function /Script/AkAudio.AkComponent.PostTrigger
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkTrigger*                               TriggerValue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Trigger                                                    (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::PostTrigger(AkAudio::UAkTrigger* TriggerValue, const BasicTypes::FString& Trigger)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.PostTrigger");
        
        UAkComponent_PostTrigger_Params params {};
        params.TriggerValue = TriggerValue;
        params.Trigger = Trigger;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0271DC80
     *         Name   -> Function /Script/AkAudio.AkComponent.PostAssociatedAkEventAndWaitForEndAsync
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         int32_t                                            PlayingID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::PostAssociatedAkEventAndWaitForEndAsync(int32_t* PlayingID, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.PostAssociatedAkEventAndWaitForEndAsync");
        
        UAkComponent_PostAssociatedAkEventAndWaitForEndAsync_Params params {};
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PlayingID != nullptr)
            *PlayingID = params.PlayingID;
    }

    /**
     * Function:
     *         RVA    -> 0x0271DF50
     *         Name   -> Function /Script/AkAudio.AkComponent.PostAssociatedAkEventAndWaitForEnd
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkComponent::PostAssociatedAkEventAndWaitForEnd(BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.PostAssociatedAkEventAndWaitForEnd");
        
        UAkComponent_PostAssociatedAkEventAndWaitForEnd_Params params {};
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271D4A0
     *         Name   -> Function /Script/AkAudio.AkComponent.PostAkEventByName
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                in_EventName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkComponent::PostAkEventByName(const BasicTypes::FString& in_EventName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.PostAkEventByName");
        
        UAkComponent_PostAkEventByName_Params params {};
        params.in_EventName = in_EventName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271D5B0
     *         Name   -> Function /Script/AkAudio.AkComponent.PostAkEventAndWaitForEndAsync
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PlayingID                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkComponent::PostAkEventAndWaitForEndAsync(AkAudio::UAkAudioEvent* AkEvent, int32_t* PlayingID, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.PostAkEventAndWaitForEndAsync");
        
        UAkComponent_PostAkEventAndWaitForEndAsync_Params params {};
        params.AkEvent = AkEvent;
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PlayingID != nullptr)
            *PlayingID = params.PlayingID;
    }

    /**
     * Function:
     *         RVA    -> 0x0271D910
     *         Name   -> Function /Script/AkAudio.AkComponent.PostAkEventAndWaitForEnd
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                in_EventName                                               (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAkComponent::PostAkEventAndWaitForEnd(AkAudio::UAkAudioEvent* AkEvent, const BasicTypes::FString& in_EventName, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.PostAkEventAndWaitForEnd");
        
        UAkComponent_PostAkEventAndWaitForEnd_Params params {};
        params.AkEvent = AkEvent;
        params.in_EventName = in_EventName;
        params.ExternalSources = ExternalSources;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0271C3F0
     *         Name   -> Function /Script/AkAudio.AkComponent.GetAttenuationRadius
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkComponent::GetAttenuationRadius()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkComponent.GetAttenuationRadius");
        
        UAkComponent_GetAttenuationRadius_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027364E0
     *         Name   -> Function /Script/AkAudio.AkPS4InitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkPS4InitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkPS4InitializationSettings.MigrateMultiCoreRendering");
        
        UAkPS4InitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02738C50
     *         Name   -> Function /Script/AkAudio.AkRoomComponent.SetGeometryComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AkAudio::UAkAcousticTextureSetComponent*           textureSetComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkRoomComponent::SetGeometryComponent(AkAudio::UAkAcousticTextureSetComponent* textureSetComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkRoomComponent.SetGeometryComponent");
        
        UAkRoomComponent_SetGeometryComponent_Params params {};
        params.textureSetComponent = textureSetComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02738E80
     *         Name   -> Function /Script/AkAudio.AkRoomComponent.GetPrimitiveParent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UPrimitiveComponent*                       ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UPrimitiveComponent* UAkRoomComponent::GetPrimitiveParent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkRoomComponent.GetPrimitiveParent");
        
        UAkRoomComponent_GetPrimitiveParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027340E0
     *         Name   -> Function /Script/AkAudio.AkWwiseTree.SetSearchText
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                newText                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkWwiseTree::SetSearchText(const BasicTypes::FString& newText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWwiseTree.SetSearchText");
        
        UAkWwiseTree_SetSearchText_Params params {};
        params.newText = newText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02742CD0
     *         Name   -> Function /Script/AkAudio.AkWwiseTree.GetSelectedItem
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AkAudio::FAkWwiseObjectDetails                     ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AkAudio::FAkWwiseObjectDetails UAkWwiseTree::GetSelectedItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWwiseTree.GetSelectedItem");
        
        UAkWwiseTree_GetSelectedItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027341E0
     *         Name   -> Function /Script/AkAudio.AkWwiseTree.GetSearchText
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkWwiseTree::GetSearchText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWwiseTree.GetSearchText");
        
        UAkWwiseTree_GetSearchText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkXboxOneGDKInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkXboxOneGDKInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkXboxOneGDKInitializationSettings.MigrateMultiCoreRendering");
        
        UAkXboxOneGDKInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02747EC0
     *         Name   -> Function /Script/AkAudio.PostEventAsync.PostEventAsync
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            CallbackMask                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        PostEventCallback                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UPostEventAsync*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UPostEventAsync* UPostEventAsync::STATIC_PostEventAsync(CoreUObject::UObject* WorldContextObject, AkAudio::UAkAudioEvent* AkEvent, Engine::AActor* Actor, int32_t CallbackMask, const BasicTypes::UScriptDelegate& PostEventCallback, BasicTypes::TArray<AkAudio::FAkExternalSourceInfo> ExternalSources, bool bStopWhenAttachedToDestroyed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.PostEventAsync.PostEventAsync");
        
        UPostEventAsync_PostEventAsync_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AkEvent = AkEvent;
        params.Actor = Actor;
        params.CallbackMask = CallbackMask;
        params.PostEventCallback = PostEventCallback;
        params.ExternalSources = ExternalSources;
        params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02747EA0
     *         Name   -> Function /Script/AkAudio.PostEventAsync.PollPostEventFuture
     *         Flags  -> (Final, Native, Private)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UPostEventAsync::PollPostEventFuture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.PostEventAsync.PollPostEventFuture");
        
        UPostEventAsync_PollPostEventFuture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027487A0
     *         Name   -> Function /Script/AkAudio.PostEventAtLocationAsync.PostEventAtLocationAsync
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AkAudio::UAkAudioEvent*                            AkEvent                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Orientation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         AkAudio::UPostEventAtLocationAsync*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::UPostEventAtLocationAsync* UPostEventAtLocationAsync::STATIC_PostEventAtLocationAsync(CoreUObject::UObject* WorldContextObject, AkAudio::UAkAudioEvent* AkEvent, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Orientation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.PostEventAtLocationAsync.PostEventAtLocationAsync");
        
        UPostEventAtLocationAsync_PostEventAtLocationAsync_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AkEvent = AkEvent;
        params.Location = Location;
        params.Orientation = Orientation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02748780
     *         Name   -> Function /Script/AkAudio.PostEventAtLocationAsync.PollPostEventFuture
     *         Flags  -> (Final, Native, Private)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UPostEventAtLocationAsync::PollPostEventFuture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.PostEventAtLocationAsync.PollPostEventFuture");
        
        UPostEventAtLocationAsync_PollPostEventFuture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkWinGDKInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkWinGDKInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkWinGDKInitializationSettings.MigrateMultiCoreRendering");
        
        UAkWinGDKInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273A690
     *         Name   -> Function /Script/AkAudio.AkSlider.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetValue(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetValue");
        
        UAkSlider_SetValue_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273A270
     *         Name   -> Function /Script/AkAudio.AkSlider.SetStepSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetStepSize(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetStepSize");
        
        UAkSlider_SetStepSize_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02739FB0
     *         Name   -> Function /Script/AkAudio.AkSlider.SetSliderHandleColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetSliderHandleColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetSliderHandleColor");
        
        UAkSlider_SetSliderHandleColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273A110
     *         Name   -> Function /Script/AkAudio.AkSlider.SetSliderBarColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetSliderBarColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetSliderBarColor");
        
        UAkSlider_SetSliderBarColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273A3D0
     *         Name   -> Function /Script/AkAudio.AkSlider.SetLocked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetLocked(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetLocked");
        
        UAkSlider_SetLocked_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273A530
     *         Name   -> Function /Script/AkAudio.AkSlider.SetIndentHandle
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetIndentHandle(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetIndentHandle");
        
        UAkSlider_SetIndentHandle_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02739C40
     *         Name   -> Function /Script/AkAudio.AkSlider.SetAkSliderItemProperty
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ItemProperty                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetAkSliderItemProperty(const BasicTypes::FString& ItemProperty)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetAkSliderItemProperty");
        
        UAkSlider_SetAkSliderItemProperty_Params params {};
        params.ItemProperty = ItemProperty;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02739EC0
     *         Name   -> Function /Script/AkAudio.AkSlider.SetAkSliderItemId
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FGuid                                 ItemId                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSlider::SetAkSliderItemId(const CoreUObject::FGuid& ItemId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.SetAkSliderItemId");
        
        UAkSlider_SetAkSliderItemId_Params params {};
        params.ItemId = ItemId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273A780
     *         Name   -> Function /Script/AkAudio.AkSlider.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAkSlider::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.GetValue");
        
        UAkSlider_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02739B80
     *         Name   -> Function /Script/AkAudio.AkSlider.GetAkSliderItemProperty
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAkSlider::GetAkSliderItemProperty()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.GetAkSliderItemProperty");
        
        UAkSlider_GetAkSliderItemProperty_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02739E50
     *         Name   -> Function /Script/AkAudio.AkSlider.GetAkSliderItemId
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FGuid                                 ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FGuid UAkSlider::GetAkSliderItemId()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSlider.GetAkSliderItemId");
        
        UAkSlider_GetAkSliderItemId_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0273B4D0
     *         Name   -> Function /Script/AkAudio.AkSurfaceReflectorSetComponent.UpdateSurfaceReflectorSet
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkSurfaceReflectorSetComponent::UpdateSurfaceReflectorSet()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSurfaceReflectorSetComponent.UpdateSurfaceReflectorSet");
        
        UAkSurfaceReflectorSetComponent_UpdateSurfaceReflectorSet_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0273B510
     *         Name   -> Function /Script/AkAudio.AkSurfaceReflectorSetComponent.SendSurfaceReflectorSet
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkSurfaceReflectorSetComponent::SendSurfaceReflectorSet()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSurfaceReflectorSetComponent.SendSurfaceReflectorSet");
        
        UAkSurfaceReflectorSetComponent_SendSurfaceReflectorSet_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02730500
     *         Name   -> Function /Script/AkAudio.AkSurfaceReflectorSetComponent.RemoveSurfaceReflectorSet
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkSurfaceReflectorSetComponent::RemoveSurfaceReflectorSet()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSurfaceReflectorSetComponent.RemoveSurfaceReflectorSet");
        
        UAkSurfaceReflectorSetComponent_RemoveSurfaceReflectorSet_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkSwitchInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkSwitchInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkSwitchInitializationSettings.MigrateMultiCoreRendering");
        
        UAkSwitchInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkXboxOneInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkXboxOneInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkXboxOneInitializationSettings.MigrateMultiCoreRendering");
        
        UAkXboxOneInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02719040
     *         Name   -> Function /Script/AkAudio.AkXSXInitializationSettings.MigrateMultiCoreRendering
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAkXSXInitializationSettings::MigrateMultiCoreRendering(bool NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkXSXInitializationSettings.MigrateMultiCoreRendering");
        
        UAkXSXInitializationSettings_MigrateMultiCoreRendering_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02718000
     *         Name   -> Function /Script/AkAudio.AkPortalComponent.PortalPlacementValid
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAkPortalComponent::PortalPlacementValid()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkPortalComponent.PortalPlacementValid");
        
        UAkPortalComponent_PortalPlacementValid_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x027180D0
     *         Name   -> Function /Script/AkAudio.AkPortalComponent.OpenPortal
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkPortalComponent::OpenPortal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkPortalComponent.OpenPortal");
        
        UAkPortalComponent_OpenPortal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4980
     *         Name   -> Function /Script/AkAudio.AkPortalComponent.GetPrimitiveParent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UPrimitiveComponent*                       ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UPrimitiveComponent* UAkPortalComponent::GetPrimitiveParent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkPortalComponent.GetPrimitiveParent");
        
        UAkPortalComponent_GetPrimitiveParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02718060
     *         Name   -> Function /Script/AkAudio.AkPortalComponent.GetCurrentState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AkAudio::EAkAcousticPortalState                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::EAkAcousticPortalState UAkPortalComponent::GetCurrentState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkPortalComponent.GetCurrentState");
        
        UAkPortalComponent_GetCurrentState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02718080
     *         Name   -> Function /Script/AkAudio.AkPortalComponent.ClosePortal
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAkPortalComponent::ClosePortal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkPortalComponent.ClosePortal");
        
        UAkPortalComponent_ClosePortal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02718460
     *         Name   -> Function /Script/AkAudio.AkAcousticPortal.OpenPortal
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AAkAcousticPortal::OpenPortal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAcousticPortal.OpenPortal");
        
        AAkAcousticPortal_OpenPortal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x027183C0
     *         Name   -> Function /Script/AkAudio.AkAcousticPortal.GetCurrentState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AkAudio::EAkAcousticPortalState                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AkAudio::EAkAcousticPortalState AAkAcousticPortal::GetCurrentState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAcousticPortal.GetCurrentState");
        
        AAkAcousticPortal_GetCurrentState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02718400
     *         Name   -> Function /Script/AkAudio.AkAcousticPortal.ClosePortal
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AAkAcousticPortal::ClosePortal()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AkAudio.AkAcousticPortal.ClosePortal");
        
        AAkAcousticPortal_ClosePortal_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
