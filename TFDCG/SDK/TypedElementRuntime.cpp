/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/TypedElementRuntime_ENUMS.h"
#include "Headers/TypedElementRuntime_PARAMS.h"
#include "Headers/TypedElementRuntime_UTypedElementSelectionSetLibrary.h"
#include "Headers/TypedElementRuntime_UTypedElementSelectionSet.h"
#include "Headers/TypedElementRuntime_ITypedElementAssetDataInterface.h"
#include "Headers/TypedElementRuntime_ITypedElementHierarchyInterface.h"
#include "Headers/TypedElementRuntime_ITypedElementObjectInterface.h"
#include "Headers/TypedElementRuntime_ITypedElementSelectionInterface.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TypedElementRuntime
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x053B8480
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.SetSelectionFromList
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy ElementList                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions SelectionOptions                                           (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSetLibrary::STATIC_SetSelectionFromList(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementRuntime::FTypedElementSelectionOptions& SelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.SetSelectionFromList");
        
        UTypedElementSelectionSetLibrary_SetSelectionFromList_Params params {};
        params.SelectionSet = SelectionSet;
        params.ElementList = ElementList;
        params.SelectionOptions = SelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053B89C0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.SelectElementsFromList
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy ElementList                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions SelectionOptions                                           (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSetLibrary::STATIC_SelectElementsFromList(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementRuntime::FTypedElementSelectionOptions& SelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.SelectElementsFromList");
        
        UTypedElementSelectionSetLibrary_SelectElementsFromList_Params params {};
        params.SelectionSet = SelectionSet;
        params.ElementList = ElementList;
        params.SelectionOptions = SelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053B82A0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.GetNormalizedSelection
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionNormalizationOptions NormalizationOptions                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    TypedElementFramework::FScriptTypedElementListProxy UTypedElementSelectionSetLibrary::STATIC_GetNormalizedSelection(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, const TypedElementRuntime::FTypedElementSelectionNormalizationOptions& NormalizationOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.GetNormalizedSelection");
        
        UTypedElementSelectionSetLibrary_GetNormalizedSelection_Params params {};
        params.SelectionSet = SelectionSet;
        params.NormalizationOptions = NormalizationOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053B7FD0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.GetNormalizedElementList
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy ElementList                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionNormalizationOptions NormalizationOptions                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    TypedElementFramework::FScriptTypedElementListProxy UTypedElementSelectionSetLibrary::STATIC_GetNormalizedElementList(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementRuntime::FTypedElementSelectionNormalizationOptions& NormalizationOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.GetNormalizedElementList");
        
        UTypedElementSelectionSetLibrary_GetNormalizedElementList_Params params {};
        params.SelectionSet = SelectionSet;
        params.ElementList = ElementList;
        params.NormalizationOptions = NormalizationOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053B8720
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.DeselectElementsFromList
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy ElementList                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions SelectionOptions                                           (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSetLibrary::STATIC_DeselectElementsFromList(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementRuntime::FTypedElementSelectionOptions& SelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSetLibrary.DeselectElementsFromList");
        
        UTypedElementSelectionSetLibrary_DeselectElementsFromList_Params params {};
        params.SelectionSet = SelectionSet;
        params.ElementList = ElementList;
        params.SelectionOptions = SelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BA480
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.SetSelection
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> InElementHandles                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::SetSelection(BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> InElementHandles, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.SetSelection");
        
        UTypedElementSelectionSet_SetSelection_Params params {};
        params.InElementHandles = InElementHandles;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BAC40
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.SelectElements
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> InElementHandles                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::SelectElements(BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> InElementHandles, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.SelectElements");
        
        UTypedElementSelectionSet_SelectElements_Params params {};
        params.InElementHandles = InElementHandles;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BAE80
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.SelectElement
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::SelectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.SelectElement");
        
        UTypedElementSelectionSet_SelectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BB9A0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.RestoreSelectionState
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementRuntime::FTypedElementSelectionSetState InSelectionState                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTypedElementSelectionSet::RestoreSelectionState(const TypedElementRuntime::FTypedElementSelectionSetState& InSelectionState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.RestoreSelectionState");
        
        UTypedElementSelectionSet_RestoreSelectionState_Params params {};
        params.InSelectionState = InSelectionState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/TypedElementRuntime.TypedElementSelectionSet.OnPreChangeDynamic__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTypedElementSelectionSet::OnPreChangeDynamic__DelegateSignature(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/TypedElementRuntime.TypedElementSelectionSet.OnPreChangeDynamic__DelegateSignature");
        
        UTypedElementSelectionSet_OnPreChangeDynamic__DelegateSignature_Params params {};
        params.SelectionSet = SelectionSet;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/TypedElementRuntime.TypedElementSelectionSet.OnChangeDynamic__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         TypedElementRuntime::UTypedElementSelectionSet*    SelectionSet                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTypedElementSelectionSet::OnChangeDynamic__DelegateSignature(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/TypedElementRuntime.TypedElementSelectionSet.OnChangeDynamic__DelegateSignature");
        
        UTypedElementSelectionSet_OnChangeDynamic__DelegateSignature_Params params {};
        params.SelectionSet = SelectionSet;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053B9CC0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.K2_GetSelectedElementHandles
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::IInterface*                           InBaseInterfaceType                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> UTypedElementSelectionSet::K2_GetSelectedElementHandles(CoreUObject::IInterface* InBaseInterfaceType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.K2_GetSelectedElementHandles");
        
        UTypedElementSelectionSet_K2_GetSelectedElementHandles_Params params {};
        params.InBaseInterfaceType = InBaseInterfaceType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BB720
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.IsElementSelected
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementIsSelectedOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::IsElementSelected(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementIsSelectedOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.IsElementSelected");
        
        UTypedElementSelectionSet_IsElementSelected_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BC360
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.HasSelectedObjects
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::UObject*                              InRequiredClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::HasSelectedObjects(CoreUObject::UObject* InRequiredClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.HasSelectedObjects");
        
        UTypedElementSelectionSet_HasSelectedObjects_Params params {};
        params.InRequiredClass = InRequiredClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BC810
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.HasSelectedElements
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::IInterface*                           InBaseInterfaceType                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::HasSelectedElements(CoreUObject::IInterface* InBaseInterfaceType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.HasSelectedElements");
        
        UTypedElementSelectionSet_HasSelectedElements_Params params {};
        params.InBaseInterfaceType = InBaseInterfaceType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BBDF0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetTopSelectedObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              InRequiredClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UTypedElementSelectionSet::GetTopSelectedObject(CoreUObject::UObject* InRequiredClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetTopSelectedObject");
        
        UTypedElementSelectionSet_GetTopSelectedObject_Params params {};
        params.InRequiredClass = InRequiredClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BA080
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetSelectionElement
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::ETypedElementSelectionMethod  InSelectionMethod                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementHandle   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    TypedElementFramework::FScriptTypedElementHandle UTypedElementSelectionSet::GetSelectionElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, TypedElementRuntime::ETypedElementSelectionMethod InSelectionMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetSelectionElement");
        
        UTypedElementSelectionSet_GetSelectionElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionMethod = InSelectionMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BBF50
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetSelectedObjects
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::UObject*                              InRequiredClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::UObject*>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::UObject*> UTypedElementSelectionSet::GetSelectedObjects(CoreUObject::UObject* InRequiredClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetSelectedObjects");
        
        UTypedElementSelectionSet_GetSelectedObjects_Params params {};
        params.InRequiredClass = InRequiredClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BCAC0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetNumSelectedElements
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTypedElementSelectionSet::GetNumSelectedElements()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetNumSelectedElements");
        
        UTypedElementSelectionSet_GetNumSelectedElements_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BBAD0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetCurrentSelectionState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TypedElementRuntime::FTypedElementSelectionSetState ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    TypedElementRuntime::FTypedElementSelectionSetState UTypedElementSelectionSet::GetCurrentSelectionState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetCurrentSelectionState");
        
        UTypedElementSelectionSet_GetCurrentSelectionState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BBC90
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetBottomSelectedObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              InRequiredClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UTypedElementSelectionSet::GetBottomSelectedObject(CoreUObject::UObject* InRequiredClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.GetBottomSelectedObject");
        
        UTypedElementSelectionSet_GetBottomSelectedObject_Params params {};
        params.InRequiredClass = InRequiredClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BA6C0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.DeselectElements
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> InElementHandles                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::DeselectElements(BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> InElementHandles, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.DeselectElements");
        
        UTypedElementSelectionSet_DeselectElements_Params params {};
        params.InElementHandles = InElementHandles;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BA9A0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.DeselectElement
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::DeselectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.DeselectElement");
        
        UTypedElementSelectionSet_DeselectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BC170
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.CountSelectedObjects
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::UObject*                              InRequiredClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTypedElementSelectionSet::CountSelectedObjects(CoreUObject::UObject* InRequiredClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.CountSelectedObjects");
        
        UTypedElementSelectionSet_CountSelectedObjects_Params params {};
        params.InRequiredClass = InRequiredClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BC550
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.CountSelectedElements
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::IInterface*                           InBaseInterfaceType                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTypedElementSelectionSet::CountSelectedElements(CoreUObject::IInterface* InBaseInterfaceType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.CountSelectedElements");
        
        UTypedElementSelectionSet_CountSelectedElements_Params params {};
        params.InBaseInterfaceType = InBaseInterfaceType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BCAF0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.ClearSelection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::ClearSelection(const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.ClearSelection");
        
        UTypedElementSelectionSet_ClearSelection_Params params {};
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BB420
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.CanSelectElement
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::CanSelectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.CanSelectElement");
        
        UTypedElementSelectionSet_CanSelectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BB120
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.CanDeselectElement
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::CanDeselectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.CanDeselectElement");
        
        UTypedElementSelectionSet_CanDeselectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053BA2D0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionSet.AllowSelectionModifiers
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTypedElementSelectionSet::AllowSelectionModifiers(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionSet.AllowSelectionModifiers");
        
        UTypedElementSelectionSet_AllowSelectionModifiers_Params params {};
        params.InElementHandle = InElementHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C0420
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementAssetDataInterface.GetAssetData
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FAssetData                            ReturnValue                                                (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FAssetData ITypedElementAssetDataInterface::GetAssetData(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementAssetDataInterface.GetAssetData");
        
        ITypedElementAssetDataInterface_GetAssetData_Params params {};
        params.InElementHandle = InElementHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C0720
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementAssetDataInterface.GetAllReferencedAssetDatas
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FAssetData> ITypedElementAssetDataInterface::GetAllReferencedAssetDatas(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementAssetDataInterface.GetAllReferencedAssetDatas");
        
        ITypedElementAssetDataInterface_GetAllReferencedAssetDatas_Params params {};
        params.InElementHandle = InElementHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C0EF0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementHierarchyInterface.GetParentElement
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bAllowCreate                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementHandle   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    TypedElementFramework::FScriptTypedElementHandle ITypedElementHierarchyInterface::GetParentElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, bool bAllowCreate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementHierarchyInterface.GetParentElement");
        
        ITypedElementHierarchyInterface_GetParentElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.bAllowCreate = bAllowCreate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C0BF0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementHierarchyInterface.GetChildElements
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> OutElementHandles                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bAllowCreate                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ITypedElementHierarchyInterface::GetChildElements(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle>* OutElementHandles, bool bAllowCreate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementHierarchyInterface.GetChildElements");
        
        ITypedElementHierarchyInterface_GetChildElements_Params params {};
        params.InElementHandle = InElementHandle;
        params.bAllowCreate = bAllowCreate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutElementHandles != nullptr)
            *OutElementHandles = params.OutElementHandles;
    }

    /**
     * Function:
     *         RVA    -> 0x053C14C0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementObjectInterface.GetObjectClass
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* ITypedElementObjectInterface::GetObjectClass(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementObjectInterface.GetObjectClass");
        
        ITypedElementObjectInterface_GetObjectClass_Params params {};
        params.InElementHandle = InElementHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C1640
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementObjectInterface.GetObject
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* ITypedElementObjectInterface::GetObject(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementObjectInterface.GetObject");
        
        ITypedElementObjectInterface_GetObject_Params params {};
        params.InElementHandle = InElementHandle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C27D0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.SelectElement
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy InSelectionSet                                             (Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ITypedElementSelectionInterface::SelectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementFramework::FScriptTypedElementListProxy& InSelectionSet, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.SelectElement");
        
        ITypedElementSelectionInterface_SelectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionSet = InSelectionSet;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C2F70
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.IsElementSelected
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy InSelectionSet                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementIsSelectedOptions InSelectionOptions                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ITypedElementSelectionInterface::IsElementSelected(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementFramework::FScriptTypedElementListProxy& InSelectionSet, const TypedElementRuntime::FTypedElementIsSelectedOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.IsElementSelected");
        
        ITypedElementSelectionInterface_IsElementSelected_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionSet = InSelectionSet;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C1EB0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.GetSelectionElement
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy InCurrentSelection                                         (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::ETypedElementSelectionMethod  InSelectionMethod                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementHandle   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    TypedElementFramework::FScriptTypedElementHandle ITypedElementSelectionInterface::GetSelectionElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementFramework::FScriptTypedElementListProxy& InCurrentSelection, TypedElementRuntime::ETypedElementSelectionMethod InSelectionMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.GetSelectionElement");
        
        ITypedElementSelectionInterface_GetSelectionElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InCurrentSelection = InCurrentSelection;
        params.InSelectionMethod = InSelectionMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C24B0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.DeselectElement
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy InSelectionSet                                             (Parm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ITypedElementSelectionInterface::DeselectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementFramework::FScriptTypedElementListProxy& InSelectionSet, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.DeselectElement");
        
        ITypedElementSelectionInterface_DeselectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionSet = InSelectionSet;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C2D30
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.CanSelectElement
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ITypedElementSelectionInterface::CanSelectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.CanSelectElement");
        
        ITypedElementSelectionInterface_CanSelectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C2AF0
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.CanDeselectElement
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementRuntime::FTypedElementSelectionOptions InSelectionOptions                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ITypedElementSelectionInterface::CanDeselectElement(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementRuntime::FTypedElementSelectionOptions& InSelectionOptions)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.CanDeselectElement");
        
        ITypedElementSelectionInterface_CanDeselectElement_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionOptions = InSelectionOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053C2210
     *         Name   -> Function /Script/TypedElementRuntime.TypedElementSelectionInterface.AllowSelectionModifiers
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         TypedElementFramework::FScriptTypedElementHandle   InElementHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         TypedElementFramework::FScriptTypedElementListProxy InSelectionSet                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ITypedElementSelectionInterface::AllowSelectionModifiers(const TypedElementFramework::FScriptTypedElementHandle& InElementHandle, const TypedElementFramework::FScriptTypedElementListProxy& InSelectionSet)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TypedElementRuntime.TypedElementSelectionInterface.AllowSelectionModifiers");
        
        ITypedElementSelectionInterface_AllowSelectionModifiers_Params params {};
        params.InElementHandle = InElementHandle;
        params.InSelectionSet = InSelectionSet;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
