/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/NavigationSystem_ENUMS.h"
#include "Headers/NavigationSystem_PARAMS.h"
#include "Headers/NavigationSystem_UNavRelevantComponent.h"
#include "Headers/NavigationSystem_UNavModifierComponent.h"
#include "Headers/NavigationSystem_UNavArea.h"
#include "Headers/NavigationSystem_UNavArea_Default.h"
#include "Headers/NavigationSystem_ANavModifierVolume.h"
#include "Headers/NavigationSystem_ANavigationTestingActor.h"
#include "Headers/NavigationSystem_UNavLinkCustomComponent.h"
#include "Headers/NavigationSystem_UNavigationQueryFilter.h"
#include "Headers/NavigationSystem_ANavigationData.h"
#include "Headers/NavigationSystem_ARecastNavMesh.h"
#include "Headers/NavigationSystem_UCrowdManagerBase.h"
#include "Headers/NavigationSystem_ANavigationGraphNode.h"
#include "Headers/NavigationSystem_UNavigationGraphNodeComponent.h"
#include "Headers/NavigationSystem_INavigationPathGenerator.h"
#include "Headers/NavigationSystem_INavLinkCustomInterface.h"
#include "Headers/NavigationSystem_INavLinkHostInterface.h"
#include "Headers/NavigationSystem_UNavLinkTrivial.h"
#include "Headers/NavigationSystem_INavNodeInterface.h"
#include "Headers/NavigationSystem_AAbstractNavData.h"
#include "Headers/NavigationSystem_UNavAreaMeta.h"
#include "Headers/NavigationSystem_UNavAreaMeta_SwitchByAgent.h"
#include "Headers/NavigationSystem_UNavArea_LowHeight.h"
#include "Headers/NavigationSystem_UNavArea_Null.h"
#include "Headers/NavigationSystem_UNavArea_Obstacle.h"
#include "Headers/NavigationSystem_UNavCollision.h"
#include "Headers/NavigationSystem_URecastFilter_UseDefaultArea.h"
#include "Headers/NavigationSystem_ANavigationGraph.h"
#include "Headers/NavigationSystem_UNavigationInvokerComponent.h"
#include "Headers/NavigationSystem_UNavigationPath.h"
#include "Headers/NavigationSystem_UNavigationSystemV1.h"
#include "Headers/NavigationSystem_UNavigationSystemModuleConfig.h"
#include "Headers/NavigationSystem_UNavLinkComponent.h"
#include "Headers/NavigationSystem_UNavLinkRenderingComponent.h"
#include "Headers/NavigationSystem_ANavMeshBoundsVolume.h"
#include "Headers/NavigationSystem_UNavMeshRenderingComponent.h"
#include "Headers/NavigationSystem_UNavTestRenderingComponent.h"
#include "Headers/NavigationSystem_URecastNavMeshDataChunk.h"
#include "Headers/NavigationSystem_ANavSystemConfigOverride.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::NavigationSystem
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x06393D40
     *         Name   -> Function /Script/NavigationSystem.NavRelevantComponent.SetNavigationRelevancy
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bRelevant                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavRelevantComponent::SetNavigationRelevancy(bool bRelevant)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavRelevantComponent.SetNavigationRelevancy");
        
        UNavRelevantComponent_SetNavigationRelevancy_Params params {};
        params.bRelevant = bRelevant;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x063911A0
     *         Name   -> Function /Script/NavigationSystem.NavModifierComponent.SetAreaClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         NavigationSystem::UNavArea*                        NewAreaClass                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavModifierComponent::SetAreaClass(NavigationSystem::UNavArea* NewAreaClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavModifierComponent.SetAreaClass");
        
        UNavModifierComponent_SetAreaClass_Params params {};
        params.NewAreaClass = NewAreaClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x063935D0
     *         Name   -> Function /Script/NavigationSystem.NavModifierVolume.SetAreaClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         NavigationSystem::UNavArea*                        NewAreaClass                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ANavModifierVolume::SetAreaClass(NavigationSystem::UNavArea* NewAreaClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavModifierVolume.SetAreaClass");
        
        ANavModifierVolume_SetAreaClass_Params params {};
        params.NewAreaClass = NewAreaClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0636A9E0
     *         Name   -> Function /Script/NavigationSystem.RecastNavMesh.K2_ReplaceAreaInTileBounds
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FBox                                  Bounds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavArea*                        OldArea                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavArea*                        NewArea                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReplaceLinks                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ARecastNavMesh::K2_ReplaceAreaInTileBounds(const CoreUObject::FBox& Bounds, NavigationSystem::UNavArea* OldArea, NavigationSystem::UNavArea* NewArea, bool ReplaceLinks)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.RecastNavMesh.K2_ReplaceAreaInTileBounds");
        
        ARecastNavMesh_K2_ReplaceAreaInTileBounds_Params params {};
        params.Bounds = Bounds;
        params.OldArea = OldArea;
        params.NewArea = NewArea;
        params.ReplaceLinks = ReplaceLinks;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063315A0
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.IsValid
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationPath::IsValid()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.IsValid");
        
        UNavigationPath_IsValid_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272B1B0
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.IsStringPulled
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationPath::IsStringPulled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.IsStringPulled");
        
        UNavigationPath_IsStringPulled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063315C0
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.IsPartial
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationPath::IsPartial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.IsPartial");
        
        UNavigationPath_IsPartial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06331660
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.GetPathLength
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         double                                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    double UNavigationPath::GetPathLength()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.GetPathLength");
        
        UNavigationPath_GetPathLength_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06331600
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.GetPathCost
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         double                                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    double UNavigationPath::GetPathCost()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.GetPathCost");
        
        UNavigationPath_GetPathCost_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063319A0
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.GetDebugString
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UNavigationPath::GetDebugString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.GetDebugString");
        
        UNavigationPath_GetDebugString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063316F0
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.EnableRecalculationOnInvalidation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ENavigationOptionFlag                      DoRecalculation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationPath::EnableRecalculationOnInvalidation(Engine::ENavigationOptionFlag DoRecalculation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.EnableRecalculationOnInvalidation");
        
        UNavigationPath_EnableRecalculationOnInvalidation_Params params {};
        params.DoRecalculation = DoRecalculation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06331810
     *         Name   -> Function /Script/NavigationSystem.NavigationPath.EnableDebugDrawing
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         bool                                               bShouldDrawDebugData                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          PathColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationPath::EnableDebugDrawing(bool bShouldDrawDebugData, const CoreUObject::FLinearColor& PathColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationPath.EnableDebugDrawing");
        
        UNavigationPath_EnableDebugDrawing_Params params {};
        params.bShouldDrawDebugData = bShouldDrawDebugData;
        params.PathColor = PathColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334760
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.UnregisterNavigationInvoker
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Invoker                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationSystemV1::UnregisterNavigationInvoker(Engine::AActor* Invoker)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.UnregisterNavigationInvoker");
        
        UNavigationSystemV1_UnregisterNavigationInvoker_Params params {};
        params.Invoker = Invoker;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334B90
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.SetMaxSimultaneousTileGenerationJobsCount
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            MaxNumberOfJobs                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationSystemV1::SetMaxSimultaneousTileGenerationJobsCount(int32_t MaxNumberOfJobs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.SetMaxSimultaneousTileGenerationJobsCount");
        
        UNavigationSystemV1_SetMaxSimultaneousTileGenerationJobsCount_Params params {};
        params.MaxNumberOfJobs = MaxNumberOfJobs;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334660
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.SetGeometryGatheringMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ENavDataGatheringModeConfig                NewMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationSystemV1::SetGeometryGatheringMode(Engine::ENavDataGatheringModeConfig NewMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.SetGeometryGatheringMode");
        
        UNavigationSystemV1_SetGeometryGatheringMode_Params params {};
        params.NewMode = NewMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334AA0
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.ResetMaxSimultaneousTileGenerationJobsCount
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UNavigationSystemV1::ResetMaxSimultaneousTileGenerationJobsCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.ResetMaxSimultaneousTileGenerationJobsCount");
        
        UNavigationSystemV1_ResetMaxSimultaneousTileGenerationJobsCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334850
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.RegisterNavigationInvoker
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Invoker                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TileGenerationRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TileRemovalRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationSystemV1::RegisterNavigationInvoker(Engine::AActor* Invoker, float TileGenerationRadius, float TileRemovalRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.RegisterNavigationInvoker");
        
        UNavigationSystemV1_RegisterNavigationInvoker_Params params {};
        params.Invoker = Invoker;
        params.TileGenerationRadius = TileGenerationRadius;
        params.TileRemovalRadius = TileRemovalRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334270
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.OnNavigationBoundsUpdated
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         NavigationSystem::ANavMeshBoundsVolume*            NavVolume                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavigationSystemV1::OnNavigationBoundsUpdated(NavigationSystem::ANavMeshBoundsVolume* NavVolume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.OnNavigationBoundsUpdated");
        
        UNavigationSystemV1_OnNavigationBoundsUpdated_Params params {};
        params.NavVolume = NavVolume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06334D00
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.NavigationRaycast
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RayStart                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RayEnd                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               HitLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AController*                               Querier                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_NavigationRaycast(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& RayStart, const CoreUObject::FVector& RayEnd, CoreUObject::FVector* HitLocation, NavigationSystem::UNavigationQueryFilter* FilterClass, Engine::AController* Querier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.NavigationRaycast");
        
        UNavigationSystemV1_NavigationRaycast_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.RayStart = RayStart;
        params.RayEnd = RayEnd;
        params.FilterClass = FilterClass;
        params.Querier = Querier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (HitLocation != nullptr)
            *HitLocation = params.HitLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063343F0
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.K2_ReplaceAreaInOctreeData
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Object                                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavArea*                        OldArea                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavArea*                        NewArea                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::K2_ReplaceAreaInOctreeData(CoreUObject::UObject* Object, NavigationSystem::UNavArea* OldArea, NavigationSystem::UNavArea* NewArea)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.K2_ReplaceAreaInOctreeData");
        
        UNavigationSystemV1_K2_ReplaceAreaInOctreeData_Params params {};
        params.Object = Object;
        params.OldArea = OldArea;
        params.NewArea = NewArea;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06336E40
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.K2_ProjectPointToNavigation
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Point                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ProjectedLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               QueryExtent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_K2_ProjectPointToNavigation(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Point, CoreUObject::FVector* ProjectedLocation, NavigationSystem::ANavigationData* NavData, NavigationSystem::UNavigationQueryFilter* FilterClass, const CoreUObject::FVector& QueryExtent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.K2_ProjectPointToNavigation");
        
        UNavigationSystemV1_K2_ProjectPointToNavigation_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Point = Point;
        params.NavData = NavData;
        params.FilterClass = FilterClass;
        params.QueryExtent = QueryExtent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ProjectedLocation != nullptr)
            *ProjectedLocation = params.ProjectedLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063368C0
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.K2_GetRandomReachablePointInRadius
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RandomLocation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_K2_GetRandomReachablePointInRadius(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Origin, CoreUObject::FVector* RandomLocation, float Radius, NavigationSystem::ANavigationData* NavData, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.K2_GetRandomReachablePointInRadius");
        
        UNavigationSystemV1_K2_GetRandomReachablePointInRadius_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Origin = Origin;
        params.Radius = Radius;
        params.NavData = NavData;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RandomLocation != nullptr)
            *RandomLocation = params.RandomLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06333CD0
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.K2_GetRandomPointInNavigableRadius
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RandomLocation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_K2_GetRandomPointInNavigableRadius(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Origin, CoreUObject::FVector* RandomLocation, float Radius, NavigationSystem::ANavigationData* NavData, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.K2_GetRandomPointInNavigableRadius");
        
        UNavigationSystemV1_K2_GetRandomPointInNavigableRadius_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Origin = Origin;
        params.Radius = Radius;
        params.NavData = NavData;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RandomLocation != nullptr)
            *RandomLocation = params.RandomLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06333CD0
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.K2_GetRandomLocationInNavigableRadius
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               RandomLocation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_K2_GetRandomLocationInNavigableRadius(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Origin, CoreUObject::FVector* RandomLocation, float Radius, NavigationSystem::ANavigationData* NavData, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.K2_GetRandomLocationInNavigableRadius");
        
        UNavigationSystemV1_K2_GetRandomLocationInNavigableRadius_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Origin = Origin;
        params.Radius = Radius;
        params.NavData = NavData;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RandomLocation != nullptr)
            *RandomLocation = params.RandomLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x063359C0
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.IsNavigationBeingBuiltOrLocked
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_IsNavigationBeingBuiltOrLocked(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.IsNavigationBeingBuiltOrLocked");
        
        UNavigationSystemV1_IsNavigationBeingBuiltOrLocked_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06335B90
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.IsNavigationBeingBuilt
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavigationSystemV1::STATIC_IsNavigationBeingBuilt(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.IsNavigationBeingBuilt");
        
        UNavigationSystemV1_IsNavigationBeingBuilt_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06335D60
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.GetPathLength
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathStart                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathEnd                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         double                                             PathLength                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ENavigationQueryResult                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ENavigationQueryResult UNavigationSystemV1::STATIC_GetPathLength(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& PathStart, const CoreUObject::FVector& PathEnd, double* PathLength, NavigationSystem::ANavigationData* NavData, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.GetPathLength");
        
        UNavigationSystemV1_GetPathLength_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PathStart = PathStart;
        params.PathEnd = PathEnd;
        params.NavData = NavData;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PathLength != nullptr)
            *PathLength = params.PathLength;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06336310
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.GetPathCost
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathStart                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathEnd                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         double                                             PathCost                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ENavigationQueryResult                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ENavigationQueryResult UNavigationSystemV1::STATIC_GetPathCost(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& PathStart, const CoreUObject::FVector& PathEnd, double* PathCost, NavigationSystem::ANavigationData* NavData, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.GetPathCost");
        
        UNavigationSystemV1_GetPathCost_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PathStart = PathStart;
        params.PathEnd = PathEnd;
        params.NavData = NavData;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PathCost != nullptr)
            *PathCost = params.PathCost;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06337360
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.GetNavigationSystem
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationSystemV1*             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    NavigationSystem::UNavigationSystemV1* UNavigationSystemV1::STATIC_GetNavigationSystem(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.GetNavigationSystem");
        
        UNavigationSystemV1_GetNavigationSystem_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06335660
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.FindPathToLocationSynchronously
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathStart                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathEnd                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    PathfindingContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationPath*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    NavigationSystem::UNavigationPath* UNavigationSystemV1::STATIC_FindPathToLocationSynchronously(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& PathStart, const CoreUObject::FVector& PathEnd, Engine::AActor* PathfindingContext, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.FindPathToLocationSynchronously");
        
        UNavigationSystemV1_FindPathToLocationSynchronously_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PathStart = PathStart;
        params.PathEnd = PathEnd;
        params.PathfindingContext = PathfindingContext;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06335120
     *         Name   -> Function /Script/NavigationSystem.NavigationSystemV1.FindPathToActorSynchronously
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               PathStart                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    GoalActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TetherDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    PathfindingContext                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationPath*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    NavigationSystem::UNavigationPath* UNavigationSystemV1::STATIC_FindPathToActorSynchronously(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& PathStart, Engine::AActor* GoalActor, float TetherDistance, Engine::AActor* PathfindingContext, NavigationSystem::UNavigationQueryFilter* FilterClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/NavigationSystem.NavigationSystemV1.FindPathToActorSynchronously");
        
        UNavigationSystemV1_FindPathToActorSynchronously_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PathStart = PathStart;
        params.GoalActor = GoalActor;
        params.TetherDistance = TetherDistance;
        params.PathfindingContext = PathfindingContext;
        params.FilterClass = FilterClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
