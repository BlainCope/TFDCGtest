/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/TemplateSequence_ENUMS.h"
#include "Headers/TemplateSequence_PARAMS.h"
#include "Headers/TemplateSequence_UTemplateSequence.h"
#include "Headers/TemplateSequence_UCameraAnimationSequence.h"
#include "Headers/TemplateSequence_UTemplateSequenceSection.h"
#include "Headers/TemplateSequence_USequenceCameraShakePattern.h"
#include "Headers/TemplateSequence_UTemplateSequenceSystem.h"
#include "Headers/TemplateSequence_UTemplateSequencePropertyScalingInstantiatorSystem.h"
#include "Headers/TemplateSequence_UTemplateSequencePropertyScalingEvaluatorSystem.h"
#include "Headers/TemplateSequence_ATemplateSequenceActor.h"
#include "Headers/TemplateSequence_USequenceCameraShakeTestUtil.h"
#include "Headers/TemplateSequence_UTemplateSequenceTrack.h"
#include "Headers/TemplateSequence_UCameraAnimationSequenceCameraStandIn.h"
#include "Headers/TemplateSequence_UCameraAnimationSequencePlayer.h"
#include "Headers/TemplateSequence_UCameraAnimationSpawnableSystem.h"
#include "Headers/TemplateSequence_UTemplateSequencePlayer.h"
#include "Headers/TemplateSequence_UCameraAnimationBoundObjectInstantiator.h"
#include "Headers/TemplateSequence_UCameraAnimationEntitySystemLinker.h"
#include "Headers/TemplateSequence_UCameraAnimationSequenceSubsystem.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TemplateSequence
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x015BEEF0
     *         Name   -> Function /Script/TemplateSequence.TemplateSequenceActor.SetSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         TemplateSequence::UTemplateSequence*               InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ATemplateSequenceActor::SetSequence(TemplateSequence::UTemplateSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.TemplateSequenceActor.SetSequence");
        
        ATemplateSequenceActor_SetSequence_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015BEBE0
     *         Name   -> Function /Script/TemplateSequence.TemplateSequenceActor.SetBinding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bOverridesDefault                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ATemplateSequenceActor::SetBinding(Engine::AActor* Actor, bool bOverridesDefault)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.TemplateSequenceActor.SetBinding");
        
        ATemplateSequenceActor_SetBinding_Params params {};
        params.Actor = Actor;
        params.bOverridesDefault = bOverridesDefault;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015BF0D0
     *         Name   -> Function /Script/TemplateSequence.TemplateSequenceActor.LoadSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TemplateSequence::UTemplateSequence*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    TemplateSequence::UTemplateSequence* ATemplateSequenceActor::LoadSequence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.TemplateSequenceActor.LoadSequence");
        
        ATemplateSequenceActor_LoadSequence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015BEEB0
     *         Name   -> Function /Script/TemplateSequence.TemplateSequenceActor.GetSequencePlayer
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TemplateSequence::UTemplateSequencePlayer*         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    TemplateSequence::UTemplateSequencePlayer* ATemplateSequenceActor::GetSequencePlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.TemplateSequenceActor.GetSequencePlayer");
        
        ATemplateSequenceActor_GetSequencePlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015BF150
     *         Name   -> Function /Script/TemplateSequence.TemplateSequenceActor.GetSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         TemplateSequence::UTemplateSequence*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    TemplateSequence::UTemplateSequence* ATemplateSequenceActor::GetSequence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.TemplateSequenceActor.GetSequence");
        
        ATemplateSequenceActor_GetSequence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015C1460
     *         Name   -> Function /Script/TemplateSequence.SequenceCameraShakeTestUtil.GetPostProcessBlendCache
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PPIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FPostProcessSettings                       OutPPSettings                                              (Parm, OutParm, NativeAccessSpecifierPublic)
     *         float                                              OutPPBlendWeight                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USequenceCameraShakeTestUtil::STATIC_GetPostProcessBlendCache(Engine::APlayerController* PlayerController, int32_t PPIndex, Engine::FPostProcessSettings* OutPPSettings, float* OutPPBlendWeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.SequenceCameraShakeTestUtil.GetPostProcessBlendCache");
        
        USequenceCameraShakeTestUtil_GetPostProcessBlendCache_Params params {};
        params.PlayerController = PlayerController;
        params.PPIndex = PPIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPPSettings != nullptr)
            *OutPPSettings = params.OutPPSettings;
        if (OutPPBlendWeight != nullptr)
            *OutPPBlendWeight = params.OutPPBlendWeight;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015C1790
     *         Name   -> Function /Script/TemplateSequence.SequenceCameraShakeTestUtil.GetLastFrameCameraCachePOV
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FMinimalViewInfo                           ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    Engine::FMinimalViewInfo USequenceCameraShakeTestUtil::STATIC_GetLastFrameCameraCachePOV(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.SequenceCameraShakeTestUtil.GetLastFrameCameraCachePOV");
        
        USequenceCameraShakeTestUtil_GetLastFrameCameraCachePOV_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015C18E0
     *         Name   -> Function /Script/TemplateSequence.SequenceCameraShakeTestUtil.GetCameraCachePOV
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FMinimalViewInfo                           ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    Engine::FMinimalViewInfo USequenceCameraShakeTestUtil::STATIC_GetCameraCachePOV(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.SequenceCameraShakeTestUtil.GetCameraCachePOV");
        
        USequenceCameraShakeTestUtil_GetCameraCachePOV_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015C0680
     *         Name   -> Function /Script/TemplateSequence.TemplateSequencePlayer.CreateTemplateSequencePlayer
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TemplateSequence::UTemplateSequence*               TemplateSequence                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneSequencePlaybackSettings    Settings                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         TemplateSequence::ATemplateSequenceActor*          OutActor                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         TemplateSequence::UTemplateSequencePlayer*         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    TemplateSequence::UTemplateSequencePlayer* UTemplateSequencePlayer::STATIC_CreateTemplateSequencePlayer(CoreUObject::UObject* WorldContextObject, TemplateSequence::UTemplateSequence* TemplateSequence, const MovieScene::FMovieSceneSequencePlaybackSettings& Settings, TemplateSequence::ATemplateSequenceActor** OutActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TemplateSequence.TemplateSequencePlayer.CreateTemplateSequencePlayer");
        
        UTemplateSequencePlayer_CreateTemplateSequencePlayer_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.TemplateSequence = TemplateSequence;
        params.Settings = Settings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActor != nullptr)
            *OutActor = params.OutActor;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
