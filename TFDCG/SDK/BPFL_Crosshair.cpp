/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/BPFL_Crosshair_PARAMS.h"
#include "Headers/BPFL_Crosshair_UBPFL_Crosshair_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BPFL_Crosshair
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.Truncate (Vector2D)
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector2D                             In                                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::FVector2D                             Out                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBPFL_Crosshair_C::STATIC_TruncateVector2D(const CoreUObject::FVector2D& In, CoreUObject::UObject* __WorldContext, CoreUObject::FVector2D* Out)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.Truncate (Vector2D)");
        
        UBPFL_Crosshair_C_TruncateVector2D_Params params {};
        params.In = In;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Out != nullptr)
            *Out = params.Out;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.Abs (Vector2D)
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector2D                             In                                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::FVector2D                             Out                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBPFL_Crosshair_C::STATIC_AbsVector2D(const CoreUObject::FVector2D& In, CoreUObject::UObject* __WorldContext, CoreUObject::FVector2D* Out)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.Abs (Vector2D)");
        
        UBPFL_Crosshair_C_AbsVector2D_Params params {};
        params.In = In;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Out != nullptr)
            *Out = params.Out;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.SafeHypotenus
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector2D                             invector2d                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         double                                             returnvalue                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBPFL_Crosshair_C::STATIC_SafeHypotenus(const CoreUObject::FVector2D& invector2d, CoreUObject::UObject* __WorldContext, double* returnvalue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.SafeHypotenus");
        
        UBPFL_Crosshair_C_SafeHypotenus_Params params {};
        params.invector2d = invector2d;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (returnvalue != nullptr)
            *returnvalue = params.returnvalue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.LinearColorToSRGB
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         CoreUObject::FLinearColor                          LinearColor_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::FLinearColor                          SRGB_                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBPFL_Crosshair_C::STATIC_LinearColorToSRGB(const CoreUObject::FLinearColor& LinearColor_, CoreUObject::UObject* __WorldContext, CoreUObject::FLinearColor* SRGB_)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Crosshair/Blueprints/BPFL_Crosshair.BPFL_Crosshair_C.LinearColorToSRGB");
        
        UBPFL_Crosshair_C_LinearColorToSRGB_Params params {};
        params.LinearColor_ = LinearColor_;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SRGB_ != nullptr)
            *SRGB_ = params.SRGB_;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
