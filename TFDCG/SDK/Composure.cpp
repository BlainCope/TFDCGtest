/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/Composure_ENUMS.h"
#include "Headers/Composure_PARAMS.h"
#include "Headers/Composure_UCompositingElementOutput.h"
#include "Headers/Composure_UEXRFileCompositingOutput.h"
#include "Headers/Composure_UCompositingOpenColorIOPass.h"
#include "Headers/Composure_UComposureBlueprintLibrary.h"
#include "Headers/Composure_UComposureGameSettings.h"
#include "Headers/Composure_UComposurePostProcessPass.h"
#include "Headers/Composure_UComposurePlayerCompositingCameraModifier.h"
#include "Headers/Composure_IComposurePlayerCompositingInterface.h"
#include "Headers/Composure_UComposurePlayerCompositingTarget.h"
#include "Headers/Composure_UComposureCompositingTargetComponent.h"
#include "Headers/Composure_UComposurePostProcessBlendable.h"
#include "Headers/Composure_UComposurePostProcessingPassProxy.h"
#include "Headers/Composure_UComposureTonemapperPass.h"
#include "Headers/Composure_UComposureTonemapperPassPolicy.h"
#include "Headers/Composure_ICompositingTextureLookupTable.h"
#include "Headers/Composure_IMovieSceneComposureExportClient.h"
#include "Headers/Composure_UMovieSceneComposureExportInitializer.h"
#include "Headers/Composure_UMovieSceneComposureExportTrack.h"
#include "Headers/Composure_AComposurePipelineBaseActor.h"
#include "Headers/Composure_ACompositingElement.h"
#include "Headers/Composure_ACompositingCaptureBase.h"
#include "Headers/Composure_UCompositingPickerAsyncTask.h"
#include "Headers/Composure_UCompositingElementPass.h"
#include "Headers/Composure_UCompositingElementInput.h"
#include "Headers/Composure_UCompositingMediaInput.h"
#include "Headers/Composure_UMediaTextureCompositingInput.h"
#include "Headers/Composure_UColorConverterOutputPass.h"
#include "Headers/Composure_UCompositingMediaCaptureOutput.h"
#include "Headers/Composure_URenderTargetCompositingOutput.h"
#include "Headers/Composure_ICompEditorImagePreviewInterface.h"
#include "Headers/Composure_ICompImageColorPickerInterface.h"
#include "Headers/Composure_UCompositingElementTransform.h"
#include "Headers/Composure_UCompositingPostProcessPass.h"
#include "Headers/Composure_UCompositingElementMaterialPass.h"
#include "Headers/Composure_UCompositingTonemapPass.h"
#include "Headers/Composure_UMultiPassChromaKeyer.h"
#include "Headers/Composure_UMultiPassDespill.h"
#include "Headers/Composure_UAlphaTransformPass.h"
#include "Headers/Composure_UComposureLensBloomPass.h"
#include "Headers/Composure_UComposurePostProcessPassPolicy.h"
#include "Headers/Composure_UComposureLensBloomPassPolicy.h"
#include "Headers/Composure_UMovieSceneComposureExportSection.h"
#include "Headers/Composure_ICompositingInputInterface.h"
#include "Headers/Composure_UCompositingInputInterfaceProxy.h"
#include "Headers/Composure_UMovieSceneComposurePostMoveSettingsTrack.h"
#include "Headers/Composure_UPlayerViewportCompositingOutput.h"
#include "Headers/Composure_UPlayerCompOutputCameraModifier.h"
#include "Headers/Composure_UMovieSceneComposurePostMoveSettingsSection.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Composure
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x013BE2D0
     *         Name   -> Function /Script/Composure.CompositingElementOutput.RelayOutput
     *         Flags  -> (Native, Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::UTexture*                                  FinalResult                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UComposurePostProcessingPassProxy*      PostProcessProxy                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCompositingElementOutput::RelayOutput(Engine::UTexture* FinalResult, Composure::UComposurePostProcessingPassProxy* PostProcessProxy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementOutput.RelayOutput");
        
        UCompositingElementOutput_RelayOutput_Params params {};
        params.FinalResult = FinalResult;
        params.PostProcessProxy = PostProcessProxy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C14B0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.SetUVMapSettingsToMaterialParameters
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Composure::FComposureUVMapSettings                 UVMapSettings                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         Engine::UMaterialInstanceDynamic*                  Material                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_SetUVMapSettingsToMaterialParameters(const Composure::FComposureUVMapSettings& UVMapSettings, Engine::UMaterialInstanceDynamic* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.SetUVMapSettingsToMaterialParameters");
        
        UComposureBlueprintLibrary_SetUVMapSettingsToMaterialParameters_Params params {};
        params.UVMapSettings = UVMapSettings;
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0330
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.RequestRedrawComposureViewport
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_RequestRedrawComposureViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.RequestRedrawComposureViewport");
        
        UComposureBlueprintLibrary_RequestRedrawComposureViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0770
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.RenameComposureElement
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  OriginalElementName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  NewElementName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UComposureBlueprintLibrary::STATIC_RenameComposureElement(const BasicTypes::FName& OriginalElementName, const BasicTypes::FName& NewElementName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.RenameComposureElement");
        
        UComposureBlueprintLibrary_RenameComposureElement_Params params {};
        params.OriginalElementName = OriginalElementName;
        params.NewElementName = NewElementName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0310
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.RefreshComposureElementList
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_RefreshComposureElementList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.RefreshComposureElementList");
        
        UComposureBlueprintLibrary_RefreshComposureElementList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0350
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.IsComposureElementDrawing
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Composure::ACompositingElement*                    CompElement                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UComposureBlueprintLibrary::STATIC_IsComposureElementDrawing(Composure::ACompositingElement* CompElement)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.IsComposureElementDrawing");
        
        UComposureBlueprintLibrary_IsComposureElementDrawing_Params params {};
        params.CompElement = CompElement;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C1300
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.InvertUVDisplacementMapEncodingParameters
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector2D                             In                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             Out                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_InvertUVDisplacementMapEncodingParameters(const CoreUObject::FVector2D& In, CoreUObject::FVector2D* Out)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.InvertUVDisplacementMapEncodingParameters");
        
        UComposureBlueprintLibrary_InvertUVDisplacementMapEncodingParameters_Params params {};
        params.In = In;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Out != nullptr)
            *Out = params.Out;
    }

    /**
     * Function:
     *         RVA    -> 0x013C1120
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.GetRedGreenUVFactorsFromChromaticAberration
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              ChromaticAberrationAmount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             RedGreenUVFactors                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_GetRedGreenUVFactorsFromChromaticAberration(float ChromaticAberrationAmount, CoreUObject::FVector2D* RedGreenUVFactors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.GetRedGreenUVFactorsFromChromaticAberration");
        
        UComposureBlueprintLibrary_GetRedGreenUVFactorsFromChromaticAberration_Params params {};
        params.ChromaticAberrationAmount = ChromaticAberrationAmount;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RedGreenUVFactors != nullptr)
            *RedGreenUVFactors = params.RedGreenUVFactors;
    }

    /**
     * Function:
     *         RVA    -> 0x013C19A0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.GetProjectionMatrixFromPostMoveSettings
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Composure::FComposurePostMoveSettings              PostMoveSettings                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              HorizontalFOVAngle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AspectRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FMatrix                               ProjectionMatrix                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_GetProjectionMatrixFromPostMoveSettings(const Composure::FComposurePostMoveSettings& PostMoveSettings, float HorizontalFOVAngle, float AspectRatio, CoreUObject::FMatrix* ProjectionMatrix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.GetProjectionMatrixFromPostMoveSettings");
        
        UComposureBlueprintLibrary_GetProjectionMatrixFromPostMoveSettings_Params params {};
        params.PostMoveSettings = PostMoveSettings;
        params.HorizontalFOVAngle = HorizontalFOVAngle;
        params.AspectRatio = AspectRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ProjectionMatrix != nullptr)
            *ProjectionMatrix = params.ProjectionMatrix;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0F50
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.GetPlayerDisplayGamma
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::APlayerCameraManager*                      PlayerCameraManager                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DisplayGamma                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_GetPlayerDisplayGamma(Engine::APlayerCameraManager* PlayerCameraManager, float* DisplayGamma)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.GetPlayerDisplayGamma");
        
        UComposureBlueprintLibrary_GetPlayerDisplayGamma_Params params {};
        params.PlayerCameraManager = PlayerCameraManager;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DisplayGamma != nullptr)
            *DisplayGamma = params.DisplayGamma;
    }

    /**
     * Function:
     *         RVA    -> 0x013C16C0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.GetCroppingUVTransformationMatrixFromPostMoveSettings
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Composure::FComposurePostMoveSettings              PostMoveSettings                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              AspectRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FMatrix                               CropingUVTransformationMatrix                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FMatrix                               UncropingUVTransformationMatrix                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_GetCroppingUVTransformationMatrixFromPostMoveSettings(const Composure::FComposurePostMoveSettings& PostMoveSettings, float AspectRatio, CoreUObject::FMatrix* CropingUVTransformationMatrix, CoreUObject::FMatrix* UncropingUVTransformationMatrix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.GetCroppingUVTransformationMatrixFromPostMoveSettings");
        
        UComposureBlueprintLibrary_GetCroppingUVTransformationMatrixFromPostMoveSettings_Params params {};
        params.PostMoveSettings = PostMoveSettings;
        params.AspectRatio = AspectRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (CropingUVTransformationMatrix != nullptr)
            *CropingUVTransformationMatrix = params.CropingUVTransformationMatrix;
        if (UncropingUVTransformationMatrix != nullptr)
            *UncropingUVTransformationMatrix = params.UncropingUVTransformationMatrix;
    }

    /**
     * Function:
     *         RVA    -> 0x013C09C0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.GetComposureElement
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         BasicTypes::FName                                  ElementName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::ACompositingElement*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::ACompositingElement* UComposureBlueprintLibrary::STATIC_GetComposureElement(const BasicTypes::FName& ElementName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.GetComposureElement");
        
        UComposureBlueprintLibrary_GetComposureElement_Params params {};
        params.ElementName = ElementName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C08F0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.DeleteComposureElementAndChildren
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ElementToDelete                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_DeleteComposureElementAndChildren(const BasicTypes::FName& ElementToDelete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.DeleteComposureElementAndChildren");
        
        UComposureBlueprintLibrary_DeleteComposureElementAndChildren_Params params {};
        params.ElementToDelete = ElementToDelete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C1C90
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.CreatePlayerCompositingTarget
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UComposurePlayerCompositingTarget*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UComposurePlayerCompositingTarget* UComposureBlueprintLibrary::STATIC_CreatePlayerCompositingTarget(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.CreatePlayerCompositingTarget");
        
        UComposureBlueprintLibrary_CreatePlayerCompositingTarget_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0AA0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.CreateComposureElement
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ElementName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::ACompositingElement*                    ClassType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    LevelContext                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::ACompositingElement*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::ACompositingElement* UComposureBlueprintLibrary::STATIC_CreateComposureElement(const BasicTypes::FName& ElementName, Composure::ACompositingElement* ClassType, Engine::AActor* LevelContext)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.CreateComposureElement");
        
        UComposureBlueprintLibrary_CreateComposureElement_Params params {};
        params.ElementName = ElementName;
        params.ClassType = ClassType;
        params.LevelContext = LevelContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C0CB0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.CopyCameraSettingsToSceneCapture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UCameraComponent*                          SrcCamera                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneCaptureComponent2D*                  DstCaptureComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OriginalFocalLength                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OverscanFactor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureBlueprintLibrary::STATIC_CopyCameraSettingsToSceneCapture(Engine::UCameraComponent* SrcCamera, Engine::USceneCaptureComponent2D* DstCaptureComponent, float OriginalFocalLength, float OverscanFactor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.CopyCameraSettingsToSceneCapture");
        
        UComposureBlueprintLibrary_CopyCameraSettingsToSceneCapture_Params params {};
        params.SrcCamera = SrcCamera;
        params.DstCaptureComponent = DstCaptureComponent;
        params.OriginalFocalLength = OriginalFocalLength;
        params.OverscanFactor = OverscanFactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C05F0
     *         Name   -> Function /Script/Composure.ComposureBlueprintLibrary.AttachComposureElement
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ParentName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ChildName                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UComposureBlueprintLibrary::STATIC_AttachComposureElement(const BasicTypes::FName& ParentName, const BasicTypes::FName& ChildName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureBlueprintLibrary.AttachComposureElement");
        
        UComposureBlueprintLibrary_AttachComposureElement_Params params {};
        params.ParentName = ParentName;
        params.ChildName = ChildName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C49A0
     *         Name   -> Function /Script/Composure.ComposurePostProcessPass.SetSetupMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInterface*                        Material                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposurePostProcessPass::SetSetupMaterial(Engine::UMaterialInterface* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePostProcessPass.SetSetupMaterial");
        
        UComposurePostProcessPass_SetSetupMaterial_Params params {};
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4850
     *         Name   -> Function /Script/Composure.ComposurePostProcessPass.SetOutputRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    RenderTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposurePostProcessPass::SetOutputRenderTarget(Engine::UTextureRenderTarget2D* RenderTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePostProcessPass.SetOutputRenderTarget");
        
        UComposurePostProcessPass_SetOutputRenderTarget_Params params {};
        params.RenderTarget = RenderTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4980
     *         Name   -> Function /Script/Composure.ComposurePostProcessPass.GetSetupMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UMaterialInterface*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInterface* UComposurePostProcessPass::GetSetupMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePostProcessPass.GetSetupMaterial");
        
        UComposurePostProcessPass_GetSetupMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4950
     *         Name   -> Function /Script/Composure.ComposurePostProcessPass.GetOutputRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* UComposurePostProcessPass::GetOutputRenderTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePostProcessPass.GetOutputRenderTarget");
        
        UComposurePostProcessPass_GetOutputRenderTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C37E0
     *         Name   -> Function /Script/Composure.ComposurePlayerCompositingTarget.SetRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    RenderTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposurePlayerCompositingTarget::SetRenderTarget(Engine::UTextureRenderTarget2D* RenderTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePlayerCompositingTarget.SetRenderTarget");
        
        UComposurePlayerCompositingTarget_SetRenderTarget_Params params {};
        params.RenderTarget = RenderTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3A20
     *         Name   -> Function /Script/Composure.ComposurePlayerCompositingTarget.SetPlayerCameraManager
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerCameraManager*                      PlayerCameraManager                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APlayerCameraManager*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::APlayerCameraManager* UComposurePlayerCompositingTarget::SetPlayerCameraManager(Engine::APlayerCameraManager* PlayerCameraManager)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePlayerCompositingTarget.SetPlayerCameraManager");
        
        UComposurePlayerCompositingTarget_SetPlayerCameraManager_Params params {};
        params.PlayerCameraManager = PlayerCameraManager;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3B10
     *         Name   -> Function /Script/Composure.ComposurePlayerCompositingTarget.GetPlayerCameraManager
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::APlayerCameraManager*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::APlayerCameraManager* UComposurePlayerCompositingTarget::GetPlayerCameraManager()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePlayerCompositingTarget.GetPlayerCameraManager");
        
        UComposurePlayerCompositingTarget_GetPlayerCameraManager_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3D40
     *         Name   -> Function /Script/Composure.ComposureCompositingTargetComponent.SetDisplayTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture*                                  DisplayTexture                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureCompositingTargetComponent::SetDisplayTexture(Engine::UTexture* DisplayTexture)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureCompositingTargetComponent.SetDisplayTexture");
        
        UComposureCompositingTargetComponent_SetDisplayTexture_Params params {};
        params.DisplayTexture = DisplayTexture;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3D20
     *         Name   -> Function /Script/Composure.ComposureCompositingTargetComponent.GetDisplayTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* UComposureCompositingTargetComponent::GetDisplayTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureCompositingTargetComponent.GetDisplayTexture");
        
        UComposureCompositingTargetComponent_GetDisplayTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4560
     *         Name   -> Function /Script/Composure.ComposurePostProcessingPassProxy.Execute
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture*                                  PrePassInput                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UComposurePostProcessPassPolicy*        PostProcessPass                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposurePostProcessingPassProxy::Execute(Engine::UTexture* PrePassInput, Composure::UComposurePostProcessPassPolicy* PostProcessPass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePostProcessingPassProxy.Execute");
        
        UComposurePostProcessingPassProxy_Execute_Params params {};
        params.PrePassInput = PrePassInput;
        params.PostProcessPass = PostProcessPass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4ED0
     *         Name   -> Function /Script/Composure.ComposureTonemapperPass.TonemapToRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComposureTonemapperPass::TonemapToRenderTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureTonemapperPass.TonemapToRenderTarget");
        
        UComposureTonemapperPass_TonemapToRenderTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C69C0
     *         Name   -> Function /Script/Composure.CompositingTextureLookupTable.FindNamedPassResult
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  LookupName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  OutTexture                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ICompositingTextureLookupTable::FindNamedPassResult(const BasicTypes::FName& LookupName, Engine::UTexture** OutTexture)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingTextureLookupTable.FindNamedPassResult");
        
        ICompositingTextureLookupTable_FindNamedPassResult_Params params {};
        params.LookupName = LookupName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTexture != nullptr)
            *OutTexture = params.OutTexture;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/Composure.MovieSceneComposureExportClient.InitializeForExport
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Composure::UMovieSceneComposureExportInitializer*  ExportInitializer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IMovieSceneComposureExportClient::InitializeForExport(Composure::UMovieSceneComposureExportInitializer* ExportInitializer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.MovieSceneComposureExportClient.InitializeForExport");
        
        IMovieSceneComposureExportClient_InitializeForExport_Params params {};
        params.ExportInitializer = ExportInitializer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C7C40
     *         Name   -> Function /Script/Composure.MovieSceneComposureExportInitializer.ExportSceneCaptureBuffers
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Composure::ACompositingElement*                    CompShotElement                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneCaptureComponent2D*                  SceneCapture                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            BuffersToExport                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneComposureExportInitializer::ExportSceneCaptureBuffers(Composure::ACompositingElement* CompShotElement, Engine::USceneCaptureComponent2D* SceneCapture, BasicTypes::TArray<BasicTypes::FString> BuffersToExport)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.MovieSceneComposureExportInitializer.ExportSceneCaptureBuffers");
        
        UMovieSceneComposureExportInitializer_ExportSceneCaptureBuffers_Params params {};
        params.CompShotElement = CompShotElement;
        params.SceneCapture = SceneCapture;
        params.BuffersToExport = BuffersToExport;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C2C70
     *         Name   -> Function /Script/Composure.ComposurePipelineBaseActor.SetAutoRunChildrenAndSelf
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bAutoRunChildAndSelf                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AComposurePipelineBaseActor::SetAutoRunChildrenAndSelf(bool bAutoRunChildAndSelf)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePipelineBaseActor.SetAutoRunChildrenAndSelf");
        
        AComposurePipelineBaseActor_SetAutoRunChildrenAndSelf_Params params {};
        params.bAutoRunChildAndSelf = bAutoRunChildAndSelf;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C2EA0
     *         Name   -> Function /Script/Composure.ComposurePipelineBaseActor.SetAutoRun
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewAutoRunVal                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AComposurePipelineBaseActor::SetAutoRun(bool bNewAutoRunVal)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePipelineBaseActor.SetAutoRun");
        
        AComposurePipelineBaseActor_SetAutoRun_Params params {};
        params.bNewAutoRunVal = bNewAutoRunVal;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C2E50
     *         Name   -> Function /Script/Composure.ComposurePipelineBaseActor.IsActivelyRunning
     *         Flags  -> (Native, Event, Public, BlueprintEvent, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AComposurePipelineBaseActor::IsActivelyRunning()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePipelineBaseActor.IsActivelyRunning");
        
        AComposurePipelineBaseActor_IsActivelyRunning_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C2D60
     *         Name   -> Function /Script/Composure.ComposurePipelineBaseActor.EnqueueRendering
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         bool                                               bCameraCutThisFrame                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AComposurePipelineBaseActor::EnqueueRendering(bool bCameraCutThisFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePipelineBaseActor.EnqueueRendering");
        
        AComposurePipelineBaseActor_EnqueueRendering_Params params {};
        params.bCameraCutThisFrame = bCameraCutThisFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C2E80
     *         Name   -> Function /Script/Composure.ComposurePipelineBaseActor.AreChildrenAndSelfAutoRun
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AComposurePipelineBaseActor::AreChildrenAndSelfAutoRun()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePipelineBaseActor.AreChildrenAndSelfAutoRun");
        
        AComposurePipelineBaseActor_AreChildrenAndSelfAutoRun_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9F20
     *         Name   -> Function /Script/Composure.CompositingElement.SetTargetCamera
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ACameraActor*                              NewCameraActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::SetTargetCamera(Engine::ACameraActor* NewCameraActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.SetTargetCamera");
        
        ACompositingElement_SetTargetCamera_Params params {};
        params.NewCameraActor = NewCameraActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9790
     *         Name   -> Function /Script/Composure.CompositingElement.SetRenderResolution
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FIntPoint                             NewResolution                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::SetRenderResolution(const CoreUObject::FIntPoint& NewResolution)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.SetRenderResolution");
        
        ACompositingElement_SetRenderResolution_Params params {};
        params.NewResolution = NewResolution;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BADE0
     *         Name   -> Function /Script/Composure.CompositingElement.SetOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewOpacity                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::SetOpacity(float NewOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.SetOpacity");
        
        ACompositingElement_SetOpacity_Params params {};
        params.NewOpacity = NewOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BB080
     *         Name   -> Function /Script/Composure.CompositingElement.SetElementName
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  NewName                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::SetElementName(const BasicTypes::FName& NewName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.SetElementName");
        
        ACompositingElement_SetElementName_Params params {};
        params.NewName = NewName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/Composure.CompositingElement.SetEditorColorPickingTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    PickingTarget                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::SetEditorColorPickingTarget(Engine::UTextureRenderTarget2D* PickingTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.SetEditorColorPickingTarget");
        
        ACompositingElement_SetEditorColorPickingTarget_Params params {};
        params.PickingTarget = PickingTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/Composure.CompositingElement.SetEditorColorPickerDisplayImage
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture*                                  PickerDisplayImage                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::SetEditorColorPickerDisplayImage(Engine::UTexture* PickerDisplayImage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.SetEditorColorPickerDisplayImage");
        
        ACompositingElement_SetEditorColorPickerDisplayImage_Params params {};
        params.PickerDisplayImage = PickerDisplayImage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BA9D0
     *         Name   -> Function /Script/Composure.CompositingElement.RequestNamedRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ReferenceName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              RenderPercentage                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::ETargetUsageFlags                       UsageTag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* ACompositingElement::RequestNamedRenderTarget(const BasicTypes::FName& ReferenceName, float RenderPercentage, Composure::ETargetUsageFlags UsageTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.RequestNamedRenderTarget");
        
        ACompositingElement_RequestNamedRenderTarget_Params params {};
        params.ReferenceName = ReferenceName;
        params.RenderPercentage = RenderPercentage;
        params.UsageTag = UsageTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BA0C0
     *         Name   -> Function /Script/Composure.CompositingElement.RenderCompositingMaterialToTarget
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Composure::FCompositingMaterial                    CompMaterial                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::UTextureRenderTarget2D*                    RenderTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ResultLookupName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* ACompositingElement::RenderCompositingMaterialToTarget(Composure::FCompositingMaterial* CompMaterial, Engine::UTextureRenderTarget2D* RenderTarget, const BasicTypes::FName& ResultLookupName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.RenderCompositingMaterialToTarget");
        
        ACompositingElement_RenderCompositingMaterialToTarget_Params params {};
        params.RenderTarget = RenderTarget;
        params.ResultLookupName = ResultLookupName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (CompMaterial != nullptr)
            *CompMaterial = params.CompMaterial;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BA4B0
     *         Name   -> Function /Script/Composure.CompositingElement.RenderCompositingMaterial
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Composure::FCompositingMaterial                    CompMaterial                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              RenderScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ResultLookupName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::ETargetUsageFlags                       UsageTag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* ACompositingElement::RenderCompositingMaterial(Composure::FCompositingMaterial* CompMaterial, float RenderScale, const BasicTypes::FName& ResultLookupName, Composure::ETargetUsageFlags UsageTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.RenderCompositingMaterial");
        
        ACompositingElement_RenderCompositingMaterial_Params params {};
        params.RenderScale = RenderScale;
        params.ResultLookupName = ResultLookupName;
        params.UsageTag = UsageTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (CompMaterial != nullptr)
            *CompMaterial = params.CompMaterial;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAC10
     *         Name   -> Function /Script/Composure.CompositingElement.RenderCompElement
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         bool                                               bCameraCutThisFrame                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* ACompositingElement::RenderCompElement(bool bCameraCutThisFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.RenderCompElement");
        
        ACompositingElement_RenderCompElement_Params params {};
        params.bCameraCutThisFrame = bCameraCutThisFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BA890
     *         Name   -> Function /Script/Composure.CompositingElement.ReleaseOwnedTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    OwnedTarget                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ACompositingElement::ReleaseOwnedTarget(Engine::UTextureRenderTarget2D* OwnedTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.ReleaseOwnedTarget");
        
        ACompositingElement_ReleaseOwnedTarget_Params params {};
        params.OwnedTarget = OwnedTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9AD0
     *         Name   -> Function /Script/Composure.CompositingElement.RegisterPassResult
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ReferenceName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  PassResult                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSetAsLatestRenderResult                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ACompositingElement::RegisterPassResult(const BasicTypes::FName& ReferenceName, Engine::UTexture* PassResult, bool bSetAsLatestRenderResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.RegisterPassResult");
        
        ACompositingElement_RegisterPassResult_Params params {};
        params.ReferenceName = ReferenceName;
        params.PassResult = PassResult;
        params.bSetAsLatestRenderResult = bSetAsLatestRenderResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BB040
     *         Name   -> Function /Script/Composure.CompositingElement.IsSubElement
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ACompositingElement::IsSubElement()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.IsSubElement");
        
        ACompositingElement_IsSubElement_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8D80
     *         Name   -> Function /Script/Composure.CompositingElement.GetTransformsList
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Composure::UCompositingElementTransform*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Composure::UCompositingElementTransform*> ACompositingElement::GetTransformsList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetTransformsList");
        
        ACompositingElement_GetTransformsList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9880
     *         Name   -> Function /Script/Composure.CompositingElement.GetRenderResolution
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FIntPoint                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FIntPoint ACompositingElement::GetRenderResolution()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetRenderResolution");
        
        ACompositingElement_GetRenderResolution_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B7E20
     *         Name   -> Function /Script/Composure.CompositingElement.GetRenderPriority
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t ACompositingElement::GetRenderPriority()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetRenderPriority");
        
        ACompositingElement_GetRenderPriority_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8CA0
     *         Name   -> Function /Script/Composure.CompositingElement.GetOutputsList
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Composure::UCompositingElementOutput*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Composure::UCompositingElementOutput*> ACompositingElement::GetOutputsList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetOutputsList");
        
        ACompositingElement_GetOutputsList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAF50
     *         Name   -> Function /Script/Composure.CompositingElement.GetOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float ACompositingElement::GetOpacity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetOpacity");
        
        ACompositingElement_GetOpacity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B98F0
     *         Name   -> Function /Script/Composure.CompositingElement.GetLatestRenderResult
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* ACompositingElement::GetLatestRenderResult()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetLatestRenderResult");
        
        ACompositingElement_GetLatestRenderResult_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8E60
     *         Name   -> Function /Script/Composure.CompositingElement.GetInputsList
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Composure::UCompositingElementInput*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Composure::UCompositingElementInput*> ACompositingElement::GetInputsList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetInputsList");
        
        ACompositingElement_GetInputsList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BB010
     *         Name   -> Function /Script/Composure.CompositingElement.GetElementParent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Composure::ACompositingElement*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::ACompositingElement* ACompositingElement::GetElementParent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetElementParent");
        
        ACompositingElement_GetElementParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BABF0
     *         Name   -> Function /Script/Composure.CompositingElement.GetCompElementName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName ACompositingElement::GetCompElementName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetCompElementName");
        
        ACompositingElement_GetCompElementName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAF70
     *         Name   -> Function /Script/Composure.CompositingElement.GetChildElements
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Composure::ACompositingElement*> ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Composure::ACompositingElement*> ACompositingElement::GetChildElements()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.GetChildElements");
        
        ACompositingElement_GetChildElements_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9170
     *         Name   -> Function /Script/Composure.CompositingElement.FindTransformPass
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Composure::UCompositingElementTransform*           TransformType                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  PassResult                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OptionalPassName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementTransform*           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementTransform* ACompositingElement::FindTransformPass(Composure::UCompositingElementTransform* TransformType, Engine::UTexture** PassResult, const BasicTypes::FName& OptionalPassName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.FindTransformPass");
        
        ACompositingElement_FindTransformPass_Params params {};
        params.TransformType = TransformType;
        params.OptionalPassName = OptionalPassName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PassResult != nullptr)
            *PassResult = params.PassResult;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BA090
     *         Name   -> Function /Script/Composure.CompositingElement.FindTargetCamera
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ACameraActor*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ACameraActor* ACompositingElement::FindTargetCamera()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.FindTargetCamera");
        
        ACompositingElement_FindTargetCamera_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8F40
     *         Name   -> Function /Script/Composure.CompositingElement.FindOutputPass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Composure::UCompositingElementOutput*              OutputType                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OptionalPassName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementOutput*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementOutput* ACompositingElement::FindOutputPass(Composure::UCompositingElementOutput* OutputType, const BasicTypes::FName& OptionalPassName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.FindOutputPass");
        
        ACompositingElement_FindOutputPass_Params params {};
        params.OutputType = OutputType;
        params.OptionalPassName = OptionalPassName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9930
     *         Name   -> Function /Script/Composure.CompositingElement.FindNamedRenderResult
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSearchSubElements                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* ACompositingElement::FindNamedRenderResult(const BasicTypes::FName& PassName, bool bSearchSubElements)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.FindNamedRenderResult");
        
        ACompositingElement_FindNamedRenderResult_Params params {};
        params.PassName = PassName;
        params.bSearchSubElements = bSearchSubElements;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B9480
     *         Name   -> Function /Script/Composure.CompositingElement.FindInputPass
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Composure::UCompositingElementInput*               InputType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  PassResult                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OptionalPassName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementInput*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementInput* ACompositingElement::FindInputPass(Composure::UCompositingElementInput* InputType, Engine::UTexture** PassResult, const BasicTypes::FName& OptionalPassName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.FindInputPass");
        
        ACompositingElement_FindInputPass_Params params {};
        params.InputType = InputType;
        params.OptionalPassName = OptionalPassName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PassResult != nullptr)
            *PassResult = params.PassResult;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8910
     *         Name   -> Function /Script/Composure.CompositingElement.DeletePass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Composure::UCompositingElementPass*                PassToDelete                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ACompositingElement::DeletePass(Composure::UCompositingElementPass* PassToDelete)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.DeletePass");
        
        ACompositingElement_DeletePass_Params params {};
        params.PassToDelete = PassToDelete;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8540
     *         Name   -> Function /Script/Composure.CompositingElement.CreateNewTransformPass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementTransform*           TransformType                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementTransform*           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementTransform* ACompositingElement::CreateNewTransformPass(const BasicTypes::FName& PassName, Composure::UCompositingElementTransform* TransformType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.CreateNewTransformPass");
        
        ACompositingElement_CreateNewTransformPass_Params params {};
        params.PassName = PassName;
        params.TransformType = TransformType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B83C0
     *         Name   -> Function /Script/Composure.CompositingElement.CreateNewOutputPass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementOutput*              OutputType                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementOutput*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementOutput* ACompositingElement::CreateNewOutputPass(const BasicTypes::FName& PassName, Composure::UCompositingElementOutput* OutputType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.CreateNewOutputPass");
        
        ACompositingElement_CreateNewOutputPass_Params params {};
        params.PassName = PassName;
        params.OutputType = OutputType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8790
     *         Name   -> Function /Script/Composure.CompositingElement.CreateNewInputPass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementInput*               InputType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementInput*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementInput* ACompositingElement::CreateNewInputPass(const BasicTypes::FName& PassName, Composure::UCompositingElementInput* InputType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.CreateNewInputPass");
        
        ACompositingElement_CreateNewInputPass_Params params {};
        params.PassName = PassName;
        params.InputType = InputType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B8020
     *         Name   -> Function /Script/Composure.CompositingElement.AddNewTransformPass
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementTransform*           TransformType                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementTransform*           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementTransform* ACompositingElement::AddNewTransformPass(const BasicTypes::FName& PassName, Composure::UCompositingElementTransform* TransformType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.AddNewTransformPass");
        
        ACompositingElement_AddNewTransformPass_Params params {};
        params.PassName = PassName;
        params.TransformType = TransformType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B7E50
     *         Name   -> Function /Script/Composure.CompositingElement.AddNewOutputPass
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementOutput*              OutputType                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementOutput*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementOutput* ACompositingElement::AddNewOutputPass(const BasicTypes::FName& PassName, Composure::UCompositingElementOutput* OutputType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.AddNewOutputPass");
        
        ACompositingElement_AddNewOutputPass_Params params {};
        params.PassName = PassName;
        params.OutputType = OutputType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B81F0
     *         Name   -> Function /Script/Composure.CompositingElement.AddNewInputPass
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementInput*               InputType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingElementInput*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingElementInput* ACompositingElement::AddNewInputPass(const BasicTypes::FName& PassName, Composure::UCompositingElementInput* InputType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElement.AddNewInputPass");
        
        ACompositingElement_AddNewInputPass_Params params {};
        params.PassName = PassName;
        params.InputType = InputType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013B6FF0
     *         Name   -> Function /Script/Composure.CompositingCaptureBase.UpdateDistortion
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ACompositingCaptureBase::UpdateDistortion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingCaptureBase.UpdateDistortion");
        
        ACompositingCaptureBase_UpdateDistortion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013B7280
     *         Name   -> Function /Script/Composure.CompositingPickerAsyncTask.OpenCompositingPicker
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    PickerTarget                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  DisplayImage                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  WindowTitle                                                (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bAverageColorOnDrag                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUseImplicitGamma                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UCompositingPickerAsyncTask*            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Composure::UCompositingPickerAsyncTask* UCompositingPickerAsyncTask::STATIC_OpenCompositingPicker(Engine::UTextureRenderTarget2D* PickerTarget, Engine::UTexture* DisplayImage, const BasicTypes::FText& WindowTitle, bool bAverageColorOnDrag, bool bUseImplicitGamma)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingPickerAsyncTask.OpenCompositingPicker");
        
        UCompositingPickerAsyncTask_OpenCompositingPicker_Params params {};
        params.PickerTarget = PickerTarget;
        params.DisplayImage = DisplayImage;
        params.WindowTitle = WindowTitle;
        params.bAverageColorOnDrag = bAverageColorOnDrag;
        params.bUseImplicitGamma = bUseImplicitGamma;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD6E0
     *         Name   -> Function /Script/Composure.CompositingElementPass.SetPassEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bSetEnabledTo                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCompositingElementPass::SetPassEnabled(bool bSetEnabledTo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.SetPassEnabled");
        
        UCompositingElementPass_SetPassEnabled_Params params {};
        params.bSetEnabledTo = bSetEnabledTo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD820
     *         Name   -> Function /Script/Composure.CompositingElementPass.Reset
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UCompositingElementPass::Reset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.Reset");
        
        UCompositingElementPass_Reset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD4F0
     *         Name   -> Function /Script/Composure.CompositingElementPass.RequestRenderTarget
     *         Flags  -> (Final, Native, Protected, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FIntPoint                             Dimensions                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ETextureRenderTargetFormat                 Format                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* UCompositingElementPass::RequestRenderTarget(const CoreUObject::FIntPoint& Dimensions, Engine::ETextureRenderTargetFormat Format)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.RequestRenderTarget");
        
        UCompositingElementPass_RequestRenderTarget_Params params {};
        params.Dimensions = Dimensions;
        params.Format = Format;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD3F0
     *         Name   -> Function /Script/Composure.CompositingElementPass.RequestNativelyFormattedTarget
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         float                                              RenderScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* UCompositingElementPass::RequestNativelyFormattedTarget(float RenderScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.RequestNativelyFormattedTarget");
        
        UCompositingElementPass_RequestNativelyFormattedTarget_Params params {};
        params.RenderScale = RenderScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD300
     *         Name   -> Function /Script/Composure.CompositingElementPass.ReleaseRenderTarget
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    AssignedTarget                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCompositingElementPass::ReleaseRenderTarget(Engine::UTextureRenderTarget2D* AssignedTarget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.ReleaseRenderTarget");
        
        UCompositingElementPass_ReleaseRenderTarget_Params params {};
        params.AssignedTarget = AssignedTarget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01288180
     *         Name   -> Function /Script/Composure.CompositingElementPass.OnFrameEnd
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UCompositingElementPass::OnFrameEnd()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.OnFrameEnd");
        
        UCompositingElementPass_OnFrameEnd_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD840
     *         Name   -> Function /Script/Composure.CompositingElementPass.OnFrameBegin
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         bool                                               bCameraCutThisFrame                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCompositingElementPass::OnFrameBegin(bool bCameraCutThisFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.OnFrameBegin");
        
        UCompositingElementPass_OnFrameBegin_Params params {};
        params.bCameraCutThisFrame = bCameraCutThisFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD6A0
     *         Name   -> Function /Script/Composure.CompositingElementPass.OnEnabled
     *         Flags  -> (Native, Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UCompositingElementPass::OnEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.OnEnabled");
        
        UCompositingElementPass_OnEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD6C0
     *         Name   -> Function /Script/Composure.CompositingElementPass.OnDisabled
     *         Flags  -> (Native, Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UCompositingElementPass::OnDisabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.OnDisabled");
        
        UCompositingElementPass_OnDisabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD800
     *         Name   -> Function /Script/Composure.CompositingElementPass.IsPassEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCompositingElementPass::IsPassEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementPass.IsPassEnabled");
        
        UCompositingElementPass_IsPassEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BDC60
     *         Name   -> Function /Script/Composure.CompositingElementInput.GenerateInput
     *         Flags  -> (Native, Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* UCompositingElementInput::GenerateInput()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementInput.GenerateInput");
        
        UCompositingElementInput_GenerateInput_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BDD90
     *         Name   -> Function /Script/Composure.CompositingElementTransform.FindNamedPrePassResult
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  PassLookupName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* UCompositingElementTransform::FindNamedPrePassResult(const BasicTypes::FName& PassLookupName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementTransform.FindNamedPrePassResult");
        
        UCompositingElementTransform_FindNamedPrePassResult_Params params {};
        params.PassLookupName = PassLookupName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BDEA0
     *         Name   -> Function /Script/Composure.CompositingElementTransform.ApplyTransform
     *         Flags  -> (Native, Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::UTexture*                                  Input                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Composure::UComposurePostProcessingPassProxy*      PostProcessProxy                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::ACameraActor*                              TargetCamera                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* UCompositingElementTransform::ApplyTransform(Engine::UTexture* Input, Composure::UComposurePostProcessingPassProxy* PostProcessProxy, Engine::ACameraActor* TargetCamera)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementTransform.ApplyTransform");
        
        UCompositingElementTransform_ApplyTransform_Params params {};
        params.Input = Input;
        params.PostProcessProxy = PostProcessProxy;
        params.TargetCamera = TargetCamera;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BF0C0
     *         Name   -> Function /Script/Composure.CompositingElementMaterialPass.SetParameterMapping
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  TextureParamName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ComposureLayerName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCompositingElementMaterialPass::SetParameterMapping(const BasicTypes::FName& TextureParamName, const BasicTypes::FName& ComposureLayerName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementMaterialPass.SetParameterMapping");
        
        UCompositingElementMaterialPass_SetParameterMapping_Params params {};
        params.TextureParamName = TextureParamName;
        params.ComposureLayerName = ComposureLayerName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BF330
     *         Name   -> Function /Script/Composure.CompositingElementMaterialPass.SetMaterialInterface
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInterface*                        NewMaterial                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCompositingElementMaterialPass::SetMaterialInterface(Engine::UMaterialInterface* NewMaterial)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementMaterialPass.SetMaterialInterface");
        
        UCompositingElementMaterialPass_SetMaterialInterface_Params params {};
        params.NewMaterial = NewMaterial;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/Composure.CompositingElementMaterialPass.ApplyMaterialParams
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  Mid                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCompositingElementMaterialPass::ApplyMaterialParams(Engine::UMaterialInstanceDynamic* Mid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingElementMaterialPass.ApplyMaterialParams");
        
        UCompositingElementMaterialPass_ApplyMaterialParams_Params params {};
        params.Mid = Mid;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C28E0
     *         Name   -> Function /Script/Composure.ComposureLensBloomPass.SetTonemapperReplacingMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  Material                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposureLensBloomPass::SetTonemapperReplacingMaterial(Engine::UMaterialInstanceDynamic* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureLensBloomPass.SetTonemapperReplacingMaterial");
        
        UComposureLensBloomPass_SetTonemapperReplacingMaterial_Params params {};
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C28C0
     *         Name   -> Function /Script/Composure.ComposureLensBloomPass.BloomToRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComposureLensBloomPass::BloomToRenderTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposureLensBloomPass.BloomToRenderTarget");
        
        UComposureLensBloomPass_BloomToRenderTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013C4330
     *         Name   -> Function /Script/Composure.ComposurePostProcessPassPolicy.SetupPostProcess
     *         Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         Engine::USceneCaptureComponent2D*                  SceneCapture                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UMaterialInterface*                        TonemapperOverride                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComposurePostProcessPassPolicy::SetupPostProcess(Engine::USceneCaptureComponent2D* SceneCapture, Engine::UMaterialInterface** TonemapperOverride)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.ComposurePostProcessPassPolicy.SetupPostProcess");
        
        UComposurePostProcessPassPolicy_SetupPostProcess_Params params {};
        params.SceneCapture = SceneCapture;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (TonemapperOverride != nullptr)
            *TonemapperOverride = params.TonemapperOverride;
    }

    /**
     * Function:
     *         RVA    -> 0x013BC460
     *         Name   -> Function /Script/Composure.CompositingInputInterface.OnFrameEnd
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         Composure::UCompositingInputInterfaceProxy*        Proxy                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ICompositingInputInterface::OnFrameEnd(Composure::UCompositingInputInterfaceProxy* Proxy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingInputInterface.OnFrameEnd");
        
        ICompositingInputInterface_OnFrameEnd_Params params {};
        params.Proxy = Proxy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BC650
     *         Name   -> Function /Script/Composure.CompositingInputInterface.OnFrameBegin
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         Composure::UCompositingInputInterfaceProxy*        Proxy                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCameraCutThisFrame                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ICompositingInputInterface::OnFrameBegin(Composure::UCompositingInputInterfaceProxy* Proxy, bool bCameraCutThisFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingInputInterface.OnFrameBegin");
        
        ICompositingInputInterface_OnFrameBegin_Params params {};
        params.Proxy = Proxy;
        params.bCameraCutThisFrame = bCameraCutThisFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BC550
     *         Name   -> Function /Script/Composure.CompositingInputInterface.GenerateInput
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         Composure::UCompositingInputInterfaceProxy*        Proxy                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* ICompositingInputInterface::GenerateInput(Composure::UCompositingInputInterfaceProxy* Proxy)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Composure.CompositingInputInterface.GenerateInput");
        
        ICompositingInputInterface_GenerateInput_Params params {};
        params.Proxy = Proxy;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
