/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AudioMixer_ENUMS.h"
#include "Headers/AudioMixer_PARAMS.h"
#include "Headers/AudioMixer_USynthComponent.h"
#include "Headers/AudioMixer_UAudioGenerator.h"
#include "Headers/AudioMixer_UAudioBusSubsystem.h"
#include "Headers/AudioMixer_UAudioDeviceNotificationSubsystem.h"
#include "Headers/AudioMixer_UAudioMixerBlueprintLibrary.h"
#include "Headers/AudioMixer_USynthSound.h"
#include "Headers/AudioMixer_USubmixEffectDynamicsProcessorPreset.h"
#include "Headers/AudioMixer_USubmixEffectSubmixEQPreset.h"
#include "Headers/AudioMixer_USubmixEffectReverbPreset.h"
#include "Headers/AudioMixer_UQuartzClockHandle.h"
#include "Headers/AudioMixer_UQuartzSubsystem.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioMixer
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x05411720
     *         Name   -> Function /Script/AudioMixer.SynthComponent.Stop
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USynthComponent::Stop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.Stop");
        
        USynthComponent_Stop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05411740
     *         Name   -> Function /Script/AudioMixer.SynthComponent.Start
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USynthComponent::Start()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.Start");
        
        USynthComponent_Start_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x054115D0
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetVolumeMultiplier
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              VolumeMultiplier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetVolumeMultiplier(float VolumeMultiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetVolumeMultiplier");
        
        USynthComponent_SetVolumeMultiplier_Params params {};
        params.VolumeMultiplier = VolumeMultiplier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05411420
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetSubmixSend
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundSubmixBase*                          Submix                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SendLevel                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetSubmixSend(Engine::USoundSubmixBase* Submix, float SendLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetSubmixSend");
        
        USynthComponent_SetSubmixSend_Params params {};
        params.Submix = Submix;
        params.SendLevel = SendLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05411130
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetOutputToBusOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInOutputToBusOnly                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetOutputToBusOnly(bool bInOutputToBusOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetOutputToBusOnly");
        
        USynthComponent_SetOutputToBusOnly_Params params {};
        params.bInOutputToBusOnly = bInOutputToBusOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05411230
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetLowPassFilterFrequency
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InLowPassFilterFrequency                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetLowPassFilterFrequency(float InLowPassFilterFrequency)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetLowPassFilterFrequency");
        
        USynthComponent_SetLowPassFilterFrequency_Params params {};
        params.InLowPassFilterFrequency = InLowPassFilterFrequency;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05411320
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetLowPassFilterEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InLowPassFilterEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetLowPassFilterEnabled(bool InLowPassFilterEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetLowPassFilterEnabled");
        
        USynthComponent_SetLowPassFilterEnabled_Params params {};
        params.InLowPassFilterEnabled = InLowPassFilterEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x054116D0
     *         Name   -> Function /Script/AudioMixer.SynthComponent.IsPlaying
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USynthComponent::IsPlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.IsPlaying");
        
        USynthComponent_IsPlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05410C10
     *         Name   -> Function /Script/AudioMixer.SynthComponent.FadeOut
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         float                                              FadeOutDuration                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FadeVolumeLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAudioFaderCurve                           FadeCurve                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::FadeOut(float FadeOutDuration, float FadeVolumeLevel, Engine::EAudioFaderCurve FadeCurve)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.FadeOut");
        
        USynthComponent_FadeOut_Params params {};
        params.FadeOutDuration = FadeOutDuration;
        params.FadeVolumeLevel = FadeVolumeLevel;
        params.FadeCurve = FadeCurve;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05410E50
     *         Name   -> Function /Script/AudioMixer.SynthComponent.FadeIn
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         float                                              FadeInDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FadeVolumeLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAudioFaderCurve                           FadeCurve                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime, Engine::EAudioFaderCurve FadeCurve)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.FadeIn");
        
        USynthComponent_FadeIn_Params params {};
        params.FadeInDuration = FadeInDuration;
        params.FadeVolumeLevel = FadeVolumeLevel;
        params.StartTime = StartTime;
        params.FadeCurve = FadeCurve;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x054109C0
     *         Name   -> Function /Script/AudioMixer.SynthComponent.AdjustVolume
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         float                                              AdjustVolumeDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AdjustVolumeLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAudioFaderCurve                           FadeCurve                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel, Engine::EAudioFaderCurve FadeCurve)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.AdjustVolume");
        
        USynthComponent_AdjustVolume_Params params {};
        params.AdjustVolumeDuration = AdjustVolumeDuration;
        params.AdjustVolumeLevel = AdjustVolumeLevel;
        params.FadeCurve = FadeCurve;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053D9660
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.TrimAudioCache
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMegabytesToFree                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAudioMixerBlueprintLibrary::STATIC_TrimAudioCache(float InMegabytesToFree)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.TrimAudioCache");
        
        UAudioMixerBlueprintLibrary_TrimAudioCache_Params params {};
        params.InMegabytesToFree = InMegabytesToFree;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053D88B0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SwapAudioOutputDevice
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                NewDeviceId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnCompletedDeviceSwap                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_SwapAudioOutputDevice(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& NewDeviceId, const BasicTypes::UScriptDelegate& OnCompletedDeviceSwap)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SwapAudioOutputDevice");
        
        UAudioMixerBlueprintLibrary_SwapAudioOutputDevice_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.NewDeviceId = NewDeviceId;
        params.OnCompletedDeviceSwap = OnCompletedDeviceSwap;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DCC00
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAudioRecordingExportType                  ExportType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToRecord                                             (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundWave*                                ExistingSoundWaveToOverwrite                               (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundWave*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::USoundWave* UAudioMixerBlueprintLibrary::STATIC_StopRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::EAudioRecordingExportType ExportType, const BasicTypes::FString& Name, const BasicTypes::FString& Path, Engine::USoundSubmix* SubmixToRecord, Engine::USoundWave* ExistingSoundWaveToOverwrite)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopRecordingOutput");
        
        UAudioMixerBlueprintLibrary_StopRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ExportType = ExportType;
        params.Name = Name;
        params.Path = Path;
        params.SubmixToRecord = SubmixToRecord;
        params.ExistingSoundWaveToOverwrite = ExistingSoundWaveToOverwrite;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053D9110
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopAudioBus
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAudioBus*                                 AudioBus                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_StopAudioBus(CoreUObject::UObject* WorldContextObject, Engine::UAudioBus* AudioBus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopAudioBus");
        
        UAudioMixerBlueprintLibrary_StopAudioBus_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AudioBus = AudioBus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DBEB0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopAnalyzingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToStopAnalyzing                                      (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_StopAnalyzingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToStopAnalyzing)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopAnalyzingOutput");
        
        UAudioMixerBlueprintLibrary_StopAnalyzingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixToStopAnalyzing = SubmixToStopAnalyzing;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DD010
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ExpectedDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToRecord                                             (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_StartRecordingOutput(CoreUObject::UObject* WorldContextObject, float ExpectedDuration, Engine::USoundSubmix* SubmixToRecord)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartRecordingOutput");
        
        UAudioMixerBlueprintLibrary_StartRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ExpectedDuration = ExpectedDuration;
        params.SubmixToRecord = SubmixToRecord;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053D93B0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartAudioBus
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAudioBus*                                 AudioBus                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_StartAudioBus(CoreUObject::UObject* WorldContextObject, Engine::UAudioBus* AudioBus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartAudioBus");
        
        UAudioMixerBlueprintLibrary_StartAudioBus_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AudioBus = AudioBus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DC140
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartAnalyzingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToAnalyze                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EFFTSize                                   FFTSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EFFTPeakInterpolationMethod                InterpolationMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EFFTWindowType                             WindowType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              HopSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAudioSpectrumType                         SpectrumType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_StartAnalyzingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToAnalyze, Engine::EFFTSize FFTSize, Engine::EFFTPeakInterpolationMethod InterpolationMethod, Engine::EFFTWindowType WindowType, float HopSize, Engine::EAudioSpectrumType SpectrumType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartAnalyzingOutput");
        
        UAudioMixerBlueprintLibrary_StartAnalyzingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixToAnalyze = SubmixToAnalyze;
        params.FFTSize = FFTSize;
        params.InterpolationMethod = InterpolationMethod;
        params.WindowType = WindowType;
        params.HopSize = HopSize;
        params.SpectrumType = SpectrumType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DD6D0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SetSubmixEffectChainOverride
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::USoundEffectSubmixPreset*> SubmixEffectPresetChain                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         float                                              FadeTimeSec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_SetSubmixEffectChainOverride(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, BasicTypes::TArray<Engine::USoundEffectSubmixPreset*> SubmixEffectPresetChain, float FadeTimeSec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SetSubmixEffectChainOverride");
        
        UAudioMixerBlueprintLibrary_SetSubmixEffectChainOverride_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.SubmixEffectPresetChain = SubmixEffectPresetChain;
        params.FadeTimeSec = FadeTimeSec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053D9E00
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SetBypassSourceEffectChainEntry
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EntryIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bBypassed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_SetBypassSourceEffectChainEntry(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, int32_t EntryIndex, bool bBypassed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SetBypassSourceEffectChainEntry");
        
        UAudioMixerBlueprintLibrary_SetBypassSourceEffectChainEntry_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        params.EntryIndex = EntryIndex;
        params.bBypassed = bBypassed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DC6E0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ResumeRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToPause                                              (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ResumeRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToPause)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ResumeRecordingOutput");
        
        UAudioMixerBlueprintLibrary_ResumeRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixToPause = SubmixToPause;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DDD70
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ReplaceSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              InSoundSubmix                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SubmixChainIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ReplaceSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* InSoundSubmix, int32_t SubmixChainIndex, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ReplaceSubmixEffect");
        
        UAudioMixerBlueprintLibrary_ReplaceSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InSoundSubmix = InSoundSubmix;
        params.SubmixChainIndex = SubmixChainIndex;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DDD70
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ReplaceSoundEffectSubmix
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              InSoundSubmix                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SubmixChainIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ReplaceSoundEffectSubmix(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* InSoundSubmix, int32_t SubmixChainIndex, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ReplaceSoundEffectSubmix");
        
        UAudioMixerBlueprintLibrary_ReplaceSoundEffectSubmix_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InSoundSubmix = InSoundSubmix;
        params.SubmixChainIndex = SubmixChainIndex;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DE210
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffectPresetAtIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SubmixChainIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveSubmixEffectPresetAtIndex(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, int32_t SubmixChainIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffectPresetAtIndex");
        
        UAudioMixerBlueprintLibrary_RemoveSubmixEffectPresetAtIndex_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.SubmixChainIndex = SubmixChainIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DE410
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffectPreset
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveSubmixEffectPreset(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffectPreset");
        
        UAudioMixerBlueprintLibrary_RemoveSubmixEffectPreset_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DE210
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffectAtIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SubmixChainIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveSubmixEffectAtIndex(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, int32_t SubmixChainIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffectAtIndex");
        
        UAudioMixerBlueprintLibrary_RemoveSubmixEffectAtIndex_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.SubmixChainIndex = SubmixChainIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DE410
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSubmixEffect");
        
        UAudioMixerBlueprintLibrary_RemoveSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DA290
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSourceEffectFromPresetChain
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EntryIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveSourceEffectFromPresetChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, int32_t EntryIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSourceEffectFromPresetChain");
        
        UAudioMixerBlueprintLibrary_RemoveSourceEffectFromPresetChain_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        params.EntryIndex = EntryIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DEC80
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveMasterSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveMasterSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveMasterSubmixEffect");
        
        UAudioMixerBlueprintLibrary_RemoveMasterSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053D98C0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PrimeSoundForPlayback
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundWave*                                SoundWave                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnLoadCompletion                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_PrimeSoundForPlayback(Engine::USoundWave* SoundWave, const BasicTypes::UScriptDelegate& OnLoadCompletion)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PrimeSoundForPlayback");
        
        UAudioMixerBlueprintLibrary_PrimeSoundForPlayback_Params params {};
        params.SoundWave = SoundWave;
        params.OnLoadCompletion = OnLoadCompletion;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053D97D0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PrimeSoundCueForPlayback
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundCue*                                 SoundCue                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_PrimeSoundCueForPlayback(Engine::USoundCue* SoundCue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PrimeSoundCueForPlayback");
        
        UAudioMixerBlueprintLibrary_PrimeSoundCueForPlayback_Params params {};
        params.SoundCue = SoundCue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DC970
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PauseRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToPause                                              (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_PauseRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToPause)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PauseRecordingOutput");
        
        UAudioMixerBlueprintLibrary_PauseRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixToPause = SubmixToPause;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DB2B0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.MakePresetSpectralAnalysisBandSettings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::EAudioSpectrumBandPresetType               InBandPresetType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InNumBands                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InAttackTimeMsec                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InReleaseTimeMsec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::FSoundSubmixSpectralAnalysisBandSettings> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::FSoundSubmixSpectralAnalysisBandSettings> UAudioMixerBlueprintLibrary::STATIC_MakePresetSpectralAnalysisBandSettings(Engine::EAudioSpectrumBandPresetType InBandPresetType, int32_t InNumBands, int32_t InAttackTimeMsec, int32_t InReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.MakePresetSpectralAnalysisBandSettings");
        
        UAudioMixerBlueprintLibrary_MakePresetSpectralAnalysisBandSettings_Params params {};
        params.InBandPresetType = InBandPresetType;
        params.InNumBands = InNumBands;
        params.InAttackTimeMsec = InAttackTimeMsec;
        params.InReleaseTimeMsec = InReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053DB9F0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.MakeMusicalSpectralAnalysisBandSettings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         int32_t                                            InNumSemitones                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::EMusicalNoteName                       InStartingMusicalNote                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InStartingOctave                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InAttackTimeMsec                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InReleaseTimeMsec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::FSoundSubmixSpectralAnalysisBandSettings> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::FSoundSubmixSpectralAnalysisBandSettings> UAudioMixerBlueprintLibrary::STATIC_MakeMusicalSpectralAnalysisBandSettings(int32_t InNumSemitones, AudioMixer::EMusicalNoteName InStartingMusicalNote, int32_t InStartingOctave, int32_t InAttackTimeMsec, int32_t InReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.MakeMusicalSpectralAnalysisBandSettings");
        
        UAudioMixerBlueprintLibrary_MakeMusicalSpectralAnalysisBandSettings_Params params {};
        params.InNumSemitones = InNumSemitones;
        params.InStartingMusicalNote = InStartingMusicalNote;
        params.InStartingOctave = InStartingOctave;
        params.InAttackTimeMsec = InAttackTimeMsec;
        params.InReleaseTimeMsec = InReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053DB640
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.MakeFullSpectrumSpectralAnalysisBandSettings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         int32_t                                            InNumBands                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InMinimumFrequency                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InMaximumFrequency                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InAttackTimeMsec                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InReleaseTimeMsec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::FSoundSubmixSpectralAnalysisBandSettings> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::FSoundSubmixSpectralAnalysisBandSettings> UAudioMixerBlueprintLibrary::STATIC_MakeFullSpectrumSpectralAnalysisBandSettings(int32_t InNumBands, float InMinimumFrequency, float InMaximumFrequency, int32_t InAttackTimeMsec, int32_t InReleaseTimeMsec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.MakeFullSpectrumSpectralAnalysisBandSettings");
        
        UAudioMixerBlueprintLibrary_MakeFullSpectrumSpectralAnalysisBandSettings_Params params {};
        params.InNumBands = InNumBands;
        params.InMinimumFrequency = InMinimumFrequency;
        params.InMaximumFrequency = InMaximumFrequency;
        params.InAttackTimeMsec = InAttackTimeMsec;
        params.InReleaseTimeMsec = InReleaseTimeMsec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053D8E30
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.IsAudioBusActive
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UAudioBus*                                 AudioBus                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAudioMixerBlueprintLibrary::STATIC_IsAudioBusActive(CoreUObject::UObject* WorldContextObject, Engine::UAudioBus* AudioBus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.IsAudioBusActive");
        
        UAudioMixerBlueprintLibrary_IsAudioBusActive_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AudioBus = AudioBus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053DAAF0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetPhaseForFrequencies
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          Frequencies                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          Phases                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToAnalyze                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_GetPhaseForFrequencies(CoreUObject::UObject* WorldContextObject, BasicTypes::TArray<float> Frequencies, BasicTypes::TArray<float>* Phases, Engine::USoundSubmix* SubmixToAnalyze)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetPhaseForFrequencies");
        
        UAudioMixerBlueprintLibrary_GetPhaseForFrequencies_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Frequencies = Frequencies;
        params.SubmixToAnalyze = SubmixToAnalyze;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Phases != nullptr)
            *Phases = params.Phases;
    }

    /**
     * Function:
     *         RVA    -> 0x053D9B20
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetNumberOfEntriesInSourceEffectChain
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAudioMixerBlueprintLibrary::STATIC_GetNumberOfEntriesInSourceEffectChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetNumberOfEntriesInSourceEffectChain");
        
        UAudioMixerBlueprintLibrary_GetNumberOfEntriesInSourceEffectChain_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053DAED0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetMagnitudeForFrequencies
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          Frequencies                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          Magnitudes                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToAnalyze                                            (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_GetMagnitudeForFrequencies(CoreUObject::UObject* WorldContextObject, BasicTypes::TArray<float> Frequencies, BasicTypes::TArray<float>* Magnitudes, Engine::USoundSubmix* SubmixToAnalyze)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetMagnitudeForFrequencies");
        
        UAudioMixerBlueprintLibrary_GetMagnitudeForFrequencies_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Frequencies = Frequencies;
        params.SubmixToAnalyze = SubmixToAnalyze;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Magnitudes != nullptr)
            *Magnitudes = params.Magnitudes;
    }

    /**
     * Function:
     *         RVA    -> 0x053D8AF0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetCurrentAudioOutputDeviceName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnObtainCurrentDeviceEvent                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_GetCurrentAudioOutputDeviceName(CoreUObject::UObject* WorldContextObject, const BasicTypes::UScriptDelegate& OnObtainCurrentDeviceEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetCurrentAudioOutputDeviceName");
        
        UAudioMixerBlueprintLibrary_GetCurrentAudioOutputDeviceName_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.OnObtainCurrentDeviceEvent = OnObtainCurrentDeviceEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053D8C90
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetAvailableAudioOutputDevices
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnObtainDevicesEvent                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_GetAvailableAudioOutputDevices(CoreUObject::UObject* WorldContextObject, const BasicTypes::UScriptDelegate& OnObtainDevicesEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetAvailableAudioOutputDevices");
        
        UAudioMixerBlueprintLibrary_GetAvailableAudioOutputDevices_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.OnObtainDevicesEvent = OnObtainDevicesEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DF340
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.Conv_AudioOutputDeviceInfoToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AudioMixer::FAudioOutputDeviceInfo                 Info                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAudioMixerBlueprintLibrary::STATIC_Conv_AudioOutputDeviceInfoToString(const AudioMixer::FAudioOutputDeviceInfo& Info)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.Conv_AudioOutputDeviceInfoToString");
        
        UAudioMixerBlueprintLibrary_Conv_AudioOutputDeviceInfoToString_Params params {};
        params.Info = Info;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053DD9D0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearSubmixEffects
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ClearSubmixEffects(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearSubmixEffects");
        
        UAudioMixerBlueprintLibrary_ClearSubmixEffects_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DD370
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearSubmixEffectChainOverride
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FadeTimeSec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ClearSubmixEffectChainOverride(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, float FadeTimeSec)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearSubmixEffectChainOverride");
        
        UAudioMixerBlueprintLibrary_ClearSubmixEffectChainOverride_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.FadeTimeSec = FadeTimeSec;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DEA20
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearMasterSubmixEffects
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ClearMasterSubmixEffects(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearMasterSubmixEffects");
        
        UAudioMixerBlueprintLibrary_ClearMasterSubmixEffects_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DE610
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SoundSubmix                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAudioMixerBlueprintLibrary::STATIC_AddSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SoundSubmix, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddSubmixEffect");
        
        UAudioMixerBlueprintLibrary_AddSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SoundSubmix = SoundSubmix;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x053DA6D0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddSourceEffectToPresetChain
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FSourceEffectChainEntry                    Entry                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_AddSourceEffectToPresetChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, const Engine::FSourceEffectChainEntry& Entry)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddSourceEffectToPresetChain");
        
        UAudioMixerBlueprintLibrary_AddSourceEffectToPresetChain_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        params.Entry = Entry;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x053DEF80
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddMasterSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_AddMasterSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddMasterSubmixEffect");
        
        UAudioMixerBlueprintLibrary_AddMasterSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05414100
     *         Name   -> Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioMixer::FSubmixEffectDynamicsProcessorSettings Settings                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDynamicsProcessorPreset::SetSettings(const AudioMixer::FSubmixEffectDynamicsProcessorSettings& Settings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetSettings");
        
        USubmixEffectDynamicsProcessorPreset_SetSettings_Params params {};
        params.Settings = Settings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05414310
     *         Name   -> Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetExternalSubmix
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundSubmix*                              Submix                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDynamicsProcessorPreset::SetExternalSubmix(Engine::USoundSubmix* Submix)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetExternalSubmix");
        
        USubmixEffectDynamicsProcessorPreset_SetExternalSubmix_Params params {};
        params.Submix = Submix;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05414470
     *         Name   -> Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetAudioBus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UAudioBus*                                 AudioBus                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDynamicsProcessorPreset::SetAudioBus(Engine::UAudioBus* AudioBus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetAudioBus");
        
        USubmixEffectDynamicsProcessorPreset_SetAudioBus_Params params {};
        params.AudioBus = AudioBus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x054145E0
     *         Name   -> Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.ResetKey
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USubmixEffectDynamicsProcessorPreset::ResetKey()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.ResetKey");
        
        USubmixEffectDynamicsProcessorPreset_ResetKey_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02993370
     *         Name   -> Function /Script/AudioMixer.SubmixEffectSubmixEQPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioMixer::FSubmixEffectSubmixEQSettings          InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectSubmixEQPreset::SetSettings(const AudioMixer::FSubmixEffectSubmixEQSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectSubmixEQPreset.SetSettings");
        
        USubmixEffectSubmixEQPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05417630
     *         Name   -> Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettingsWithReverbEffect
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UReverbEffect*                             InReverbEffect                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              WetLevel                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DryLevel                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectReverbPreset::SetSettingsWithReverbEffect(Engine::UReverbEffect* InReverbEffect, float WetLevel, float DryLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettingsWithReverbEffect");
        
        USubmixEffectReverbPreset_SetSettingsWithReverbEffect_Params params {};
        params.InReverbEffect = InReverbEffect;
        params.WetLevel = WetLevel;
        params.DryLevel = DryLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x054178F0
     *         Name   -> Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioMixer::FSubmixEffectReverbSettings            InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectReverbPreset::SetSettings(const AudioMixer::FSubmixEffectReverbSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettings");
        
        USubmixEffectReverbPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0541D330
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.UnsubscribeFromTimeDivision
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EQuartzCommandQuantization                 InQuantizationBoundary                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::UnsubscribeFromTimeDivision(CoreUObject::UObject* WorldContextObject, Engine::EQuartzCommandQuantization InQuantizationBoundary, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.UnsubscribeFromTimeDivision");
        
        UQuartzClockHandle_UnsubscribeFromTimeDivision_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InQuantizationBoundary = InQuantizationBoundary;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541D1A0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.UnsubscribeFromAllTimeDivisions
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::UnsubscribeFromAllTimeDivisions(CoreUObject::UObject* WorldContextObject, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.UnsubscribeFromAllTimeDivisions");
        
        UQuartzClockHandle_UnsubscribeFromAllTimeDivisions_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541D790
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SubscribeToQuantizationEvent
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EQuartzCommandQuantization                 InQuantizationBoundary                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnQuantizationEvent                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SubscribeToQuantizationEvent(CoreUObject::UObject* WorldContextObject, Engine::EQuartzCommandQuantization InQuantizationBoundary, const BasicTypes::UScriptDelegate& OnQuantizationEvent, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SubscribeToQuantizationEvent");
        
        UQuartzClockHandle_SubscribeToQuantizationEvent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InQuantizationBoundary = InQuantizationBoundary;
        params.OnQuantizationEvent = OnQuantizationEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541D550
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SubscribeToAllQuantizationEvents
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnQuantizationEvent                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SubscribeToAllQuantizationEvents(CoreUObject::UObject* WorldContextObject, const BasicTypes::UScriptDelegate& OnQuantizationEvent, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SubscribeToAllQuantizationEvents");
        
        UQuartzClockHandle_SubscribeToAllQuantizationEvents_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.OnQuantizationEvent = OnQuantizationEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541EED0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.StopClock
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               CancelPendingEvents                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::StopClock(CoreUObject::UObject* WorldContextObject, bool CancelPendingEvents, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.StopClock");
        
        UQuartzClockHandle_StopClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CancelPendingEvents = CancelPendingEvents;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541DA70
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.StartOtherClock
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  OtherClockName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                InQuantizationBoundary                                     (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::StartOtherClock(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& OtherClockName, const Engine::FQuartzQuantizationBoundary& InQuantizationBoundary, const BasicTypes::UScriptDelegate& InDelegate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.StartOtherClock");
        
        UQuartzClockHandle_StartOtherClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.OtherClockName = OtherClockName;
        params.InQuantizationBoundary = InQuantizationBoundary;
        params.InDelegate = InDelegate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0541EB30
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.StartClock
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::StartClock(CoreUObject::UObject* WorldContextObject, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.StartClock");
        
        UQuartzClockHandle_StartClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541C8A0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SetTicksPerSecond
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                QuantizationBoundary                                       (ConstParm, Parm, OutParm, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TicksPerSecond                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SetTicksPerSecond(CoreUObject::UObject* WorldContextObject, const Engine::FQuartzQuantizationBoundary& QuantizationBoundary, const BasicTypes::UScriptDelegate& Delegate, AudioMixer::UQuartzClockHandle** ClockHandle, float TicksPerSecond)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SetTicksPerSecond");
        
        UQuartzClockHandle_SetTicksPerSecond_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QuantizationBoundary = QuantizationBoundary;
        params.Delegate = Delegate;
        params.TicksPerSecond = TicksPerSecond;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541BFA0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SetThirtySecondNotesPerMinute
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                QuantizationBoundary                                       (ConstParm, Parm, OutParm, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ThirtySecondsNotesPerMinute                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SetThirtySecondNotesPerMinute(CoreUObject::UObject* WorldContextObject, const Engine::FQuartzQuantizationBoundary& QuantizationBoundary, const BasicTypes::UScriptDelegate& Delegate, AudioMixer::UQuartzClockHandle** ClockHandle, float ThirtySecondsNotesPerMinute)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SetThirtySecondNotesPerMinute");
        
        UQuartzClockHandle_SetThirtySecondNotesPerMinute_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QuantizationBoundary = QuantizationBoundary;
        params.Delegate = Delegate;
        params.ThirtySecondsNotesPerMinute = ThirtySecondsNotesPerMinute;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541C430
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SetSecondsPerTick
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                QuantizationBoundary                                       (ConstParm, Parm, OutParm, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SecondsPerTick                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SetSecondsPerTick(CoreUObject::UObject* WorldContextObject, const Engine::FQuartzQuantizationBoundary& QuantizationBoundary, const BasicTypes::UScriptDelegate& Delegate, AudioMixer::UQuartzClockHandle** ClockHandle, float SecondsPerTick)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SetSecondsPerTick");
        
        UQuartzClockHandle_SetSecondsPerTick_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QuantizationBoundary = QuantizationBoundary;
        params.Delegate = Delegate;
        params.SecondsPerTick = SecondsPerTick;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541CD20
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SetMillisecondsPerTick
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                QuantizationBoundary                                       (ConstParm, Parm, OutParm, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MillisecondsPerTick                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SetMillisecondsPerTick(CoreUObject::UObject* WorldContextObject, const Engine::FQuartzQuantizationBoundary& QuantizationBoundary, const BasicTypes::UScriptDelegate& Delegate, AudioMixer::UQuartzClockHandle** ClockHandle, float MillisecondsPerTick)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SetMillisecondsPerTick");
        
        UQuartzClockHandle_SetMillisecondsPerTick_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QuantizationBoundary = QuantizationBoundary;
        params.Delegate = Delegate;
        params.MillisecondsPerTick = MillisecondsPerTick;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541BB10
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.SetBeatsPerMinute
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                QuantizationBoundary                                       (ConstParm, Parm, OutParm, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              BeatsPerMinute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::SetBeatsPerMinute(CoreUObject::UObject* WorldContextObject, const Engine::FQuartzQuantizationBoundary& QuantizationBoundary, const BasicTypes::UScriptDelegate& Delegate, AudioMixer::UQuartzClockHandle** ClockHandle, float BeatsPerMinute)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.SetBeatsPerMinute");
        
        UQuartzClockHandle_SetBeatsPerMinute_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QuantizationBoundary = QuantizationBoundary;
        params.Delegate = Delegate;
        params.BeatsPerMinute = BeatsPerMinute;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541EB30
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.ResumeClock
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::ResumeClock(CoreUObject::UObject* WorldContextObject, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.ResumeClock");
        
        UQuartzClockHandle_ResumeClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541E4A0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.ResetTransportQuantized
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzQuantizationBoundary                InQuantizationBoundary                                     (Parm, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::ResetTransportQuantized(CoreUObject::UObject* WorldContextObject, const Engine::FQuartzQuantizationBoundary& InQuantizationBoundary, const BasicTypes::UScriptDelegate& InDelegate, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.ResetTransportQuantized");
        
        UQuartzClockHandle_ResetTransportQuantized_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InQuantizationBoundary = InQuantizationBoundary;
        params.InDelegate = InDelegate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541E9A0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.ResetTransport
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::ResetTransport(CoreUObject::UObject* WorldContextObject, const BasicTypes::UScriptDelegate& InDelegate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.ResetTransport");
        
        UQuartzClockHandle_ResetTransport_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InDelegate = InDelegate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0541ED00
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.PauseClock
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ClockHandle                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzClockHandle::PauseClock(CoreUObject::UObject* WorldContextObject, AudioMixer::UQuartzClockHandle** ClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.PauseClock");
        
        UQuartzClockHandle_PauseClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClockHandle != nullptr)
            *ClockHandle = params.ClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0541E3B0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.IsClockRunning
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UQuartzClockHandle::IsClockRunning(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.IsClockRunning");
        
        UQuartzClockHandle_IsClockRunning_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541B8B0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetTicksPerSecond
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetTicksPerSecond(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetTicksPerSecond");
        
        UQuartzClockHandle_GetTicksPerSecond_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541B670
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetThirtySecondNotesPerMinute
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetThirtySecondNotesPerMinute(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetThirtySecondNotesPerMinute");
        
        UQuartzClockHandle_GetThirtySecondNotesPerMinute_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541B790
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetSecondsPerTick
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetSecondsPerTick(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetSecondsPerTick");
        
        UQuartzClockHandle_GetSecondsPerTick_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541B9F0
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetMillisecondsPerTick
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetMillisecondsPerTick(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetMillisecondsPerTick");
        
        UQuartzClockHandle_GetMillisecondsPerTick_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541DF90
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetEstimatedRunTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetEstimatedRunTime(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetEstimatedRunTime");
        
        UQuartzClockHandle_GetEstimatedRunTime_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541E180
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetDurationOfQuantizationTypeInSeconds
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EQuartzCommandQuantization                 QuantizationType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Multiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetDurationOfQuantizationTypeInSeconds(CoreUObject::UObject* WorldContextObject, Engine::EQuartzCommandQuantization QuantizationType, float Multiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetDurationOfQuantizationTypeInSeconds");
        
        UQuartzClockHandle_GetDurationOfQuantizationTypeInSeconds_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QuantizationType = QuantizationType;
        params.Multiplier = Multiplier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541E080
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetCurrentTimestamp
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzTransportTimeStamp                  ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Engine::FQuartzTransportTimeStamp UQuartzClockHandle::GetCurrentTimestamp(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetCurrentTimestamp");
        
        UQuartzClockHandle_GetCurrentTimestamp_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0541B550
     *         Name   -> Function /Script/AudioMixer.QuartzClockHandle.GetBeatsPerMinute
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzClockHandle::GetBeatsPerMinute(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzClockHandle.GetBeatsPerMinute");
        
        UQuartzClockHandle_GetBeatsPerMinute_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DC67F0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.IsQuartzEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UQuartzSubsystem::IsQuartzEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.IsQuartzEnabled");
        
        UQuartzSubsystem_IsQuartzEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424BA0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.IsClockRunning
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ClockName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UQuartzSubsystem::IsClockRunning(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& ClockName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.IsClockRunning");
        
        UQuartzSubsystem_IsClockRunning_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClockName = ClockName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05423ED0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetRoundTripMinLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetRoundTripMinLatency(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetRoundTripMinLatency");
        
        UQuartzSubsystem_GetRoundTripMinLatency_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05423D80
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetRoundTripMaxLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetRoundTripMaxLatency(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetRoundTripMaxLatency");
        
        UQuartzSubsystem_GetRoundTripMaxLatency_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424020
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetRoundTripAverageLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetRoundTripAverageLatency(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetRoundTripAverageLatency");
        
        UQuartzSubsystem_GetRoundTripAverageLatency_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424F40
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetHandleForClock
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ClockName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AudioMixer::UQuartzClockHandle* UQuartzSubsystem::GetHandleForClock(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& ClockName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetHandleForClock");
        
        UQuartzSubsystem_GetHandleForClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClockName = ClockName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054242C0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetGameThreadToAudioRenderThreadMinLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetGameThreadToAudioRenderThreadMinLatency(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetGameThreadToAudioRenderThreadMinLatency");
        
        UQuartzSubsystem_GetGameThreadToAudioRenderThreadMinLatency_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054242C0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetGameThreadToAudioRenderThreadMaxLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetGameThreadToAudioRenderThreadMaxLatency(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetGameThreadToAudioRenderThreadMaxLatency");
        
        UQuartzSubsystem_GetGameThreadToAudioRenderThreadMaxLatency_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054243C0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetGameThreadToAudioRenderThreadAverageLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetGameThreadToAudioRenderThreadAverageLatency(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetGameThreadToAudioRenderThreadAverageLatency");
        
        UQuartzSubsystem_GetGameThreadToAudioRenderThreadAverageLatency_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054244C0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetEstimatedClockRunTime
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InClockName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetEstimatedClockRunTime(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& InClockName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetEstimatedClockRunTime");
        
        UQuartzSubsystem_GetEstimatedClockRunTime_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InClockName = InClockName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424870
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetDurationOfQuantizationTypeInSeconds
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ClockName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EQuartzCommandQuantization                 QuantizationType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Multiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetDurationOfQuantizationTypeInSeconds(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& ClockName, Engine::EQuartzCommandQuantization QuantizationType, float Multiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetDurationOfQuantizationTypeInSeconds");
        
        UQuartzSubsystem_GetDurationOfQuantizationTypeInSeconds_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClockName = ClockName;
        params.QuantizationType = QuantizationType;
        params.Multiplier = Multiplier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424690
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetCurrentClockTimestamp
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InClockName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzTransportTimeStamp                  ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Engine::FQuartzTransportTimeStamp UQuartzSubsystem::GetCurrentClockTimestamp(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& InClockName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetCurrentClockTimestamp");
        
        UQuartzSubsystem_GetCurrentClockTimestamp_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.InClockName = InClockName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054241E0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetAudioRenderThreadToGameThreadMinLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetAudioRenderThreadToGameThreadMinLatency()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetAudioRenderThreadToGameThreadMinLatency");
        
        UQuartzSubsystem_GetAudioRenderThreadToGameThreadMinLatency_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424170
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetAudioRenderThreadToGameThreadMaxLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetAudioRenderThreadToGameThreadMaxLatency()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetAudioRenderThreadToGameThreadMaxLatency");
        
        UQuartzSubsystem_GetAudioRenderThreadToGameThreadMaxLatency_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424250
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.GetAudioRenderThreadToGameThreadAverageLatency
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UQuartzSubsystem::GetAudioRenderThreadToGameThreadAverageLatency()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.GetAudioRenderThreadToGameThreadAverageLatency");
        
        UQuartzSubsystem_GetAudioRenderThreadToGameThreadAverageLatency_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05424D70
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.DoesClockExist
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ClockName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UQuartzSubsystem::DoesClockExist(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& ClockName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.DoesClockExist");
        
        UQuartzSubsystem_DoesClockExist_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClockName = ClockName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05425290
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.DeleteClockByName
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ClockName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzSubsystem::DeleteClockByName(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& ClockName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.DeleteClockByName");
        
        UQuartzSubsystem_DeleteClockByName_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClockName = ClockName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x054250C0
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.DeleteClockByHandle
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    InClockHandle                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UQuartzSubsystem::DeleteClockByHandle(CoreUObject::UObject* WorldContextObject, AudioMixer::UQuartzClockHandle** InClockHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.DeleteClockByHandle");
        
        UQuartzSubsystem_DeleteClockByHandle_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InClockHandle != nullptr)
            *InClockHandle = params.InClockHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x05425450
     *         Name   -> Function /Script/AudioMixer.QuartzSubsystem.CreateNewClock
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ClockName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FQuartzClockSettings                       InSettings                                                 (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bOverrideSettingsIfClockExists                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUseAudioEngineClockManager                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AudioMixer::UQuartzClockHandle*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AudioMixer::UQuartzClockHandle* UQuartzSubsystem::CreateNewClock(CoreUObject::UObject* WorldContextObject, const BasicTypes::FName& ClockName, const Engine::FQuartzClockSettings& InSettings, bool bOverrideSettingsIfClockExists, bool bUseAudioEngineClockManager)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.QuartzSubsystem.CreateNewClock");
        
        UQuartzSubsystem_CreateNewClock_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ClockName = ClockName;
        params.InSettings = InSettings;
        params.bOverrideSettingsIfClockExists = bOverrideSettingsIfClockExists;
        params.bUseAudioEngineClockManager = bUseAudioEngineClockManager;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
