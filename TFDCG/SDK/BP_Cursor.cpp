/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/BP_Cursor_PARAMS.h"
#include "Headers/BP_Cursor_UBP_Cursor_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BP_Cursor
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Cursor/BP_Cursor.BP_Cursor_C.BP_ScaleCursorSize
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         float                                              Factor                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBP_Cursor_C::BP_ScaleCursorSize(float Factor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Cursor/BP_Cursor.BP_Cursor_C.BP_ScaleCursorSize");
        
        UBP_Cursor_C_BP_ScaleCursorSize_Params params {};
        params.Factor = Factor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Cursor/BP_Cursor.BP_Cursor_C.BP_SetCursorState
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         M1::EM1MouseCursorState                            InState                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBP_Cursor_C::BP_SetCursorState(M1::EM1MouseCursorState InState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Cursor/BP_Cursor.BP_Cursor_C.BP_SetCursorState");
        
        UBP_Cursor_C_BP_SetCursorState_Params params {};
        params.InState = InState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Cursor/BP_Cursor.BP_Cursor_C.ExecuteUbergraph_BP_Cursor
     *         Flags  -> (Final)
     * Parameters:
     *         int32_t                                            EntryPoint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UBP_Cursor_C::ExecuteUbergraph_BP_Cursor(int32_t EntryPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Cursor/BP_Cursor.BP_Cursor_C.ExecuteUbergraph_BP_Cursor");
        
        UBP_Cursor_C_ExecuteUbergraph_BP_Cursor_Params params {};
        params.EntryPoint = EntryPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
