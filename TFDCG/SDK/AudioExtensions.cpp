/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AudioExtensions_ENUMS.h"
#include "Headers/AudioExtensions_PARAMS.h"
#include "Headers/AudioExtensions_UAudioEndpointSettingsBase.h"
#include "Headers/AudioExtensions_USoundfieldEndpointSettingsBase.h"
#include "Headers/AudioExtensions_USoundfieldEncodingSettingsBase.h"
#include "Headers/AudioExtensions_USoundfieldEffectSettingsBase.h"
#include "Headers/AudioExtensions_USoundfieldEffectBase.h"
#include "Headers/AudioExtensions_UWaveformTransformationBase.h"
#include "Headers/AudioExtensions_UWaveformTransformationChain.h"
#include "Headers/AudioExtensions_USpatializationPluginSourceSettingsBase.h"
#include "Headers/AudioExtensions_USourceDataOverridePluginSourceSettingsBase.h"
#include "Headers/AudioExtensions_UOcclusionPluginSourceSettingsBase.h"
#include "Headers/AudioExtensions_UAudioPcmEncoderSettings.h"
#include "Headers/AudioExtensions_UReverbPluginSourceSettingsBase.h"
#include "Headers/AudioExtensions_IAudioParameterControllerInterface.h"
#include "Headers/AudioExtensions_UAudioCodecEncoderSettings.h"
#include "Headers/AudioExtensions_UDummyEndpointSettings.h"
#include "Headers/AudioExtensions_USoundModulatorBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioExtensions
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x050EEEE0
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetTriggerParameter
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetTriggerParameter(const BasicTypes::FName& InName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetTriggerParameter");
        
        IAudioParameterControllerInterface_SetTriggerParameter_Params params {};
        params.InName = InName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EE390
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetStringParameter
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InValue                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetStringParameter(const BasicTypes::FName& InName, const BasicTypes::FString& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetStringParameter");
        
        IAudioParameterControllerInterface_SetStringParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EE1B0
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetStringArrayParameter
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            InValue                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetStringArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<BasicTypes::FString> InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetStringArrayParameter");
        
        IAudioParameterControllerInterface_SetStringArrayParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EDCB0
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetParameters_Blueprint
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AudioExtensions::FAudioParameter> InParameters                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetParameters_Blueprint(BasicTypes::TArray<AudioExtensions::FAudioParameter> InParameters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetParameters_Blueprint");
        
        IAudioParameterControllerInterface_SetParameters_Blueprint_Params params {};
        params.InParameters = InParameters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EE030
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetObjectParameter
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              InValue                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetObjectParameter(const BasicTypes::FName& InName, CoreUObject::UObject* InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetObjectParameter");
        
        IAudioParameterControllerInterface_SetObjectParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EDE70
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetObjectArrayParameter
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::UObject*>          InValue                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetObjectArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<CoreUObject::UObject*> InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetObjectArrayParameter");
        
        IAudioParameterControllerInterface_SetObjectArrayParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EEA30
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetIntParameter
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            inInt                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetIntParameter(const BasicTypes::FName& InName, int32_t inInt)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetIntParameter");
        
        IAudioParameterControllerInterface_SetIntParameter_Params params {};
        params.InName = InName;
        params.inInt = inInt;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EE890
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetIntArrayParameter
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<int32_t>                        InValue                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetIntArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<int32_t> InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetIntArrayParameter");
        
        IAudioParameterControllerInterface_SetIntArrayParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EE700
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetFloatParameter
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InFloat                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetFloatParameter(const BasicTypes::FName& InName, float InFloat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetFloatParameter");
        
        IAudioParameterControllerInterface_SetFloatParameter_Params params {};
        params.InName = InName;
        params.InFloat = InFloat;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EE540
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetFloatArrayParameter
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          InValue                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetFloatArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<float> InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetFloatArrayParameter");
        
        IAudioParameterControllerInterface_SetFloatArrayParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EED50
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetBoolParameter
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               InBool                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetBoolParameter(const BasicTypes::FName& InName, bool InBool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetBoolParameter");
        
        IAudioParameterControllerInterface_SetBoolParameter_Params params {};
        params.InName = InName;
        params.InBool = InBool;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x050EEBB0
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.SetBoolArrayParameter
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<bool>                           InValue                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::SetBoolArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<bool> InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.SetBoolArrayParameter");
        
        IAudioParameterControllerInterface_SetBoolArrayParameter_Params params {};
        params.InName = InName;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02B9DAF0
     *         Name   -> Function /Script/AudioExtensions.AudioParameterControllerInterface.ResetParameters
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void IAudioParameterControllerInterface::ResetParameters()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioExtensions.AudioParameterControllerInterface.ResetParameters");
        
        IAudioParameterControllerInterface_ResetParameters_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
