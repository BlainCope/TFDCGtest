/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/MovieScene_ENUMS.h"
#include "Headers/MovieScene_PARAMS.h"
#include "Headers/MovieScene_UMovieSceneSection.h"
#include "Headers/MovieScene_UMovieSceneSignedObject.h"
#include "Headers/MovieScene_UMovieSceneTrack.h"
#include "Headers/MovieScene_UMovieSceneNameableTrack.h"
#include "Headers/MovieScene_UMovieSceneHookSection.h"
#include "Headers/MovieScene_UMovieSceneSequence.h"
#include "Headers/MovieScene_UMovieSceneEntitySystem.h"
#include "Headers/MovieScene_UMovieSceneSubTrack.h"
#include "Headers/MovieScene_UMovieSceneSequencePlayer.h"
#include "Headers/MovieScene_UMovieSceneEntityInstantiatorSystem.h"
#include "Headers/MovieScene_UMovieSceneEntitySystemLinker.h"
#include "Headers/MovieScene_UMovieSceneSubSection.h"
#include "Headers/MovieScene_IMovieSceneTrackTemplateProducer.h"
#include "Headers/MovieScene_UMovieSceneCompiledData.h"
#include "Headers/MovieScene_UMovieSceneCompiledDataManager.h"
#include "Headers/MovieScene_IMovieSceneEntityProvider.h"
#include "Headers/MovieScene_UMovieSceneBlenderSystem.h"
#include "Headers/MovieScene_UMovieSceneGenericBoundObjectInstantiator.h"
#include "Headers/MovieScene_UMovieSceneBoundSceneComponentInstantiator.h"
#include "Headers/MovieScene_IMovieSceneValueDecomposer.h"
#include "Headers/MovieScene_UMovieSceneEvalTimeSystem.h"
#include "Headers/MovieScene_UMovieSceneEvaluationHookSystem.h"
#include "Headers/MovieScene_IMovieScenePreAnimatedStateSystemInterface.h"
#include "Headers/MovieScene_IMovieSceneBlenderSystemSupport.h"
#include "Headers/MovieScene_UMovieSceneCachePreAnimatedStateSystem.h"
#include "Headers/MovieScene_UMovieSceneRestorePreAnimatedStateSystem.h"
#include "Headers/MovieScene_UMovieSceneRootInstantiatorSystem.h"
#include "Headers/MovieScene_UMovieSceneSpawnablesSystem.h"
#include "Headers/MovieScene_IMovieSceneChannelOverrideProvider.h"
#include "Headers/MovieScene_IMovieSceneDeterminismSource.h"
#include "Headers/MovieScene_IMovieSceneEvaluationHook.h"
#include "Headers/MovieScene_IMovieScenePlaybackClient.h"
#include "Headers/MovieScene_UMovieSceneTrackInstance.h"
#include "Headers/MovieScene_UMovieSceneTrackInstanceInstantiator.h"
#include "Headers/MovieScene_UMovieSceneTrackInstanceSystem.h"
#include "Headers/MovieScene_IMovieSceneCustomClockSource.h"
#include "Headers/MovieScene_UMovieSceneBuiltInEasingFunction.h"
#include "Headers/MovieScene_UMovieSceneEasingExternalCurve.h"
#include "Headers/MovieScene_INodeAndChannelMappings.h"
#include "Headers/MovieScene_UMovieSceneNodeGroup.h"
#include "Headers/MovieScene_UMovieSceneNodeGroupCollection.h"
#include "Headers/MovieScene_UMovieScene.h"
#include "Headers/MovieScene_UMovieSceneBindingOverrides.h"
#include "Headers/MovieScene_UMovieSceneFolder.h"
#include "Headers/MovieScene_UMovieSceneSequenceTickManager.h"
#include "Headers/MovieScene_IMovieSceneSequencePlayerObserver.h"
#include "Headers/MovieScene_IMovieSceneBindingOwnerInterface.h"
#include "Headers/MovieScene_IMovieSceneCachedTrack.h"
#include "Headers/MovieScene_IMovieSceneEasingFunction.h"
#include "Headers/MovieScene_IMovieSceneKeyProxy.h"
#include "Headers/MovieScene_UMovieSceneBoolSection.h"
#include "Headers/MovieScene_UMovieSceneSpawnSection.h"
#include "Headers/MovieScene_IMovieSceneSequenceTickManagerClient.h"
#include "Headers/MovieScene_UTestMovieSceneTrack.h"
#include "Headers/MovieScene_UTestMovieSceneSection.h"
#include "Headers/MovieScene_UMovieSceneChannelOverrideContainer.h"
#include "Headers/MovieScene_UMovieSceneSectionChannelOverrideRegistry.h"
#include "Headers/MovieScene_UTestMovieSceneSequence.h"
#include "Headers/MovieScene_UTestMovieSceneSubTrack.h"
#include "Headers/MovieScene_UTestMovieSceneSubSection.h"
#include "Headers/MovieScene_UTestMovieSceneEvalHookTrack.h"
#include "Headers/MovieScene_UTestMovieSceneEvalHookSection.h"
#include "Headers/MovieScene_UMovieSceneSpawnTrack.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieScene
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x04F685B0
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetRowIndex
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            NewRowIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetRowIndex(int32_t NewRowIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetRowIndex");
        
        UMovieSceneSection_SetRowIndex_Params params {};
        params.NewRowIndex = NewRowIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68130
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetPreRollFrames
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InPreRollFrames                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetPreRollFrames(int32_t InPreRollFrames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetPreRollFrames");
        
        UMovieSceneSection_SetPreRollFrames_Params params {};
        params.InPreRollFrames = InPreRollFrames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68040
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetPostRollFrames
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InPostRollFrames                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetPostRollFrames(int32_t InPostRollFrames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetPostRollFrames");
        
        UMovieSceneSection_SetPostRollFrames_Params params {};
        params.InPostRollFrames = InPostRollFrames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F684A0
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetOverlapPriority
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            NewPriority                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetOverlapPriority(int32_t NewPriority)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetOverlapPriority");
        
        UMovieSceneSection_SetOverlapPriority_Params params {};
        params.NewPriority = NewPriority;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68250
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetIsLocked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInIsLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetIsLocked(bool bInIsLocked)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetIsLocked");
        
        UMovieSceneSection_SetIsLocked_Params params {};
        params.bInIsLocked = bInIsLocked;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68380
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetIsActive
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInIsActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetIsActive(bool bInIsActive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetIsActive");
        
        UMovieSceneSection_SetIsActive_Params params {};
        params.bInIsActive = bInIsActive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F687C0
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetCompletionMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::EMovieSceneCompletionMode              InCompletionMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetCompletionMode(MovieScene::EMovieSceneCompletionMode InCompletionMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetCompletionMode");
        
        UMovieSceneSection_SetCompletionMode_Params params {};
        params.InCompletionMode = InCompletionMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F67F50
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetColorTint
     *         Flags  -> (Final, RequiredAPI, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FColor                                InColorTint                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetColorTint(const CoreUObject::FColor& InColorTint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetColorTint");
        
        UMovieSceneSection_SetColorTint_Params params {};
        params.InColorTint = InColorTint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F686A0
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.SetBlendType
     *         Flags  -> (RequiredAPI, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::EMovieSceneBlendType                   InBlendType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSection::SetBlendType(MovieScene::EMovieSceneBlendType InBlendType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.SetBlendType");
        
        UMovieSceneSection_SetBlendType_Params params {};
        params.InBlendType = InBlendType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68220
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.IsLocked
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSection::IsLocked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.IsLocked");
        
        UMovieSceneSection_IsLocked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68350
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.IsActive
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSection::IsActive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.IsActive");
        
        UMovieSceneSection_IsActive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68590
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetRowIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSection::GetRowIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetRowIndex");
        
        UMovieSceneSection_GetRowIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029A28F0
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetPreRollFrames
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSection::GetPreRollFrames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetPreRollFrames");
        
        UMovieSceneSection_GetPreRollFrames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68020
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetPostRollFrames
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSection::GetPostRollFrames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetPostRollFrames");
        
        UMovieSceneSection_GetPostRollFrames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68480
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetOverlapPriority
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSection::GetOverlapPriority()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetOverlapPriority");
        
        UMovieSceneSection_GetOverlapPriority_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D56560
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetCompletionMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::EMovieSceneCompletionMode              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::EMovieSceneCompletionMode UMovieSceneSection::GetCompletionMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetCompletionMode");
        
        UMovieSceneSection_GetCompletionMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F67F20
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetColorTint
     *         Flags  -> (Final, RequiredAPI, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FColor                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FColor UMovieSceneSection::GetColorTint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetColorTint");
        
        UMovieSceneSection_GetColorTint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F68790
     *         Name   -> Function /Script/MovieScene.MovieSceneSection.GetBlendType
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::FOptionalMovieSceneBlendType           ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    MovieScene::FOptionalMovieSceneBlendType UMovieSceneSection::GetBlendType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSection.GetBlendType");
        
        UMovieSceneSection_GetBlendType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6A8F0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequence.GetEarliestTimecodeSource
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::FMovieSceneTimecodeSource              ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneTimecodeSource UMovieSceneSequence::GetEarliestTimecodeSource()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequence.GetEarliestTimecodeSource");
        
        UMovieSceneSequence_GetEarliestTimecodeSource_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6A930
     *         Name   -> Function /Script/MovieScene.MovieSceneSequence.FindBindingsByTag
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  InBindingName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneObjectBindingID> ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneObjectBindingID> UMovieSceneSequence::FindBindingsByTag(const BasicTypes::FName& InBindingName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequence.FindBindingsByTag");
        
        UMovieSceneSequence_FindBindingsByTag_Params params {};
        params.InBindingName = InBindingName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6AA30
     *         Name   -> Function /Script/MovieScene.MovieSceneSequence.FindBindingByTag
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  InBindingName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneSequence::FindBindingByTag(const BasicTypes::FName& InBindingName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequence.FindBindingByTag");
        
        UMovieSceneSequence_FindBindingByTag_Params params {};
        params.InBindingName = InBindingName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E0B0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.StopAtCurrentTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::StopAtCurrentTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.StopAtCurrentTime");
        
        UMovieSceneSequencePlayer_StopAtCurrentTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E0E0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.Stop
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::Stop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.Stop");
        
        UMovieSceneSequencePlayer_Stop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DCA0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetWeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         double                                             InWeight                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetWeight(double InWeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetWeight");
        
        UMovieSceneSequencePlayer_SetWeight_Params params {};
        params.InWeight = InWeight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D7C0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetTimeRange
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetTimeRange(float StartTime, float Duration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetTimeRange");
        
        UMovieSceneSequencePlayer_SetTimeRange_Params params {};
        params.StartTime = StartTime;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C7A0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetPlayRate
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetPlayRate(float PlayRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetPlayRate");
        
        UMovieSceneSequencePlayer_SetPlayRate_Params params {};
        params.PlayRate = PlayRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D430
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetPlaybackPosition
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneSequencePlaybackParams      PlaybackParams                                             (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetPlaybackPosition(const MovieScene::FMovieSceneSequencePlaybackParams& PlaybackParams)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetPlaybackPosition");
        
        UMovieSceneSequencePlayer_SetPlaybackPosition_Params params {};
        params.PlaybackParams = PlaybackParams;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DE40
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetFrameRate
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameRate                            FrameRate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetFrameRate(const CoreUObject::FFrameRate& FrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetFrameRate");
        
        UMovieSceneSequencePlayer_SetFrameRate_Params params {};
        params.FrameRate = FrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DA40
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetFrameRange
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            StartFrame                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrames                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetFrameRange(int32_t StartFrame, int32_t Duration, float SubFrames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetFrameRange");
        
        UMovieSceneSequencePlayer_SetFrameRange_Params params {};
        params.StartFrame = StartFrame;
        params.Duration = Duration;
        params.SubFrames = SubFrames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C6A0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.SetDisableCameraCuts
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInDisableCameraCuts                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::SetDisableCameraCuts(bool bInDisableCameraCuts)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.SetDisableCameraCuts");
        
        UMovieSceneSequencePlayer_SetDisableCameraCuts_Params params {};
        params.bInDisableCameraCuts = bInDisableCameraCuts;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6CEA0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.ScrubToSeconds
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::ScrubToSeconds(float TimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.ScrubToSeconds");
        
        UMovieSceneSequencePlayer_ScrubToSeconds_Params params {};
        params.TimeInSeconds = TimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6CAB0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.ScrubToMarkedFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InLabel                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::ScrubToMarkedFrame(const BasicTypes::FString& InLabel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.ScrubToMarkedFrame");
        
        UMovieSceneSequencePlayer_ScrubToMarkedFrame_Params params {};
        params.InLabel = InLabel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D1D0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.ScrubToFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameTime                            NewPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::ScrubToFrame(const CoreUObject::FFrameTime& NewPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.ScrubToFrame");
        
        UMovieSceneSequencePlayer_ScrubToFrame_Params params {};
        params.NewPosition = NewPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E100
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.Scrub
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::Scrub()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.Scrub");
        
        UMovieSceneSequencePlayer_Scrub_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6BFE0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.RPC_OnStopEvent
     *         Flags  -> (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
     * Parameters:
     *         CoreUObject::FFrameTime                            StoppedTime                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::RPC_OnStopEvent(const CoreUObject::FFrameTime& StoppedTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.RPC_OnStopEvent");
        
        UMovieSceneSequencePlayer_RPC_OnStopEvent_Params params {};
        params.StoppedTime = StoppedTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6BEF0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.RPC_OnFinishPlaybackEvent
     *         Flags  -> (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
     * Parameters:
     *         CoreUObject::FFrameTime                            StoppedTime                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::RPC_OnFinishPlaybackEvent(const CoreUObject::FFrameTime& StoppedTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.RPC_OnFinishPlaybackEvent");
        
        UMovieSceneSequencePlayer_RPC_OnFinishPlaybackEvent_Params params {};
        params.StoppedTime = StoppedTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C0D0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.RPC_ExplicitServerUpdateEvent
     *         Flags  -> (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
     * Parameters:
     *         MovieScene::EUpdatePositionMethod                  Method                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            RelevantTime                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::RPC_ExplicitServerUpdateEvent(MovieScene::EUpdatePositionMethod Method, const CoreUObject::FFrameTime& RelevantTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.RPC_ExplicitServerUpdateEvent");
        
        UMovieSceneSequencePlayer_RPC_ExplicitServerUpdateEvent_Params params {};
        params.Method = Method;
        params.RelevantTime = RelevantTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D3F0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.RestoreState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::RestoreState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.RestoreState");
        
        UMovieSceneSequencePlayer_RestoreState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DC60
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.RemoveWeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::RemoveWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.RemoveWeight");
        
        UMovieSceneSequencePlayer_RemoveWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6CFB0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.PlayToSeconds
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::PlayToSeconds(float TimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.PlayToSeconds");
        
        UMovieSceneSequencePlayer_PlayToSeconds_Params params {};
        params.TimeInSeconds = TimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6CC20
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.PlayToMarkedFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InLabel                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::PlayToMarkedFrame(const BasicTypes::FString& InLabel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.PlayToMarkedFrame");
        
        UMovieSceneSequencePlayer_PlayToMarkedFrame_Params params {};
        params.InLabel = InLabel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D2E0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.PlayToFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameTime                            NewPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::PlayToFrame(const CoreUObject::FFrameTime& NewPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.PlayToFrame");
        
        UMovieSceneSequencePlayer_PlayToFrame_Params params {};
        params.NewPosition = NewPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D5B0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.PlayTo
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneSequencePlaybackParams      PlaybackParams                                             (Parm, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneSequencePlayToParams        PlayToParams                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::PlayTo(const MovieScene::FMovieSceneSequencePlaybackParams& PlaybackParams, const MovieScene::FMovieSceneSequencePlayToParams& PlayToParams)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.PlayTo");
        
        UMovieSceneSequencePlayer_PlayTo_Params params {};
        params.PlaybackParams = PlaybackParams;
        params.PlayToParams = PlayToParams;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E250
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.PlayReverse
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::PlayReverse()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.PlayReverse");
        
        UMovieSceneSequencePlayer_PlayReverse_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E140
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.PlayLooping
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            NumLoops                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::PlayLooping(int32_t NumLoops)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.PlayLooping");
        
        UMovieSceneSequencePlayer_PlayLooping_Params params {};
        params.NumLoops = NumLoops;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E270
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.Play
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::Play()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.Play");
        
        UMovieSceneSequencePlayer_Play_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E120
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.Pause
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::Pause()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.Pause");
        
        UMovieSceneSequencePlayer_Pause_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6CD90
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.JumpToSeconds
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::JumpToSeconds(float TimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.JumpToSeconds");
        
        UMovieSceneSequencePlayer_JumpToSeconds_Params params {};
        params.TimeInSeconds = TimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C940
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.JumpToMarkedFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InLabel                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::JumpToMarkedFrame(const BasicTypes::FString& InLabel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.JumpToMarkedFrame");
        
        UMovieSceneSequencePlayer_JumpToMarkedFrame_Params params {};
        params.InLabel = InLabel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6D0C0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.JumpToFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameTime                            NewPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::JumpToFrame(const CoreUObject::FFrameTime& NewPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.JumpToFrame");
        
        UMovieSceneSequencePlayer_JumpToFrame_Params params {};
        params.NewPosition = NewPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C8B0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.IsReversed
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::IsReversed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.IsReversed");
        
        UMovieSceneSequencePlayer_IsReversed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C910
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.IsPlaying
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::IsPlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.IsPlaying");
        
        UMovieSceneSequencePlayer_IsPlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C8E0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.IsPaused
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::IsPaused()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.IsPaused");
        
        UMovieSceneSequencePlayer_IsPaused_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E090
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GoToEndAndStop
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::GoToEndAndStop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GoToEndAndStop");
        
        UMovieSceneSequencePlayer_GoToEndAndStop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DDF0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetStartTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FQualifiedFrameTime UMovieSceneSequencePlayer::GetStartTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetStartTime");
        
        UMovieSceneSequencePlayer_GetStartTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C260
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetSequenceName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               bAddClientInfo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieSceneSequencePlayer::GetSequenceName(bool bAddClientInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetSequenceName");
        
        UMovieSceneSequencePlayer_GetSequenceName_Params params {};
        params.bAddClientInfo = bAddClientInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C3A0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneSequence* UMovieSceneSequencePlayer::GetSequence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetSequence");
        
        UMovieSceneSequencePlayer_GetSequence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C890
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetPlayRate
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequencePlayer::GetPlayRate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetPlayRate");
        
        UMovieSceneSequencePlayer_GetPlayRate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C3C0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetObjectBindings
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              InObject                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneObjectBindingID> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneObjectBindingID> UMovieSceneSequencePlayer::GetObjectBindings(CoreUObject::UObject* InObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetObjectBindings");
        
        UMovieSceneSequencePlayer_GetObjectBindings_Params params {};
        params.InObject = InObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02C60C80
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetFrameRate
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FFrameRate                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameRate UMovieSceneSequencePlayer::GetFrameRate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetFrameRate");
        
        UMovieSceneSequencePlayer_GetFrameRate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DFD0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetFrameDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequencePlayer::GetFrameDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetFrameDuration");
        
        UMovieSceneSequencePlayer_GetFrameDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DD90
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetEndTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FQualifiedFrameTime UMovieSceneSequencePlayer::GetEndTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetEndTime");
        
        UMovieSceneSequencePlayer_GetEndTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6DFF0
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FQualifiedFrameTime UMovieSceneSequencePlayer::GetDuration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetDuration");
        
        UMovieSceneSequencePlayer_GetDuration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C670
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetDisableCameraCuts
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequencePlayer::GetDisableCameraCuts()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetDisableCameraCuts");
        
        UMovieSceneSequencePlayer_GetDisableCameraCuts_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E060
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetCurrentTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FQualifiedFrameTime UMovieSceneSequencePlayer::GetCurrentTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetCurrentTime");
        
        UMovieSceneSequencePlayer_GetCurrentTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6C510
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.GetBoundObjects
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             ObjectBinding                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::UObject*>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::UObject*> UMovieSceneSequencePlayer::GetBoundObjects(const MovieScene::FMovieSceneObjectBindingID& ObjectBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.GetBoundObjects");
        
        UMovieSceneSequencePlayer_GetBoundObjects_Params params {};
        params.ObjectBinding = ObjectBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F6E230
     *         Name   -> Function /Script/MovieScene.MovieSceneSequencePlayer.ChangePlaybackDirection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneSequencePlayer::ChangePlaybackDirection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSequencePlayer.ChangePlaybackDirection");
        
        UMovieSceneSequencePlayer_ChangePlaybackDirection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F9A090
     *         Name   -> Function /Script/MovieScene.MovieSceneSubSection.SetSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSubSection::SetSequence(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSubSection.SetSequence");
        
        UMovieSceneSubSection_SetSequence_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02E4CDB0
     *         Name   -> Function /Script/MovieScene.MovieSceneSubSection.GetSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneSequence* UMovieSceneSubSection::GetSequence()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneSubSection.GetSequence");
        
        UMovieSceneSubSection_GetSequence_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04F4C060
     *         Name   -> Function /Script/MovieScene.MovieSceneCustomClockSource.OnTick
     *         Flags  -> (Native, Public)
     * Parameters:
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InPlayRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IMovieSceneCustomClockSource::OnTick(float DeltaSeconds, float InPlayRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneCustomClockSource.OnTick");
        
        IMovieSceneCustomClockSource_OnTick_Params params {};
        params.DeltaSeconds = DeltaSeconds;
        params.InPlayRate = InPlayRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F4BE60
     *         Name   -> Function /Script/MovieScene.MovieSceneCustomClockSource.OnStopPlaying
     *         Flags  -> (Native, Public, HasOutParms)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   InStopTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IMovieSceneCustomClockSource::OnStopPlaying(const CoreUObject::FQualifiedFrameTime& InStopTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneCustomClockSource.OnStopPlaying");
        
        IMovieSceneCustomClockSource_OnStopPlaying_Params params {};
        params.InStopTime = InStopTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F4BF60
     *         Name   -> Function /Script/MovieScene.MovieSceneCustomClockSource.OnStartPlaying
     *         Flags  -> (Native, Public, HasOutParms)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   InStartTime                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IMovieSceneCustomClockSource::OnStartPlaying(const CoreUObject::FQualifiedFrameTime& InStartTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneCustomClockSource.OnStartPlaying");
        
        IMovieSceneCustomClockSource_OnStartPlaying_Params params {};
        params.InStartTime = InStartTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04F4BCB0
     *         Name   -> Function /Script/MovieScene.MovieSceneCustomClockSource.OnRequestCurrentTime
     *         Flags  -> (Native, Public, HasOutParms)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   InCurrentTime                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InPlayRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime IMovieSceneCustomClockSource::OnRequestCurrentTime(const CoreUObject::FQualifiedFrameTime& InCurrentTime, float InPlayRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneCustomClockSource.OnRequestCurrentTime");
        
        IMovieSceneCustomClockSource_OnRequestCurrentTime_Params params {};
        params.InCurrentTime = InCurrentTime;
        params.InPlayRate = InPlayRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieScene.MovieSceneEasingFunction.OnEvaluate
     *         Flags  -> (Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         float                                              Interp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float IMovieSceneEasingFunction::OnEvaluate(float Interp)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieScene.MovieSceneEasingFunction.OnEvaluate");
        
        IMovieSceneEasingFunction_OnEvaluate_Params params {};
        params.Interp = Interp;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
