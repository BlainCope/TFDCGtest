#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "Engine_FPredictProjectilePathParams.h"
#include "M1_UM1WeaponComponent.h"
#include "Engine_FHitResult.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1WeaponLauncherComponent; };
namespace CG::M1 { class UM1WeaponVfxComponent; };
namespace CG::M1 { class UM1WeaponSoundComponent; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::M1 { class UM1AkComponent; };
namespace CG::M1 { class AM1AbilityProjectile; };
namespace CG::Engine { class UProjectileMovementComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1WeaponGuideVfxComponent
     * Size -> 0x0168 (FullSize[0x0240] - InheritedSize[0x00D8])
     */
    class UM1WeaponGuideVfxComponent : public M1::UM1WeaponComponent
    {
    public:
        BasicTypes::UMulticastInlineDelegate                         OnWeaponLauncherGuideUpdated;                            //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        M1::UM1WeaponLauncherComponent*                              Launcher_Component;                                      //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1WeaponVfxComponent*                                   VFX_Component;                                           //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1WeaponSoundComponent*                                 Sound_Component;                                         //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Niagara::UNiagaraComponent*>              TrajectoryGuide;                                         //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        Niagara::UNiagaraComponent*                                  ProjectileHitGuide;                                      //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Niagara::UNiagaraComponent*                                  ExplosionGuide;                                          //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AkComponent*                                          AkComponent;                                             //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            WeaponAbilityActorRowName;                               //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::AM1AbilityProjectile*                                    SpawnProjectileCDO;                                      //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::UProjectileMovementComponent*                        ProjectileMoveCompCDO;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::FPredictProjectilePathParams                         ProjectilePredictParam;                                  //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0xA0];                                  //  MISSED OFFSET (PADDING)

    public:
        M1::AM1AbilityProjectile* GetSpawnProjectileCDO();
        float GetProjectileRadius();
        float GetGuideVfxRadius();
        CoreUObject::FVector GetGuideVfxOffset(const Engine::FHitResult& InHit);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1WeaponGuideVfxComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
