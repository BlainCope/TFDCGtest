#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "BasicTypes_TMap.h"
#include "M1_UM1UIWidget.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UTexture2D.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UTextBlock; };
namespace CG::UMG { class UOverlay; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIActionIcon
     * Size -> 0x00A8 (FullSize[0x07B0] - InheritedSize[0x0708])
     */
    class UM1UIActionIcon : public M1::UM1UIWidget
    {
    public:
        uint8_t                                                      UnknownData_0000[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::UTextBlock*                                             TB_CheatString;                                          //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::EM1BattleKey                                             ActionKey;                                               //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1::EM1UIActionIconCustomType, UMG::UOverlay*> CustomPanelMap;                                          //  BlueprintVisible, ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x30];                                  //  MISSED OFFSET (PADDING)

    public:
        bool IsEnabledStackCharging();
        M1::EM1BattleKey GetActionKey();
        void BP_UpdateIcon(BasicTypes::TSoftObjectPtr<Engine::UTexture2D> NormalIcon, BasicTypes::TSoftObjectPtr<Engine::UTexture2D> ActiveIcon);
        void BP_UpdateDisableType(M1::EM1UIActionDisableType State);
        void BP_OnSkillInput(M1::EM1SkillActivateFailReason InFailReason);
        void BP_ChangedStackChargingTimeRatio(float Ratio, int32_t StackCount);
        void BP_ChangedRemainingDurationRatio(float Ratio);
        void BP_ChangedIconState(M1::EM1UIActionState State);
        void BP_ChangedCooldownRatio(float Ratio);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIActionIcon");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
