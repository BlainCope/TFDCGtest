#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FColor.h"
#include "MovieScene_FMovieSceneBindingProxy.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieScene { class UMovieSceneFolder; };
namespace CG::MovieScene { class UMovieSceneTrack; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SequencerScripting
{
    /**
     * Class /Script/SequencerScripting.MovieSceneFolderExtensions
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UMovieSceneFolderExtensions : public Engine::UBlueprintFunctionLibrary
    {
    public:
        bool STATIC_SetFolderName(MovieScene::UMovieSceneFolder* Folder, const BasicTypes::FName& InFolderName);
        bool STATIC_SetFolderColor(MovieScene::UMovieSceneFolder* Folder, const CoreUObject::FColor& InFolderColor);
        bool STATIC_RemoveChildTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack);
        bool STATIC_RemoveChildObjectBinding(MovieScene::UMovieSceneFolder* Folder, const MovieScene::FMovieSceneBindingProxy& InObjectBinding);
        bool STATIC_RemoveChildMasterTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack);
        bool STATIC_RemoveChildFolder(MovieScene::UMovieSceneFolder* TargetFolder, MovieScene::UMovieSceneFolder* FolderToRemove);
        BasicTypes::FName STATIC_GetFolderName(MovieScene::UMovieSceneFolder* Folder);
        CoreUObject::FColor STATIC_GetFolderColor(MovieScene::UMovieSceneFolder* Folder);
        BasicTypes::TArray<MovieScene::UMovieSceneTrack*> STATIC_GetChildTracks(MovieScene::UMovieSceneFolder* Folder);
        BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> STATIC_GetChildObjectBindings(MovieScene::UMovieSceneFolder* Folder);
        BasicTypes::TArray<MovieScene::UMovieSceneTrack*> STATIC_GetChildMasterTracks(MovieScene::UMovieSceneFolder* Folder);
        BasicTypes::TArray<MovieScene::UMovieSceneFolder*> STATIC_GetChildFolders(MovieScene::UMovieSceneFolder* Folder);
        bool STATIC_AddChildTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack);
        bool STATIC_AddChildObjectBinding(MovieScene::UMovieSceneFolder* Folder, const MovieScene::FMovieSceneBindingProxy& InObjectBinding);
        bool STATIC_AddChildMasterTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack);
        bool STATIC_AddChildFolder(MovieScene::UMovieSceneFolder* TargetFolder, MovieScene::UMovieSceneFolder* FolderToAdd);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SequencerScripting.MovieSceneFolderExtensions");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
