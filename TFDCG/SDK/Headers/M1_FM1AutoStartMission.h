#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_FTimerHandle.h"
#include "BasicTypes_TSet.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1MissionActor; };
namespace CG::M1 { class AM1PlayerControllerInGame; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * ScriptStruct /Script/M1.M1AutoStartMission
     * Size -> 0x00B0
     */
    struct FM1AutoStartMission
    {
    public:
        M1::AM1MissionActor*                                         MissionActor;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::AM1PlayerControllerInGame*>           ReadyControllers;                                        //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        Engine::FTimerHandle                                         TimerHandle_StartGameDelayed;                            //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::FTimerHandle                                         TimerHandle_CountdownToMissionStart;                     //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bGameStarted;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        CountdownToMissionStart;                                 //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x30];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<M1::AM1PlayerControllerInGame*>             PCsAreWaitingForMission;                                 //  Transient, NativeAccessSpecifierPrivate
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
