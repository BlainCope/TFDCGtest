#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "RigVM_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "RigVM_FRigVMRegister.h"
#include "RigVM_FRigVMRegisterOffset.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UScriptStruct; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::RigVM
{
    /**
     * ScriptStruct /Script/RigVM.RigVMMemoryContainer
     * Size -> 0x00A0
     */
    struct FRigVMMemoryContainer
    {
    public:
        bool                                                         bUseNameMap;                                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        RigVM::ERigVMMemoryType                                      MemoryType;                                              //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<RigVM::FRigVMRegister>                    Registers;                                               //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<RigVM::FRigVMRegisterOffset>              RegisterOffsets;                                         //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<uint8_t>                                  Data;                                                    //  ZeroConstructor, Transient, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::UScriptStruct*>              ScriptStructs;                                           //  ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TMap<BasicTypes::FName, int32_t>                 NameMap;                                                 //  Transient, NativeAccessSpecifierPublic
        bool                                                         bEncounteredErrorDuringLoad;                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
