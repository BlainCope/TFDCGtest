#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "Chaos_ENUMS.h"
#include "FieldSystemEngine_UFieldNodeInt.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::FieldSystemEngine { class URadialIntMask; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::FieldSystemEngine
{
    /**
     * Class /Script/FieldSystemEngine.RadialIntMask
     * Size -> 0x0020 (FullSize[0x00C8] - InheritedSize[0x00A8])
     */
    class URadialIntMask : public FieldSystemEngine::UFieldNodeInt
    {
    public:
        float                                                        Radius;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         Position;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      InteriorValue;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      ExteriorValue;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Chaos::ESetMaskConditionType                                 SetMaskCondition;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        FieldSystemEngine::URadialIntMask* SetRadialIntMask(float Radius, const CoreUObject::FVector& Position, int32_t InteriorValue, int32_t ExteriorValue, Chaos::ESetMaskConditionType SetMaskConditionIn);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/FieldSystemEngine.RadialIntMask");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
