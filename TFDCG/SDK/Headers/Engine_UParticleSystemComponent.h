#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_ENUMS.h"
#include "Engine_FParticleSysParam.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "BasicTypes_FName.h"
#include "Engine_UFXSystemComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UParticleSystem; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::Engine { class UParticleSystemReplay; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UMaterialInstanceDynamic; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.ParticleSystemComponent
     * Size -> 0x0278 (FullSize[0x06F0] - InheritedSize[0x0478])
     */
    class UParticleSystemComponent : public Engine::UFXSystemComponent
    {
    public:
        Engine::UParticleSystem*                                     Template;                                                //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UMaterialInterface*>              EmitterMaterials;                                        //  ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::USkeletalMeshComponent*>          SkelMeshComponents;                                      //  ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bResetOnDetach : 1;                                      //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bUpdateOnDedicatedServer : 1;                            //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0001 : 2;                                    //  BIT_FIELD (PADDING)
        bool                                                         bAllowRecycling : 1;                                     //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAutoManageAttachment : 1;                               //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAutoAttachWeldSimulatedBodies : 1;                      //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0002 : 1;                                    //  BIT_FIELD (PADDING)
        bool                                                         bSkipUpdateDynamicDataDuringTick : 1;                    //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bOverrideLODMethod : 1;                                  //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bWarmingUp : 1;                                          //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0003 : 2;                                    //  BIT_FIELD (PADDING)
        uint8_t                                                      UnknownData_0004[0xA];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::EParticleSystemLODMethod                             LODMethod;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EParticleSignificanceLevel                           RequiredSignificance;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FParticleSysParam>                InstanceParameters;                                      //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::UMulticastInlineDelegate                         OnParticleSpawn;                                         //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnParticleBurst;                                         //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnParticleDeath;                                         //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnParticleCollide;                                       //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0009[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        bool                                                         bOldPositionValid;                                       //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0010[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         OldPosition;                                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         PartSysVelocity;                                         //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        WarmupTime;                                              //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        WarmupTickRate;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0011[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        SecondsBeforeInactive;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0012[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MaxTimeBeforeForceUpdateTransform;                       //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0013[0x1C];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UParticleSystemReplay*>           ReplayClips;                                             //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0014[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        CustomTimeDilation;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0015[0x5C];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TWeakObjectPtr<Engine::USceneComponent>          AutoAttachParent;                                        //  Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            AutoAttachSocketName;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAttachmentRule                                      AutoAttachLocationRule;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAttachmentRule                                      AutoAttachRotationRule;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAttachmentRule                                      AutoAttachScaleRule;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0016[0x2D];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnSystemFinished;                                        //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0017[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0018[0xD8];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetTrailSourceData(const BasicTypes::FName& InFirstSocketName, const BasicTypes::FName& InSecondSocketName, Engine::ETrailWidthMode InWidthMode, float InWidth);
        void SetTemplate(Engine::UParticleSystem* NewTemplate);
        void SetMaterialParameter(const BasicTypes::FName& ParameterName, Engine::UMaterialInterface* Param);
        void SetBeamTargetTangent(int32_t EmitterIndex, const CoreUObject::FVector& NewTangentPoint, int32_t TargetIndex);
        void SetBeamTargetStrength(int32_t EmitterIndex, float NewTargetStrength, int32_t TargetIndex);
        void SetBeamTargetPoint(int32_t EmitterIndex, const CoreUObject::FVector& NewTargetPoint, int32_t TargetIndex);
        void SetBeamSourceTangent(int32_t EmitterIndex, const CoreUObject::FVector& NewTangentPoint, int32_t SourceIndex);
        void SetBeamSourceStrength(int32_t EmitterIndex, float NewSourceStrength, int32_t SourceIndex);
        void SetBeamSourcePoint(int32_t EmitterIndex, const CoreUObject::FVector& NewSourcePoint, int32_t SourceIndex);
        void SetBeamEndPoint(int32_t EmitterIndex, const CoreUObject::FVector& NewEndPoint);
        void SetAutoAttachParams(Engine::USceneComponent* Parent, const BasicTypes::FName& SocketName, Engine::EAttachLocation LocationType);
        int32_t GetNumActiveParticles();
        Engine::UMaterialInterface* GetNamedMaterial(const BasicTypes::FName& InName);
        bool GetBeamTargetTangent(int32_t EmitterIndex, int32_t TargetIndex, CoreUObject::FVector* OutTangentPoint);
        bool GetBeamTargetStrength(int32_t EmitterIndex, int32_t TargetIndex, float* OutTargetStrength);
        bool GetBeamTargetPoint(int32_t EmitterIndex, int32_t TargetIndex, CoreUObject::FVector* OutTargetPoint);
        bool GetBeamSourceTangent(int32_t EmitterIndex, int32_t SourceIndex, CoreUObject::FVector* OutTangentPoint);
        bool GetBeamSourceStrength(int32_t EmitterIndex, int32_t SourceIndex, float* OutSourceStrength);
        bool GetBeamSourcePoint(int32_t EmitterIndex, int32_t SourceIndex, CoreUObject::FVector* OutSourcePoint);
        bool GetBeamEndPoint(int32_t EmitterIndex, CoreUObject::FVector* OutEndPoint);
        void GenerateParticleEvent(const BasicTypes::FName& InEventName, float InEmitterTime, const CoreUObject::FVector& InLocation, const CoreUObject::FVector& InDirection, const CoreUObject::FVector& InVelocity);
        void EndTrails();
        Engine::UMaterialInstanceDynamic* CreateNamedDynamicMaterialInstance(const BasicTypes::FName& InName, Engine::UMaterialInterface* SourceMaterial);
        void BeginTrails(const BasicTypes::FName& InFirstSocketName, const BasicTypes::FName& InSecondSocketName, Engine::ETrailWidthMode InWidthMode, float InWidth);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.ParticleSystemComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
