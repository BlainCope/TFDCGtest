#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1ConnectionAlwaysRelevantNodePair.h"
#include "BasicTypes_TMap.h"
#include "ReplicationGraph_UReplicationGraph.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::ReplicationGraph { class UReplicationGraphNode_GridSpatialization2D; };
namespace CG::M1 { class UM1ReplicationGraphNode_AlwaysRelevantActorList; };
namespace CG::M1 { class UM1ReplicationGraphNode_AlwaysRelevantForPlayer; };
namespace CG::Engine { class AActor; };
namespace CG::ReplicationGraph { class UReplicationGraphNode_AlwaysRelevant_ForConnection; };
namespace CG::Engine { class UNetConnection; };
namespace CG::M1 { class UM1ReplicationGraphNode_AlwaysReleventForOwnerButCanBeDormancy; };
namespace CG::M1 { class UM1ReplicationGraphNode_AlwaysReleventButCanBeDormancy; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1ReplicationGraph
     * Size -> 0x02B0 (FullSize[0x0820] - InheritedSize[0x0570])
     */
    class UM1ReplicationGraph : public ReplicationGraph::UReplicationGraph
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<CoreUObject::UObject*>                    SpatializedClasses;                                      //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::UObject*>                    NonSpatializedChildClasses;                              //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::UObject*>                    AlwaysRelevantClasses;                                   //  ZeroConstructor, NativeAccessSpecifierPublic
        ReplicationGraph::UReplicationGraphNode_GridSpatialization2D* GridNode;                                                //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1::UM1ReplicationGraphNode_AlwaysRelevantActorList*         AlwaysRelevantNode;                                      //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1::UM1ReplicationGraphNode_AlwaysRelevantForPlayer*         AlwaysRelevantNodeForPlayer;                             //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<M1::FM1ConnectionAlwaysRelevantNodePair>  AlwaysRelevantForConnectionList;                         //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::AActor*>                          ActorsWithoutNetConnection;                              //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TMap<Engine::AActor*, ReplicationGraph::UReplicationGraphNode_AlwaysRelevant_ForConnection*> CacheActorsThatAddedToAlwaysRelevantForConnection;       //  NativeAccessSpecifierPublic
        BasicTypes::TMap<Engine::UNetConnection*, M1::UM1ReplicationGraphNode_AlwaysReleventForOwnerButCanBeDormancy*> AlwaysRelevantForConnectionButCanBeDormancy;             //  NativeAccessSpecifierPrivate
        BasicTypes::TMap<Engine::AActor*, M1::UM1ReplicationGraphNode_AlwaysReleventForOwnerButCanBeDormancy*> CacheActorsThatAddedToAlwaysRelavantForConnectionButCanBeDormancy; //  NativeAccessSpecifierPrivate
        M1::UM1ReplicationGraphNode_AlwaysReleventButCanBeDormancy*  DormancyNode;                                            //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x148];                                 //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1ReplicationGraph");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
