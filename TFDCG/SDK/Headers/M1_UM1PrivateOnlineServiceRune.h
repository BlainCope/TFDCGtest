#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1PrivateOnlineSubService.h"
#include "M1_FM1EnchantRuneInfo.h"
#include "M1_FM1DecomposeRuneInfo.h"
#include "BasicTypes_TArray.h"
#include "M1Data_FM1ItemUidBox.h"
#include "M1_FM1ComposeRuneInfo.h"
#include "M1_FM1ChangeLoadoutSlotNameParam.h"
#include "M1_FM1BuyLoadoutSlotParam.h"
#include "M1_FM1Response_EnchantRune.h"
#include "M1_FM1ItemServiceRuneDecomposeResult.h"
#include "M1_FM1Response_ComposeRune.h"
#include "M1_FM1Response_CheckEnchantRune.h"
#include "M1_FM1Response_ChangeLoadoutSlotName.h"
#include "M1_FM1Response_BuyLoadoutSlot.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PrivateOnlineServiceRune
     * Size -> 0x0078 (FullSize[0x00B8] - InheritedSize[0x0040])
     */
    class UM1PrivateOnlineServiceRune : public M1::UM1PrivateOnlineSubService
    {
    public:
        uint8_t                                                      UnknownData_0000[0x78];                                  //  MISSED OFFSET (PADDING)

    public:
        void ServerRequestEnchantRune(const M1::FM1EnchantRuneInfo& InInfo);
        void ServerRequestDecomposeRuneWithUid(const M1::FM1DecomposeRuneInfo& InInfo, BasicTypes::TArray<M1Data::FM1ItemUidBox> InItemBoxes);
        void ServerRequestDecomposeRuneWithList(const M1::FM1DecomposeRuneInfo& InInfo, BasicTypes::TArray<int16_t> InIndexList, int32_t InInventoryRevision, int32_t InItemCount);
        void ServerRequestDecomposeRuneWithByte(const M1::FM1DecomposeRuneInfo& InInfo, BasicTypes::TArray<uint8_t> InBytes, int32_t InInventoryRevision, int32_t InItemCount);
        void ServerRequestComposeRune(const M1::FM1ComposeRuneInfo& InInfo);
        void ServerRequestCheckEnchantRune(int64_t InRuneUid, int32_t InTargetEnchantLevel);
        void ServerChangeLoadoutSlotName(const M1::FM1ChangeLoadoutSlotNameParam& InParam);
        void ServerBuyLoadoutSlot(const M1::FM1BuyLoadoutSlotParam& InParam);
        void ClientReceiveEnchantRune(const M1::FM1Response_EnchantRune& InInfo);
        void ClientReceiveDecomposeRune(const M1::FM1ItemServiceRuneDecomposeResult& InInfo);
        void ClientReceiveComposeRune(const M1::FM1Response_ComposeRune& InInfo);
        void ClientReceiveCheckEnchantRune(const M1::FM1Response_CheckEnchantRune& InResponse);
        void ClientChangeLoadoutSlotName(const M1::FM1Response_ChangeLoadoutSlotName& InResponse);
        void ClientBuyLoadoutSlot(const M1::FM1Response_BuyLoadoutSlot& InResponse);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PrivateOnlineServiceRune");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
