#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Spica_USpicaRPCHelperComponent.h"
#include "M1_FM1AbilityOperation.h"
#include "M1Data_FM1InvokeStatusEffectData.h"
#include "M1_FM1AbilityContextHandle.h"
#include "M1_FM1AbilityId.h"
#include "M1_FM1CalcDamageInfo.h"
#include "M1Data_ENUMS.h"
#include "M1_FM1AbilityOpCalcResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1SpicaRPCHelperComponent
     * Size -> 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
     */
    class UM1SpicaRPCHelperComponent : public Spica::USpicaRPCHelperComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void ServerStaticProcessAbilityOperationCalculation(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1AbilityOperation& Operation);
        void ServerStaticInvokeStatusEffectDataToTarget(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1Data::FM1InvokeStatusEffectData& InvokeStatusEffectData, const M1::FM1AbilityContextHandle& ForwardingContext);
        void ServerStaticEndStatusEffectToTarget(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1AbilityId& StatusEffectId, bool bCancelled);
        void ServerStaticAfterExecuteCalculation(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1AbilityOperation& Operation);
        void ServerSendAbilityEventGiveDamageTo(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1CalcDamageInfo& DamageInfo);
        void ServerReturnInvokeStatusEffectDataToTarget(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1AbilityId& AbilityId, M1Data::EM1AbilityCreatedObjectRemovalPolicy RemovalPolicy, const M1::FM1AbilityId& StatusEffectId);
        void ServerReturnAbilityActorInvokeStatusEffectDataToTarget(Engine::AActor* FromActor, Engine::AActor* ToActor, M1Data::EM1AbilityCreatedObjectRemovalPolicy RemovalPolicy, const M1::FM1AbilityId& StatusEffectId);
        void ServerExecuteCalculation(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1AbilityOpCalcResult& OpCalcResult);
        void ServerApplyDamage(Engine::AActor* FromActor, Engine::AActor* ToActor, const M1::FM1CalcDamageInfo& DamageInfo);
        void ServerAllianceCall(Engine::AActor* FromActor, Engine::AActor* ToActor, Engine::AActor* NewTarget);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1SpicaRPCHelperComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
