#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1MonsterLogic_Seudo_RandomWalkTreeContext.h"
#include "CoreUObject_UObject.h"
#include "CoreUObject_FTransform.h"
#include "M1_FM1MonsterLogic_Seudo_RandomWalkRoot.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MonsterLogic_Seudo_RandomWalkTree
     * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
     */
    class UM1MonsterLogic_Seudo_RandomWalkTree : public CoreUObject::UObject
    {
    public:
        int32_t                                                      MaxStepCount;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MinRangeLimit;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MaxRangeLimit;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MinStride;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MaxStride;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::FM1MonsterLogic_Seudo_RandomWalkTreeContext> WalkTrees;                                               //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        CoreUObject::FTransform RandomWalk();
        void InitializeWithParams(BasicTypes::TArray<M1::FM1MonsterLogic_Seudo_RandomWalkRoot> InRoots, int32_t InMaxStepCount, float InMinRangeLimit, float InMaxRangeLimit, float InMinStride, float InMaxStride, bool bDebugDraw, float DebugDrawDuration, float DebugDrawLineThickness, float DebugDrawArrowZOffset);
        bool CanWalk();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MonsterLogic_Seudo_RandomWalkTree");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
