#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Slate_FInputChord.h"
#include "M1_UM1UIOptionIndividual.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UIOptionInputKeySelectorWrapper_DirectInput; };
namespace CG::M1 { class UM1UIKeySymbol; };
namespace CG::M1 { class UM1UIWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIOptionIndividual_DirectInput
     * Size -> 0x0090 (FullSize[0x09B0] - InheritedSize[0x0920])
     */
    class UM1UIOptionIndividual_DirectInput : public M1::UM1UIOptionIndividual
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1UIOptionInputKeySelectorWrapper_DirectInput*          InputKeySelectorWrapper_Main;                            //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIOptionInputKeySelectorWrapper_DirectInput*          InputKeySelectorWrapper_Sub;                             //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIKeySymbol*                                          UI_KeySymbol_Main;                                       //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIKeySymbol*                                          UI_KeySymbol_Sub;                                        //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Slate::FInputChord                                           CurrentMainInputChord;                                   //  Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Slate::FInputChord                                           CurrentSubInputChord;                                    //  Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIWidget*                                             ToastMessageWidget;                                      //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bDirectlySelectKey;                                      //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x1F];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnSubKeySelected(const Slate::FInputChord& SelectedKey);
        void OnMainKeySelected(const Slate::FInputChord& SelectedKey);
        void OnIsSelectingKeyChanged();
        void OnHoveredOrUnhoveredInputKeySelector(M1::UM1UIWidget* InWidget);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIOptionIndividual_DirectInput");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
