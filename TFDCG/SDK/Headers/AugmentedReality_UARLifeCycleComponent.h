#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_USceneComponent.h"
#include "CoreUObject_FGuid.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::AugmentedReality { class AARActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AugmentedReality
{
    /**
     * Class /Script/AugmentedReality.ARLifeCycleComponent
     * Size -> 0x0030 (FullSize[0x0220] - InheritedSize[0x01F0])
     */
    class UARLifeCycleComponent : public Engine::USceneComponent
    {
    public:
        BasicTypes::UMulticastInlineDelegate                         OnARActorSpawnedDelegate;                                //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnARActorToBeDestroyedDelegate;                          //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void ServerSpawnARActor(CoreUObject::UObject* ComponentClass, const CoreUObject::FGuid& NativeID);
        void ServerDestroyARActor(AugmentedReality::AARActor* Actor);
        void InstanceARActorToBeDestroyedDelegate__DelegateSignature(AugmentedReality::AARActor* Actor);
        void InstanceARActorSpawnedDelegate__DelegateSignature(CoreUObject::UObject* ComponentClass, const CoreUObject::FGuid& NativeID, AugmentedReality::AARActor* SpawnedActor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AugmentedReality.ARLifeCycleComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
