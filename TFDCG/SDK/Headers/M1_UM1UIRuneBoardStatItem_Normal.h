#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_FM1RuneUIStatDesc.h"
#include "M1Data_FM1ScaledInteger.h"
#include "M1_UM1UIWidget.h"
#include "M1Data_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1TextBlock; };
namespace CG::UMG { class UBorder; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIRuneBoardStatItem_Normal
     * Size -> 0x0060 (FullSize[0x0768] - InheritedSize[0x0708])
     */
    class UM1UIRuneBoardStatItem_Normal : public M1::UM1UIWidget
    {
    public:
        M1::UM1TextBlock*                                            Text_StatName;                                           //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            Text_StatValue;                                          //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UBorder*                                                Border_StatOffset;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            Text_StatOffset;                                         //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::FM1RuneUIStatDesc                                    StatDesc;                                                //  Transient, NativeAccessSpecifierPrivate
        M1Data::FM1ScaledInteger                                     StatValue;                                               //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::FM1ScaledInteger                                     StatOffset;                                              //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bIsDefaultStat;                                          //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        M1Data::EM1StatType GetStatType();
        void BP_OnStatOffsetIncreased();
        void BP_OnStatOffsetDecreased();
        void BP_OnStatOffsetBecomeZero();
        void BP_OnStatOffsetBecomePositive();
        void BP_OnStatOffsetBecomeNegative();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIRuneBoardStatItem_Normal");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
