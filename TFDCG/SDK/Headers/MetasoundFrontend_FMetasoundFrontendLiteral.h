#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "MetasoundFrontend_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MetasoundFrontend
{
    /**
     * ScriptStruct /Script/MetasoundFrontend.MetasoundFrontendLiteral
     * Size -> 0x0058
     */
    struct FMetasoundFrontendLiteral
    {
    public:
        MetasoundFrontend::EMetasoundFrontendLiteralType             Type;                                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      AsNumDefault;                                            //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<bool>                                     AsBoolean;                                               //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<int32_t>                                  AsInteger;                                               //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<float>                                    AsFloat;                                                 //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<BasicTypes::FString>                      AsString;                                                //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<CoreUObject::UObject*>                    AsUObject;                                               //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
