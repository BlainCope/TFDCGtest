#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UScriptDelegate.h"
#include "SlateCore_FSpinBoxStyle.h"
#include "SlateCore_FSlateFontInfo.h"
#include "Slate_ENUMS.h"
#include "UMG_ENUMS.h"
#include "SlateCore_FSlateColor.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "UMG_UWidget.h"
#include "SlateCore_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.SpinBox
     * Size -> 0x06B0 (FullSize[0x07E0] - InheritedSize[0x0130])
     */
    class USpinBox : public UMG::UWidget
    {
    public:
        float                                                        Value;                                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  ValueDelegate;                                           //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SlateCore::FSpinBoxStyle                                     WidgetStyle;                                             //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        int32_t                                                      MinFractionalDigits;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      MaxFractionalDigits;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAlwaysUsesDeltaSnap;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableSlider;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        Delta;                                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        SliderExponent;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SlateCore::FSlateFontInfo                                    Font;                                                    //  Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Slate::ETextJustify                                          Justification;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MinDesiredWidth;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        UMG::EVirtualKeyboardType                                    KeyboardType;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         ClearKeyboardFocusOnCommit;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         SelectAllTextOnCommit;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SlateCore::FSlateColor                                       ForegroundColor;                                         //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        BasicTypes::UMulticastInlineDelegate                         OnValueChanged;                                          //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnValueCommitted;                                        //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnBeginSliderMovement;                                   //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEndSliderMovement;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        bool                                                         bOverride_MaxSliderValue : 1;                            //  BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bOverride_MinSliderValue : 1;                            //  BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bOverride_MinValue : 1;                                  //  BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bOverride_MaxValue : 1;                                  //  BIT_FIELD Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0009[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MinValue;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        MaxValue;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        MinSliderValue;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        MaxSliderValue;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0010[0x1C];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetValue(float NewValue);
        void SetMinValue(float NewValue);
        void SetMinSliderValue(float NewValue);
        void SetMinFractionalDigits(int32_t NewValue);
        void SetMaxValue(float NewValue);
        void SetMaxSliderValue(float NewValue);
        void SetMaxFractionalDigits(int32_t NewValue);
        void SetForegroundColor(const SlateCore::FSlateColor& InForegroundColor);
        void SetDelta(float NewValue);
        void SetAlwaysUsesDeltaSnap(bool bNewValue);
        void OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, SlateCore::ETextCommit CommitMethod);
        void OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
        void OnSpinBoxBeginSliderMovement__DelegateSignature();
        float GetValue();
        float GetMinValue();
        float GetMinSliderValue();
        int32_t GetMinFractionalDigits();
        float GetMaxValue();
        float GetMaxSliderValue();
        int32_t GetMaxFractionalDigits();
        float GetDelta();
        bool GetAlwaysUsesDeltaSnap();
        void ClearMinValue();
        void ClearMinSliderValue();
        void ClearMaxValue();
        void ClearMaxSliderValue();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.SpinBox");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
