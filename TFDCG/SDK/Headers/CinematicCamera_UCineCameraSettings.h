#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "CinematicCamera_FNamedLensPreset.h"
#include "CinematicCamera_FNamedFilmbackPreset.h"
#include "CinematicCamera_FNamedPlateCropPreset.h"
#include "DeveloperSettings_UDeveloperSettings.h"
#include "CinematicCamera_FCameraLensSettings.h"
#include "CinematicCamera_FCameraFilmbackSettings.h"
#include "CinematicCamera_FPlateCropSettings.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CinematicCamera { class UCineCameraSettings; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::CinematicCamera
{
    /**
     * Class /Script/CinematicCamera.CineCameraSettings
     * Size -> 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
     */
    class UCineCameraSettings : public DeveloperSettings::UDeveloperSettings
    {
    public:
        BasicTypes::FString                                          DefaultLensPresetName;                                   //  Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        DefaultLensFocalLength;                                  //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        DefaultLensFStop;                                        //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<CinematicCamera::FNamedLensPreset>        LensPresets;                                             //  Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic
        BasicTypes::FString                                          DefaultFilmbackPreset;                                   //  Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<CinematicCamera::FNamedFilmbackPreset>    FilmbackPresets;                                         //  Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic
        BasicTypes::FString                                          DefaultCropPresetName;                                   //  Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<CinematicCamera::FNamedPlateCropPreset>   CropPresets;                                             //  Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetLensPresets(BasicTypes::TArray<CinematicCamera::FNamedLensPreset> InLensPresets);
        void SetFilmbackPresets(BasicTypes::TArray<CinematicCamera::FNamedFilmbackPreset> InFilmbackPresets);
        void SetDefaultLensPresetName(const BasicTypes::FString& InDefaultLensPresetName);
        void SetDefaultLensFStop(float InDefaultLensFStop);
        void SetDefaultLensFocalLength(float InDefaultLensFocalLength);
        void SetDefaultFilmbackPreset(const BasicTypes::FString& InDefaultFilmbackPreset);
        void SetDefaultCropPresetName(const BasicTypes::FString& InDefaultCropPresetName);
        void SetCropPresets(BasicTypes::TArray<CinematicCamera::FNamedPlateCropPreset> InCropPresets);
        BasicTypes::TArray<BasicTypes::FString> GetLensPresetNames();
        bool GetLensPresetByName(const BasicTypes::FString& PresetName, CinematicCamera::FCameraLensSettings* LensSettings);
        BasicTypes::TArray<BasicTypes::FString> GetFilmbackPresetNames();
        bool GetFilmbackPresetByName(const BasicTypes::FString& PresetName, CinematicCamera::FCameraFilmbackSettings* FilmbackSettings);
        BasicTypes::TArray<BasicTypes::FString> GetCropPresetNames();
        bool GetCropPresetByName(const BasicTypes::FString& PresetName, CinematicCamera::FPlateCropSettings* CropSettings);
        CinematicCamera::UCineCameraSettings* STATIC_GetCineCameraSettings();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/CinematicCamera.CineCameraSettings");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
