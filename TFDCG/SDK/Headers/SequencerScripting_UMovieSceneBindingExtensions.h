#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "MovieScene_FMovieSceneBindingProxy.h"
#include "MovieScene_FMovieSceneObjectBindingID.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FText.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_FGuid.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieScene { class UMovieSceneTrack; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SequencerScripting
{
    /**
     * Class /Script/SequencerScripting.MovieSceneBindingExtensions
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UMovieSceneBindingExtensions : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_SetSpawnableBindingID(const MovieScene::FMovieSceneBindingProxy& InBinding, const MovieScene::FMovieSceneObjectBindingID& SpawnableBindingID);
        void STATIC_SetSortingOrder(const MovieScene::FMovieSceneBindingProxy& InBinding, int32_t SortingOrder);
        void STATIC_SetParent(const MovieScene::FMovieSceneBindingProxy& InBinding, const MovieScene::FMovieSceneBindingProxy& InParentBinding);
        void STATIC_SetName(const MovieScene::FMovieSceneBindingProxy& InBinding, const BasicTypes::FString& InName);
        void STATIC_SetDisplayName(const MovieScene::FMovieSceneBindingProxy& InBinding, const BasicTypes::FText& InDisplayName);
        void STATIC_RemoveTrack(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackToRemove);
        void STATIC_Remove(const MovieScene::FMovieSceneBindingProxy& InBinding);
        void STATIC_MoveBindingContents(const MovieScene::FMovieSceneBindingProxy& SourceBindingId, const MovieScene::FMovieSceneBindingProxy& DestinationBindingId);
        bool STATIC_IsValid(const MovieScene::FMovieSceneBindingProxy& InBinding);
        BasicTypes::TArray<MovieScene::UMovieSceneTrack*> STATIC_GetTracks(const MovieScene::FMovieSceneBindingProxy& InBinding);
        int32_t STATIC_GetSortingOrder(const MovieScene::FMovieSceneBindingProxy& InBinding);
        CoreUObject::UObject* STATIC_GetPossessedObjectClass(const MovieScene::FMovieSceneBindingProxy& InBinding);
        MovieScene::FMovieSceneBindingProxy STATIC_GetParent(const MovieScene::FMovieSceneBindingProxy& InBinding);
        CoreUObject::UObject* STATIC_GetObjectTemplate(const MovieScene::FMovieSceneBindingProxy& InBinding);
        BasicTypes::FString STATIC_GetName(const MovieScene::FMovieSceneBindingProxy& InBinding);
        CoreUObject::FGuid STATIC_GetId(const MovieScene::FMovieSceneBindingProxy& InBinding);
        BasicTypes::FText STATIC_GetDisplayName(const MovieScene::FMovieSceneBindingProxy& InBinding);
        BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> STATIC_GetChildPossessables(const MovieScene::FMovieSceneBindingProxy& InBinding);
        BasicTypes::TArray<MovieScene::UMovieSceneTrack*> STATIC_FindTracksByType(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackType);
        BasicTypes::TArray<MovieScene::UMovieSceneTrack*> STATIC_FindTracksByExactType(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackType);
        MovieScene::UMovieSceneTrack* STATIC_AddTrack(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackType);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SequencerScripting.MovieSceneBindingExtensions");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
