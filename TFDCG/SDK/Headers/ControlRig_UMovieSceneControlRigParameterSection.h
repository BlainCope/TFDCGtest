#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "MovieSceneTracks_FMovieSceneTransformMask.h"
#include "MovieScene_FMovieSceneFloatChannel.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FName.h"
#include "ControlRig_FChannelMapInfo.h"
#include "ControlRig_FEnumParameterNameAndCurve.h"
#include "ControlRig_FIntegerParameterNameAndCurve.h"
#include "ControlRig_FSpaceControlNameAndChannel.h"
#include "Constraints_FConstraintAndActiveChannel.h"
#include "MovieSceneTracks_UMovieSceneParameterSection.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::ControlRig { class UControlRig; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * Class /Script/ControlRig.MovieSceneControlRigParameterSection
     * Size -> 0x0278 (FullSize[0x03D0] - InheritedSize[0x0158])
     */
    class UMovieSceneControlRigParameterSection : public MovieSceneTracks::UMovieSceneParameterSection
    {
    public:
        uint8_t                                                      UnknownData_0000[0x48];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ControlRig::UControlRig*                                     ControlRig;                                              //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        ControlRig::UControlRig*                                     ControlRigClass;                                         //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<bool>                                     ControlsMask;                                            //  ZeroConstructor, NativeAccessSpecifierPublic
        MovieSceneTracks::FMovieSceneTransformMask                   TransformMask;                                           //  NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        MovieScene::FMovieSceneFloatChannel                          Weight;                                                  //  NativeAccessSpecifierPublic
        BasicTypes::TMap<BasicTypes::FName, ControlRig::FChannelMapInfo> ControlChannelMap;                                       //  NativeAccessSpecifierPublic
        BasicTypes::TArray<ControlRig::FEnumParameterNameAndCurve>   EnumParameterNamesAndCurves;                             //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<ControlRig::FIntegerParameterNameAndCurve> IntegerParameterNamesAndCurves;                          //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<ControlRig::FSpaceControlNameAndChannel>  SpaceChannels;                                           //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<Constraints::FConstraintAndActiveChannel> ConstraintsChannels;                                     //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x68];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ControlRig.MovieSceneControlRigParameterSection");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
