#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Synthesis_FSubmixEffectConvolutionReverbSettings.h"
#include "Synthesis_FSubmixEffectDelaySettings.h"
#include "Synthesis_FSubmixEffectFilterSettings.h"
#include "Synthesis_ENUMS.h"
#include "Synthesis_FSubmixEffectFlexiverbSettings.h"
#include "Synthesis_FSourceEffectConvolutionReverbSettings.h"
#include "Synthesis_FSourceEffectDynamicsProcessorSettings.h"
#include "Synthesis_FSourceEffectEnvelopeFollowerSettings.h"
#include "Synthesis_FSourceEffectEQSettings.h"
#include "Synthesis_FSourceEffectFilterSettings.h"
#include "Synthesis_FSourceEffectFoldbackDistortionSettings.h"
#include "Synthesis_FSourceEffectMidSideSpreaderSettings.h"
#include "Synthesis_FSourceEffectMotionFilterSettings.h"
#include "Synthesis_FSourceEffectPannerSettings.h"
#include "Synthesis_FSourceEffectPhaserSettings.h"
#include "Synthesis_FSourceEffectRingModulationSettings.h"
#include "Synthesis_FSourceEffectSimpleDelaySettings.h"
#include "Synthesis_FSourceEffectStereoDelaySettings.h"
#include "Synthesis_FSourceEffectWaveShaperSettings.h"
#include "Synthesis_FModularSynthPreset.h"
#include "BasicTypes_FString.h"
#include "Synthesis_FPatchId.h"
#include "BasicTypes_TArray.h"
#include "Synthesis_FSynth1PatchCable.h"
#include "Synthesis_FSubmixEffectMultibandCompressorSettings.h"
#include "Synthesis_FSubmixEffectStereoDelaySettings.h"
#include "Synthesis_FSubmixEffectStereoToQuadSettings.h"
#include "Synthesis_FTapDelayInfo.h"
#include "Synthesis_FSubmixEffectTapDelaySettings.h"
#include "CoreUObject_FVector2D.h"
#include "Synthesis_FSourceEffectBitCrusherBaseSettings.h"
#include "BasicTypes_TSet.h"
#include "Synthesis_FSourceEffectBitCrusherSettings.h"
#include "Synthesis_FSourceEffectChorusBaseSettings.h"
#include "Synthesis_FSourceEffectChorusSettings.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Synthesis { class UAudioImpulseResponse; };
namespace CG::Synthesis { class UEnvelopeFollowerListener; };
namespace CG::Synthesis { class UModularSynthPresetBank; };
namespace CG::Engine { class USoundSubmix; };
namespace CG::Engine { class UAudioBus; };
namespace CG::Engine { class USoundWave; };
namespace CG::AudioExtensions { class USoundModulatorBase; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Synthesis
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectConvolutionReverbPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectConvolutionReverbSettings            InSettings;                                              //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectConvolutionReverbPreset_SetImpulseResponse_Params
    {
    public:
        Synthesis::UAudioImpulseResponse*                            InImpulseResponse;                                       //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayStatics_SetMaximumDelayLength_Params
    {
    public:
        Synthesis::FSubmixEffectDelaySettings                        DelaySettings;                                           //  0x0000(0x000C)  (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        MaximumDelayLength;                                      //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::FSubmixEffectDelaySettings                        ReturnValue;                                             //  0x0010(0x000C)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayStatics_SetInterpolationTime_Params
    {
    public:
        Synthesis::FSubmixEffectDelaySettings                        DelaySettings;                                           //  0x0000(0x000C)  (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        InterpolationTime;                                       //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::FSubmixEffectDelaySettings                        ReturnValue;                                             //  0x0010(0x000C)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayStatics_SetDelayLength_Params
    {
    public:
        Synthesis::FSubmixEffectDelaySettings                        DelaySettings;                                           //  0x0000(0x000C)  (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        DelayLength;                                             //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::FSubmixEffectDelaySettings                        ReturnValue;                                             //  0x0010(0x000C)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectDelaySettings                        InSettings;                                              //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayPreset_SetInterpolationTime_Params
    {
    public:
        float                                                        Time;                                                    //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayPreset_SetDelay_Params
    {
    public:
        float                                                        Length;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayPreset_SetDefaultSettings_Params
    {
    public:
        Synthesis::FSubmixEffectDelaySettings                        InSettings;                                              //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectDelayPreset_GetMaxDelayInMilliseconds_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthKnob_SetValue_Params
    {
    public:
        float                                                        InValue;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthKnob_SetStepSize_Params
    {
    public:
        float                                                        InValue;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthKnob_SetLocked_Params
    {
    public:
        bool                                                         InValue;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthKnob_GetValue_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectFilterSettings                       InSettings;                                              //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetFilterType_Params
    {
    public:
        Synthesis::ESubmixFilterType                                 InType;                                                  //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetFilterQMod_Params
    {
    public:
        float                                                        InQ;                                                     //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetFilterQ_Params
    {
    public:
        float                                                        InQ;                                                     //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetFilterCutoffFrequencyMod_Params
    {
    public:
        float                                                        InFrequency;                                             //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetFilterCutoffFrequency_Params
    {
    public:
        float                                                        InFrequency;                                             //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFilterPreset_SetFilterAlgorithm_Params
    {
    public:
        Synthesis::ESubmixFilterAlgorithm                            InAlgorithm;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectFlexiverbPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectFlexiverbSettings                    InSettings;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectConvolutionReverbPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectConvolutionReverbSettings            InSettings;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectConvolutionReverbPreset_SetImpulseResponse_Params
    {
    public:
        Synthesis::UAudioImpulseResponse*                            InImpulseResponse;                                       //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectDynamicsProcessorPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectDynamicsProcessorSettings            InSettings;                                              //  0x0000(0x0028)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectEnvelopeFollowerPreset_UnregisterEnvelopeFollowerListener_Params
    {
    public:
        Synthesis::UEnvelopeFollowerListener*                        EnvelopeFollowerListener;                                //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectEnvelopeFollowerPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectEnvelopeFollowerSettings             InSettings;                                              //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectEnvelopeFollowerPreset_RegisterEnvelopeFollowerListener_Params
    {
    public:
        Synthesis::UEnvelopeFollowerListener*                        EnvelopeFollowerListener;                                //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectEQPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectEQSettings                           InSettings;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectFilterPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectFilterSettings                       InSettings;                                              //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectFoldbackDistortionPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectFoldbackDistortionSettings           InSettings;                                              //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectMidSideSpreaderPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectMidSideSpreaderSettings              InSettings;                                              //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectMotionFilterPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectMotionFilterSettings                 InSettings;                                              //  0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectPannerPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectPannerSettings                       InSettings;                                              //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectPhaserPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectPhaserSettings                       InSettings;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectRingModulationPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectRingModulationSettings               InSettings;                                              //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectSimpleDelayPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectSimpleDelaySettings                  InSettings;                                              //  0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectStereoDelayPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectStereoDelaySettings                  InSettings;                                              //  0x0000(0x0024)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectWaveShaperPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectWaveShaperSettings                   InSettings;                                              //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthLibrary_AddModularSynthPresetToBankAsset_Params
    {
    public:
        Synthesis::UModularSynthPresetBank*                          InBank;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::FModularSynthPreset                               Preset;                                                  //  0x0008(0x00E0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          PresetName;                                              //  0x00E8(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetSynthPreset_Params
    {
    public:
        Synthesis::FModularSynthPreset                               SynthPreset;                                             //  0x0000(0x00E0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetSustainGain_Params
    {
    public:
        float                                                        SustainGain;                                             //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetStereoDelayWetlevel_Params
    {
    public:
        float                                                        DelayWetlevel;                                           //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetStereoDelayTime_Params
    {
    public:
        float                                                        DelayTimeMsec;                                           //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetStereoDelayRatio_Params
    {
    public:
        float                                                        DelayRatio;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetStereoDelayMode_Params
    {
    public:
        Synthesis::ESynthStereoDelayMode                             StereoDelayMode;                                         //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetStereoDelayIsEnabled_Params
    {
    public:
        bool                                                         StereoDelayEnabled;                                      //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetStereoDelayFeedback_Params
    {
    public:
        float                                                        DelayFeedback;                                           //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetSpread_Params
    {
    public:
        float                                                        Spread;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetReleaseTime_Params
    {
    public:
        float                                                        ReleaseTimeMsec;                                         //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetPortamento_Params
    {
    public:
        float                                                        Portamento;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetPitchBend_Params
    {
    public:
        float                                                        PitchBend;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetPan_Params
    {
    public:
        float                                                        Pan;                                                     //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscType_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::ESynth1OscType                                    OscType;                                                 //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscSync_Params
    {
    public:
        bool                                                         bIsSynced;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscSemitones_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Semitones;                                               //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscPulsewidth_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Pulsewidth;                                              //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscOctave_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Octave;                                                  //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscGainMod_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        OscGainMod;                                              //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscGain_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        OscGain;                                                 //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscFrequencyMod_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        OscFreqMod;                                              //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetOscCents_Params
    {
    public:
        int32_t                                                      OscIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Cents;                                                   //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvSustainGain_Params
    {
    public:
        float                                                        SustainGain;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvReleaseTime_Params
    {
    public:
        float                                                        Release;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvPatch_Params
    {
    public:
        Synthesis::ESynthModEnvPatch                                 InPatchType;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvInvert_Params
    {
    public:
        bool                                                         bInvert;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvDepth_Params
    {
    public:
        float                                                        Depth;                                                   //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvDecayTime_Params
    {
    public:
        float                                                        DecayTimeMsec;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvBiasPatch_Params
    {
    public:
        Synthesis::ESynthModEnvBiasPatch                             InPatchType;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvBiasInvert_Params
    {
    public:
        bool                                                         bInvert;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetModEnvAttackTime_Params
    {
    public:
        float                                                        AttackTimeMsec;                                          //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOType_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::ESynthLFOType                                     LFOType;                                                 //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOPatch_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::ESynthLFOPatchType                                LFOPatchType;                                            //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOMode_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::ESynthLFOMode                                     LFOMode;                                                 //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOGainMod_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        GainMod;                                                 //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOGain_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Gain;                                                    //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOFrequencyMod_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        FrequencyModHz;                                          //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetLFOFrequency_Params
    {
    public:
        int32_t                                                      LFOIndex;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        FrequencyHz;                                             //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetGainDb_Params
    {
    public:
        float                                                        GainDb;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetFilterType_Params
    {
    public:
        Synthesis::ESynthFilterType                                  FilterType;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetFilterQMod_Params
    {
    public:
        float                                                        FilterQ;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetFilterQ_Params
    {
    public:
        float                                                        FilterQ;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetFilterFrequencyMod_Params
    {
    public:
        float                                                        FilterFrequencyHz;                                       //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetFilterFrequency_Params
    {
    public:
        float                                                        FilterFrequencyHz;                                       //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetFilterAlgorithm_Params
    {
    public:
        Synthesis::ESynthFilterAlgorithm                             FilterAlgorithm;                                         //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetEnableUnison_Params
    {
    public:
        bool                                                         EnableUnison;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetEnableRetrigger_Params
    {
    public:
        bool                                                         RetriggerEnabled;                                        //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetEnablePolyphony_Params
    {
    public:
        bool                                                         bEnablePolyphony;                                        //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetEnablePatch_Params
    {
    public:
        Synthesis::FPatchId                                          PatchId;                                                 //  0x0000(0x0004)  (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         bIsEnabled;                                              //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0005(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetEnableLegato_Params
    {
    public:
        bool                                                         LegatoEnabled;                                           //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetDecayTime_Params
    {
    public:
        float                                                        DecayTimeMsec;                                           //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetChorusFrequency_Params
    {
    public:
        float                                                        Frequency;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetChorusFeedback_Params
    {
    public:
        float                                                        Feedback;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetChorusEnabled_Params
    {
    public:
        bool                                                         EnableChorus;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetChorusDepth_Params
    {
    public:
        float                                                        Depth;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_SetAttackTime_Params
    {
    public:
        float                                                        AttackTimeMsec;                                          //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_NoteOn_Params
    {
    public:
        float                                                        Note;                                                    //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Velocity;                                                //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Duration;                                                //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_NoteOff_Params
    {
    public:
        float                                                        Note;                                                    //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bAllNotesOff;                                            //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bKillAllNotes;                                           //  0x0005(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UModularSynthComponent_CreatePatch_Params
    {
    public:
        Synthesis::ESynth1PatchSource                                PatchSource;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<Synthesis::FSynth1PatchCable>             PatchCables;                                             //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         bEnableByDefault;                                        //  0x0018(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Synthesis::FPatchId                                          ReturnValue;                                             //  0x001C(0x0004)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectMultibandCompressorPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectMultibandCompressorSettings          InSettings;                                              //  0x0000(0x0038)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectMultibandCompressorPreset_SetExternalSubmix_Params
    {
    public:
        Engine::USoundSubmix*                                        Submix;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectMultibandCompressorPreset_SetAudioBus_Params
    {
    public:
        Engine::UAudioBus*                                           AudioBus;                                                //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectMultibandCompressorPreset_ResetKey_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectStereoDelayPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectStereoDelaySettings                  InSettings;                                              //  0x0000(0x0024)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectStereoToQuadPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectStereoToQuadSettings                 InSettings;                                              //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_SetTap_Params
    {
    public:
        int32_t                                                      TapId;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::FTapDelayInfo                                     TapInfo;                                                 //  0x0004(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_SetSettings_Params
    {
    public:
        Synthesis::FSubmixEffectTapDelaySettings                     InSettings;                                              //  0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_SetInterpolationTime_Params
    {
    public:
        float                                                        Time;                                                    //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_RemoveTap_Params
    {
    public:
        int32_t                                                      TapId;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_GetTapIds_Params
    {
    public:
        BasicTypes::TArray<int32_t>                                  TapIds;                                                  //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_GetTap_Params
    {
    public:
        int32_t                                                      TapId;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::FTapDelayInfo                                     TapInfo;                                                 //  0x0004(0x0018)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_GetMaxDelayInMilliseconds_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USubmixEffectTapDelayPreset_AddTap_Params
    {
    public:
        int32_t                                                      TapId;                                                   //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetSustainGain_Params
    {
    public:
        float                                                        SustainGain;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetSoundWave_Params
    {
    public:
        Engine::USoundWave*                                          InSoundWave;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetScrubMode_Params
    {
    public:
        bool                                                         bScrubMode;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetReleaseTimeMsec_Params
    {
    public:
        float                                                        ReleaseTimeMsec;                                         //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetPlayheadTime_Params
    {
    public:
        float                                                        InPositionSec;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        LerpTimeSec;                                             //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::EGranularSynthSeekType                            SeekType;                                                //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetPlaybackSpeed_Params
    {
    public:
        float                                                        InPlayheadRate;                                          //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainVolume_Params
    {
    public:
        float                                                        BaseVolume;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector2D                                       VolumeRange;                                             //  0x0004(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainsPerSecond_Params
    {
    public:
        float                                                        InGrainsPerSecond;                                       //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainProbability_Params
    {
    public:
        float                                                        InGrainProbability;                                      //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainPitch_Params
    {
    public:
        float                                                        BasePitch;                                               //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector2D                                       PitchRange;                                              //  0x0004(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainPan_Params
    {
    public:
        float                                                        BasePan;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector2D                                       PanRange;                                                //  0x0004(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainEnvelopeType_Params
    {
    public:
        Synthesis::EGranularSynthEnvelopeType                        EnvelopeType;                                            //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetGrainDuration_Params
    {
    public:
        float                                                        BaseDurationMsec;                                        //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector2D                                       DurationRange;                                           //  0x0004(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetDecayTime_Params
    {
    public:
        float                                                        DecayTimeMsec;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_SetAttackTime_Params
    {
    public:
        float                                                        AttackTimeMsec;                                          //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_NoteOn_Params
    {
    public:
        float                                                        Note;                                                    //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Velocity;                                                //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Duration;                                                //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_NoteOff_Params
    {
    public:
        float                                                        Note;                                                    //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bKill;                                                   //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_IsLoaded_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_GetSampleDuration_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGranularSynth_GetCurrentPlayheadTime_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectBitCrusherBaseSettings               Settings;                                                //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetSampleRateModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      InModulators;                                            //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetSampleRateModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetSampleRate_Params
    {
    public:
        float                                                        SampleRate;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetModulationSettings_Params
    {
    public:
        Synthesis::FSourceEffectBitCrusherSettings                   ModulationSettings;                                      //  0x0000(0x00D0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetBits_Params
    {
    public:
        float                                                        Bits;                                                    //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetBitModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      InModulators;                                            //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectBitCrusherPreset_SetBitModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetWetModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      Modulators;                                              //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetWetModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetWet_Params
    {
    public:
        float                                                        WetAmount;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetSpreadModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      Modulators;                                              //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetSpreadModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetSpread_Params
    {
    public:
        float                                                        Spread;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetSettings_Params
    {
    public:
        Synthesis::FSourceEffectChorusBaseSettings                   Settings;                                                //  0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetModulationSettings_Params
    {
    public:
        Synthesis::FSourceEffectChorusSettings                       ModulationSettings;                                      //  0x0000(0x0258)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetFrequencyModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      Modulators;                                              //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetFrequencyModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetFrequency_Params
    {
    public:
        float                                                        Frequency;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetFeedbackModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      Modulators;                                              //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetFeedbackModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetFeedback_Params
    {
    public:
        float                                                        Feedback;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetDryModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      Modulators;                                              //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetDryModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetDry_Params
    {
    public:
        float                                                        DryAmount;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetDepthModulators_Params
    {
    public:
        BasicTypes::TSet<AudioExtensions::USoundModulatorBase*>      Modulators;                                              //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetDepthModulator_Params
    {
    public:
        AudioExtensions::USoundModulatorBase*                        Modulator;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USourceEffectChorusPreset_SetDepth_Params
    {
    public:
        float                                                        Depth;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetWaveTablePosition_Params
    {
    public:
        float                                                        InPosition;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetSustainPedalState_Params
    {
    public:
        bool                                                         InSustainPedalState;                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPosLfoType_Params
    {
    public:
        Synthesis::ESynthLFOType                                     InLfoType;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPosLfoFrequency_Params
    {
    public:
        float                                                        InLfoFrequency;                                          //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPosLfoDepth_Params
    {
    public:
        float                                                        InLfoDepth;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeSustainGain_Params
    {
    public:
        float                                                        InSustainGain;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeReleaseTime_Params
    {
    public:
        float                                                        InReleaseTimeMsec;                                       //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeInvert_Params
    {
    public:
        bool                                                         bInInvert;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeDepth_Params
    {
    public:
        float                                                        InDepth;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeDecayTime_Params
    {
    public:
        float                                                        InDecayTimeMsec;                                         //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeBiasInvert_Params
    {
    public:
        bool                                                         bInBiasInvert;                                           //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeBiasDepth_Params
    {
    public:
        float                                                        InDepth;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetPositionEnvelopeAttackTime_Params
    {
    public:
        float                                                        InAttackTimeMsec;                                        //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetLowPassFilterResonance_Params
    {
    public:
        float                                                        InNewQ;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFrequencyWithMidiNote_Params
    {
    public:
        float                                                        InMidiNote;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFrequencyPitchBend_Params
    {
    public:
        float                                                        FrequencyOffsetCents;                                    //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFrequency_Params
    {
    public:
        float                                                        FrequencyHz;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeSustainGain_Params
    {
    public:
        float                                                        InSustainGain;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeReleaseTime_Params
    {
    public:
        float                                                        InReleaseTimeMsec;                                       //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopenDecayTime_Params
    {
    public:
        float                                                        InDecayTimeMsec;                                         //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeInvert_Params
    {
    public:
        bool                                                         bInInvert;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeDepth_Params
    {
    public:
        float                                                        InDepth;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeBiasInvert_Params
    {
    public:
        bool                                                         bInBiasInvert;                                           //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeBiasDepth_Params
    {
    public:
        float                                                        InDepth;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetFilterEnvelopeAttackTime_Params
    {
    public:
        float                                                        InAttackTimeMsec;                                        //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetCurveValue_Params
    {
    public:
        int32_t                                                      TableIndex;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      KeyframeIndex;                                           //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        NewValue;                                                //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetCurveTangent_Params
    {
    public:
        int32_t                                                      TableIndex;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InNewTangent;                                            //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetCurveInterpolationType_Params
    {
    public:
        Synthesis::ECurveInterpolationType                           InterpolationType;                                       //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      TableIndex;                                              //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeSustainGain_Params
    {
    public:
        float                                                        InSustainGain;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeReleaseTime_Params
    {
    public:
        float                                                        InReleaseTimeMsec;                                       //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeInvert_Params
    {
    public:
        bool                                                         bInInvert;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeDepth_Params
    {
    public:
        float                                                        InDepth;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeDecayTime_Params
    {
    public:
        float                                                        InDecayTimeMsec;                                         //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeBiasInvert_Params
    {
    public:
        bool                                                         bInBiasInvert;                                           //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeBiasDepth_Params
    {
    public:
        float                                                        InDepth;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_SetAmpEnvelopeAttackTime_Params
    {
    public:
        float                                                        InAttackTimeMsec;                                        //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_RefreshWaveTable_Params
    {
    public:
        int32_t                                                      Index;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_RefreshAllWaveTables_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_NoteOn_Params
    {
    public:
        float                                                        InMidiNote;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InVelocity;                                              //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_NoteOff_Params
    {
    public:
        float                                                        InMidiNote;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_GetNumTableEntries_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_GetMaxTableIndex_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_GetKeyFrameValuesForTable_Params
    {
    public:
        float                                                        TableIndex;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<float>                                    ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentMonoWaveTable_GetCurveTangent_Params
    {
    public:
        int32_t                                                      TableIndex;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentToneGenerator_SetVolume_Params
    {
    public:
        float                                                        InVolume;                                                //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthComponentToneGenerator_SetFrequency_Params
    {
    public:
        float                                                        InFrequency;                                             //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_SetSoundWave_Params
    {
    public:
        Engine::USoundWave*                                          InSoundWave;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_SetScrubTimeWidth_Params
    {
    public:
        float                                                        InScrubTimeWidthSec;                                     //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_SetScrubMode_Params
    {
    public:
        bool                                                         bScrubMode;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_SetPitch_Params
    {
    public:
        float                                                        InPitch;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        TimeSec;                                                 //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_SeekToTime_Params
    {
    public:
        float                                                        TimeSec;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Synthesis::ESamplePlayerSeekType                             SeekType;                                                //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bWrap;                                                   //  0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_IsLoaded_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_GetSampleDuration_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_GetCurrentPlaybackProgressTime_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthSamplePlayer_GetCurrentPlaybackProgressPercent_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthesisUtilitiesBlueprintFunctionLibrary_GetLogFrequency_Params
    {
    public:
        float                                                        InLinearValue;                                           //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InDomainMin;                                             //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InDomainMax;                                             //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InRangeMin;                                              //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InRangeMax;                                              //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynthesisUtilitiesBlueprintFunctionLibrary_GetLinearFrequency_Params
    {
    public:
        float                                                        InLogFrequencyValue;                                     //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InDomainMin;                                             //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InDomainMax;                                             //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InRangeMin;                                              //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        InRangeMax;                                              //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynth2DSlider_SetValue_Params
    {
    public:
        CoreUObject::FVector2D                                       InValue;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynth2DSlider_SetStepSize_Params
    {
    public:
        float                                                        InValue;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynth2DSlider_SetSliderHandleColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynth2DSlider_SetLocked_Params
    {
    public:
        bool                                                         InValue;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynth2DSlider_SetIndentHandle_Params
    {
    public:
        bool                                                         InValue;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USynth2DSlider_GetValue_Params
    {
    public:
        CoreUObject::FVector2D                                       ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
