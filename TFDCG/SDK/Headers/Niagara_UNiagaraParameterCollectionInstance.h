#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Niagara_FNiagaraVariable.h"
#include "Niagara_FNiagaraParameterStore.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FVector4.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FQuat.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Niagara { class UNiagaraParameterCollection; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Niagara
{
    /**
     * Class /Script/Niagara.NiagaraParameterCollectionInstance
     * Size -> 0x00C8 (FullSize[0x00F0] - InheritedSize[0x0028])
     */
    class UNiagaraParameterCollectionInstance : public CoreUObject::UObject
    {
    public:
        Niagara::UNiagaraParameterCollection*                        Collection;                                              //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Niagara::FNiagaraVariable>                OverridenParameters;                                     //  ZeroConstructor, NativeAccessSpecifierPublic
        Niagara::FNiagaraParameterStore                              ParameterStorage;                                        //  NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x28];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetVectorParameter(const BasicTypes::FString& InVariableName, const CoreUObject::FVector& InValue);
        void SetVector4Parameter(const BasicTypes::FString& InVariableName, const CoreUObject::FVector4& InValue);
        void SetVector2DParameter(const BasicTypes::FString& InVariableName, const CoreUObject::FVector2D& InValue);
        void SetQuatParameter(const BasicTypes::FString& InVariableName, const CoreUObject::FQuat& InValue);
        void SetIntParameter(const BasicTypes::FString& InVariableName, int32_t InValue);
        void SetFloatParameter(const BasicTypes::FString& InVariableName, float InValue);
        void SetColorParameter(const BasicTypes::FString& InVariableName, const CoreUObject::FLinearColor& InValue);
        void SetBoolParameter(const BasicTypes::FString& InVariableName, bool InValue);
        CoreUObject::FVector GetVectorParameter(const BasicTypes::FString& InVariableName);
        CoreUObject::FVector4 GetVector4Parameter(const BasicTypes::FString& InVariableName);
        CoreUObject::FVector2D GetVector2DParameter(const BasicTypes::FString& InVariableName);
        CoreUObject::FQuat GetQuatParameter(const BasicTypes::FString& InVariableName);
        int32_t GetIntParameter(const BasicTypes::FString& InVariableName);
        float GetFloatParameter(const BasicTypes::FString& InVariableName);
        CoreUObject::FLinearColor GetColorParameter(const BasicTypes::FString& InVariableName);
        bool GetBoolParameter(const BasicTypes::FString& InVariableName);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Niagara.NiagaraParameterCollectionInstance");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
