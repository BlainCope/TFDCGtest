#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "AIModule_UBrainComponent.h"
#include "GameplayTags_FGameplayTag.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AIModule { class UBTNode; };
namespace CG::AIModule { class UBehaviorTree; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    /**
     * Class /Script/AIModule.BehaviorTreeComponent
     * Size -> 0x0198 (FullSize[0x0298] - InheritedSize[0x0100])
     */
    class UBehaviorTreeComponent : public AIModule::UBrainComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<AIModule::UBTNode*>                       NodeInstances;                                           //  ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x148];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        AIModule::UBehaviorTree*                                     DefaultBehaviorTreeAsset;                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetDynamicSubtree(const GameplayTags::FGameplayTag& InjectTag, AIModule::UBehaviorTree* BehaviorAsset);
        double GetTagCooldownEndTime(const GameplayTags::FGameplayTag& CooldownTag);
        void AddCooldownTagDuration(const GameplayTags::FGameplayTag& CooldownTag, float CooldownDuration, bool bAddToExistingDuration);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AIModule.BehaviorTreeComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
