#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UPrimitiveComponent.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FLinearColor.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class UFXSystemAsset; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.FXSystemComponent
     * Size -> 0x0000 (FullSize[0x0478] - InheritedSize[0x0478])
     */
    class UFXSystemComponent : public Engine::UPrimitiveComponent
    {
    public:
        void SetVectorParameter(const BasicTypes::FName& ParameterName, const CoreUObject::FVector& Param);
        void SetUseAutoManageAttachment(bool bAutoManage);
        void SetIntParameter(const BasicTypes::FName& ParameterName, int32_t Param);
        void SetFloatParameter(const BasicTypes::FName& ParameterName, float Param);
        void SetEmitterEnable(const BasicTypes::FName& EmitterName, bool bNewEnableState);
        void SetColorParameter(const BasicTypes::FName& ParameterName, const CoreUObject::FLinearColor& Param);
        void SetBoolParameter(const BasicTypes::FName& ParameterName, bool Param);
        void SetAutoAttachmentParameters(Engine::USceneComponent* Parent, const BasicTypes::FName& SocketName, Engine::EAttachmentRule LocationRule, Engine::EAttachmentRule RotationRule, Engine::EAttachmentRule ScaleRule);
        void SetActorParameter(const BasicTypes::FName& ParameterName, Engine::AActor* Param);
        void ReleaseToPool();
        Engine::UFXSystemAsset* GetFXSystemAsset();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.FXSystemComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
