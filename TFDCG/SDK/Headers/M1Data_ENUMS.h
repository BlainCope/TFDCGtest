#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Data
{
    // --------------------------------------------------
    // # Enums
    // --------------------------------------------------
    /**
     * Enum /Script/M1Data.EM1AuthResults
     */
    enum class EM1AuthResults : uint8_t
    {
        Fail                         = 0,
        Success                      = 1,
        Reenter                      = 2,
        ParticipateWithSuccess       = 3,
        ParticipateWithFail          = 4,
        ParticipateWithCrossPlayFail = 5,
        MAX                          = 6
    };

    /**
     * Enum /Script/M1Data.EM1BlockUpdateType
     */
    enum class EM1BlockUpdateType : uint8_t
    {
        Load   = 0,
        Add    = 1,
        Remove = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1FriendUpdateType
     */
    enum class EM1FriendUpdateType : uint8_t
    {
        Load   = 0,
        Add    = 1,
        Remove = 2,
        Update = 3,
        MAX    = 4
    };

    /**
     * Enum /Script/M1Data.EM1InGameSocialOptionType
     */
    enum class EM1InGameSocialOptionType : uint8_t
    {
        On         = 0,
        OnlyFriend = 1,
        Off        = 2,
        MAX        = 3
    };

    /**
     * Enum /Script/M1Data.EM1AutomationTestAttr
     */
    enum class EM1AutomationTestAttr : uint8_t
    {
        Str = 0,
        Wis = 1,
        Int = 2,
        Dex = 3,
        Con = 4,
        MAX = 5
    };

    /**
     * Enum /Script/M1Data.EM1DropContainerType
     */
    enum class EM1DropContainerType : uint8_t
    {
        None                = 0,
        Item                = 1,
        MissionCollectibles = 2,
        MissionSupplies     = 3,
        Max                 = 4
    };

    /**
     * Enum /Script/M1Data.EM1StatUIRecordType
     */
    enum class EM1StatUIRecordType : uint8_t
    {
        Plus     = 0,
        Percent  = 1,
        Multiply = 2,
        Meter    = 3,
        Second   = 4,
        MAX      = 5
    };

    /**
     * Enum /Script/M1Data.EM1SearchKeywordType
     */
    enum class EM1SearchKeywordType : uint8_t
    {
        CharacterModule   = 0,
        WeaponModule      = 1,
        ResearchCharacter = 2,
        ResearchWeapon    = 3,
        ResearchEnhance   = 4,
        MAX               = 5
    };

    /**
     * Enum /Script/M1Data.EM1ProjectileAlignmentType
     */
    enum class EM1ProjectileAlignmentType : uint8_t
    {
        None       = 0,
        Horizontal = 1,
        Vertical   = 2,
        Random     = 3,
        Range      = 4,
        MAX        = 5
    };

    /**
     * Enum /Script/M1Data.EM1EMonsterTagRateType
     */
    enum class EM1EMonsterTagRateType : uint8_t
    {
        Ratio   = 0,
        Percent = 1,
        MAX     = 2
    };

    /**
     * Enum /Script/M1Data.EM1AITargetingType
     */
    enum class EM1AITargetingType : uint8_t
    {
        CharacterFirst = 0,
        CharacterOnly  = 1,
        ObjectFirst    = 2,
        ObjectOnly     = 3,
        MAX            = 4
    };

    /**
     * Enum /Script/M1Data.EM1AITargetingPriority
     */
    enum class EM1AITargetingPriority : uint8_t
    {
        Closest  = 0,
        Farthest = 1,
        Random   = 2,
        MAX      = 3
    };

    /**
     * Enum /Script/M1Data.EM1MonsterAIPattern
     */
    enum class EM1MonsterAIPattern : uint8_t
    {
        Normal = 0,
        Named  = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1MonsterAIDataOverrideType
     */
    enum class EM1MonsterAIDataOverrideType : uint8_t
    {
        VulgusPost = 0,
        MAX        = 1
    };

    /**
     * Enum /Script/M1Data.EM1ActionTargetType
     */
    enum class EM1ActionTargetType : uint8_t
    {
        Primary      = 0,
        Secondary    = 1,
        SubOrPrimary = 2,
        MAX          = 3
    };

    /**
     * Enum /Script/M1Data.EM1ActionArmType
     */
    enum class EM1ActionArmType : uint8_t
    {
        None  = 0,
        Left  = 1,
        Right = 2,
        Both  = 3,
        MAX   = 4
    };

    /**
     * Enum /Script/M1Data.EM1MonsterActionType
     */
    enum class EM1MonsterActionType : uint8_t
    {
        None    = 0,
        Barrage = 1,
        Single  = 2,
        MAX     = 3
    };

    /**
     * Enum /Script/M1Data.EM1AreaType
     */
    enum class EM1AreaType : uint8_t
    {
        Sphere   = 0,
        Cone     = 1,
        Box      = 2,
        Cylinder = 3,
        MAX      = 4
    };

    /**
     * Enum /Script/M1Data.EM1NpcSpawnType
     */
    enum class EM1NpcSpawnType : uint8_t
    {
        AlwaysSpawn        = 0,
        QuestSpecificSpawn = 1,
        Replacement        = 2,
        MAX                = 3
    };

    /**
     * Enum /Script/M1Data.EM1NpcServiceType
     */
    enum class EM1NpcServiceType : uint8_t
    {
        None                           = 0,
        BuyItem                        = 1,
        SellItem                       = 2,
        ChangeRuneSocketColor          = 3,
        ChangeRuneSocketLink           = 4,
        CustomizeItem                  = 5,
        UpgradeItem                    = 6,
        OpenWorldMap                   = 7,
        OpenLocalMap                   = 8,
        Mission                        = 9,
        Research                       = 10,
        Quest                          = 11,
        CharacterReset                 = 12,
        RuneEnchant                    = 13,
        RuneDecompose                  = 14,
        MasteryRankUp                  = 15,
        RuneCompose                    = 16,
        Mail                           = 17,
        VoidBattleNormal               = 18,
        VoidBattleHard                 = 19,
        WorldMission                   = 20,
        ItemLevelUpgrade               = 21,
        Warehouse                      = 22,
        PerkEnchant                    = 23,
        ReactorEnchant                 = 24,
        RangedWeaponRandomOptionChange = 25,
        ReactorRandomOptionChange      = 26,
        RecordObject                   = 27,
        Laboratory                     = 28,
        LaboratoryOption               = 29,
        LaboratoryMonsterAllClear      = 30,
        InstanceDungeon                = 31,
        InstanceDungeonNormal          = 32,
        InstanceDungeonHard            = 33,
        MultiSupply                    = 34,
        OpenPopup                      = 35,
        EnterInstanceDungeon           = 36,
        PaintExtract                   = 37,
        InvasionDungeon                = 38,
        MAX                            = 39
    };

    /**
     * Enum /Script/M1Data.EM1NpcSpawnConditionType
     */
    enum class EM1NpcSpawnConditionType : uint8_t
    {
        None          = 0,
        QuestStart    = 1,
        QuestComplete = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/M1Data.EM1NpcServiceUnlockConditionType
     */
    enum class EM1NpcServiceUnlockConditionType : uint8_t
    {
        None           = 0,
        CompleteQuest  = 1,
        OwnQuest       = 2,
        EquipCharacter = 3,
        MAX            = 4
    };

    /**
     * Enum /Script/M1Data.EM1DialogueType
     */
    enum class EM1DialogueType : uint8_t
    {
        None             = 0,
        Mission          = 1,
        Quest            = 2,
        NpcDialogueScene = 3,
        MAX              = 4
    };

    /**
     * Enum /Script/M1Data.EM1StatRefType
     */
    enum class EM1StatRefType : uint8_t
    {
        None           = 0,
        SourceSnapshot = 1,
        SourceLinked   = 2,
        TargetSnapshot = 3,
        TargetLinked   = 4,
        MAX            = 5
    };

    /**
     * Enum /Script/M1Data.EM1AbilityCreatedObjectRemovalPolicy
     */
    enum class EM1AbilityCreatedObjectRemovalPolicy : uint8_t
    {
        DoNothing                     = 0,
        RemoveWithThisAbility         = 1,
        RemoveWhenInstigatorEndPlay   = 2,
        RemoveWhenInstigatorIsInvalid = 3,
        MAX                           = 4
    };

    /**
     * Enum /Script/M1Data.EM1StatusEffectStackDecreasePolicy
     */
    enum class EM1StatusEffectStackDecreasePolicy : uint8_t
    {
        DoNothing         = 0,
        WhenRemoveOtherSE = 1,
        WhenEndDuration   = 2,
        MAX               = 3
    };

    /**
     * Enum /Script/M1Data.EM1SkillType
     */
    enum class EM1SkillType : uint8_t
    {
        None    = 0,
        Active  = 1,
        Passive = 2,
        Max     = 3
    };

    /**
     * Enum /Script/M1Data.EM1SkillArcheType
     */
    enum class EM1SkillArcheType : uint8_t
    {
        None      = 0,
        Fusion    = 1,
        Singular  = 2,
        Dimension = 3,
        Tech      = 4,
        Max       = 5
    };

    /**
     * Enum /Script/M1Data.EM1SkillInfoBenefitType
     */
    enum class EM1SkillInfoBenefitType : uint8_t
    {
        None     = 0,
        Increase = 1,
        Decrease = 2,
        Max      = 3
    };

    /**
     * Enum /Script/M1Data.EM1SkillInfoTextFormatType
     */
    enum class EM1SkillInfoTextFormatType : uint8_t
    {
        None       = 0,
        Title      = 1,
        Annotation = 2,
        MAX        = 3
    };

    /**
     * Enum /Script/M1Data.EM1StatusEffectAmassType
     */
    enum class EM1StatusEffectAmassType : uint8_t
    {
        Replace       = 0,
        Preserve      = 1,
        StackReplace  = 2,
        StackPreserve = 3,
        MAX           = 4
    };

    /**
     * Enum /Script/M1Data.EM1ChattingTab
     */
    enum class EM1ChattingTab : uint8_t
    {
        Tab_Normal = 0,
        Tab_World  = 1,
        Tab_MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1ChattingBlockRule
     */
    enum class EM1ChattingBlockRule : uint8_t
    {
        SystemDefault = 0,
        ChatDefault   = 1,
        SocialMotion  = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/M1Data.EM1CreditType
     */
    enum class EM1CreditType : uint8_t
    {
        Title        = 0,
        Staff        = 1,
        Staff_Center = 2,
        Image        = 3,
        FreeText     = 4,
        Space        = 5,
        MAX          = 6
    };

    /**
     * Enum /Script/M1Data.EM1MissionTargetType
     */
    enum class EM1MissionTargetType : uint8_t
    {
        None                  = 0,
        Destruction           = 1,
        Defense               = 2,
        Supply                = 3,
        Explosion             = 4,
        DataCollection        = 5,
        Escort                = 6,
        MultiCollection       = 7,
        MultiAssassination    = 8,
        Interaction           = 9,
        DestructionIronHeart  = 10,
        VoidFragment          = 11,
        CompetitiveOccupation = 12,
        InstantDeathBarrier   = 13,
        MAX                   = 14
    };

    /**
     * Enum /Script/M1Data.EM1InvasionArcheSymbolType
     */
    enum class EM1InvasionArcheSymbolType : uint8_t
    {
        None            = 0,
        InvasionArche   = 1,
        InvasionArche01 = 2,
        InvasionArche02 = 3,
        InvasionArche03 = 4,
        InvasionArche04 = 5,
        InvasionArche05 = 6,
        MAX             = 7
    };

    /**
     * Enum /Script/M1Data.EM1ContentsPlatformType
     */
    enum class EM1ContentsPlatformType : uint8_t
    {
        PS4   = 0,
        PS5   = 1,
        Xbox  = 2,
        Steam = 3,
        Max   = 4
    };

    /**
     * Enum /Script/M1Data.EM1RelationsCheckType
     */
    enum class EM1RelationsCheckType : uint8_t
    {
        Both      = 0,
        OnlyEnemy = 1,
        OnlyAlly  = 2,
        MAX       = 3
    };

    /**
     * Enum /Script/M1Data.EM1EquipmentCategoryType
     */
    enum class EM1EquipmentCategoryType : uint8_t
    {
        None                = 0,
        RangedWeapon        = 1,
        MeleeWeapon_Deleted = 2,
        Reactor             = 3,
        Necklace            = 4,
        Earrings            = 5,
        Ring                = 6,
        Bracelet            = 7,
        Max                 = 8
    };

    /**
     * Enum /Script/M1Data.EM1EquipItemClassType
     */
    enum class EM1EquipItemClassType : uint8_t
    {
        None                = 0,
        WeaponHandGun       = 1,
        WeaponHandCannon    = 2,
        WeaponShotGun       = 3,
        WeaponSubMachineGun = 4,
        WeaponMachineGun    = 5,
        WeaponAssaultRifle  = 6,
        WeaponTacticalRifle = 7,
        WeaponScoutRifle    = 8,
        WeaponSniperRifle   = 9,
        WeaponLauncher      = 10,
        WeaponBow           = 11,
        WeaponBeamRifle     = 12,
        WeaponMelee_Deleted = 13,
        ArmorCloth          = 14,
        ArmorLeather        = 15,
        ArmorMetal          = 16,
        WeaponSword         = 17,
        WeaponBattleAxe     = 18,
        MAX                 = 19
    };

    /**
     * Enum /Script/M1Data.EM1ItemTierType
     */
    enum class EM1ItemTierType : uint8_t
    {
        None  = 0,
        Tier1 = 1,
        Tier2 = 2,
        Tier3 = 3,
        Tier4 = 4,
        Max   = 5
    };

    /**
     * Enum /Script/M1Data.EM1ConsumableItemCategoryType
     */
    enum class EM1ConsumableItemCategoryType : uint8_t
    {
        None                 = 0,
        AmmoRecovery         = 1,
        BuffItem             = 2,
        Material             = 3,
        CharacterTicket      = 4,
        VoidVault            = 5,
        MiniGameKey          = 6,
        VoidPiece            = 7,
        EnhancementItem      = 8,
        VoidVaultStabilizer  = 9,
        Bunch                = 10,
        PaintExtractMaterial = 11,
        KeyMaterial          = 12,
        Max                  = 13
    };

    /**
     * Enum /Script/M1Data.EM1ConsumableItemHowToUse
     */
    enum class EM1ConsumableItemHowToUse : uint8_t
    {
        None           = 0,
        Instantly      = 1,
        ByInventory    = 2,
        UseImmediately = 3,
        MAX            = 4
    };

    /**
     * Enum /Script/M1Data.EM1ItemAcquireType
     */
    enum class EM1ItemAcquireType : uint8_t
    {
        None        = 0,
        InGame      = 1,
        LimitedTime = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/M1Data.EM1CurrencyType
     */
    enum class EM1CurrencyType : uint8_t
    {
        None         = 0,
        Gold         = 1,
        BlueCash     = 2,
        BlackMana    = 3,
        Qulipothium  = 4,
        RedCash      = 5,
        BattleCoin   = 6,
        PlatinumCoin = 7,
        BonusCoin    = 8,
        Max          = 9
    };

    /**
     * Enum /Script/M1Data.EM1RedeemType
     */
    enum class EM1RedeemType : uint8_t
    {
        None          = 0,
        Decomposition = 1,
        Package       = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/M1Data.EM1BuffItemType
     */
    enum class EM1BuffItemType : uint8_t
    {
        None          = 0,
        Boost         = 1,
        SlotExpansion = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/M1Data.EM1CustomizingConditionType
     */
    enum class EM1CustomizingConditionType : uint8_t
    {
        None      = 0,
        Character = 1,
        Weapon    = 2,
        All       = 3,
        MAX       = 4
    };

    /**
     * Enum /Script/M1Data.EM1CustomizingConditionSubType
     */
    enum class EM1CustomizingConditionSubType : uint8_t
    {
        None       = 0,
        All        = 1,
        All_Male   = 2,
        All_Female = 3,
        Group      = 4,
        MAX        = 5
    };

    /**
     * Enum /Script/M1Data.EM1CustomizingCharacterSkinType
     */
    enum class EM1CustomizingCharacterSkinType : uint8_t
    {
        None            = 0,
        Head            = 1,
        Body            = 2,
        BackAttachment  = 3,
        ChestAttachment = 4,
        Makeup          = 5,
        MAX             = 6
    };

    /**
     * Enum /Script/M1Data.EM1CustomizingBoundType
     */
    enum class EM1CustomizingBoundType : uint8_t
    {
        None    = 0,
        Acquire = 1,
        Equip   = 2,
        MAX     = 3
    };

    /**
     * Enum /Script/M1Data.EM1CharacterSize
     */
    enum class EM1CharacterSize : uint8_t
    {
        Small    = 0,
        Medium   = 1,
        Big      = 2,
        Special  = 3,
        Special2 = 4,
        MAX      = 5
    };

    /**
     * Enum /Script/M1Data.EM1ItemOptionType
     */
    enum class EM1ItemOptionType : uint8_t
    {
        None   = 0,
        Random = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1CharacterGender
     */
    enum class EM1CharacterGender : uint8_t
    {
        None   = 0,
        Female = 1,
        Male   = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1CharacterGrade
     */
    enum class EM1CharacterGrade : uint8_t
    {
        Normal   = 0,
        Ultimate = 1,
        MAX      = 2
    };

    /**
     * Enum /Script/M1Data.EM1DropGroupType
     */
    enum class EM1DropGroupType : uint8_t
    {
        None        = 0,
        Equipment   = 1,
        Rune        = 2,
        Consumable  = 3,
        Gold        = 4,
        Qulipothium = 5,
        Instant     = 6,
        MAX         = 7
    };

    /**
     * Enum /Script/M1Data.EM1WeaponInstanceType
     */
    enum class EM1WeaponInstanceType : uint8_t
    {
        ItemWeapon   = 0,
        AltWeapon    = 1,
        PickupWeapon = 2,
        MAX          = 3
    };

    /**
     * Enum /Script/M1Data.EM1RoundsType
     */
    enum class EM1RoundsType : uint8_t
    {
        None            = 0,
        GeneralRounds   = 1,
        EnhancedRounds  = 2,
        ImpactRounds    = 3,
        HighpowerRounds = 4,
        MAX             = 5
    };

    /**
     * Enum /Script/M1Data.EM1ReloadType
     */
    enum class EM1ReloadType : uint8_t
    {
        Magazine = 0,
        Rounds   = 1,
        MAX      = 2
    };

    /**
     * Enum /Script/M1Data.EM1SpreadType
     */
    enum class EM1SpreadType : uint8_t
    {
        None              = 0,
        Random            = 1,
        Division          = 2,
        CenterAndDivision = 3,
        MAX               = 4
    };

    /**
     * Enum /Script/M1Data.EM1MonsterCategory
     */
    enum class EM1MonsterCategory : uint8_t
    {
        Normal        = 0,
        Champion      = 1,
        Named         = 2,
        Boss          = 3,
        MissionTarget = 4,
        Max           = 5
    };

    /**
     * Enum /Script/M1Data.EM1MonsterSpecialty
     */
    enum class EM1MonsterSpecialty : uint8_t
    {
        None     = 0,
        Normal   = 1,
        Assault  = 2,
        Cower    = 3,
        Speeder  = 4,
        Defender = 5,
        Hider    = 6,
        MAX      = 7
    };

    /**
     * Enum /Script/M1Data.EM1LegionCategory
     */
    enum class EM1LegionCategory : uint8_t
    {
        None     = 0,
        Darkness = 1,
        Truth    = 2,
        Immortal = 3,
        Max      = 4
    };

    /**
     * Enum /Script/M1Data.EM1ItemOptionTierType
     */
    enum class EM1ItemOptionTierType : uint8_t
    {
        None  = 0,
        Tier1 = 1,
        Tier2 = 2,
        Tier3 = 3,
        Max   = 4
    };

    /**
     * Enum /Script/M1Data.EM1MonsterSubType
     */
    enum class EM1MonsterSubType : uint8_t
    {
        Normal = 0,
        Elite  = 1,
        Guide  = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1FieldObjectType
     */
    enum class EM1FieldObjectType : uint8_t
    {
        None        = 0,
        Interaction = 1,
        Hit         = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/M1Data.EM1FieldObjectActivateType
     */
    enum class EM1FieldObjectActivateType : uint8_t
    {
        None      = 0,
        DropItem  = 1,
        Explosion = 2,
        MiniGame  = 3,
        MAX       = 4
    };

    /**
     * Enum /Script/M1Data.EM1EciveActionType
     */
    enum class EM1EciveActionType : uint8_t
    {
        None    = 0,
        Marker  = 1,
        Sound   = 2,
        Monster = 3,
        MAX     = 4
    };

    /**
     * Enum /Script/M1Data.EM1FieldObjectActivateConditionType
     */
    enum class EM1FieldObjectActivateConditionType : uint8_t
    {
        None       = 0,
        Consumable = 1,
        MAX        = 2
    };

    /**
     * Enum /Script/M1Data.EM1DamageAdvantageType
     */
    enum class EM1DamageAdvantageType : uint8_t
    {
        None     = 0,
        Burst    = 1,
        Crush    = 2,
        Piercing = 3,
        MAX      = 4
    };

    /**
     * Enum /Script/M1Data.EM1ElementalDamageChannel
     */
    enum class EM1ElementalDamageChannel : uint8_t
    {
        None        = 0,
        Plain       = 1,
        Blazer      = 2,
        Glacier     = 3,
        Electricity = 4,
        Demonic     = 5,
        Max         = 6
    };

    /**
     * Enum /Script/M1Data.EM1ElementalDegreeType
     */
    enum class EM1ElementalDegreeType : uint8_t
    {
        None       = 0,
        VeryWeak   = 1,
        Weak       = 2,
        Normal     = 3,
        Strong     = 4,
        VeryStrong = 5,
        MAX        = 6
    };

    /**
     * Enum /Script/M1Data.EM1MapType
     */
    enum class EM1MapType : uint8_t
    {
        City            = 0,
        Field           = 1,
        Prologue        = 2,
        VoidBattle      = 3,
        InstanceDungeon = 4,
        Laboratory      = 5,
        MAX             = 6
    };

    /**
     * Enum /Script/M1Data.EM1EntryPointUnlockType
     */
    enum class EM1EntryPointUnlockType : uint8_t
    {
        None       = 0,
        BattleZone = 1,
        Overlap    = 2,
        MAX        = 3
    };

    /**
     * Enum /Script/M1Data.EM1MapBattleZoneOpenConditionType
     */
    enum class EM1MapBattleZoneOpenConditionType : uint8_t
    {
        Quest      = 0,
        Mission    = 1,
        FieldOpen  = 2,
        BattleZone = 3,
        MAX        = 4
    };

    /**
     * Enum /Script/M1Data.EM1MapTargetType
     */
    enum class EM1MapTargetType : uint8_t
    {
        Quest      = 0,
        Mission    = 1,
        VoidBattle = 2,
        MAX        = 3
    };

    /**
     * Enum /Script/M1Data.EM1MapGoalType
     */
    enum class EM1MapGoalType : uint8_t
    {
        Battle = 0,
        Field  = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1ProductType
     */
    enum class EM1ProductType : uint8_t
    {
        Common = 0,
        Paid   = 1,
        Bundle = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1ShopCategoryType
     */
    enum class EM1ShopCategoryType : uint8_t
    {
        None              = 0,
        Popular           = 1,
        BattlePass        = 2,
        Character         = 3,
        UltimateCharacter = 4,
        LimitedSkin       = 5,
        PremiumSkin       = 6,
        CharacterSkin     = 7,
        CharacterMakeup   = 8,
        CommonSkin        = 9,
        Paint             = 10,
        Growth            = 11,
        Boost             = 12,
        Cash              = 13,
        Veiled            = 14,
        MAX               = 15
    };

    /**
     * Enum /Script/M1Data.EM1ShopResetType
     */
    enum class EM1ShopResetType : uint8_t
    {
        None    = 0,
        Daily   = 1,
        Weekly  = 2,
        Monthly = 3,
        MAX     = 4
    };

    /**
     * Enum /Script/M1Data.EM1ShopType
     */
    enum class EM1ShopType : uint8_t
    {
        Common = 0,
        Paid   = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1ImportanceType
     */
    enum class EM1ImportanceType : uint8_t
    {
        None   = 0,
        Low    = 1,
        Medium = 2,
        High   = 3,
        MAX    = 4
    };

    /**
     * Enum /Script/M1Data.EM1ResearchType
     */
    enum class EM1ResearchType : uint8_t
    {
        None              = 0,
        Character         = 1,
        Equipment         = 2,
        CharacterMaterial = 3,
        EquipmentMaterial = 4,
        UpgradeMaterial   = 5,
        Max               = 6
    };

    /**
     * Enum /Script/M1Data.EM1PrerequisiteType
     */
    enum class EM1PrerequisiteType : uint8_t
    {
        Field      = 0,
        BattleZone = 1,
        MAX        = 2
    };

    /**
     * Enum /Script/M1Data.EM1MissionRequiredActivateConditionType
     */
    enum class EM1MissionRequiredActivateConditionType : uint8_t
    {
        None         = 0,
        VoidFragment = 1,
        VoidFusion   = 2,
        MAX          = 3
    };

    /**
     * Enum /Script/M1Data.EM1MissionRewardsEvaluateConditionType
     */
    enum class EM1MissionRewardsEvaluateConditionType : uint8_t
    {
        None                  = 0,
        VoidFragment          = 1,
        VoidFusion            = 2,
        DestructionVulgusPost = 3,
        MAX                   = 4
    };

    /**
     * Enum /Script/M1Data.EM1MissionCategory
     */
    enum class EM1MissionCategory : uint8_t
    {
        None              = 0,
        Prologue          = 1,
        BaseMission       = 2,
        DungeonField      = 3,
        RouteMission      = 4,
        BlockWorld        = 5,
        DefenseWorld      = 6,
        ResearchWorld     = 7,
        VoidFragmentField = 8,
        VoidFusionField   = 9,
        RepeatMission6    = 10,
        VulgusPostField   = 11,
        Invasion          = 12,
        MAX               = 13
    };

    /**
     * Enum /Script/M1Data.EM1QuestStartPointType
     */
    enum class EM1QuestStartPointType : uint8_t
    {
        None        = 0,
        EnterField  = 1,
        InteractNpc = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/M1Data.EM1QuestStartConditionType
     */
    enum class EM1QuestStartConditionType : uint8_t
    {
        None                    = 0,
        CompleteQuest           = 1,
        OwnRangedWeapon         = 2,
        OwnAccessory            = 3,
        OwnConsumable           = 4,
        OwnCurrency             = 5,
        OwnRune                 = 6,
        EquipRangedWeapon       = 7,
        EquipAccessory          = 8,
        EquipRune               = 9,
        CharacterLevel          = 10,
        MasteryRank             = 11,
        BattleZoneProgressValue = 12,
        OwnReactor              = 13,
        EquipReactor            = 14,
        CanMasteryRankUp        = 15,
        EquipCustomizing        = 16,
        OwnRecord               = 17,
        OwnPlayer               = 18,
        EquipCharacter          = 19,
        InSeason                = 20,
        MAX                     = 21
    };

    /**
     * Enum /Script/M1Data.EM1CompleteConditionType
     */
    enum class EM1CompleteConditionType : uint8_t
    {
        None                           = 0,
        CompleteQuest                  = 1,
        SucceedMission                 = 2,
        KillMonster                    = 3,
        InteractNpc                    = 4,
        EnterField                     = 5,
        MasteryRank                    = 6,
        GetRangedWeapon                = 7,
        GetAccessory                   = 8,
        GetConsumable                  = 9,
        GetCurrency                    = 10,
        GetRune                        = 11,
        OwnRangedWeapon                = 12,
        OwnAccessory                   = 13,
        OwnConsumable                  = 14,
        OwnCurrency                    = 15,
        OwnRune                        = 16,
        BuyRangedWeapon                = 17,
        BuyAccessory                   = 18,
        BuyConsumable                  = 19,
        BuyRune                        = 20,
        SellRangedWeapon               = 21,
        SellAccessory                  = 22,
        SellConsumable                 = 23,
        SellRune                       = 24,
        EquipRangedWeapon              = 25,
        EquipAccessory                 = 26,
        EquipRune                      = 27,
        UseConsumable                  = 28,
        UseCurrency                    = 29,
        EnchantRune                    = 30,
        EnchantRuneLevel               = 31,
        ComposeRune                    = 32,
        DecomposeRune                  = 33,
        RuneCapacityIncrease           = 34,
        RuneSocketGrant                = 35,
        RaidPlay                       = 36,
        RaidSucceed                    = 37,
        DoParty                        = 38,
        PartyMissionSucceed            = 39,
        PartyRaidPlay                  = 40,
        PartyRaidSucceed               = 41,
        ResearchComplete               = 42,
        ResearchShorten                = 43,
        CharacterLevel                 = 44,
        ChangeCharacter                = 45,
        AllClearBattleZone             = 46,
        RangedWeaponLevelUpgrade       = 47,
        RangedWeaponPerkEnchant        = 48,
        DecomposeRangedWeapon          = 49,
        EpicMonsterDeboneSuccess       = 50,
        OwnPlayer                      = 51,
        EnchantReactor                 = 52,
        GetReactor                     = 53,
        OwnReactor                     = 54,
        BuyReactor                     = 55,
        SellReactor                    = 56,
        EquipReactor                   = 57,
        DecomposeAccessory             = 58,
        DecomposeReactor               = 59,
        SucceedMissionWave             = 60,
        PartySucceedMissionWave        = 61,
        BattleZoneProgressValue        = 62,
        MultiKillMonsterByWeapon       = 63,
        MultiKillMonsterBySKill        = 64,
        KillMonsterBySkill             = 65,
        NotDamagedSucceedMission       = 66,
        NotDamagedSucceedRaid          = 67,
        TimeLimitRaidSucceed           = 68,
        TimeLimitMissionSucceed        = 69,
        EquipCharacter                 = 70,
        EquipCustomizing               = 71,
        GiveSingleDamage               = 72,
        GiveTotalDamage                = 73,
        KillMonsterByWeapon            = 74,
        KillMonsterByMelee             = 75,
        KillMonsterByWeakness          = 76,
        HitMonsterWeakness             = 77,
        GiveTotalWeaponDamage          = 78,
        GiveTotalSkillDamage           = 79,
        GiveTotalMeleeDamage           = 80,
        GiveTotalWeaknessDamage        = 81,
        GiveTotalCriticalDamage        = 82,
        TakeSingleDamage               = 83,
        TakeTotalDamage                = 84,
        RescuePlayer                   = 85,
        RescuedByPlayer                = 86,
        PlayerDeath                    = 87,
        DestoryEpicMonsterParts        = 88,
        GiveStatusEffect               = 89,
        TakeStatusEffect               = 90,
        GiveTotalHeal                  = 91,
        TakeTotalHeal                  = 92,
        CheckRecord                    = 93,
        RangedWeaponRandomOptionChange = 94,
        AttackVoidFragment             = 95,
        SucceedMiniGame                = 96,
        RangedWeaponPerkEnchantTier    = 97,
        GainTotalCommonGauge           = 98,
        StartDialog                    = 99,
        EndDialog                      = 100,
        OwnRecord                      = 101,
        SeasonLevel                    = 102,
        MAX                            = 103
    };

    /**
     * Enum /Script/M1Data.EM1QuestSubConditionType
     */
    enum class EM1QuestSubConditionType : uint8_t
    {
        None                        = 0,
        EquipRangedWeaponClassType  = 1,
        EquipRangedWeaponId         = 2,
        EquipRangedWeaponRoundsType = 3,
        EquipRuneId                 = 4,
        EquipPlayerId               = 5,
        ContentType                 = 6,
        MapId                       = 7,
        InParty                     = 8,
        EquipCustomizingId          = 9,
        EquipCustomizingTierType    = 10,
        BattleZoneId                = 11,
        MissionId                   = 12,
        MAX                         = 13
    };

    /**
     * Enum /Script/M1Data.EM1QuestDirectionType
     */
    enum class EM1QuestDirectionType : uint8_t
    {
        None           = 0,
        OperatorDialog = 1,
        NpcDialog      = 2,
        Sequence       = 3,
        MAX            = 4
    };

    /**
     * Enum /Script/M1Data.EM1QuestCompleteConditionGroupType
     */
    enum class EM1QuestCompleteConditionGroupType : uint8_t
    {
        None        = 0,
        Always      = 1,
        TrackerOnly = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/M1Data.EM1AbilityParamType
     */
    enum class EM1AbilityParamType : uint8_t
    {
        Invalid   = 0,
        Bool      = 1,
        Int       = 2,
        Float     = 3,
        Name      = 4,
        Enum      = 5,
        Vector    = 6,
        Object    = 7,
        Class     = 8,
        Tag       = 9,
        TraitTags = 10,
        MAX       = 11
    };

    /**
     * Enum /Script/M1Data.EM1StatModifierOp
     */
    enum class EM1StatModifierOp : uint8_t
    {
        Add      = 0,
        Multiply = 1,
        Override = 2,
        Max      = 3
    };

    /**
     * Enum /Script/M1Data.EM1RuneClassType
     */
    enum class EM1RuneClassType : uint8_t
    {
        Invalid        = 0,
        Character      = 1,
        WeaponRange_01 = 2,
        WeaponRange_02 = 3,
        WeaponRange_03 = 4,
        WeaponRange_04 = 5,
        WeaponRange_05 = 6,
        AccountMelee   = 7,
        MAX            = 8
    };

    /**
     * Enum /Script/M1Data.EM1RuneSocketType
     */
    enum class EM1RuneSocketType : uint8_t
    {
        None    = 0,
        Neutral = 1,
        Blue    = 2,
        Red     = 3,
        Green   = 4,
        Yellow  = 5,
        Purple  = 6,
        MAX     = 7
    };

    /**
     * Enum /Script/M1Data.EM1PlatformAchievementObjectiveCondition
     */
    enum class EM1PlatformAchievementObjectiveCondition : uint8_t
    {
        QuestComplete = 0,
        MAX           = 1
    };

    /**
     * Enum /Script/M1Data.EM1ReactorOptimizedConditionType
     */
    enum class EM1ReactorOptimizedConditionType : uint8_t
    {
        EquipWeaponClassCurrentSlot = 0,
        EquipWeaponClassAnySlot     = 1,
        EquipWeaponCurrentSlot      = 2,
        EquipWeaponAnySlot          = 3,
        EquipCharacter              = 4,
        MAX                         = 5
    };

    /**
     * Enum /Script/M1Data.EM1VoidBattleDifficulty
     */
    enum class EM1VoidBattleDifficulty : uint8_t
    {
        None   = 0,
        Normal = 1,
        Hard   = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1VoidBattleUnlockConditionType
     */
    enum class EM1VoidBattleUnlockConditionType : uint8_t
    {
        CompleteQuest       = 0,
        SucceedMission      = 1,
        AchieveMasteryLevel = 2,
        MAX                 = 3
    };

    /**
     * Enum /Script/M1Data.EM1VoidBattleStartConditionType
     */
    enum class EM1VoidBattleStartConditionType : uint8_t
    {
        TimeSlot = 0,
        MAX      = 1
    };

    /**
     * Enum /Script/M1Data.EM1InstanceDungeonDifficulty
     */
    enum class EM1InstanceDungeonDifficulty : uint8_t
    {
        None   = 0,
        Normal = 1,
        Hard   = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1MotionType
     */
    enum class EM1MotionType : uint8_t
    {
        Solo  = 0,
        Group = 1,
        MAX   = 2
    };

    /**
     * Enum /Script/M1Data.EM1EventType
     */
    enum class EM1EventType : uint8_t
    {
        Challenge = 0,
        Boosting  = 1,
        MAX       = 2
    };

    /**
     * Enum /Script/M1Data.EM1EventResetType
     */
    enum class EM1EventResetType : uint8_t
    {
        Permanent = 0,
        Daily     = 1,
        Weekly    = 2,
        Monthly   = 3,
        MAX       = 4
    };

    /**
     * Enum /Script/M1Data.EM1EventBoostContentType
     */
    enum class EM1EventBoostContentType : uint8_t
    {
        None                   = 0,
        KillMonster            = 1,
        KillBossMonster        = 2,
        MissionSucceed         = 3,
        RaidSucceed            = 4,
        MissionWaveSucceed     = 5,
        KillMissionTaskMonster = 6,
        KillMissionWaveMonster = 7,
        FieldObject            = 8,
        MAX                    = 9
    };

    /**
     * Enum /Script/M1Data.EM1DayOfWeek
     */
    enum class EM1DayOfWeek : uint8_t
    {
        Sunday    = 0,
        Monday    = 1,
        Tuesday   = 2,
        Wednesday = 3,
        Thursday  = 4,
        Friday    = 5,
        Saturday  = 6,
        MAX       = 7
    };

    /**
     * Enum /Script/M1Data.EM1DecomposeTargetType
     */
    enum class EM1DecomposeTargetType : uint8_t
    {
        None         = 0,
        RangedWeapon = 1,
        Reactor      = 2,
        Necklace     = 3,
        Earrings     = 4,
        Ring         = 5,
        Bracelet     = 6,
        Perk         = 7,
        Rune         = 8,
        MAX          = 9
    };

    /**
     * Enum /Script/M1Data.EM1TitleType
     */
    enum class EM1TitleType : uint8_t
    {
        Prefix = 0,
        Suffix = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1ChallengeDataType
     */
    enum class EM1ChallengeDataType : uint8_t
    {
        None                = 0,
        PassChallengeDaily  = 1,
        PassChallengeWeekly = 2,
        MAX                 = 3
    };

    /**
     * Enum /Script/M1Data.EM1BattlePassType
     */
    enum class EM1BattlePassType : uint8_t
    {
        None     = 0,
        General  = 1,
        Platinum = 2,
        Bonus    = 3,
        Event    = 4,
        MAX      = 5
    };

    /**
     * Enum /Script/M1Data.EM1RecordType
     */
    enum class EM1RecordType : uint8_t
    {
        None     = 0,
        Voice    = 1,
        Document = 2,
        MAX      = 3
    };

    /**
     * Enum /Script/M1Data.EM1StatValueOrder
     */
    enum class EM1StatValueOrder : uint8_t
    {
        Default = 0,
        Reverse = 1,
        MAX     = 2
    };

    /**
     * Enum /Script/M1Data.EM1EventBoostType
     */
    enum class EM1EventBoostType : uint8_t
    {
        ItemRateBoost   = 0,
        ItemAmountBoost = 1,
        CharExpBoost    = 2,
        MasterExpBoost  = 3,
        WeaponExpBoost  = 4,
        MAX             = 5
    };

    /**
     * Enum /Script/M1Data.EM1MiniGameType
     */
    enum class EM1MiniGameType : uint8_t
    {
        None       = 0,
        TimingRing = 1,
        MAX        = 2
    };

    /**
     * Enum /Script/M1Data.EM1SeasonReinforceGroupType
     */
    enum class EM1SeasonReinforceGroupType : uint8_t
    {
        None      = 0,
        Hunting   = 1,
        Elemental = 2,
        Recovery  = 3,
        Survival  = 4,
        Season    = 5,
        MAX       = 6
    };

    /**
     * Enum /Script/M1Data.EM1LoginPlatformTypes
     */
    enum class EM1LoginPlatformTypes : uint8_t
    {
        Unknown = 0,
        Xbox    = 1,
        PS      = 2,
        Steam   = 3,
        Nexon   = 4,
        Dev     = 5,
        MAX     = 6
    };

    /**
     * Enum /Script/M1Data.EM1EquipmentSlotType
     */
    enum class EM1EquipmentSlotType : uint8_t
    {
        Ranged       = 0,
        Ranged01     = 1,
        Ranged02     = 2,
        Reactor      = 3,
        Necklace     = 4,
        Earring      = 5,
        Ring         = 6,
        Bracelet     = 7,
        Face         = 8,
        Hair         = 9,
        AltWeapon    = 10,
        PickupWeapon = 11,
        Max          = 12
    };

    /**
     * Enum /Script/M1Data.EM1PresetSlotType
     */
    enum class EM1PresetSlotType : uint8_t
    {
        Ranged          = 0,
        Ranged01        = 1,
        Ranged02        = 2,
        Reactor         = 3,
        Necklace        = 4,
        Earring         = 5,
        Ring            = 6,
        Bracelet        = 7,
        Face            = 8,
        Hair            = 9,
        PlayerCharacter = 10,
        AltWeapon       = 11,
        PickupWeapon    = 12,
        Max             = 13
    };

    /**
     * Enum /Script/M1Data.EM1ItemType
     */
    enum class EM1ItemType : uint8_t
    {
        None             = 0,
        Currency         = 1,
        Equipment        = 2,
        Consumable       = 3,
        Rune             = 4,
        Character        = 5,
        InstantUse       = 6,
        Customizing      = 7,
        Title            = 8,
        Record           = 9,
        CurrencyInternal = 10,
        ItemSelector     = 11,
        Max              = 12
    };

    /**
     * Enum /Script/M1Data.EM1CustomizingItemCategoryType
     */
    enum class EM1CustomizingItemCategoryType : uint8_t
    {
        None                     = 0,
        CharacterHeadSkin        = 1,
        CharacterBodySkin        = 2,
        CharacterBackAttachment  = 3,
        CharacterChestAttachment = 4,
        CharacterMakeupSkin      = 5,
        WeaponSkin               = 6,
        Paint                    = 7,
        GrapplingHookSkin        = 8,
        SpawnSkin                = 9,
        UITheme                  = 10,
        UINameCard               = 11,
        LobbyMotion              = 12,
        Ecive                    = 13,
        EmotionSocialMotion      = 14,
        EmotionSpray             = 15,
        MAX                      = 16
    };

    /**
     * Enum /Script/M1Data.EM1CurrencyInternalType
     */
    enum class EM1CurrencyInternalType : uint8_t
    {
        None          = 0,
        Gold          = 1,
        BlackMana     = 2,
        Qulipothium   = 3,
        BattleCoin    = 4,
        PlatinumCoin  = 5,
        BonusCoin     = 6,
        BlueCash_Paid = 7,
        BlueCash_Free = 8,
        RedCash_Paid  = 9,
        RedCash_Free  = 10,
        Max           = 11
    };

    /**
     * Enum /Script/M1Data.EM1BuffSubItemType
     */
    enum class EM1BuffSubItemType : uint8_t
    {
        None                     = 0,
        CharacterExpBoost        = 1,
        WeaponProficiencyBoost   = 2,
        GoldBoost                = 3,
        QulipothiumBoost         = 4,
        InventoryExpansion       = 5,
        CharcterInvenExpansion   = 6,
        ConsumableInvenExpansion = 7,
        WareHouseInvenExpansion  = 8,
        PresetSlotExpansion      = 9,
        SeasonExpBoost           = 10,
        MAX                      = 11
    };

    /**
     * Enum /Script/M1Data.EM1StatType
     */
    enum class EM1StatType : uint8_t
    {
        Stat_MaxHp                                       = 0,
        Stat_KnockbackSpeed                              = 1,
        Stat_KnockbackTime                               = 2,
        Stat_KnockdownTime                               = 3,
        Stat_RangeMax                                    = 4,
        Stat_SpreadSize_Deprecated                       = 5,
        Stat_CrosshairSizeMax                            = 6,
        Stat_Impulse                                     = 7,
        Stat_AimOnDelay                                  = 8,
        Stat_AimOffDelay                                 = 9,
        Stat_JumpZVelocity                               = 10,
        Stat_CurrentEnergyShield                         = 11,
        Stat_InteractionRevive                           = 12,
        Stat_RunSpeed                                    = 13,
        Stat_SprintSpeed                                 = 14,
        Stat_ZoomMoveSpeed                               = 15,
        Stat_RoundsPerMagazine                           = 16,
        Stat_ReloadRounds                                = 17,
        Stat_FireInterval                                = 18,
        Stat_MaxMp                                       = 19,
        Stat_MaxEnergyShield                             = 20,
        Stat_ATK                                         = 21,
        Stat_ATKMin                                      = 22,
        Stat_ATKMax                                      = 23,
        Stat_DEF                                         = 24,
        Stat_CriticalChance                              = 25,
        Stat_CriticalATKIncrease                         = 26,
        Stat_ShellCount                                  = 27,
        Stat_RoundsConsume                               = 28,
        Stat_AimMoveSpeed                                = 29,
        Stat_WeaknessDamageIncrease                      = 30,
        Stat_SpreadZoomSize_Deprecated                   = 31,
        Stat_CrosshairMoveSizeModifier                   = 32,
        Stat_CrosshairFireSizeModifier                   = 33,
        Stat_CrosshairZoomFireSizeModifier               = 34,
        Stat_CrosshairRecoverySpeed                      = 35,
        Stat_CrosshairChangeSpeed                        = 36,
        Stat_ClimbSpeed                                  = 37,
        Stat_StressMaxRate_Deprecated                    = 38,
        Stat_StressDamageRate                            = 39,
        Stat_StressDecreaseRate                          = 40,
        Stat_NonCombatEntryTime_Deprecated               = 41,
        Stat_StressDecreaseStartTime                     = 42,
        Stat_WalkSpeed                                   = 43,
        Stat_MoveDestructivePower                        = 44,
        Stat_WeaponProjHitRadiusRate                     = 45,
        Stat_EvadeTime                                   = 46,
        Stat_EvadeRecoveryTime                           = 47,
        Stat_Domination                                  = 48,
        Stat_Manipulation                                = 49,
        Stat_Fortitude                                   = 50,
        Stat_CrosshairSizeMin                            = 51,
        Stat_ReloadSpeed                                 = 52,
        Stat_ReloadCompleteDelay                         = 53,
        Stat_ReduceRangeStart                            = 54,
        Stat_ReduceRangeEnd                              = 55,
        Stat_ATKReductionByRange                         = 56,
        Stat_ATKExplosion                                = 57,
        Stat_ATKBlazer                                   = 58,
        Stat_ATKGlacier                                  = 59,
        Stat_ATKElectricity                              = 60,
        Stat_ATKDemonic                                  = 61,
        Stat_DEFBlazer                                   = 62,
        Stat_DEFGlacier                                  = 63,
        Stat_DEFElectricity                              = 64,
        Stat_DEFDemonic                                  = 65,
        Stat_RESCriticalChance                           = 66,
        Stat_ReloadTime                                  = 67,
        Stat_Burst                                       = 68,
        Stat_Crush                                       = 69,
        Stat_Piercing                                    = 70,
        Stat_FireBurstInterval                           = 71,
        Stat_ATKReductionByExplosionRange                = 72,
        Stat_ZoomOutDelay                                = 73,
        Stat_Penetration                                 = 74,
        Stat_PenetrationDefence                          = 75,
        Stat_WeaponDestructivePower                      = 76,
        Stat_SkillDestructivePower                       = 77,
        Stat_FireIncreaseSpread_Deprecated               = 78,
        Stat_LifeTime_Deprecated                         = 79,
        Stat_BonusLifeTime_Deprecated                    = 80,
        Stat_RangeMin_Deprecated                         = 81,
        Stat_WireCooltimeCoefficient                     = 82,
        Stat_WireChargingTimeCoefficient                 = 83,
        Stat_KnockbackAttackRate                         = 84,
        Stat_KnockbackDefenceResistance                  = 85,
        Stat_KnockbackTimeResistance                     = 86,
        Stat_KnockbackSpeedResistance                    = 87,
        Stat_KnockdownAttackRate                         = 88,
        Stat_KnockdownXSpeed                             = 89,
        Stat_KnockdownZSpeed                             = 90,
        Stat_KnockdownDefenceResistance                  = 91,
        Stat_KnockdownXSpeedResistance                   = 92,
        Stat_KnockdownZSpeedResistance                   = 93,
        Stat_KnockdownTimeResistance                     = 94,
        Stat_MeleeSpecialAttackReduceCoolTime_Deprecated = 95,
        Stat_HitStopAttackPoint                          = 96,
        Stat_HitStopDefencePoint                         = 97,
        Stat_BerserkMoveSpeed                            = 98,
        Stat_BerserkMaxRate                              = 99,
        Stat_BerserkDamageRate                           = 100,
        Stat_BerserkDecreaseStartTime                    = 101,
        Stat_BerserkDecreaseRate                         = 102,
        Stat_BerserkMaintenanceTime                      = 103,
        Stat_NaturalRecoveryTickTimeHp                   = 104,
        Stat_NaturalRecoveryTickTimeMp                   = 105,
        Stat_NaturalRecoveryTickTimeEnergyShield         = 106,
        Stat_NaturalRecoveryHp                           = 107,
        Stat_NaturalRecoveryMp                           = 108,
        Stat_NaturalRecoveryEnergyShield                 = 109,
        Stat_InBattleNaturalRecoveryHp                   = 110,
        Stat_InBattleNaturalRecoveryMp                   = 111,
        Stat_InBattleNaturalRecoveryEnergyShield         = 112,
        Stat_CurrentHp                                   = 113,
        Stat_CurrentMp                                   = 114,
        Stat_MaxCommonGauge                              = 115,
        Stat_CurrentCommonGauge                          = 116,
        Stat_DEFInflection_VarX1_Deprecated              = 117,
        Stat_DEFInflection_VarX2_Deprecated              = 118,
        Stat_DEFInflection_VarX3_Deprecated              = 119,
        Stat_WireStackCountIncrease                      = 120,
        Stat_RecoilCoefficient                           = 121,
        Stat_SkillCooltimeCoefficient                    = 122,
        Stat_SkillCostCoefficient                        = 123,
        Stat_SkillATKCoefficient                         = 124,
        Stat_FinalDamageCoefficient_Deprecated           = 125,
        Stat_HpOrbRecoveryCoefficient_Deprecated         = 126,
        Stat_MpOrbRecoveryCoefficient_Deprecated         = 127,
        Stat_EmptyRoundsReloadTimeSpeed                  = 128,
        Stat_SkillDurationIncrease                       = 129,
        Stat_SkillDurationDecrease                       = 130,
        Stat_SkillScaleCoefficient                       = 131,
        Stat_WeaponChangingSpeed                         = 132,
        Stat_MaxGeneralRoundsCoefficient                 = 133,
        Stat_MaxEnhancedRoundsCoefficient                = 134,
        Stat_MaxImpactRoundsCoefficient                  = 135,
        Stat_MaxHighpowerRoundsCoefficient               = 136,
        Stat_NaturalRecoveryTickPR_Deprecated            = 137,
        Stat_InBattleNaturalRecoveryPR_Deprecated        = 138,
        Stat_NaturalRecoveryPR_Deprecated                = 139,
        Stat_CrosshairJumpSizeModifier                   = 140,
        Stat_PhysicalATK                                 = 141,
        Stat_NatureATK                                   = 142,
        Stat_GiveHpRecoveryCoefficient                   = 143,
        Stat_TakeHpRecoveryCoefficient                   = 144,
        Stat_GiveMpRecoveryCoefficient                   = 145,
        Stat_TakeMpRecoveryCoefficient                   = 146,
        Stat_RWATKCoefficient                            = 147,
        Stat_GiveFinalDamageCoefficient                  = 148,
        Stat_TakeFinalDamageCoefficient                  = 149,
        Stat_LevelFactor                                 = 150,
        Stat_SkillATKCorrection                          = 151,
        Stat_ItemLevelCorrection                         = 152,
        Stat_MaxStressGauge                              = 153,
        Stat_CurrentStressGauge                          = 154,
        Stat_MaxBerserkGauge                             = 155,
        Stat_CurrentBerserkGauge                         = 156,
        Stat_SkillATKPower                               = 157,
        Stat_SkillPowerCoefficient                       = 158,
        Stat_SkillPlainPowerCoefficient                  = 159,
        Stat_SkillBlazerPowerCoefficient                 = 160,
        Stat_SkillGlacierPowerCoefficient                = 161,
        Stat_SkillElectricityPowerCoefficient            = 162,
        Stat_SkillDemonicPowerCoefficient                = 163,
        Stat_SkillFusionPowerCoefficient                 = 164,
        Stat_SkillSingularPowerCoefficient               = 165,
        Stat_SkillDimensionPowerCoefficient              = 166,
        Stat_SkillTechPowerCoefficient                   = 167,
        Stat_SkillPlainATKCoefficient                    = 168,
        Stat_SkillBlazerATKCoefficient                   = 169,
        Stat_SkillGlacierATKCoefficient                  = 170,
        Stat_SkillElectricityATKCoefficient              = 171,
        Stat_SkillDemonicATKCoefficient                  = 172,
        Stat_SkillFusionATKCoefficient                   = 173,
        Stat_SkillSingularATKCoefficient                 = 174,
        Stat_SkillDimensionATKCoefficient                = 175,
        Stat_SkillTechATKCoefficient                     = 176,
        Stat_SkillCriticalChance                         = 177,
        Stat_SkillCriticalATKIncrease                    = 178,
        Stat_SkillRESCriticalChance                      = 179,
        Stat_DEFSkill                                    = 180,
        Stat_DEFPlain                                    = 181,
        Stat_Accuracy                                    = 182,
        Stat_ZoomAccuracy                                = 183,
        Stat_InvokeChanceElementalSE                     = 184,
        Stat_GiveShieldRecoveryCoefficient               = 185,
        Stat_TakeShieldRecoveryCoefficient               = 186,
        Stat_MaxSprintSpeed                              = 187,
        Stat_WeaponProjHitRadius                         = 188,
        Stat_DBNORescueTime                              = 189,
        Stat_RuneDropCoefficient                         = 190,
        Stat_EquipmentDropCoefficient                    = 191,
        Stat_ConsumableDropCoefficient                   = 192,
        Stat_GoldDropCoefficient                         = 193,
        Stat_QulipothiumDropCoefficient                  = 194,
        Stat_CharEXPCoefficient                          = 195,
        Stat_ProficiencyCoefficient                      = 196,
        Stat_TypeBossATKBonus                            = 197,
        Stat_TypeDarknessATKBonus                        = 198,
        Stat_TypeTruthATKBonus                           = 199,
        Stat_TypeImmortalATKBonus                        = 200,
        Stat_DBNODurationCoefficient                     = 201,
        Stat_LootDistanceCoefficient                     = 202,
        Stat_DoubleJumpZVelocity                         = 203,
        Stat_EciveSearchDistanceCoefficient              = 204,
        Stat_EciveSearchRemainTimeCoefficient            = 205,
        Stat_SubSkillATKPower                            = 206,
        Stat_SubSkillATKCoefficient                      = 207,
        Stat_TakeWeaknessDamageCoefficient_Deprecated    = 208,
        Stat_RWChargeRateCoefficient                     = 209,
        Stat_RWDischargeRateCoefficient                  = 210,
        Stat_TypeBossSkillATKBonus                       = 211,
        Stat_TypeDarknessSkillATKBonus                   = 212,
        Stat_TypeTruthSkillATKBonus                      = 213,
        Stat_TypeImmortalSkillATKBonus                   = 214,
        Stat_BurstDelay                                  = 215,
        Stat_DefaultStressStopDuration                   = 216,
        Stat_FieldTimingRing_LimitTimeRatio              = 217,
        Stat_FieldTimingRing_NeedleRotationTimeRatio     = 218,
        Stat_FieldTimingRing_ReduceSuccessCount          = 219,
        Stat_FieldTimingRing_IncreaseTimingAngleMax      = 220,
        Stat_FieldTimingRing_FailTimeRatio               = 221,
        Stat_SkillVelocityAndRangeCoefficient            = 222,
        Stat_StressMaxHpRandMinRate                      = 223,
        Stat_StressMaxHpRandMaxRate                      = 224,
        Stat_StressMaxHpCurrentRate                      = 225,
        Stat_ActionSpeedCoeffcient                       = 226,
        Stat_ProjectilePenetration                       = 227,
        Stat_ProjectilePenetrationDefence                = 228,
        MAX                                              = 229
    };

    /**
     * Enum /Script/M1Data.EM1InventoryType
     */
    enum class EM1InventoryType : uint8_t
    {
        None       = 0,
        Equipment  = 1,
        WareHouse  = 2,
        Character  = 3,
        Consumable = 4,
        Rune       = 5,
        PresetSlot = 6,
        Max        = 7
    };

    /**
     * Enum /Script/M1Data.EM1MapSubType
     */
    enum class EM1MapSubType : uint8_t
    {
        None            = 0,
        VoidBattle      = 1,
        WorldMission    = 2,
        InstanceDungeon = 3,
        InvasionDungeon = 4,
        MAX             = 5
    };

    /**
     * Enum /Script/M1Data.EM1MapDifficulty
     */
    enum class EM1MapDifficulty : uint8_t
    {
        None   = 0,
        Normal = 1,
        Hard   = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1QuestType
     */
    enum class EM1QuestType : uint8_t
    {
        Main                = 0,
        Field               = 1,
        Event               = 2,
        Sub                 = 3,
        Platform            = 4,
        PassChallengeDaily  = 5,
        PassChallengeWeekly = 6,
        ContentsUnlock      = 7,
        Achievement         = 8,
        Evolution           = 9,
        CharacterStory      = 10,
        Season              = 11,
        All                 = 12,
        MAX                 = 13
    };

    /**
     * Enum /Script/M1Data.EM1RuneSubClassType
     */
    enum class EM1RuneSubClassType : uint8_t
    {
        Main         = 0,
        CharacterSub = 1,
        SkillRune    = 2,
        MAX          = 3
    };

    /**
     * Enum /Script/M1Data.EM1MailType
     */
    enum class EM1MailType : uint8_t
    {
        All           = 0,
        PostMail      = 1,
        LostMail      = 2,
        NarrativeMail = 3,
        EventMail     = 4,
        PaidMail      = 5,
        MAX           = 6
    };

    /**
     * Enum /Script/M1Data.EM1ChattingType
     */
    enum class EM1ChattingType : uint8_t
    {
        World         = 0,
        DirectMessage = 1,
        System        = 2,
        Normal        = 3,
        Party         = 4,
        Notice        = 5,
        MAX           = 6
    };

    /**
     * Enum /Script/M1Data.EM1MoveDedicatedServerReason
     */
    enum class EM1MoveDedicatedServerReason : uint8_t
    {
        Cheat            = 0,
        ToThePartyMaster = 1,
        ToThePartyMember = 2,
        PartyMove        = 3,
        MaxCity          = 4,
        Matching         = 5,
        Support          = 6,
        Disallow         = 7,
        MAX              = 8
    };

    /**
     * Enum /Script/M1Data.EM1MatchingCancelReason
     */
    enum class EM1MatchingCancelReason : uint8_t
    {
        Canceled                  = 0,
        TimeOut                   = 1,
        MemberLogout              = 2,
        MatchingSucceeded         = 3,
        ReserveGameFailed         = 4,
        FailAlreadyPrivateMatched = 5,
        FailAlreadyMatchingFound  = 6,
        MAX                       = 7
    };

    /**
     * Enum /Script/M1Data.EM1ExternalLinkerType
     */
    enum class EM1ExternalLinkerType : uint8_t
    {
        Dev    = 0,
        DevTOY = 1,
        TOY    = 2,
        MAX    = 3
    };

    /**
     * Enum /Script/M1Data.EM1Locale
     */
    enum class EM1Locale : uint8_t
    {
        None    = 0,
        KO      = 1,
        EN      = 2,
        DE      = 3,
        FR      = 4,
        JA      = 5,
        ZH_Hans = 6,
        ZH_Hant = 7,
        IT      = 8,
        PL      = 9,
        PT      = 10,
        RU      = 11,
        ES      = 12,
        Max     = 13
    };

    /**
     * Enum /Script/M1Data.EM1MatchRegion
     */
    enum class EM1MatchRegion : uint8_t
    {
        None               = 0,
        koreacentral       = 1,
        eastus             = 2,
        northcentralus     = 3,
        brazilsouth        = 4,
        westus             = 5,
        germanywestcentral = 6,
        eastasia           = 7,
        polandcentral      = 8,
        southeastasia      = 9,
        MAX                = 10
    };

    /**
     * Enum /Script/M1Data.EM1ForceRebuild
     */
    enum class EM1ForceRebuild : uint8_t
    {
        None           = 0,
        RollingVersion = 1,
        MAX            = 2
    };

    /**
     * Enum /Script/M1Data.EM1PerkReason
     */
    enum class EM1PerkReason : uint8_t
    {
        Unknown                 = 0,
        Success                 = 1,
        InvalidWeapon           = 2,
        InvalidPerk             = 3,
        AlreadyMaxLevel         = 4,
        ChangeResourceFail      = 5,
        DestroyResourceItemFail = 6,
        AccountNotExists        = 7,
        MAX                     = 8
    };

    /**
     * Enum /Script/M1Data.EM1ItemTagStatus
     */
    enum class EM1ItemTagStatus : uint8_t
    {
        None     = 0,
        Junk     = 1,
        BookMark = 2,
        MAX      = 3
    };

    /**
     * Enum /Script/M1Data.EM1TitleReason
     */
    enum class EM1TitleReason : uint8_t
    {
        Unknown          = 0,
        Success          = 1,
        InvalidData      = 2,
        InvalidValue     = 3,
        AccountNotExists = 4,
        MAX              = 5
    };

    /**
     * Enum /Script/M1Data.EM1BoostType
     */
    enum class EM1BoostType : uint8_t
    {
        Event = 0,
        Stat  = 1,
        Item  = 2,
        Max   = 3
    };

    /**
     * Enum /Script/M1Data.EM1CommonShopResultType
     */
    enum class EM1CommonShopResultType : uint8_t
    {
        Unknown                      = 0,
        Success                      = 1,
        CantSellCurrency             = 2,
        ItemInvalid                  = 3,
        ItemTypeInvalid              = 4,
        itemTemplateIdInvalid        = 5,
        CantChangeConsumable         = 6,
        CantSellItem                 = 7,
        CantChangeCurrency           = 8,
        CantBuyCurrency              = 9,
        InvalidShopId                = 10,
        CantBuyItem                  = 11,
        InvalidAccount               = 12,
        NotEnoughResource            = 13,
        InvalidCount                 = 14,
        ProductInvalid               = 15,
        CantBuyPaidProduct           = 16,
        NoPrice                      = 17,
        OverBuyableCount             = 18,
        InvalidBattlePassSeason      = 19,
        NotEnoughBattlePassLevel     = 20,
        InvalidData                  = 21,
        DoesNotBuyRequiredPageItem   = 22,
        CantBuyMultipleItem          = 23,
        CantBuyPremiumBattlePassItem = 24,
        DuplicateItem                = 25,
        NotInSaleTime                = 26,
        CantBuyMultipleNonStackable  = 27,
        SoldButInMail                = 28,
        NotEnoughMasteryLevel        = 29,
        CantBuyBattlePassPremiumItem = 30,
        CantBuyResearchItem          = 31,
        ProductProhibited            = 32,
        MAX                          = 33
    };

    /**
     * Enum /Script/M1Data.EM1CheatCreateCharacterResultType
     */
    enum class EM1CheatCreateCharacterResultType : uint8_t
    {
        Unknown                 = 0,
        Success                 = 1,
        CharacterTypeDuplicated = 2,
        LackOfCharacterSlots    = 3,
        InvalidAccountUid       = 4,
        InvalidTemplateId       = 5,
        CantCreateCharacter     = 6,
        MAX                     = 7
    };

    /**
     * Enum /Script/M1Data.EM1ResearchStatus
     */
    enum class EM1ResearchStatus : uint8_t
    {
        None       = 0,
        Proceed    = 1,
        Complete   = 2,
        Recipiency = 3,
        Max        = 4
    };

    /**
     * Enum /Script/M1Data.EM1ResearchReason
     */
    enum class EM1ResearchReason : uint8_t
    {
        Unknown                               = 0,
        Success                               = 1,
        ResearchAlreadyDone                   = 2,
        ResearchDataNotExist                  = 3,
        ResearchCurrencyNotEnough             = 4,
        ResearchResourceNotEnough             = 5,
        ResearchDidntStart                    = 6,
        ResearchAlreadyReceive                = 7,
        ResearchCurrencyFailBack              = 8,
        ResearchResourceFailBack              = 9,
        ResearchBoostCurrencyNotEnough        = 10,
        ResearchDidntComplete                 = 11,
        ResearchOwnCharacter                  = 12,
        ResearchOverMaxCount                  = 13,
        ResearchResultCountOver               = 14,
        ResearchMasteryLevelRow               = 15,
        ResearchInvalidAccount                = 16,
        ResearchUnkownReason                  = 17,
        ResearchCantSetBookmarkAlreadyStarted = 18,
        ResearchInventoryLimitOver            = 19,
        ResearchBookmarkTargetInvalid         = 20,
        MAX                                   = 21
    };

    /**
     * Enum /Script/M1Data.EM1MissionEndType
     */
    enum class EM1MissionEndType : uint8_t
    {
        Cancel = 0,
        Fail   = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/M1Data.EM1RuneReason
     */
    enum class EM1RuneReason : uint8_t
    {
        Unknown                          = 0,
        Success                          = 1,
        RuneAlreadyAttach                = 2,
        RuneSameKindRuneAttach           = 3,
        RuneCharacterNotExist            = 4,
        RuneItemNotExist                 = 5,
        RuneNotAttached                  = 6,
        RuneAccountNotExist              = 7,
        RuneMasteryLevelInvalid          = 8,
        RuneLevelInvalid                 = 9,
        RuneCapacityOver                 = 10,
        RuneSlotCountOver                = 11,
        RuneInvalid                      = 12,
        RuneSlotDataInvalid              = 13,
        RuneInvalidData                  = 14,
        RuneCapcityIncreaseItemNotEnough = 15,
        RuneCapacityMax                  = 16,
        RuneEnchantResouceNotEnough      = 17,
        RuneCantDecomposeAttachItem      = 18,
        RuneInvalidResource              = 19,
        RuneDecomposable                 = 20,
        RuneEnchantable                  = 21,
        RuneEnchantMasteryLevel          = 22,
        RuneSocketTypeAlreadyGrant       = 23,
        RuneSocketGrantResourceNotEnough = 24,
        RuneSocketTypeAlreadySelected    = 25,
        RuneSocketCantSelect             = 26,
        RuneInvalidComposeCount          = 27,
        RuneComposeResourceNotEnough     = 28,
        RuneUnknownError                 = 29,
        RuneInventoryNotEnough           = 30,
        RuneSubSocketInvalid             = 31,
        RuneItemCantCompose              = 32,
        RuneResourceNotEnough            = 33,
        RuneCantAttachInvalidClassType   = 34,
        RuneCantAttachSameGroup          = 35,
        RuneNothingChanged               = 36,
        RuneCantAttachInvalidCharacter   = 37,
        RuneDuplicatedPosition           = 38,
        RuneWeaponResetFail              = 39,
        RuneCharacterResetFail           = 40,
        RuneInvalidType                  = 41,
        RuneLoadoutSlotNotExist          = 42,
        RuneLoadoutSlotEquipsNotLoaded   = 43,
        RuneLoadoutSlotNameSlang         = 44,
        RuneLoadoutSlotNameTooLong       = 45,
        RuneLoadoutSlotMaxCount          = 46,
        RuneInventoryRevisionMismatch    = 47,
        RuneInventoryCountMismatch       = 48,
        MAX                              = 49
    };

    /**
     * Enum /Script/M1Data.EM1FieldUnlockResults
     */
    enum class EM1FieldUnlockResults : uint8_t
    {
        Unknown           = 0,
        Success           = 1,
        AlreadyUnlocked   = 2,
        InvalidMapId      = 3,
        NotFieldMap       = 4,
        InvalidMapSubData = 5,
        InvalidCampId     = 6,
        FieldNotUnlocked  = 7,
        InvalidAccountUid = 8,
        InvalidDediOid    = 9,
        InvalidBattleZone = 10,
        MAX               = 11
    };

    /**
     * Enum /Script/M1Data.EM1LastBattleZoneSetReason
     */
    enum class EM1LastBattleZoneSetReason : uint8_t
    {
        Unknown             = 0,
        InvalidMapId        = 1,
        InvalidBattleZoneId = 2,
        AlreadySet          = 3,
        NotUnlock           = 4,
        Success             = 5,
        MAX                 = 6
    };

    /**
     * Enum /Script/M1Data.EM1QuestCompleteState
     */
    enum class EM1QuestCompleteState : uint8_t
    {
        NotComplete         = 0,
        SuccessBeforeReward = 1,
        SuccessComplete     = 2,
        MAX                 = 3
    };

    /**
     * Enum /Script/M1Data.EM1IncQuestProgressReason
     */
    enum class EM1IncQuestProgressReason : uint8_t
    {
        Null                  = 0,
        Success               = 1,
        Fail_QuestNotFound    = 2,
        Fail_AlreadyCompleted = 3,
        Fail_InvalidQuestId   = 4,
        Fail_InvalidQuestType = 5,
        Fail_QuestExpired     = 6,
        MAX                   = 7
    };

    /**
     * Enum /Script/M1Data.EM1CharacterResetReason
     */
    enum class EM1CharacterResetReason : uint8_t
    {
        UnknownReason                = 0,
        Success                      = 1,
        InvalidAccountUid            = 2,
        CharacterNotMaxLevel         = 3,
        InvalidData                  = 4,
        CharacterResetItemNotEnuough = 5,
        ResetRewardTooMuch           = 6,
        ResourceNotEnough            = 7,
        MAX                          = 8
    };

    /**
     * Enum /Script/M1Data.EM1CharacterFavoriteReason
     */
    enum class EM1CharacterFavoriteReason : uint8_t
    {
        None                = 0,
        Success             = 1,
        InvalidAccountUid   = 2,
        InvalidCharacterUid = 3,
        NotChanges          = 4,
        MAX                 = 5
    };

    /**
     * Enum /Script/M1Data.EM1MasteryLevelCheckBenefit
     */
    enum class EM1MasteryLevelCheckBenefit : uint8_t
    {
        Equipment          = 0,
        EquipInventorySlot = 1,
        WeaponRune         = 2,
        CharacterRune      = 3,
        Trade              = 4,
        CharacterSubRune   = 5,
        CharacterSkillRune = 6,
        MAX                = 7
    };

    /**
     * Enum /Script/M1Data.EM1MasteryUnlockType
     */
    enum class EM1MasteryUnlockType : uint8_t
    {
        RuneWeaponCapacity    = 0,
        RuneCharacterCapacity = 1,
        RuneAccountSlot       = 2,
        RuneCharacterSlot     = 3,
        EquipInventorySlot    = 4,
        WeaponSlot            = 5,
        AccessoryReactor      = 6,
        AccessoryNeckSlot     = 7,
        AccessoryEarringsSlot = 8,
        AccessoryRingSlot     = 9,
        AccessoryBraceletSlot = 10,
        TradeCount            = 11,
        None                  = 12,
        MAX                   = 13
    };

    /**
     * Enum /Script/M1Data.EM1ItemReason
     */
    enum class EM1ItemReason : uint8_t
    {
        UnknownError                    = 0,
        Success                         = 1,
        CurrencyNotEnough               = 2,
        InvalidType                     = 3,
        InvalidData                     = 4,
        InvalidValue                    = 5,
        CantSatisfyMasterLevelCondition = 6,
        InventoryLimitOver              = 7,
        ItemNotEnough                   = 8,
        CantMoveWareHouseToWareHouse    = 9,
        CantMoveWearingItemToWareHouse  = 10,
        SlotIncrementLimitOver          = 11,
        HowToUseInvalid                 = 12,
        SlotCountOver                   = 13,
        DuplicateItem                   = 14,
        CantSubRealCurrencyDirect       = 15,
        AccountNotExists                = 16,
        InvalidRevision                 = 17,
        WearingItem                     = 18,
        InvalidItemCount                = 19,
        MAX                             = 20
    };

    /**
     * Enum /Script/M1Data.EM1MatchingReason
     */
    enum class EM1MatchingReason : uint8_t
    {
        Unknown                   = 0,
        Success                   = 1,
        FailNoEntrance            = 2,
        FailNoTicket              = 3,
        FailInvalidRequest        = 4,
        FailPartyMemberNoEntrance = 5,
        FailAlreadyRequested      = 6,
        FailServerNotReady        = 7,
        FailEtc                   = 8,
        FailNotRegistered         = 9,
        FailAlreadyMatched        = 10,
        FailNotStartTime          = 11,
        FailNotMaster             = 12,
        FailAccountNotFound       = 13,
        FailSystemNotInitialized  = 14,
        FailWaitMember            = 15,
        FailRedisDataNotFound     = 16,
        FailSingleOnly            = 17,
        FailAlreadyPrivateMatched = 18,
        FailAlreadyMatchingFound  = 19,
        FailMinMembers            = 20,
        MMErrUnavailable          = 21,
        MMErrFailed               = 22,
        MMErrInvalidParam         = 23,
        MMErrNotFound             = 24,
        MMErrIncorrectToken       = 25,
        MMErrStateNotApplicable   = 26,
        MMErrPartiallyFailed      = 27,
        MMErrNotImplemented       = 28,
        MAX                       = 29
    };

    /**
     * Enum /Script/M1Data.EM1InstanceDungeonCompleteReason
     */
    enum class EM1InstanceDungeonCompleteReason : uint8_t
    {
        Fail        = 0,
        InvalidData = 1,
        Success     = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/M1Data.EM1MatchedGameEndType
     */
    enum class EM1MatchedGameEndType : uint8_t
    {
        Unknown          = 0,
        Success          = 1,
        Fail_Annihilated = 2,
        Fail_TimeOut     = 3,
        Fail_Etc         = 4,
        MAX              = 5
    };

    /**
     * Enum /Script/M1Data.EM1MailReason
     */
    enum class EM1MailReason : uint8_t
    {
        UnknownError                  = 0,
        Success                       = 1,
        InvalidMailType               = 2,
        AccountNotExists              = 3,
        AlreadyRead                   = 4,
        InvalidData                   = 5,
        ValueNonExist                 = 6,
        OutofAttachmentIndex          = 7,
        InvalidItemType               = 8,
        InventoryLimitOver            = 9,
        CantDeleteItemAttachedMail    = 10,
        MailDeletePartlySuccess       = 11,
        MailAttachItemAlreadyReceived = 12,
        MailAttachmentCountOver       = 13,
        MAX                           = 14
    };

    /**
     * Enum /Script/M1Data.EM1CustomizeReason
     */
    enum class EM1CustomizeReason : uint8_t
    {
        Failed             = 0,
        Success            = 1,
        InvalidData        = 2,
        Duplicate          = 3,
        AccountNotExists   = 4,
        NotFound           = 5,
        OverPaintIndex     = 6,
        NeedEvolution      = 7,
        NotEnoughCondition = 8,
        NotAbleEvolution   = 9,
        OverEvolution      = 10,
        MAX                = 11
    };

    /**
     * Enum /Script/M1Data.EM1PackageItemReason
     */
    enum class EM1PackageItemReason : uint8_t
    {
        Unknown           = 0,
        Success           = 1,
        InvalidData       = 2,
        ConsumeItemFail   = 3,
        CreateItemFail    = 4,
        WorkingDBNotFound = 5,
        UseKeyFail        = 6,
        LinkedKeyNotFound = 7,
        SelectItemFail    = 8,
        MAX               = 9
    };

    /**
     * Enum /Script/M1Data.EM1EventRewardDateType
     */
    enum class EM1EventRewardDateType : uint8_t
    {
        Permanent = 0,
        Daily     = 1,
        Weekly    = 2,
        Monthly   = 3,
        MAX       = 4
    };

    /**
     * Enum /Script/M1Data.EM1ReactorReason
     */
    enum class EM1ReactorReason : uint8_t
    {
        Unknown                 = 0,
        Success                 = 1,
        InvalidData             = 2,
        MaxEnchantLevel         = 3,
        ResourceFail            = 4,
        NotEnchantable          = 5,
        CurrencyNotConditiion   = 6,
        ConsumableNotConditiion = 7,
        EquipmentNotConditiion  = 8,
        CharacterNotConditiion  = 9,
        AccountNotExists        = 10,
        MAX                     = 11
    };

    /**
     * Enum /Script/M1Data.EM1BattlePassLevelReason
     */
    enum class EM1BattlePassLevelReason : uint8_t
    {
        NormalExpUp            = 0,
        LevelUpBuy             = 1,
        PremiumExclusiveRepeal = 2,
        MAX                    = 3
    };

    /**
     * Enum /Script/M1Data.EM1BattlePassReason
     */
    enum class EM1BattlePassReason : uint8_t
    {
        Fail                            = 0,
        Success                         = 1,
        InvalidSeason                   = 2,
        AlreadyGetPremium               = 3,
        UnknownError                    = 4,
        InvalidData                     = 5,
        NotEnoughResource               = 6,
        InvalidCurrency                 = 7,
        TryLevelUpOver                  = 8,
        AlreadyBuyBundle                = 9,
        OldSeasonNotCompleted           = 10,
        CantBuyLevelCauseOver           = 11,
        AlreadyGetPremiumExlusiveReward = 12,
        CantGetReward                   = 13,
        AdjustmentPeriod                = 14,
        MAX                             = 15
    };

    /**
     * Enum /Script/M1Data.EM1CodexTrackingType
     */
    enum class EM1CodexTrackingType : uint8_t
    {
        None       = 0,
        Research   = 1,
        Consumable = 2,
        Rune       = 3,
        Equipment  = 4,
        MAX        = 5
    };

    /**
     * Enum /Script/M1Data.EM1RequestSupportReason
     */
    enum class EM1RequestSupportReason : uint8_t
    {
        Unknown                    = 0,
        Success                    = 1,
        NoDedi                     = 2,
        NoUser                     = 3,
        Fail_RequesterNotFound     = 4,
        Fail_RequesterDediNotFound = 5,
        Fail_Exception             = 6,
        Fail_InvalidMapType        = 7,
        MAX                        = 8
    };

    /**
     * Enum /Script/M1Data.EM1PresetReason
     */
    enum class EM1PresetReason : uint8_t
    {
        Unknown                = 0,
        Success                = 1,
        NameTooLong            = 2,
        NameSlang              = 3,
        AccountNotExist        = 4,
        PresetSlotInsufficient = 5,
        PresetIndexInvalid     = 6,
        PresetNotExist         = 7,
        PlayerDataInvalid      = 8,
        PlayerChangeFailed     = 9,
        PlayerNotExist         = 10,
        InventoryLimitOver     = 11,
        MAX                    = 12
    };

    /**
     * Enum /Script/M1Data.EM1LoginResultType
     */
    enum class EM1LoginResultType : uint8_t
    {
        Fail                         = 0,
        Success                      = 1,
        VersionMismatched            = 2,
        UserNameIsInvalid            = 3,
        UserNameIsDuplicated         = 4,
        UserIsAlreadyLoggedIn        = 5,
        InvalidLinkData              = 6,
        InvalidAuthValue             = 7,
        InvalidToken                 = 8,
        ExpiredToken                 = 9,
        HackedUser                   = 10,
        UserBanned                   = 11,
        GameServerCountZero          = 12,
        GameServerNotFound           = 13,
        DuplicateLogin               = 14,
        PSDataShareOff               = 15,
        GameServerChecksumMismatched = 16,
        WaitInitialize               = 17,
        WaitLoginQueue               = 18,
        NoAvailableShard             = 19,
        MAX                          = 20
    };

    /**
     * Enum /Script/M1Data.EM1SystemMessageType
     */
    enum class EM1SystemMessageType : uint8_t
    {
        WillRelocateDedicateServer     = 0,
        InDeprecateServer              = 1,
        InDeprecateServerLimitContents = 2,
        TargetDeprecateServer          = 3,
        KickAllUer                     = 4,
        MAX                            = 5
    };

    /**
     * Enum /Script/M1Data.EM1DediPlatformTag
     */
    enum class EM1DediPlatformTag : uint8_t
    {
        ALL  = 0,
        PS   = 1,
        XBOX = 2,
        MAX  = 3
    };

    /**
     * Enum /Script/M1Data.EM1OsTypes
     */
    enum class EM1OsTypes : uint8_t
    {
        Unknown = 0,
        iOS     = 1,
        Android = 2,
        Windows = 3,
        Xbox    = 4,
        PS      = 5,
        Switch  = 6,
        Mac     = 7,
        Linux   = 8,
        MAX     = 9
    };

    /**
     * Enum /Script/M1Data.EM1DedicatedServerType
     */
    enum class EM1DedicatedServerType : uint8_t
    {
        None  = 0,
        City  = 1,
        Field = 2,
        MAX   = 3
    };

    /**
     * Enum /Script/M1Data.EM1JoinDedicatedServerReason
     */
    enum class EM1JoinDedicatedServerReason : uint8_t
    {
        Unknown                     = 0,
        Success                     = 1,
        DediNotReady                = 2,
        HasParty                    = 3,
        InvalidMapData              = 4,
        NotUnlockedMap              = 5,
        InvalidDediOid              = 6,
        ReserveFail                 = 7,
        TestReserveFail             = 8,
        InvalidOid                  = 9,
        WorkingDbNotFound           = 10,
        CheckUpFieldOptionFail      = 11,
        NowMatching                 = 12,
        GameServerMove              = 13,
        InstanceDungeonEntranceFail = 14,
        NgsInitialize               = 15,
        RelocateFail                = 16,
        MAX                         = 17
    };

    /**
     * Enum /Script/M1Data.EM1XBOXInnerOptionType
     */
    enum class EM1XBOXInnerOptionType : uint8_t
    {
        Everyone    = 0,
        XboxFriends = 1,
        Blocked     = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/M1Data.EM1XBOXOuterOptionType
     */
    enum class EM1XBOXOuterOptionType : uint8_t
    {
        Everyone      = 0,
        InGameFriends = 1,
        Blocked       = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/M1Data.EM1SearchType
     */
    enum class EM1SearchType : uint8_t
    {
        Base                   = 0,
        PlatformFriendList     = 1,
        InviteFriend           = 2,
        InviteParty            = 3,
        SocialUserList         = 4,
        SocialRecentList       = 5,
        SocialInGameFriendList = 6,
        SocialBlockList        = 7,
        MAX                    = 8
    };

    /**
     * Enum /Script/M1Data.EM1SearchErrorCode
     */
    enum class EM1SearchErrorCode : uint8_t
    {
        Unknown    = 0,
        Success    = 1,
        EmptyName  = 2,
        SelfSearch = 3,
        NotFound   = 4,
        Offline    = 5,
        ServerDown = 6,
        Busy       = 7,
        MAX        = 8
    };

    /**
     * Enum /Script/M1Data.EM1PartyContentsType
     */
    enum class EM1PartyContentsType : uint8_t
    {
        Request      = 0,
        Accept       = 1,
        MemberChange = 2,
        Join         = 3,
        Move         = 4,
        MAX          = 5
    };

    /**
     * Enum /Script/M1Data.EM1PartyErrorCode
     */
    enum class EM1PartyErrorCode : uint8_t
    {
        Unknown                         = 0,
        ServerDown                      = 1,
        NotFound                        = 2,
        Success                         = 3,
        FullParty                       = 4,
        AlreadyParty                    = 5,
        RequestFull                     = 6,
        RequestAlready                  = 7,
        RequestAccept                   = 8,
        RequestReject                   = 9,
        RequestAutoReject               = 10,
        RequestTimeOut                  = 11,
        MasterOnly                      = 12,
        CityOnly                        = 13,
        NeedUnlock                      = 14,
        Join                            = 15,
        Leave                           = 16,
        Exile                           = 17,
        MasterChange                    = 18,
        Break                           = 19,
        MoveFailed                      = 20,
        SameField                       = 21,
        WaitPartyMember                 = 22,
        FieldUnlockPartyMember          = 23,
        Matching                        = 24,
        Wait                            = 25,
        FieldOptionCheckFail            = 26,
        Block                           = 27,
        TargetBlock                     = 28,
        CrossPlayOff                    = 29,
        MyCrossPlayOff                  = 30,
        TargetCrossPlayOff              = 31,
        SocialOff                       = 32,
        FailEntrantCondition            = 33,
        FailEntrantConditionPartyMember = 34,
        Laboratory                      = 35,
        NotMatchedVersion               = 36,
        TargetNotMatchedVersion         = 37,
        MustPrologue                    = 38,
        LobbyOnly                       = 39,
        SelfRequest                     = 40,
        FullSession                     = 41,
        MAX                             = 42
    };

    /**
     * Enum /Script/M1Data.EM1FriendContentsType
     */
    enum class EM1FriendContentsType : uint8_t
    {
        Request  = 0,
        Accept   = 1,
        Delete   = 2,
        Bookmark = 3,
        Reject   = 4,
        MAX      = 5
    };

    /**
     * Enum /Script/M1Data.EM1FriendErrorCode
     */
    enum class EM1FriendErrorCode : uint8_t
    {
        Fail               = 0,
        NotFoundUser       = 1,
        NotFoundFriend     = 2,
        NotFoundRequest    = 3,
        Self               = 4,
        MyBlock            = 5,
        TargetBlock        = 6,
        AlreadyRequested   = 7,
        AlreadyFriend      = 8,
        DuplicateBookmark  = 9,
        MyFriendFull       = 10,
        TargetFriendFull   = 11,
        TargetRequestFull  = 12,
        Success            = 13,
        Proxy              = 14,
        CrossPlayOff       = 15,
        MyCrossPlayOff     = 16,
        TargetCrossPlayOff = 17,
        SocialOff          = 18,
        MAX                = 19
    };

    /**
     * Enum /Script/M1Data.EM1BlockErrorCode
     */
    enum class EM1BlockErrorCode : uint8_t
    {
        Fail       = 0,
        Regist     = 1,
        Unregist   = 2,
        Duplicate  = 3,
        Busy       = 4,
        Full       = 5,
        Self       = 6,
        ServerDown = 7,
        MAX        = 8
    };

    /**
     * Enum /Script/M1Data.EM1ChattingErrorCode
     */
    enum class EM1ChattingErrorCode : uint8_t
    {
        ServerDown         = 0,
        Unknown            = 1,
        Success            = 2,
        Reject             = 3,
        NotFound           = 4,
        Self               = 5,
        MessageEmpty       = 6,
        Slang              = 7,
        Busy               = 8,
        NotParty           = 9,
        OverLength         = 10,
        Offline            = 11,
        Block              = 12,
        CrossPlayOff       = 13,
        MyCrossPlayOff     = 14,
        TargetCrossPlayOff = 15,
        SocialOff          = 16,
        Ban                = 17,
        Wait               = 18,
        MAX                = 19
    };

    /**
     * Enum /Script/M1Data.EM1SupportReason
     */
    enum class EM1SupportReason : uint8_t
    {
        Fail                    = 0,
        Success                 = 1,
        NotMatchedVersion       = 2,
        TargetNotMatchedVersion = 3,
        MAX                     = 4
    };

    /**
     * Enum /Script/M1Data.EM1UserState
     */
    enum class EM1UserState : uint8_t
    {
        Reserved      = 0,
        Moved         = 1,
        InGame        = 2,
        Kicked        = 3,
        ReconnectWait = 4,
        MAX           = 5
    };

    /**
     * Enum /Script/M1Data.EM1KickType
     */
    enum class EM1KickType : uint8_t
    {
        SystemError         = 0,
        SystemBan           = 1,
        DuplicateLogin      = 2,
        DedicateServerError = 3,
        NgsInitialize       = 4,
        MAX                 = 5
    };

    /**
     * Enum /Script/M1Data.EM1BanType
     */
    enum class EM1BanType : uint8_t
    {
        Account = 0,
        Chat    = 1,
        MAX     = 2
    };

    /**
     * Enum /Script/M1Data.EM1ReportReasonType
     */
    enum class EM1ReportReasonType : uint8_t
    {
        Unknown       = 0,
        Abuse         = 1,
        Advertisement = 2,
        NickName      = 3,
        BadManner     = 4,
        Illegal       = 5,
        Bug           = 6,
        Etc           = 7,
        Afk           = 8,
        MAX           = 9
    };

    /**
     * Enum /Script/M1Data.EM1ReportErrorCode
     */
    enum class EM1ReportErrorCode : uint8_t
    {
        Unknown          = 0,
        Success          = 1,
        InvalidAccountId = 2,
        ServerDown       = 3,
        AlreadyReported  = 4,
        MAX              = 5
    };

    /**
     * Enum /Script/M1Data.EM1InputMethod
     */
    enum class EM1InputMethod : uint8_t
    {
        MouseAndKeyboard = 0,
        GamepadXBOX      = 1,
        GamepadPS        = 2,
        MAX              = 3
    };

    /**
     * Enum /Script/M1Data.EM1AnnouncementType
     */
    enum class EM1AnnouncementType : uint8_t
    {
        Chat        = 0,
        Information = 1,
        Emergency   = 2,
        MAX         = 3
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
