#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "M1_AM1MissionTargetActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class AM1Monster; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::M1 { class UM1MissionTaskComponentCompetitiveOccupation; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTargetCompetitiveOccupationKeeperTile
     * Size -> 0x0068 (FullSize[0x05F0] - InheritedSize[0x0588])
     */
    class AM1MissionTargetCompetitiveOccupationKeeperTile : public M1::AM1MissionTargetActor
    {
    public:
        M1Data::EM1InvasionArcheSymbolType                           ArcheSymbolType;                                         //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::AM1Player*>                           OverlappedPlayer;                                        //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::AM1Monster*>                          OverlappedMonster;                                       //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        float                                                        OccupiedTime;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        OccupiedRate;                                            //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bHintActivated;                                          //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Niagara::UNiagaraComponent*                                  OccupiedVfxComponent;                                    //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        VfxInvisibleTime;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            VfxProgressParameterName;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        VfxInvisibleRemainTime;                                  //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1MissionTaskComponentCompetitiveOccupation*            CachedTaskComponent;                                     //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRep_OccupiedRate();
        void OnRep_HintActivated();
        void OnRep_ArcheSymbolType();
        void OnEndOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        void OnBeginOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        M1Data::EM1InvasionArcheSymbolType GetArcheSymbolType();
        void BP_SetArcheSymbolType(M1Data::EM1InvasionArcheSymbolType InSymbolType);
        void BP_OnChangedOccupiedRate(float InOccupiedRate);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTargetCompetitiveOccupationKeeperTile");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
