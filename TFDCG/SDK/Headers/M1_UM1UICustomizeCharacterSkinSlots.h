#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_UM1UIWidget.h"
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UPanelWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UICustomizeCharacterSkinSlots
     * Size -> 0x0098 (FullSize[0x07A0] - InheritedSize[0x0708])
     */
    class UM1UICustomizeCharacterSkinSlots : public M1::UM1UIWidget
    {
    public:
        uint8_t                                                      UnknownData_0000[0x68];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::UPanelWidget*                                           Panel_Slots;                                             //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bShouldShowUpDownButton;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1UIWidget*>                         Slots;                                                   //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::UM1UIWidget*                                             SelectedSlot;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnSelectPrevSlot(M1::UM1UIWidget* InWidget);
        void OnSelectNextSlot(M1::UM1UIWidget* InWidget);
        void OnEventSkinSlotTooltipWidgetCreated(M1::UM1UIWidget* InTooltipWidget);
        void OnEventSkinSlotRightMouseButtonUp(M1::UM1UIWidget* InWidget);
        void OnEventSkinSlotCursorLeft(M1::UM1UIWidget* InWidget);
        void OnEventSkinSlotCursorEntered(M1::UM1UIWidget* InWidget);
        void OnEventSkinSlotClicked(M1::UM1UIWidget* InWidget);
        void BP_PlayMoveSlotSound();
        BasicTypes::TMap<M1::EM1CustomizeCharacterParts, M1::UM1UIWidget*> BP_GetSkinSlots();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UICustomizeCharacterSkinSlots");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
