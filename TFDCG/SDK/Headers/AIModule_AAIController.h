#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_AController.h"
#include "GameplayTasks_FGameplayResourceSet.h"
#include "CoreUObject_FVector.h"
#include "AIModule_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AIModule { class UPathFollowingComponent; };
namespace CG::AIModule { class UBrainComponent; };
namespace CG::AIModule { class UAIPerceptionComponent; };
namespace CG::AIModule { class UPawnActionsComponent; };
namespace CG::AIModule { class UBlackboardComponent; };
namespace CG::GameplayTasks { class UGameplayTasksComponent; };
namespace CG::NavigationSystem { class UNavigationQueryFilter; };
namespace CG::AIModule { class UBlackboardData; };
namespace CG::GameplayTasks { class UGameplayTaskResource; };
namespace CG::AIModule { class UBehaviorTree; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    /**
     * Class /Script/AIModule.AIController
     * Size -> 0x0090 (FullSize[0x0360] - InheritedSize[0x02D0])
     */
    class AAIController : public Engine::AController
    {
    public:
        uint8_t                                                      UnknownData_0000[0x38];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bStartAILogicOnPossess : 1;                              //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bStopAILogicOnUnposses : 1;                              //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bLOSflag : 1;                                            //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSkipExtraLOSChecks : 1;                                 //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowStrafe : 1;                                        //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bWantsPlayerState : 1;                                   //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSetControlRotationFromPawnOrientation : 1;              //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        AIModule::UPathFollowingComponent*                           PathFollowingComponent;                                  //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        AIModule::UBrainComponent*                                   BrainComponent;                                          //  BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        AIModule::UAIPerceptionComponent*                            PerceptionComponent;                                     //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        AIModule::UPawnActionsComponent*                             ActionsComp;                                             //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        AIModule::UBlackboardComponent*                              Blackboard;                                              //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        GameplayTasks::UGameplayTasksComponent*                      CachedGameplayTasksComponent;                            //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        NavigationSystem::UNavigationQueryFilter*                    DefaultNavigationFilterClass;                            //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::UMulticastInlineDelegate                         ReceiveMoveCompleted;                                    //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0003[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        bool UseBlackboard(AIModule::UBlackboardData* BlackboardAsset, AIModule::UBlackboardComponent** BlackboardComponent);
        void UnclaimTaskResource(GameplayTasks::UGameplayTaskResource* ResourceClass);
        void SetPathFollowingComponent(AIModule::UPathFollowingComponent* NewPFComponent);
        void SetMoveBlockDetection(bool bEnable);
        bool RunBehaviorTree(AIModule::UBehaviorTree* BTAsset);
        void OnUsingBlackBoard(AIModule::UBlackboardComponent* BlackboardComp, AIModule::UBlackboardData* BlackboardAsset);
        void OnGameplayTaskResourcesClaimed(const GameplayTasks::FGameplayResourceSet& NewlyClaimed, const GameplayTasks::FGameplayResourceSet& FreshlyReleased);
        AIModule::EPathFollowingRequestResult MoveToLocation(const CoreUObject::FVector& Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, NavigationSystem::UNavigationQueryFilter* FilterClass, bool bAllowPartialPath);
        AIModule::EPathFollowingRequestResult MoveToActor(Engine::AActor* Goal, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bCanStrafe, NavigationSystem::UNavigationQueryFilter* FilterClass, bool bAllowPartialPath);
        void K2_SetFocus(Engine::AActor* NewFocus);
        void K2_SetFocalPoint(const CoreUObject::FVector& FP);
        void K2_ClearFocus();
        bool HasPartialPath();
        AIModule::UPathFollowingComponent* GetPathFollowingComponent();
        AIModule::EPathFollowingStatus GetMoveStatus();
        CoreUObject::FVector GetImmediateMoveDestination();
        Engine::AActor* GetFocusActor();
        CoreUObject::FVector GetFocalPointOnActor(Engine::AActor* Actor);
        CoreUObject::FVector GetFocalPoint();
        AIModule::UPawnActionsComponent* GetDeprecatedActionsComponent();
        AIModule::UAIPerceptionComponent* GetAIPerceptionComponent();
        void ClaimTaskResource(GameplayTasks::UGameplayTaskResource* ResourceClass);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AIModule.AIController");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
