#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "FieldSystemEngine_UFieldNodeVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::FieldSystemEngine { class URadialVector; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::FieldSystemEngine
{
    /**
     * Class /Script/FieldSystemEngine.RadialVector
     * Size -> 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
     */
    class URadialVector : public FieldSystemEngine::UFieldNodeVector
    {
    public:
        float                                                        Magnitude;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         Position;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        FieldSystemEngine::URadialVector* SetRadialVector(float Magnitude, const CoreUObject::FVector& Position);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/FieldSystemEngine.RadialVector");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
