#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "CoreUObject_FTransform.h"
#include "M1_FM1AbilityEvent.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAnimMontage; };
namespace CG::Engine { class ACharacter; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Ability_PlayerJump
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Handle_FallingFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_CanApplyFallingFX_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Handle_LandFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_CanApplyLandFX_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Unapply_FallingSFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Apply_JumpMontage_Params
    {
    public:
        BasicTypes::FName                                            InSectionName;                                           //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_ShouldApplyFallingSFX_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Unapply_JumpMontage_Params
    {
    public:
        bool                                                         bImmediately;                                            //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_ShouldPlayFallAnim_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0003[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Apply_JumpMontageSection_Params
    {
    public:
        BasicTypes::FName                                            NewSectionName;                                          //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_GetJumpMontageParam_Params
    {
    public:
        Engine::UAnimMontage*                                        outMontage;                                              //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_ShouldApplyLandHardVFX_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0004[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FName                                            LandHardVFX;                                             //  0x0004(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0005[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      LandHardTransform;                                       //  0x0010(0x0030)  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Handle_LandHardVFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Handle_LandSFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Handle_FallingSFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Handle_FallingHighVFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_ShouldApplyFallHighVFX_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0006[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Unapply_FallHighVFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_Apply_FallHighVFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52_Params
    {
    public:
        M1::FM1AbilityEvent                                          Event;                                                   //  0x0000(0x0040)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB_Params
    {
    public:
        M1::FM1AbilityEvent                                          Event;                                                   //  0x0000(0x0040)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA_Params
    {
    public:
        M1::FM1AbilityEvent                                          Event;                                                   //  0x0000(0x0040)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08_Params
    {
    public:
        M1::FM1AbilityEvent                                          Event;                                                   //  0x0000(0x0040)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3_Params
    {
    public:
        M1::FM1AbilityEvent                                          Event;                                                   //  0x0000(0x0040)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_BP_OnActivated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_BP_OnDeactivated_Params
    {
    public:
        bool                                                         bCancelled;                                              //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_OwnerOnMovementModeChanged_Params
    {
    public:
        Engine::ACharacter*                                          Character;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        Engine::EMovementMode                                        PrevMovementMode;                                        //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      PreviousCustomMode;                                      //  0x0009(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAbility_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0007[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
