#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1StealTargetInfo.h"
#include "M1_AM1MissionTaskActorBundle.h"
#include "M1_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1MissionTaskComponentSupply; };
namespace CG::M1 { class AM1MissionTargetActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTaskActorSteal
     * Size -> 0x0070 (FullSize[0x06E8] - InheritedSize[0x0678])
     */
    class AM1MissionTaskActorSteal : public M1::AM1MissionTaskActorBundle
    {
    public:
        int32_t                                                      SuppliedCount;                                           //  Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::FM1StealTargetInfo>                   StealTargetInfos;                                        //  Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x50];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1MissionTaskComponentSupply*                           SupplyTaskComponent;                                     //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnRep_StealTargetInfos();
        void OnMissionTargetDestructed(M1::AM1MissionTargetActor* InTarget, M1::EM1ResetType InResetType);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTaskActorSteal");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
