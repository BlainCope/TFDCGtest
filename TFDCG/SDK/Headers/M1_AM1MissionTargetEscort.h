#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_FM1ScaledInteger.h"
#include "GameplayTags_FGameplayTag.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "M1_FM1DecreaseShieldAbilityInfo.h"
#include "M1_AM1MissionTargetActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USphereComponent; };
namespace CG::M1 { class AM1Player; };
namespace CG::Engine { class AActor; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTargetEscort
     * Size -> 0x0050 (FullSize[0x05D8] - InheritedSize[0x0588])
     */
    class AM1MissionTargetEscort : public M1::AM1MissionTargetActor
    {
    public:
        Engine::USphereComponent*                                    SphereComponent;                                         //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::FM1ScaledInteger                                     ShieldConsumption;                                       //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        GameplayTags::FGameplayTag                                   ConsumptionOpTag;                                        //  NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            ConsumptionOpParamName;                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            RangeParamName;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      OverlapAllyCountInRange;                                 //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::TWeakObjectPtr<M1::AM1Player>> AllyPlayers;                                             //  ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::FM1DecreaseShieldAbilityInfo>         DecreaseShieldAbilityInfos;                              //  ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

    public:
        void SetSpawnedDecreaseShieldVFX(Engine::AActor* InActor, BasicTypes::TArray<Niagara::UNiagaraComponent*> InSpawnedNiagaraComponments);
        void SetOverlappedAlly(BasicTypes::TArray<Engine::AActor*> InAlly);
        void RemoveAlly(Engine::AActor* InRemovedAlly);
        void OnBeginOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        bool IsJoinedPlayer(Engine::AActor* InPlayer);
        BasicTypes::TArray<Niagara::UNiagaraComponent*> GetSpawnedDecreaseShieldVFX(Engine::AActor* InActor);
        M1Data::FM1ScaledInteger GetShieldConsumption();
        void DeactivateDecreaseShieldAbilityWithoutActor(BasicTypes::TArray<Engine::AActor*> InActors);
        float BP_GetSpawnAnimDuration();
        float BP_GetActivateAnimDuration();
        void AddAlly(Engine::AActor* InAddedAlly);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTargetEscort");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
