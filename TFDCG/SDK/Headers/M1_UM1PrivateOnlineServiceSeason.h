#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1PrivateOnlineSubService.h"
#include "M1_FM1Response_TryUnlockReinforce.h"
#include "M1_FM1Response_TryEquipReinforce.h"
#include "M1_FM1Response_GetSeasonInfo.h"
#include "M1_FM1Response_CheatAddSeasonExp.h"
#include "M1Data_FM1SeasonExpNoti.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PrivateOnlineServiceSeason
     * Size -> 0x0058 (FullSize[0x0098] - InheritedSize[0x0040])
     */
    class UM1PrivateOnlineServiceSeason : public M1::UM1PrivateOnlineSubService
    {
    public:
        uint8_t                                                      UnknownData_0000[0x58];                                  //  MISSED OFFSET (PADDING)

    public:
        void ServerRequestTryUnlockReinforce(int32_t InGroupIndex, int32_t InSlotIndex);
        void ServerRequestTryEquipReinforce(int32_t InGroupIndex, int32_t InSlotIndex, bool bEquip);
        void ServerRequestGetSeasonInfo();
        void ServerRequestClearReinforce();
        void ServerRequestCheatAddSeasonExp(int64_t InExp);
        void ClientReceiveTryUnlockReinforce(const M1::FM1Response_TryUnlockReinforce& InResponse);
        void ClientReceiveTryEquipReinforce(const M1::FM1Response_TryEquipReinforce& InResponse);
        void ClientReceiveGetSeasonInfo(const M1::FM1Response_GetSeasonInfo& InResponse);
        void ClientReceiveCheatAddSeasonExp(const M1::FM1Response_CheatAddSeasonExp& InResponse);
        void ClientOnNotifySeasonLevelExpChanged(const M1Data::FM1SeasonExpNoti& InNoti);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PrivateOnlineServiceSeason");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
