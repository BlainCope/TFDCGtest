#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_FWorldPartitionDestructibleHLODDamagedActorState.h"
#include "NetCore_FFastArraySerializer.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UWorldPartitionDestructibleHLODComponent; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.WorldPartitionDestructibleHLODState
     * Size -> 0x0040 (FullSize[0x0148] - InheritedSize[0x0108])
     */
    struct FWorldPartitionDestructibleHLODState : public NetCore::FFastArraySerializer
    {
    public:
        BasicTypes::TArray<Engine::FWorldPartitionDestructibleHLODDamagedActorState> DamagedActors;                                           //  ZeroConstructor, NativeAccessSpecifierPrivate
        Engine::UWorldPartitionDestructibleHLODComponent*            OwnerComponent;                                          //  ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x28];                                  //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
