#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1InteractionRule.h"
#include "BasicTypes_TMap.h"
#include "M1_FM1InteractionEntities.h"
#include "M1_FM1BestInteractableEntities.h"
#include "BasicTypes_TSet.h"
#include "M1_FM1InteractionTargetInfo.h"
#include "Engine_UActorComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1InteractableEntity; };
namespace CG::M1 { class UM1InteractionJudgeRule; };
namespace CG::CoreUObject { class UObject; };
namespace CG::M1 { class UM1InteractionInvokerComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1InteractionComponent
     * Size -> 0x0160 (FullSize[0x0208] - InheritedSize[0x00A8])
     */
    class UM1InteractionComponent : public Engine::UActorComponent
    {
    public:
        BasicTypes::TArray<M1::FM1InteractionRule>                   JudgeRules;                                              //  Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TMap<M1::UM1InteractableEntity*, M1::FM1InteractionEntities> InteractionWaitingEntities;                              //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1::UM1InteractableEntity*, M1::UM1InteractionJudgeRule*> BestCandidateJudgeRules;                                 //  Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        M1::FM1BestInteractableEntities                              BestInteractableEntities;                                //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<M1::UM1InteractableEntity*>                 EntityTypesToBlock;                                      //  Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1InteractableEntity*                                   CurrentTryingInteractableEntity;                         //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1InteractionTargetInfo                                 CurrentInteractionEntityInfo;                            //  Transient, NativeAccessSpecifierPrivate

    public:
        void ServerTryInteraction(CoreUObject::UObject* InWhoWantsToInteract, M1::UM1InteractionInvokerComponent* InInvoker);
        void ServerNotifyEndInteraction(M1::UM1InteractionInvokerComponent* InInvoker);
        void ServerExitInteractionQuery();
        void ServerEndInteraction(M1::UM1InteractionInvokerComponent* InInvoker);
        void ServerCancelTryingInteraction(M1::UM1InteractionInvokerComponent* InInvoker);
        void ServerBeginInteraction(M1::UM1InteractionInvokerComponent* InInvoker);
        void FinishInteraction(M1::UM1InteractionInvokerComponent* InInvoker, bool InCancel);
        void ClientTryInteraction(CoreUObject::UObject* InWhoWantsToInteract, M1::UM1InteractionInvokerComponent* InInvoker);
        void ClientEndInteraction();
        void ClientCancelTryingInteraction(M1::UM1InteractionInvokerComponent* InInvoker);
        void ClientBeginInteraction(M1::UM1InteractionInvokerComponent* InInvoker);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1InteractionComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
