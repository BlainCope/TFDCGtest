#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "AnimationCore_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UWorld; };
namespace CG::Constraints { class UTickableConstraint; };
namespace CG::Constraints { class UConstraintsManager; };
namespace CG::CoreUObject { class UObject; };
namespace CG::Constraints { class UTransformableHandle; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Constraints { class UTransformableComponentHandle; };
namespace CG::Constraints { class UTickableTransformConstraint; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Constraints
{
    /**
     * Class /Script/Constraints.ConstraintsScriptingLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UConstraintsScriptingLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        bool STATIC_RemoveThisConstraint(Engine::UWorld* InWorld, Constraints::UTickableConstraint* InTickableConstraint);
        bool STATIC_RemoveConstraint(Engine::UWorld* InWorld, int32_t InIndex);
        Constraints::UConstraintsManager* STATIC_GetManager(Engine::UWorld* InWorld);
        BasicTypes::TArray<Constraints::UTickableConstraint*> STATIC_GetConstraintsArray(Engine::UWorld* InWorld);
        Constraints::UTransformableHandle* STATIC_CreateTransformableHandle(Engine::UWorld* InWorld, CoreUObject::UObject* InObject, const BasicTypes::FName& InAttachmentName);
        Constraints::UTransformableComponentHandle* STATIC_CreateTransformableComponentHandle(Engine::UWorld* InWorld, Engine::USceneComponent* InSceneComponent, const BasicTypes::FName& InSocketName);
        Constraints::UTickableTransformConstraint* STATIC_CreateFromType(Engine::UWorld* InWorld, AnimationCore::ETransformConstraintType InType);
        bool STATIC_AddConstraint(Engine::UWorld* InWorld, Constraints::UTransformableHandle* InParentHandle, Constraints::UTransformableHandle* InChildHandle, Constraints::UTickableTransformConstraint* InConstraint, bool bMaintainOffset);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Constraints.ConstraintsScriptingLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
