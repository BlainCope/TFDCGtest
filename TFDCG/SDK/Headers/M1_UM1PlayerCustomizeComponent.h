#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1CustomizeEtcSkinData.h"
#include "M1_FM1CustomizeCharacterSkinData.h"
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "M1Data_ENUMS.h"
#include "M1_UM1CharacterComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::Engine { class UMeshComponent; };
namespace CG::Engine { class UAnimMontage; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PlayerCustomizeComponent
     * Size -> 0x0200 (FullSize[0x02D0] - InheritedSize[0x00D0])
     */
    class UM1PlayerCustomizeComponent : public M1::UM1CharacterComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Player*                                               Player_Owner;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1CustomizeEtcSkinData                                  EciveSkinData;                                           //  Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1CustomizeEtcSkinData                                  TeleportSkinData;                                        //  Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1CustomizeCharacterSkinData                            CustomizeCharacterSkinData;                              //  Net, RepNotify, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1::EM1CharacterMeshSlotType, Engine::UMeshComponent*> CustomizingSkinComps;                                    //  Edit, ExportObject, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> TeleportStartAnimMontageMap;                             //  Transient, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> TeleportEndAnimMontageMap;                               //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0xC0];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRep_TeleportSkinData();
        void OnRep_EciveSkinData();
        void OnRep_CustomizeCharacterSkinData();
        void NetMulticastResetPlayerCustomizingSpawnedByCheat();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PlayerCustomizeComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
