#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "AudioWidgets_ENUMS.h"
#include "BasicTypes_FText.h"
#include "SlateCore_FSlateColor.h"
#include "CoreUObject_FLinearColor.h"
#include "CoreUObject_FVector2D.h"
#include "BasicTypes_TArray.h"
#include "AudioWidgets_FMeterChannelInfo.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioWidgets
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetWidgetLayout_Params
    {
    public:
        AudioWidgets::EAudioRadialSliderLayout                       InLayout;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetValueTextReadOnly_Params
    {
    public:
        bool                                                         bIsReadOnly;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetUnitsTextReadOnly_Params
    {
    public:
        bool                                                         bIsReadOnly;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetUnitsText_Params
    {
    public:
        BasicTypes::FText                                            Units;                                                   //  0x0000(0x0018)  (ConstParm, Parm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetTextLabelBackgroundColor_Params
    {
    public:
        SlateCore::FSlateColor                                       InColor;                                                 //  0x0000(0x0014)  (Parm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetSliderThickness_Params
    {
    public:
        float                                                        InThickness;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetSliderProgressColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetSliderBarColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetShowUnitsText_Params
    {
    public:
        bool                                                         bShowUnitsText;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetShowLabelOnlyOnHover_Params
    {
    public:
        bool                                                         bShowLabelOnlyOnHover;                                   //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetOutputRange_Params
    {
    public:
        CoreUObject::FVector2D                                       InOutputRange;                                           //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetHandStartEndRatio_Params
    {
    public:
        CoreUObject::FVector2D                                       InHandStartEndRatio;                                     //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_SetCenterBackgroundColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_GetSliderValue_Params
    {
    public:
        float                                                        OutputValue;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioRadialSlider_GetOutputValue_Params
    {
    public:
        float                                                        InSliderValue;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetWidgetBackgroundColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetValueTextReadOnly_Params
    {
    public:
        bool                                                         bIsReadOnly;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetUnitsTextReadOnly_Params
    {
    public:
        bool                                                         bIsReadOnly;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetUnitsText_Params
    {
    public:
        BasicTypes::FText                                            Units;                                                   //  0x0000(0x0018)  (ConstParm, Parm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetTextLabelBackgroundColor_Params
    {
    public:
        SlateCore::FSlateColor                                       InColor;                                                 //  0x0000(0x0014)  (Parm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetSliderThumbColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetSliderBarColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetSliderBackgroundColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetShowUnitsText_Params
    {
    public:
        bool                                                         bShowUnitsText;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_SetShowLabelOnlyOnHover_Params
    {
    public:
        bool                                                         bShowLabelOnlyOnHover;                                   //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_GetSliderValue_Params
    {
    public:
        float                                                        OutputValue;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_GetOutputValue_Params
    {
    public:
        float                                                        InSliderValue;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioSliderBase_GetLinValue_Params
    {
    public:
        float                                                        OutputValue;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterValueColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterScaleLabelColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterScaleColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterPeakColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterClippingColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterChannelInfo_Params
    {
    public:
        BasicTypes::TArray<AudioWidgets::FMeterChannelInfo>          InMeterChannelInfo;                                      //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetMeterBackgroundColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_SetBackgroundColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_GetMeterChannelInfo__DelegateSignature_Params
    {
    public:
        BasicTypes::TArray<AudioWidgets::FMeterChannelInfo>          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAudioMeter_GetMeterChannelInfo_Params
    {
    public:
        BasicTypes::TArray<AudioWidgets::FMeterChannelInfo>          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
