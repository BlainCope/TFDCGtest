#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "BasicTypes_TMap.h"
#include "AugmentedReality_ENUMS.h"
#include "CoreUObject_FTransform.h"
#include "AugmentedReality_UARTrackedGeometry.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AugmentedReality
{
    /**
     * Class /Script/AugmentedReality.ARFaceGeometry
     * Size -> 0x00F8 (FullSize[0x01F0] - InheritedSize[0x00F8])
     */
    class UARFaceGeometry : public AugmentedReality::UARTrackedGeometry
    {
    public:
        CoreUObject::FVector                                         LookAtTarget;                                            //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsTracked;                                              //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<AugmentedReality::EARFaceBlendShape, float> BlendShapes;                                             //  NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x38];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      LeftEyeTransform;                                        //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        CoreUObject::FTransform                                      RightEyeTransform;                                       //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        CoreUObject::FTransform GetWorldSpaceEyeTransform(AugmentedReality::EAREye Eye);
        CoreUObject::FTransform GetLocalSpaceEyeTransform(AugmentedReality::EAREye Eye);
        float GetBlendShapeValue(AugmentedReality::EARFaceBlendShape BlendShape);
        BasicTypes::TMap<AugmentedReality::EARFaceBlendShape, float> GetBlendShapes();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AugmentedReality.ARFaceGeometry");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
