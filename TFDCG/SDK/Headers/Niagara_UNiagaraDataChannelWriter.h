#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector4.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FVector.h"
#include "Niagara_FNiagaraSpawnInfo.h"
#include "CoreUObject_FQuat.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Niagara { class UNiagaraDataChannelHandler; };
namespace CG::Engine { class UActorComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Niagara
{
    /**
     * Class /Script/Niagara.NiagaraDataChannelWriter
     * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
     */
    class UNiagaraDataChannelWriter : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Niagara::UNiagaraDataChannelHandler*                         Owner;                                                   //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        void WriteVector4(const BasicTypes::FName& VarName, int32_t Index, const CoreUObject::FVector4& InData);
        void WriteVector2D(const BasicTypes::FName& VarName, int32_t Index, const CoreUObject::FVector2D& InData);
        void WriteVector(const BasicTypes::FName& VarName, int32_t Index, const CoreUObject::FVector& InData);
        void WriteSpawnInfo(const BasicTypes::FName& VarName, int32_t Index, const Niagara::FNiagaraSpawnInfo& InData);
        void WriteQuat(const BasicTypes::FName& VarName, int32_t Index, const CoreUObject::FQuat& InData);
        void WriteLinearColor(const BasicTypes::FName& VarName, int32_t Index, const CoreUObject::FLinearColor& InData);
        void WriteInt(const BasicTypes::FName& VarName, int32_t Index, int32_t InData);
        void WriteFloat(const BasicTypes::FName& VarName, int32_t Index, double InData);
        void WriteBool(const BasicTypes::FName& VarName, int32_t Index, bool InData);
        int32_t Num();
        bool InitWrite(Engine::UActorComponent* OwningComponent, int32_t Count, bool bVisibleToGame, bool bVisibleToCPU, bool bVisibleToGPU);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Niagara.NiagaraDataChannelWriter");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
