#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "MovieRenderPipelineCore_UMoviePipelineExecutorBase.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieRenderPipelineCore { class UMoviePipelineQueue; };
namespace CG::MovieRenderPipelineCore { class UMoviePipeline; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieRenderPipelineCore
{
    /**
     * Class /Script/MovieRenderPipelineCore.MoviePipelineLinearExecutorBase
     * Size -> 0x0028 (FullSize[0x0140] - InheritedSize[0x0118])
     */
    class UMoviePipelineLinearExecutorBase : public MovieRenderPipelineCore::UMoviePipelineExecutorBase
    {
    public:
        MovieRenderPipelineCore::UMoviePipelineQueue*                Queue;                                                   //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        MovieRenderPipelineCore::UMoviePipeline*                     ActiveMoviePipeline;                                     //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieRenderPipelineCore.MoviePipelineLinearExecutorBase");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
