#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "VariantManagerContent_FCapturedPropSegment.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TMap.h"
#include "VariantManagerContent_ENUMS.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FText.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::VariantManagerContent
{
    /**
     * Class /Script/VariantManagerContent.PropertyValue
     * Size -> 0x0198 (FullSize[0x01C0] - InheritedSize[0x0028])
     */
    class UPropertyValue : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x60];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        uint8_t                                                      Properties[0x10];                                        //  UNKNOWN PROPERTY TYPE: ArrayProperty
        BasicTypes::TArray<int32_t>                                  PropertyIndices;                                         //  ZeroConstructor, Deprecated, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<VariantManagerContent::FCapturedPropSegment> CapturedPropSegments;                                    //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::FString                                          FullDisplayString;                                       //  ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            PropertySetterName;                                      //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TMap<BasicTypes::FString, BasicTypes::FString>   PropertySetterParameterDefaults;                         //  Protected, NativeAccessSpecifierProtected
        bool                                                         bHasRecordedData;                                        //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::UObject*                                        LeafPropertyClass;                                       //  ZeroConstructor, Deprecated, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<uint8_t>                                  ValueBytes;                                              //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        VariantManagerContent::EPropertyValueCategory                PropCategory;                                            //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x77];                                  //  MISSED OFFSET (PADDING)

    public:
        bool HasRecordedData();
        BasicTypes::FText GetPropertyTooltip();
        BasicTypes::FString GetFullDisplayString();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/VariantManagerContent.PropertyValue");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
