#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "M1_FM1CompressedData.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1PatchInfoMap; };
namespace CG::M1 { class UM1PatchDataMap; };
namespace CG::M1 { class UM1DataPatchConfig; };
namespace CG::M1 { class UM1DataCenterPatcher; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1DataPatchSystem
     * Size -> 0x02A0 (FullSize[0x02C8] - InheritedSize[0x0028])
     */
    class UM1DataPatchSystem : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x130];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1PatchInfoMap*                                         PatchInfoObj;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PatchDataMap*                                         PatchDataObj;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, M1::FM1CompressedData> CompressedStringPatchDataMap;                            //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0xA8];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1DataPatchConfig*                                      PatchConfig;                                             //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1DataCenterPatcher*                                    DataCenterPatcher;                                       //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, int32_t>               PatchedDatasheetVersionMap;                              //  NativeAccessSpecifierPrivate

    public:
        void OnCompleteUpdateDataCenterAsync();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1DataPatchSystem");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
