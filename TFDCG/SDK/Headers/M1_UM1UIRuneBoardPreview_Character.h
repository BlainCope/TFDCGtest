#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1UIWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1TextBlock; };
namespace CG::UMG { class UPanelWidget; };
namespace CG::M1 { class UM1UICharacterIcon; };
namespace CG::M1 { class UM1UIRuneBoardStatInfo_Normal; };
namespace CG::M1 { class UM1UIRuneBoardStatInfo_Conditional; };
namespace CG::UMG { class UUserWidget; };
namespace CG::M1 { class UM1UIDataRuneSocket; };
namespace CG::M1 { class UM1UIDataItemInfo_Rune; };
namespace CG::M1 { class UM1UIRune; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIRuneBoardPreview_Character
     * Size -> 0x00A0 (FullSize[0x07A8] - InheritedSize[0x0708])
     */
    class UM1UIRuneBoardPreview_Character : public M1::UM1UIWidget
    {
    public:
        uint8_t                                                      UnknownData_0000[0x60];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1TextBlock*                                            Text_CharacterLevel;                                     //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            Text_CharacterName;                                      //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UPanelWidget*                                           Panel_EquipStatus;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UICharacterIcon*                                      UI_CharacterIcon;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UPanelWidget*                                           Panel_Skills;                                            //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneBoardStatInfo_Normal*                           UI_Stat_Normal;                                          //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneBoardStatInfo_Conditional*                      UI_Stat_Conditional;                                     //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIWidget*                                             CharacterSkillWidget;                                    //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnRuneDragCancelled(UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnRuneDragAttachFailed(M1::UM1UIDataItemInfo_Rune* InDraggedRuneData, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnRuneDetached(M1::UM1UIDataItemInfo_Rune* InDetachedRuneData, M1::UM1UIDataRuneSocket* InRuneSocketData, bool bIsQuickDetach);
        void OnRuneAttached(M1::UM1UIDataItemInfo_Rune* InAttachedRuneData, M1::UM1UIDataRuneSocket* InRuneSocketData, bool bIsQuickAttach);
        void OnDragLeftFromSocket(UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnDragLeftFromRune(M1::UM1UIRune* InRuneWidget, UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataItemInfo_Rune* InRuneData);
        void OnDragEnteredToSocket(UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnDragEnteredToRune(M1::UM1UIRune* InRuneWidget, UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataItemInfo_Rune* InRuneData);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIRuneBoardPreview_Character");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
