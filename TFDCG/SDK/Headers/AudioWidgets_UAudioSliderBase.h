#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FText.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_UScriptDelegate.h"
#include "SlateCore_ENUMS.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "UMG_UWidget.h"
#include "SlateCore_FSlateColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioWidgets
{
    /**
     * Class /Script/AudioWidgets.AudioSliderBase
     * Size -> 0x07C0 (FullSize[0x08F0] - InheritedSize[0x0130])
     */
    class UAudioSliderBase : public UMG::UWidget
    {
    public:
        float                                                        Value;                                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FText                                            UnitsText;                                               //  Edit, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    TextLabelBackgroundColor;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  TextLabelBackgroundColorDelegate;                        //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         ShowLabelOnlyOnHover;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         ShowUnitsText;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         IsUnitsTextReadOnly;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         IsValueTextReadOnly;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  ValueDelegate;                                           //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    SliderBackgroundColor;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  SliderBackgroundColorDelegate;                           //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    SliderBarColor;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  SliderBarColorDelegate;                                  //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    SliderThumbColor;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  SliderThumbColorDelegate;                                //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    WidgetBackgroundColor;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  WidgetBackgroundColorDelegate;                           //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::EOrientation                                      Orientation;                                             //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnValueChanged;                                          //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0003[0x6D8];                                 //  MISSED OFFSET (PADDING)

    public:
        void SetWidgetBackgroundColor(const CoreUObject::FLinearColor& InValue);
        void SetValueTextReadOnly(bool bIsReadOnly);
        void SetUnitsTextReadOnly(bool bIsReadOnly);
        void SetUnitsText(const BasicTypes::FText& Units);
        void SetTextLabelBackgroundColor(const SlateCore::FSlateColor& InColor);
        void SetSliderThumbColor(const CoreUObject::FLinearColor& InValue);
        void SetSliderBarColor(const CoreUObject::FLinearColor& InValue);
        void SetSliderBackgroundColor(const CoreUObject::FLinearColor& InValue);
        void SetShowUnitsText(bool bShowUnitsText);
        void SetShowLabelOnlyOnHover(bool bShowLabelOnlyOnHover);
        float GetSliderValue(float OutputValue);
        float GetOutputValue(float InSliderValue);
        float GetLinValue(float OutputValue);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AudioWidgets.AudioSliderBase");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
