#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPoseLink.h"
#include "BasicTypes_TArray.h"
#include "Engine_FBoneReference.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "ControlRig_FControlRigIOSettings.h"
#include "ControlRig_FControlRigAnimNodeEventName.h"
#include "Engine_FAnimNode_CustomProperty.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UNodeMappingContainer; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * ScriptStruct /Script/ControlRig.AnimNode_ControlRigBase
     * Size -> 0x0218 (FullSize[0x0270] - InheritedSize[0x0058])
     */
    struct FAnimNode_ControlRigBase : public Engine::FAnimNode_CustomProperty
    {
    public:
        Engine::FPoseLink                                            Source;                                                  //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        bool                                                         bResetInputPoseToInitial;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bTransferInputPose;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bTransferInputCurves;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bTransferPoseInGlobalSpace;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FBoneReference>                   InputBonesToTransfer;                                    //  Edit, ZeroConstructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x1C0];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TWeakObjectPtr<Engine::UNodeMappingContainer>    NodeMappingContainer;                                    //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        ControlRig::FControlRigIOSettings                            InputSettings;                                           //  Transient, NoDestructor, Protected, NativeAccessSpecifierProtected
        ControlRig::FControlRigIOSettings                            OutputSettings;                                          //  Transient, NoDestructor, Protected, NativeAccessSpecifierProtected
        bool                                                         bExecute;                                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0xB];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<ControlRig::FControlRigAnimNodeEventName> EventQueue;                                              //  Edit, ZeroConstructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x8];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
