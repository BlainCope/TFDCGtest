#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "M1Data_ENUMS.h"
#include "GameplayTags_FGameplayTagContainer.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_TMap.h"
#include "M1_FM1AbilityId.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "CoreUObject_UObject.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1AbilityActor; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1AOECollisionManager
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Gameplay/Common/AOEBase/M1AOECollisionManager.M1AOECollisionManager_C
     * Size -> 0x0108 (FullSize[0x0130] - InheritedSize[0x0028])
     */
    class UM1AOECollisionManager_C : public CoreUObject::UObject
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        M1::AM1AbilityActor*                                         OwnerActor;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        Engine::UPrimitiveComponent*                                 PrimitiveComp;                                           //  Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        M1Data::EM1RelationsCheckType                                RelationsType;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GameplayTags::FGameplayTagContainer                          SEForwardingContextTags;                                 //  Edit, BlueprintVisible, ExposeOnSpawn
        GameplayTags::FGameplayTagContainer                          SEInvokeTags;                                            //  Edit, BlueprintVisible, ExposeOnSpawn
        BasicTypes::TArray<Engine::AActor*>                          OverlapActors;                                           //  Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance
        BasicTypes::TMap<Engine::AActor*, M1::FM1AbilityId>          InvokedSEActors;                                         //  Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance
        float                                                        Period;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GameplayTags::FGameplayTagContainer                          PeriodOpTags;                                            //  Edit, BlueprintVisible, ExposeOnSpawn
        BasicTypes::FName                                            PeriodHitFXName;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        bool                                                         bStartOverlap;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        bool                                                         bNeedEndSE;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnPeriodEvent;                                           //  ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        uint8_t                                                      UnknownData_0003[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY

    public:
        void GetOverlapActors(BasicTypes::TArray<Engine::AActor*>* OverlapActors);
        void Init();
        void BeginOverlapEvent(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const Engine::FHitResult& SweepResult);
        void EndOverlapEvent(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
        void OnPeriod();
        void ExecuteUbergraph_M1AOECollisionManager(int32_t EntryPoint);
        void OnPeriodEvent__DelegateSignature();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Gameplay/Common/AOEBase/M1AOECollisionManager.M1AOECollisionManager_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
