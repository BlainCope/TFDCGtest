#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "M1_FM1GameplayTagVariantBlueprintPropertyMap.h"
#include "Engine_UAnimInstance.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1QueryServiceComponent; };
namespace CG::Engine { class UCharacterMovementComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1BaseAnimInstance
     * Size -> 0x0050 (FullSize[0x0368] - InheritedSize[0x0318])
     */
    class UM1BaseAnimInstance : public Engine::UAnimInstance
    {
    public:
        M1::UM1QueryServiceComponent*                                QueryServiceComponent;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UCharacterMovementComponent*                         CharacterMovementComponent;                              //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         OwnerVelocity;                                           //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         OwnerAcceleration;                                       //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::FM1GameplayTagVariantBlueprintPropertyMap                VariantPropertyMap;                                      //  Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected

    public:
        bool IsMachineInState(const BasicTypes::FName& MachineName, const BasicTypes::FName& StateName);
        float GetSlotMontageWeight(const BasicTypes::FName& SlotName);
        float GetMachineStateWeight(const BasicTypes::FName& MachineName, const BasicTypes::FName& StateName);
        Engine::UAnimInstance* FindLinkedAnimLayerInstanceByClass(Engine::UAnimInstance* InClass, const BasicTypes::FName& LayerName);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1BaseAnimInstance");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
