#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Paper2D_FPaperFlipbookKeyFrame.h"
#include "Paper2D_ENUMS.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::Paper2D { class UPaperSprite; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Paper2D
{
    /**
     * Class /Script/Paper2D.PaperFlipbook
     * Size -> 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
     */
    class UPaperFlipbook : public CoreUObject::UObject
    {
    public:
        float                                                        FramesPerSecond;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Paper2D::FPaperFlipbookKeyFrame>          KeyFrames;                                               //  Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        Engine::UMaterialInterface*                                  DefaultMaterial;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Paper2D::EFlipbookCollisionMode                              CollisionSource;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        bool IsValidKeyFrameIndex(int32_t Index);
        float GetTotalDuration();
        Paper2D::UPaperSprite* GetSpriteAtTime(float Time, bool bClampToEnds);
        Paper2D::UPaperSprite* GetSpriteAtFrame(int32_t FrameIndex);
        int32_t GetNumKeyFrames();
        int32_t GetNumFrames();
        int32_t GetKeyFrameIndexAtTime(float Time, bool bClampToEnds);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Paper2D.PaperFlipbook");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
