#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_TArray.h"
#include "M1Data_FM1AbilityParamData.h"
#include "M1_FM1AbilityId.h"
#include "M1_ENUMS.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FTransform.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UCapsuleComponent; };
namespace CG::Engine { class AActor; };
namespace CG::M1 { class AM1WireCaster; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Skill_Wire
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_Auth_SetEnableClientAuthoritativePositionForDebone_Params
    {
    public:
        bool                                                         ServerAcceptClientAuthoritativePosition;                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_SetOverrideInputVector_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_SetTestIgnoreClientMovementError_Params
    {
    public:
        bool                                                         bIgnore;                                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ToggleWireDebugIgnoreClientMoveError_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ToggleWireDebugPrintLog_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_OnRep_bRepWaitServerTaggedActor_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_SetOverrideVelocity_Params
    {
    public:
        float                                                        DeltaSeconds;                                            //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_IsOverAngleLimit_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0003[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_DebugDrawDir_Params
    {
    public:
        CoreUObject::FLinearColor                                    LineColor;                                               //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FVector                                         Dir;                                                     //  0x0010(0x000C)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_GetDestLocation_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0004[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_CalcAddtiveSpeed_Params
    {
    public:
        double                                                       DeltaTime;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        double                                                       MaxSpeed;                                                //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        double                                                       TimeToMaxSpeed;                                          //  0x0010(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        double                                                       LastSpeed;                                               //  0x0018(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bSide;                                                   //  0x0020(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0005[0x7];                                   //  0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        double                                                       ReturnValue;                                             //  0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_CalcMaxSpeed_Params
    {
    public:
        double                                                       ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_GetOwnerCapsuleComp_Params
    {
    public:
        Engine::UCapsuleComponent*                                   Return;                                                  //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_MakeSkillActivateParams_Params
    {
    public:
        Engine::AActor*                                              InOwner;                                                 //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        BasicTypes::TArray<M1Data::FM1AbilityParamData>              ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ReturnParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_GetWireCaster_Params
    {
    public:
        M1::AM1WireCaster*                                           ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_OnFinish_DC9B7448483DD071381298A50162540C_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_OnInput_0142378244F8CEC2CDF6BAB4C32321CB_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_OnInput_FFA0F8704AA57B420BB365A52582F128_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_OnAbilityDeactivated_B8F99BCC49F86BE7F7AB8CA2B2B8BF56_Params
    {
    public:
        M1::FM1AbilityId                                             InAbilityId;                                             //  0x0000(0x0010)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
        Engine::AActor*                                              Owner;                                                   //  0x0010(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        bool                                                         bCanceled;                                               //  0x0018(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_BP_OnActivated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_BP_OnDeactivated_Params
    {
    public:
        bool                                                         bCancelled;                                              //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_OnChangedState_Params
    {
    public:
        M1::EM1WireState                                             WireState;                                               //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_RequestEndWire_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ServerRequestPullingStart_Params
    {
    public:
        CoreUObject::FVector                                         InitialLocation;                                         //  0x0000(0x000C)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0006[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        double                                                       InitialSpeed;                                            //  0x0010(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ServerReserveFinishAction_Params
    {
    public:
        bool                                                         InCancelReserved;                                        //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         InCanceledFromJump;                                      //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ReserveFinishAction_Params
    {
    public:
        bool                                                         bCanceled;                                               //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bWithJump;                                               //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ClearMovement_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ReadyPulling_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_LocalPullingStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_Auth_SpawnFX_IfAirDest_Params
    {
    public:
        BasicTypes::FName                                            InFXName;                                                //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_NetmulticastAirDestFX_Params
    {
    public:
        BasicTypes::FName                                            InName;                                                  //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0007[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      InTransform;                                             //  0x0010(0x0030)  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USkill_Wire_C_ExecuteUbergraph_Skill_Wire_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0008[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
