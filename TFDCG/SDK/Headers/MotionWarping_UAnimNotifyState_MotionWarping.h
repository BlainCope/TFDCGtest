#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UAnimNotifyState.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MotionWarping { class URootMotionModifier; };
namespace CG::MotionWarping { class UMotionWarpingComponent; };
namespace CG::Engine { class UAnimSequenceBase; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MotionWarping
{
    /**
     * Class /Script/MotionWarping.AnimNotifyState_MotionWarping
     * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
     */
    class UAnimNotifyState_MotionWarping : public Engine::UAnimNotifyState
    {
    public:
        MotionWarping::URootMotionModifier*                          RootMotionModifier;                                      //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        void OnWarpUpdate(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, MotionWarping::URootMotionModifier* Modifier);
        void OnWarpEnd(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, MotionWarping::URootMotionModifier* Modifier);
        void OnWarpBegin(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, MotionWarping::URootMotionModifier* Modifier);
        void OnRootMotionModifierUpdate(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, MotionWarping::URootMotionModifier* Modifier);
        void OnRootMotionModifierDeactivate(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, MotionWarping::URootMotionModifier* Modifier);
        void OnRootMotionModifierActivate(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, MotionWarping::URootMotionModifier* Modifier);
        MotionWarping::URootMotionModifier* AddRootMotionModifier(MotionWarping::UMotionWarpingComponent* MotionWarpingComp, Engine::UAnimSequenceBase* Animation, float StartTime, float EndTime);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MotionWarping.AnimNotifyState_MotionWarping");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
