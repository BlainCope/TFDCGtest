#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FTransform.h"
#include "ControlRig_FRigUnit_AimItem_Target.h"
#include "ControlRig_FRigUnit_AimBone_DebugSettings.h"
#include "ControlRig_FCachedRigElement.h"
#include "ControlRig_FRigUnit_HighlevelBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * ScriptStruct /Script/ControlRig.RigUnit_AimBoneMath
     * Size -> 0x0158 (FullSize[0x0160] - InheritedSize[0x0008])
     */
    struct FRigUnit_AimBoneMath : public ControlRig::FRigUnit_HighlevelBase
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      InputTransform;                                          //  Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FRigUnit_AimItem_Target                          Primary;                                                 //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        ControlRig::FRigUnit_AimItem_Target                          Secondary;                                               //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        float                                                        Weight;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      Result;                                                  //  BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FRigUnit_AimBone_DebugSettings                   DebugSettings;                                           //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        ControlRig::FCachedRigElement                                PrimaryCachedSpace;                                      //  NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FCachedRigElement                                SecondaryCachedSpace;                                    //  NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsInitialized;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0xF];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
