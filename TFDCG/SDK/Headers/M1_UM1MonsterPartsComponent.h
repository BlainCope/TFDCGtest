#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_FM1ScaledInteger.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1ActorVFXKey.h"
#include "Engine_FDataTableRowHandle.h"
#include "BasicTypes_FName.h"
#include "M1_ENUMS.h"
#include "M1_FM1PartsEffect.h"
#include "M1_UM1CharacterPartsComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Character; };
namespace CG::M1 { class UM1CharacterVFXComponent; };
namespace CG::TemplateSequence { class UCameraAnimationSequence; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::M1 { class AM1Player; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MonsterPartsComponent
     * Size -> 0x0300 (FullSize[0x1140] - InheritedSize[0x0E40])
     */
    class UM1MonsterPartsComponent : public M1::UM1CharacterPartsComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x30];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Character*                                            Character_Owner;                                         //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1CharacterVFXComponent*                                VFX_Component;                                           //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bDestroyedParts;                                         //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bBerserkMode;                                            //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x5];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::FM1ScaledInteger                                     HP;                                                      //  Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bHide;                                                   //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bBeingDeboned;                                           //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      HangOnCount;                                             //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::ECollisionEnabled                                    SavedCollisionEnableType;                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0xF];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::FM1ActorVFXKey>                       AppliedVFXKeys;                                          //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        Engine::FDataTableRowHandle                                  DataRow;                                                 //  NoDestructor, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            DataRowName;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1HangOnType                                            HangOnType;                                              //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            CenterSocketName;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            RootSocketName;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            LeftFootSocketName;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            RightFootSocketName;                                     //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            LeftHandSocketName;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            RightHandSocketName;                                     //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        TemplateSequence::UCameraAnimationSequence*                  PartsStruggleSequence;                                   //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UMaterialInterface*>              EffectMaterials;                                         //  Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
        M1::FM1PartsEffect                                           PartsDestructionFX;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate
        M1::FM1PartsEffect                                           PartsDeboneAttackFX;                                     //  Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate
        M1::FM1PartsEffect                                           PartsDeboneSuccessFX;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0xD0];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetDebonePlayer(M1::AM1Player* DebonePlayer);
        void SendDeboneEndEvent();
        void RecreateParts();
        void OnRepHide();
        void OnRepDestroyedParts();
        void OnRepBerserkMode();
        void NetmulticastSetHit();
        void NetMulticastDestruction();
        void IncrementHangOnCount();
        bool HasRemainLastDeboneAttack();
        BasicTypes::FName GetRelatedHitPointBoneName();
        float GetPartsHPRate();
        int32_t GetHangOnCount();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MonsterPartsComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
