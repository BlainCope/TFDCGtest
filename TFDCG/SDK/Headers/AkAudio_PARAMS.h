#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "BasicTypes_UScriptDelegate.h"
#include "BasicTypes_TArray.h"
#include "AkAudio_FAkExternalSourceInfo.h"
#include "Engine_FLatentActionInfo.h"
#include "AkAudio_ENUMS.h"
#include "SlateCore_ENUMS.h"
#include "CoreUObject_FGuid.h"
#include "AkAudio_FAkPropertyToControl.h"
#include "BasicTypes_FText.h"
#include "AkAudio_FAkBoolPropertyToControl.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FTransform.h"
#include "AkAudio_FAkChannelMask.h"
#include "AkAudio_FAkOutputSettings.h"
#include "Engine_ENUMS.h"
#include "AkAudio_FAkMidiProgramChange.h"
#include "AkAudio_FAkMidiPitchBend.h"
#include "AkAudio_FAkMidiNoteOnOff.h"
#include "AkAudio_FAkMidiNoteAftertouch.h"
#include "AkAudio_FAkMidiGeneric.h"
#include "AkAudio_FAkMidiChannelAftertouch.h"
#include "AkAudio_FAkMidiCc.h"
#include "AkAudio_FAkWaapiSubscriptionId.h"
#include "AkAudio_FAKWaapiJsonObject.h"
#include "AkAudio_FAkWaapiUri.h"
#include "AkAudio_FAkWaapiFieldNames.h"
#include "AkAudio_FAkWwiseObjectDetails.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AkAudio { class UAkRtpc; };
namespace CG::CoreUObject { class UObject; };
namespace CG::AkAudio { class UAkAudioEvent; };
namespace CG::AkAudio { class UAkAcousticTextureSetComponent; };
namespace CG::Engine { class AActor; };
namespace CG::AkAudio { class UAkAuxBus; };
namespace CG::AkAudio { class UAkAudioBank; };
namespace CG::AkAudio { class UAkComponent; };
namespace CG::AkAudio { class UAkSwitchValue; };
namespace CG::AkAudio { class UAkStateValue; };
namespace CG::AkAudio { class UAkPortalComponent; };
namespace CG::AkAudio { class UAkTrigger; };
namespace CG::AkAudio { class UAkMediaAsset; };
namespace CG::Engine { class USceneComponent; };
namespace CG::AkAudio { class UAkAudioType; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::AkAudio { class UPostEventAsync; };
namespace CG::AkAudio { class UPostEventAtLocationAsync; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AkAudio
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class AAkAmbientSound_StopAmbientSound_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AAkAmbientSound_StartAmbientSound_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkAndroidInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkAudioEvent_GetMinimumDuration_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkAudioEvent_GetMaximumDuration_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkAudioEvent_GetMaxAttenuationRadius_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkAudioEvent_GetIsInfinite_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_Stop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_SetRTPCValue_Params
    {
    public:
        AkAudio::UAkRtpc*                                            RTPCValue;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Value;                                                   //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      InterpolationTimeMs;                                     //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          RTPC;                                                    //  0x0010(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_PostAssociatedAkEventAsync_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      CallbackMask;                                            //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x000C(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0030(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
        int32_t                                                      PlayingID;                                               //  0x0048(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_PostAssociatedAkEvent_Params
    {
    public:
        int32_t                                                      CallbackMask;                                            //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x0004(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_PostAkEventAsync_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayingID;                                               //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      CallbackMask;                                            //  0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0038(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_PostAkEvent_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      CallbackMask;                                            //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x000C(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x4];                                   //  0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          in_EventName;                                            //  0x0030(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameObject_GetRTPCValue_Params
    {
    public:
        AkAudio::UAkRtpc*                                            RTPCValue;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::ERTPCValueType                                      InputValueType;                                          //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Value;                                                   //  0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::ERTPCValueType                                      OutputValueType;                                         //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0004[0x7];                                   //  0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          RTPC;                                                    //  0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayingID;                                               //  0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkAudioInputComponent_PostAssociatedAudioInputEvent_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_SetIsChecked_Params
    {
    public:
        bool                                                         InIsChecked;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_SetCheckedState_Params
    {
    public:
        SlateCore::ECheckBoxState                                    InCheckedState;                                          //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_SetAkItemId_Params
    {
    public:
        CoreUObject::FGuid                                           ItemId;                                                  //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_SetAkBoolProperty_Params
    {
    public:
        BasicTypes::FString                                          ItemProperty;                                            //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_IsPressed_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_IsChecked_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_GetCheckedState_Params
    {
    public:
        SlateCore::ECheckBoxState                                    ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_GetAkProperty_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkCheckBox_GetAkItemId_Params
    {
    public:
        CoreUObject::FGuid                                           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemBoolProperties_SetSearchText_Params
    {
    public:
        BasicTypes::FString                                          newText;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemBoolProperties_GetSelectedProperty_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemBoolProperties_GetSearchText_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemPropertiesConv_Conv_FAkPropertyToControlToText_Params
    {
    public:
        AkAudio::FAkPropertyToControl                                INAkPropertyToControl;                                   //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FText                                            ReturnValue;                                             //  0x0010(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemPropertiesConv_Conv_FAkPropertyToControlToString_Params
    {
    public:
        AkAudio::FAkPropertyToControl                                INAkPropertyToControl;                                   //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemProperties_SetSearchText_Params
    {
    public:
        BasicTypes::FString                                          newText;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemProperties_GetSelectedProperty_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemProperties_GetSearchText_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkLateReverbComponent_AssociateAkTextureSetComponent_Params
    {
    public:
        AkAudio::UAkAcousticTextureSetComponent*                     textureSetComponent;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkLinuxInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkHololensInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemBoolPropertiesConv_Conv_FAkBoolPropertyToControlToText_Params
    {
    public:
        AkAudio::FAkBoolPropertyToControl                            INAkBoolPropertyToControl;                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FText                                            ReturnValue;                                             //  0x0010(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkItemBoolPropertiesConv_Conv_FAkBoolPropertyToControlToString_Params
    {
    public:
        AkAudio::FAkBoolPropertyToControl                            INAkBoolPropertyToControl;                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_UseReverbVolumes_Params
    {
    public:
        bool                                                         inUseReverbVolumes;                                      //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_UseEarlyReflections_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkAuxBus*                                          AuxBus;                                                  //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Order;                                                   //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        BusSendGain;                                             //  0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        MaxPathLength;                                           //  0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         SpotReflectors;                                          //  0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          AuxBusName;                                              //  0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_UnloadBankByName_Params
    {
    public:
        BasicTypes::FString                                          BankName;                                                //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_UnloadBankAsync_Params
    {
    public:
        AkAudio::UAkAudioBank*                                       Bank;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  BankUnloadedCallback;                                    //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_UnloadBank_Params
    {
    public:
        AkAudio::UAkAudioBank*                                       Bank;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          BankName;                                                //  0x0008(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0018(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0030(0x0008)  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StopProfilerCapture_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StopOutputCapture_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StopAllAmbientSounds_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StopAll_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StopActor_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StartProfilerCapture_Params
    {
    public:
        BasicTypes::FString                                          Filename;                                                //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StartOutputCapture_Params
    {
    public:
        BasicTypes::FString                                          Filename;                                                //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_StartAllAmbientSounds_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SpawnAkComponentAtLocation_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        Orientation;                                             //  0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         AutoPost;                                                //  0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          EventName;                                               //  0x0030(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         AutoDestroy;                                             //  0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x7];                                   //  0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::UAkComponent*                                       ReturnValue;                                             //  0x0048(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetSwitch_Params
    {
    public:
        AkAudio::UAkSwitchValue*                                     SwitchValue;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SwitchGroup;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SwitchState;                                             //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetState_Params
    {
    public:
        AkAudio::UAkStateValue*                                      StateValue;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            StateGroup;                                              //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            State;                                                   //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetSpeakerAngles_Params
    {
    public:
        BasicTypes::TArray<float>                                    SpeakerAngles;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        float                                                        HeightAngle;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0004[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          DeviceShareset;                                          //  0x0018(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetRTPCValue_Params
    {
    public:
        AkAudio::UAkRtpc*                                            RTPCValue;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Value;                                                   //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      InterpolationTimeMs;                                     //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0010(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            RTPC;                                                    //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetReflectionsOrder_Params
    {
    public:
        int32_t                                                      Order;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         RefreshPaths;                                            //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetPortalToPortalObstruction_Params
    {
    public:
        AkAudio::UAkPortalComponent*                                 PortalComponent0;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkPortalComponent*                                 PortalComponent1;                                        //  0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ObstructionValue;                                        //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetPortalObstructionAndOcclusion_Params
    {
    public:
        AkAudio::UAkPortalComponent*                                 PortalComponent;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ObstructionValue;                                        //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        OcclusionValue;                                          //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetPanningRule_Params
    {
    public:
        AkAudio::EPanningRule                                        PanRule;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetOutputBusVolume_Params
    {
    public:
        float                                                        BusVolume;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0005[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetOcclusionScalingFactor_Params
    {
    public:
        float                                                        ScalingFactor;                                           //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetOcclusionRefreshInterval_Params
    {
    public:
        float                                                        RefreshInterval;                                         //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0006[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetMultiplePositions_Params
    {
    public:
        AkAudio::UAkComponent*                                       GameObjectAkComponent;                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<CoreUObject::FTransform>                  Positions;                                               //  0x0008(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
        AkAudio::EAkMultiPositionType                                MultiPositionType;                                       //  0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetMultipleChannelMaskEmitterPositions_Params
    {
    public:
        AkAudio::UAkComponent*                                       GameObjectAkComponent;                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AkAudio::FAkChannelMask>                  ChannelMasks;                                            //  0x0008(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
        BasicTypes::TArray<CoreUObject::FTransform>                  Positions;                                               //  0x0018(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
        AkAudio::EAkMultiPositionType                                MultiPositionType;                                       //  0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetMultipleChannelEmitterPositions_Params
    {
    public:
        AkAudio::UAkComponent*                                       GameObjectAkComponent;                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AkAudio::EAkChannelConfiguration>         ChannelMasks;                                            //  0x0008(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
        BasicTypes::TArray<CoreUObject::FTransform>                  Positions;                                               //  0x0018(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
        AkAudio::EAkMultiPositionType                                MultiPositionType;                                       //  0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetGameObjectToPortalObstruction_Params
    {
    public:
        AkAudio::UAkComponent*                                       GameObjectAkComponent;                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkPortalComponent*                                 PortalComponent;                                         //  0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ObstructionValue;                                        //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetCurrentAudioCultureAsync_Params
    {
    public:
        BasicTypes::FString                                          AudioCulture;                                            //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  Completed;                                               //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetCurrentAudioCulture_Params
    {
    public:
        BasicTypes::FString                                          AudioCulture;                                            //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0010(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0028(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_SetBusConfig_Params
    {
    public:
        BasicTypes::FString                                          BusName;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::EAkChannelConfiguration                             ChannelConfiguration;                                    //  0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_ResetRTPCValue_Params
    {
    public:
        AkAudio::UAkRtpc*                                            RTPCValue;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      InterpolationTimeMs;                                     //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0007[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0010(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            RTPC;                                                    //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_ReplaceMainOutput_Params
    {
    public:
        AkAudio::FAkOutputSettings                                   MainOutputSettings;                                      //  0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostTrigger_Params
    {
    public:
        AkAudio::UAkTrigger*                                         TriggerValue;                                            //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            Trigger;                                                 //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostEventByName_Params
    {
    public:
        BasicTypes::FString                                          EventName;                                               //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0010(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bStopWhenAttachedToDestroyed;                            //  0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostEventAttached_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            AttachPointName;                                         //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bStopWhenAttachedToDestroyed;                            //  0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0008[0x7];                                   //  0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          EventName;                                               //  0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostEventAtLocationByName_Params
    {
    public:
        BasicTypes::FString                                          EventName;                                               //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        Orientation;                                             //  0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0028(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostEventAtLocation_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        Orientation;                                             //  0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          EventName;                                               //  0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0030(0x0008)  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0038(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostEvent_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      CallbackMask;                                            //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x0014(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0009[0x4];                                   //  0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        bool                                                         bStopWhenAttachedToDestroyed;                            //  0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0010[0x7];                                   //  0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          EventName;                                               //  0x0040(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0050(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostAndWaitForEndOfEventAsync_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayingID;                                               //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bStopWhenAttachedToDestroyed;                            //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0011[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0028(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_PostAndWaitForEndOfEvent_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bStopWhenAttachedToDestroyed;                            //  0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0012[0x7];                                   //  0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          EventName;                                               //  0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0038(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0050(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_LoadInitBank_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_LoadBanks_Params
    {
    public:
        BasicTypes::TArray<AkAudio::UAkAudioBank*>                   SoundBanks;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         SynchronizeSoundBanks;                                   //  0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_LoadBankByName_Params
    {
    public:
        BasicTypes::FString                                          BankName;                                                //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_LoadBankAsyncByName_Params
    {
    public:
        BasicTypes::FString                                          BankName;                                                //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  BankLoadedCallback;                                      //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_LoadBankAsync_Params
    {
    public:
        AkAudio::UAkAudioBank*                                       Bank;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  BankLoadedCallback;                                      //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_LoadBank_Params
    {
    public:
        AkAudio::UAkAudioBank*                                       Bank;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          BankName;                                                //  0x0008(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0018(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0030(0x0008)  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_IsGame_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_IsEditor_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetSpeakerAngles_Params
    {
    public:
        BasicTypes::TArray<float>                                    SpeakerAngles;                                           //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
        float                                                        HeightAngle;                                             //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0013[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          DeviceShareset;                                          //  0x0018(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetRTPCValue_Params
    {
    public:
        AkAudio::UAkRtpc*                                            RTPCValue;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayingID;                                               //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::ERTPCValueType                                      InputValueType;                                          //  0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0014[0x3];                                   //  0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Value;                                                   //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::ERTPCValueType                                      OutputValueType;                                         //  0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0015[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0018(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            RTPC;                                                    //  0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetOcclusionScalingFactor_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetCurrentAudioCulture_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetAvailableAudioCultures_Params
    {
    public:
        BasicTypes::TArray<BasicTypes::FString>                      ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetAkMediaAssetUserData_Params
    {
    public:
        AkAudio::UAkMediaAsset*                                      Instance;                                                //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        Type;                                                    //  0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetAkComponent_Params
    {
    public:
        Engine::USceneComponent*                                     AttachToComponent;                                       //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ComponentCreated;                                        //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0016[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FName                                            AttachPointName;                                         //  0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::EAttachLocation                                      LocationType;                                            //  0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0017[0x7];                                   //  0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::UAkComponent*                                       ReturnValue;                                             //  0x0028(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_GetAkAudioTypeUserData_Params
    {
    public:
        AkAudio::UAkAudioType*                                       Instance;                                                //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        Type;                                                    //  0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_ExecuteActionOnPlayingID_Params
    {
    public:
        AkAudio::EAkActionOnEventType                                ActionType;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0018[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      PlayingID;                                               //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      TransitionDuration;                                      //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::EAkCurveInterpolation                               FadeCurve;                                               //  0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_ExecuteActionOnEvent_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::EAkActionOnEventType                                ActionType;                                              //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0019[0x7];                                   //  0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0010(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      TransitionDuration;                                      //  0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::EAkCurveInterpolation                               FadeCurve;                                               //  0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0020[0x3];                                   //  0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      PlayingID;                                               //  0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_ClearBanks_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_CancelEventCallback_Params
    {
    public:
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGameplayStatics_AddOutputCaptureMarker_Params
    {
    public:
        BasicTypes::FString                                          MarkerText;                                              //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetType_Params
    {
    public:
        AkAudio::EAkMidiEventType                                    ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetProgramChange_Params
    {
    public:
        AkAudio::FAkMidiProgramChange                                AsProgramChange;                                         //  0x0000(0x0003)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0003(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetPitchBend_Params
    {
    public:
        AkAudio::FAkMidiPitchBend                                    AsPitchBend;                                             //  0x0000(0x0008)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetNoteOn_Params
    {
    public:
        AkAudio::FAkMidiNoteOnOff                                    AsNoteOn;                                                //  0x0000(0x0004)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetNoteOff_Params
    {
    public:
        AkAudio::FAkMidiNoteOnOff                                    AsNoteOff;                                               //  0x0000(0x0004)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetNoteAftertouch_Params
    {
    public:
        AkAudio::FAkMidiNoteAftertouch                               AsNoteAftertouch;                                        //  0x0000(0x0004)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetGeneric_Params
    {
    public:
        AkAudio::FAkMidiGeneric                                      AsGeneric;                                               //  0x0000(0x0004)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetChannelAftertouch_Params
    {
    public:
        AkAudio::FAkMidiChannelAftertouch                            AsChannelAftertouch;                                     //  0x0000(0x0003)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0003(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetChannel_Params
    {
    public:
        uint8_t                                                      ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMIDIEventCallbackInfo_GetCc_Params
    {
    public:
        AkAudio::FAkMidiCc                                           AsCc;                                                    //  0x0000(0x0004)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGeometryComponent_UpdateGeometry_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGeometryComponent_SendGeometry_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGeometryComponent_RemoveGeometry_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkGeometryComponent_ConvertMesh_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_Unsubscribe_Params
    {
    public:
        AkAudio::FAkWaapiSubscriptionId                              SubscriptionId;                                          //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         UnsubscriptionDone;                                      //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_SubscribeToWaapi_Params
    {
    public:
        AkAudio::FAkWaapiUri                                         WaapiUri;                                                //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  WaapiOptions;                                            //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  callback;                                                //  0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::FAkWaapiSubscriptionId                              SubscriptionId;                                          //  0x0030(0x0008)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         SubscriptionDone;                                        //  0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0040(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_SetSubscriptionID_Params
    {
    public:
        AkAudio::FAkWaapiSubscriptionId                              Subscription;                                            //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        int32_t                                                      ID;                                                      //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_RegisterWaapiProjectLoadedCallback_Params
    {
    public:
        BasicTypes::UScriptDelegate                                  callback;                                                //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_RegisterWaapiConnectionLostCallback_Params
    {
    public:
        BasicTypes::UScriptDelegate                                  callback;                                                //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_GetSubscriptionID_Params
    {
    public:
        AkAudio::FAkWaapiSubscriptionId                              Subscription;                                            //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_Conv_FAkWaapiSubscriptionIdToText_Params
    {
    public:
        AkAudio::FAkWaapiSubscriptionId                              INAkWaapiSubscriptionId;                                 //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        BasicTypes::FText                                            ReturnValue;                                             //  0x0008(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_Conv_FAkWaapiSubscriptionIdToString_Params
    {
    public:
        AkAudio::FAkWaapiSubscriptionId                              INAkWaapiSubscriptionId;                                 //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiCalls_CallWaapi_Params
    {
    public:
        AkAudio::FAkWaapiUri                                         WaapiUri;                                                //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  WaapiArgs;                                               //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  WaapiOptions;                                            //  0x0020(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0030(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USAkWaapiFieldNamesConv_Conv_FAkWaapiFieldNamesToText_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  INAkWaapiFieldNames;                                     //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FText                                            ReturnValue;                                             //  0x0010(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USAkWaapiFieldNamesConv_Conv_FAkWaapiFieldNamesToString_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  INAkWaapiFieldNames;                                     //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_SetStringField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          FieldValue;                                              //  0x0010(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0020(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0030(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_SetObjectField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  FieldValue;                                              //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0020(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0030(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_SetNumberField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        float                                                        FieldValue;                                              //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0018(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0028(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_SetBoolField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         FieldValue;                                              //  0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0018(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0028(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_SetArrayStringFields_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<BasicTypes::FString>                      FieldStringValues;                                       //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0020(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0030(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_SetArrayObjectFields_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AkAudio::FAKWaapiJsonObject>              FieldObjectValues;                                       //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0020(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0030(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_GetStringField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_GetObjectField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  ReturnValue;                                             //  0x0020(0x0010)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_GetNumberField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_GetIntegerField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_GetBoolField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_GetArrayField_Params
    {
    public:
        AkAudio::FAkWaapiFieldNames                                  FieldName;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AkAudio::FAKWaapiJsonObject                                  Target;                                                  //  0x0010(0x0010)  (Parm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AkAudio::FAKWaapiJsonObject>              ReturnValue;                                             //  0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_Conv_FAKWaapiJsonObjectToText_Params
    {
    public:
        AkAudio::FAKWaapiJsonObject                                  INAKWaapiJsonObject;                                     //  0x0000(0x0010)  (Parm, NativeAccessSpecifierPublic)
        BasicTypes::FText                                            ReturnValue;                                             //  0x0010(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiJsonManager_Conv_FAKWaapiJsonObjectToString_Params
    {
    public:
        AkAudio::FAKWaapiJsonObject                                  INAKWaapiJsonObject;                                     //  0x0000(0x0010)  (Parm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiUriConv_Conv_FAkWaapiUriToText_Params
    {
    public:
        AkAudio::FAkWaapiUri                                         INAkWaapiUri;                                            //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FText                                            ReturnValue;                                             //  0x0010(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWaapiUriConv_Conv_FAkWaapiUriToString_Params
    {
    public:
        AkAudio::FAkWaapiUri                                         INAkWaapiUri;                                            //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWindowsInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkMacInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_UseReverbVolumes_Params
    {
    public:
        bool                                                         inUseReverbVolumes;                                      //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_UseEarlyReflections_Params
    {
    public:
        AkAudio::UAkAuxBus*                                          AuxBus;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Order;                                                   //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        BusSendGain;                                             //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        MaxPathLength;                                           //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         SpotReflectors;                                          //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          AuxBusName;                                              //  0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetSwitch_Params
    {
    public:
        AkAudio::UAkSwitchValue*                                     SwitchValue;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          SwitchGroup;                                             //  0x0008(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          SwitchState;                                             //  0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetStopWhenOwnerDestroyed_Params
    {
    public:
        bool                                                         bStopWhenOwnerDestroyed;                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetOutputBusVolume_Params
    {
    public:
        float                                                        BusVolume;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetListeners_Params
    {
    public:
        BasicTypes::TArray<AkAudio::UAkComponent*>                   Listeners;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetGameObjectRadius_Params
    {
    public:
        float                                                        in_outerRadius;                                          //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        in_innerRadius;                                          //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetEarlyReflectionsVolume_Params
    {
    public:
        float                                                        SendVolume;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetEarlyReflectionsAuxBus_Params
    {
    public:
        BasicTypes::FString                                          AuxBusName;                                              //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_SetAttenuationScalingFactor_Params
    {
    public:
        float                                                        Value;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_PostTrigger_Params
    {
    public:
        AkAudio::UAkTrigger*                                         TriggerValue;                                            //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          Trigger;                                                 //  0x0008(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_PostAssociatedAkEventAndWaitForEndAsync_Params
    {
    public:
        int32_t                                                      PlayingID;                                               //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0018(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_PostAssociatedAkEventAndWaitForEnd_Params
    {
    public:
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0010(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_PostAkEventByName_Params
    {
    public:
        BasicTypes::FString                                          in_EventName;                                            //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_PostAkEventAndWaitForEndAsync_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayingID;                                               //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0020(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_PostAkEventAndWaitForEnd_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          in_EventName;                                            //  0x0008(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0028(0x0018)  (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkComponent_GetAttenuationRadius_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkPS4InitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkRoomComponent_SetGeometryComponent_Params
    {
    public:
        AkAudio::UAkAcousticTextureSetComponent*                     textureSetComponent;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkRoomComponent_GetPrimitiveParent_Params
    {
    public:
        Engine::UPrimitiveComponent*                                 ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWwiseTree_SetSearchText_Params
    {
    public:
        BasicTypes::FString                                          newText;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWwiseTree_GetSelectedItem_Params
    {
    public:
        AkAudio::FAkWwiseObjectDetails                               ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWwiseTree_GetSearchText_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkXboxOneGDKInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UPostEventAsync_PostEventAsync_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              Actor;                                                   //  0x0010(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      CallbackMask;                                            //  0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  PostEventCallback;                                       //  0x001C(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AkAudio::FAkExternalSourceInfo>           ExternalSources;                                         //  0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
        bool                                                         bStopWhenAttachedToDestroyed;                            //  0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::UPostEventAsync*                                    ReturnValue;                                             //  0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UPostEventAsync_PollPostEventFuture_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UPostEventAtLocationAsync_PostEventAtLocationAsync_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        Orientation;                                             //  0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        AkAudio::UPostEventAtLocationAsync*                          ReturnValue;                                             //  0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UPostEventAtLocationAsync_PollPostEventFuture_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkWinGDKInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetValue_Params
    {
    public:
        float                                                        InValue;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetStepSize_Params
    {
    public:
        float                                                        InValue;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetSliderHandleColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetSliderBarColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    InValue;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetLocked_Params
    {
    public:
        bool                                                         InValue;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetIndentHandle_Params
    {
    public:
        bool                                                         InValue;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetAkSliderItemProperty_Params
    {
    public:
        BasicTypes::FString                                          ItemProperty;                                            //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_SetAkSliderItemId_Params
    {
    public:
        CoreUObject::FGuid                                           ItemId;                                                  //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_GetValue_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_GetAkSliderItemProperty_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSlider_GetAkSliderItemId_Params
    {
    public:
        CoreUObject::FGuid                                           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSurfaceReflectorSetComponent_UpdateSurfaceReflectorSet_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSurfaceReflectorSetComponent_SendSurfaceReflectorSet_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSurfaceReflectorSetComponent_RemoveSurfaceReflectorSet_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkSwitchInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkXboxOneInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkXSXInitializationSettings_MigrateMultiCoreRendering_Params
    {
    public:
        bool                                                         NewValue;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkPortalComponent_PortalPlacementValid_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkPortalComponent_OpenPortal_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkPortalComponent_GetPrimitiveParent_Params
    {
    public:
        Engine::UPrimitiveComponent*                                 ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkPortalComponent_GetCurrentState_Params
    {
    public:
        AkAudio::EAkAcousticPortalState                              ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAkPortalComponent_ClosePortal_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AAkAcousticPortal_OpenPortal_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AAkAcousticPortal_GetCurrentState_Params
    {
    public:
        AkAudio::EAkAcousticPortalState                              ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AAkAcousticPortal_ClosePortal_Params
    {
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
