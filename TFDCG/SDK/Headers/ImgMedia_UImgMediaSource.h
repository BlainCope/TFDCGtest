#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FFrameRate.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FDirectoryPath.h"
#include "MediaAssets_UBaseMediaSource.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ImgMedia
{
    /**
     * Class /Script/ImgMedia.ImgMediaSource
     * Size -> 0x0048 (FullSize[0x00D0] - InheritedSize[0x0088])
     */
    class UImgMediaSource : public MediaAssets::UBaseMediaSource
    {
    public:
        bool                                                         IsPathRelativeToProjectRoot;                             //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FFrameRate                                      FrameRateOverride;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          ProxyOverride;                                           //  Edit, BlueprintVisible, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bFillGapsInSequence;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FDirectoryPath                                  SequencePath;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetTokenizedSequencePath(const BasicTypes::FString& Path);
        void SetSequencePath(const BasicTypes::FString& Path);
        void SetMipLevelDistance(float Distance);
        void RemoveTargetObject(Engine::AActor* InActor);
        void RemoveGlobalCamera(Engine::AActor* InActor);
        BasicTypes::FString GetSequencePath();
        void GetProxies(BasicTypes::TArray<BasicTypes::FString>* OutProxies);
        void AddTargetObject(Engine::AActor* InActor);
        void AddGlobalCamera(Engine::AActor* InActor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ImgMedia.ImgMediaSource");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
