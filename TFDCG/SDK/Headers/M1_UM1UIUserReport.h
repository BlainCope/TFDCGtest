#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UDataTable.h"
#include "BasicTypes_FText.h"
#include "M1_ENUMS.h"
#include "M1_UM1UIPopup.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1RichTextBlock; };
namespace CG::UMG { class UUniformGridPanel; };
namespace CG::UMG { class UMultiLineEditableText; };
namespace CG::M1 { class UM1UIUserReportTypeEntry; };
namespace CG::M1 { class UM1UIWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIUserReport
     * Size -> 0x0090 (FullSize[0x0830] - InheritedSize[0x07A0])
     */
    class UM1UIUserReport : public M1::UM1UIPopup
    {
    public:
        M1::UM1RichTextBlock*                                        Text_Info;                                               //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UUniformGridPanel*                                      Panel_ReportTypes;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UMultiLineEditableText*                                 Text_ReportComment;                                      //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FString                                          TargetUserName;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TWeakObjectPtr<M1::UM1UIUserReportTypeEntry>     SelectedReportTypeEntry;                                 //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TSoftObjectPtr<Engine::UDataTable>               ReportTablePtr;                                          //  ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        M1::UM1UIUserReportTypeEntry*                                ReportTypeWidgetClass;                                   //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      MaxColumnCountInReportTypes;                             //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FText                                            ReportComment;                                           //  Transient, Protected, NativeAccessSpecifierProtected
        M1::EM1PlatformSimple                                        CurrentPlatform;                                         //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnToggleValueChanged_ReportTypesEntry(M1::UM1UIWidget* InWidget, bool bValue);
        void OnTextChanged_ReportComment(const BasicTypes::FText& InText);
        void OnButtonHoldComplete_Confirm(M1::UM1UIWidget* InWidget);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIUserReport");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
