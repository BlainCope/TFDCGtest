#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1UINpcService.h"
#include "M1Data_ENUMS.h"
#include "M1_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UIPanelItemsRune; };
namespace CG::M1 { class UM1UIPanelEntries; };
namespace CG::M1 { class UM1UIRuneEnchantInform; };
namespace CG::M1 { class UM1UIContextButtons; };
namespace CG::M1 { class UM1TextBlock; };
namespace CG::M1 { class UM1UIButton; };
namespace CG::M1 { class UM1UITabControl; };
namespace CG::M1 { class UM1UIWidget; };
namespace CG::M1 { class UM1UIDataItemInfo_Rune; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIRuneEnchantMain
     * Size -> 0x0050 (FullSize[0x0760] - InheritedSize[0x0710])
     */
    class UM1UIRuneEnchantMain : public M1::UM1UINpcService
    {
    public:
        M1::UM1UIPanelItemsRune*                                     UI_PanelItemRunes;                                       //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIPanelEntries*                                       UI_ActiveRunes;                                          //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneEnchantInform*                                  UI_RuneEnchantInform;                                    //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIContextButtons*                                     UI_ContextButtons;                                       //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            TB_Filter;                                               //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIButton*                                             Button_MetaGuide;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UITabControl*                                         UI_CategoryTabControl;                                   //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIWidget*                                             CursorOnRuneSlot;                                        //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIDataItemInfo_Rune*                                  SelectedRune;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnRuneTooltipWidgetCreated(M1::UM1UIWidget* InTooltipWidget);
        void OnGuideButtonEvent(M1::UM1UIWidget* InWidget);
        void OnEventRuneEnchantCompleted(M1Data::EM1RuneReason InRuneReason, int64_t InRuneUid);
        void OnEventCursorLeft(M1::UM1UIWidget* InWidget);
        void OnEventCursorEntered(M1::UM1UIWidget* InWidget);
        void OnEventCursorClicked(M1::UM1UIWidget* InWidget);
        void OnCategoryTabSelected(int32_t InTabIndex, bool bIsSelectedTabChanged);
        void OnBackButtonEvent(M1::UM1UIWidget* InWidget);
        void BP_SwitchRuneItemPanelTo(M1::EM1RuneEnchantTabCategory InViewType);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIRuneEnchantMain");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
