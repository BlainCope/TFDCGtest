#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "M1_UM1UICharacterInfoBase.h"
#include "BasicTypes_FString.h"
#include "M1Data_FM1ScaledInteger.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UIMonsterInfo_Marker; };
namespace CG::UMG { class UPanelWidget; };
namespace CG::UMG { class UOverlay; };
namespace CG::M1 { class UM1UIMonsterTimer; };
namespace CG::Engine { class UTexture2D; };
namespace CG::M1 { class AM1Monster; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIMonsterInfo
     * Size -> 0x0100 (FullSize[0x08F0] - InheritedSize[0x07F0])
     */
    class UM1UIMonsterInfo : public M1::UM1UICharacterInfoBase
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1UIMonsterInfo_Marker*                                 UI_MonsterMarker;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UPanelWidget*                                           Panel_Marker;                                            //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UPanelWidget*                                           Panel_Timer;                                             //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UOverlay*                                               Lock_Icon;                                               //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIMonsterTimer*                                       MonsterTimerWidgetClass;                                 //  Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TMap<M1Data::EM1ElementalDamageChannel, Engine::UTexture2D*> ElementalIcons;                                          //  Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::TMap<M1Data::EM1DamageAdvantageType, Engine::UTexture2D*> WeakAdvantageIcons;                                      //  Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::TWeakObjectPtr<M1::AM1Monster>                   MonsterOwner;                                            //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIMonsterTimer*                                       CachedMonsterTimer;                                      //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        FadeInSpeed;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        FocusOpacity;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void UpdateWeakElementalIcons();
        void OnFinishedAnim_LastTime();
        void OnDeathOrDespawnedOrDestroyed(Engine::AActor* InActor);
        void OnChangedMissionDerivMonsterName(const BasicTypes::FString& InName);
        void OnChangedMissionDerivMonsterLifeTime(float InLifeTime);
        bool IsFocused();
        bool GetPhasedHP(const M1Data::FM1ScaledInteger& CurrentHp, float* OutRatio);
        void BP_UpdateWeakElementalIcons(BasicTypes::TArray<Engine::UTexture2D*> WeakElementalIcons);
        void BP_UpdateWeakAdvantageIcon(Engine::UTexture2D* WeakAdvantageIcon);
        void BP_SetSpawnedByMission(bool InByMission);
        void BP_SetFocusUIVisibility(bool bVisible);
        void BP_NewMonsterTimerCreated();
        void BP_ChangedMonsterLifeTime(float InLifeTime);
        void BP_ChangedEliteSkills(const BasicTypes::FString& SkillNames, BasicTypes::TArray<Engine::UTexture2D*> InIcons);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIMonsterInfo");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
