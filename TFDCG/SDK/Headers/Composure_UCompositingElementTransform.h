#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Composure_UCompositingElementPass.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UTexture; };
namespace CG::Composure { class UComposurePostProcessingPassProxy; };
namespace CG::Engine { class ACameraActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Composure
{
    /**
     * Class /Script/Composure.CompositingElementTransform
     * Size -> 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
     */
    class UCompositingElementTransform : public Composure::UCompositingElementPass
    {
    public:
        bool                                                         bIntermediate;                                           //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  MISSED OFFSET (PADDING)

    public:
        Engine::UTexture* FindNamedPrePassResult(const BasicTypes::FName& PassLookupName);
        Engine::UTexture* ApplyTransform(Engine::UTexture* Input, Composure::UComposurePostProcessingPassProxy* PostProcessProxy, Engine::ACameraActor* TargetCamera);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Composure.CompositingElementTransform");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
