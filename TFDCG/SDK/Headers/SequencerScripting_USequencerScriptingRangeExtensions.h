#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "SequencerScripting_FSequencerScriptingRange.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SequencerScripting
{
    /**
     * Class /Script/SequencerScripting.SequencerScriptingRangeExtensions
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class USequencerScriptingRangeExtensions : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_SetStartSeconds(SequencerScripting::FSequencerScriptingRange* Range, float Start);
        void STATIC_SetStartFrame(SequencerScripting::FSequencerScriptingRange* Range, int32_t Start);
        void STATIC_SetEndSeconds(SequencerScripting::FSequencerScriptingRange* Range, float End);
        void STATIC_SetEndFrame(SequencerScripting::FSequencerScriptingRange* Range, int32_t End);
        void STATIC_RemoveStart(SequencerScripting::FSequencerScriptingRange* Range);
        void STATIC_RemoveEnd(SequencerScripting::FSequencerScriptingRange* Range);
        bool STATIC_HasStart(const SequencerScripting::FSequencerScriptingRange& Range);
        bool STATIC_HasEnd(const SequencerScripting::FSequencerScriptingRange& Range);
        float STATIC_GetStartSeconds(const SequencerScripting::FSequencerScriptingRange& Range);
        int32_t STATIC_GetStartFrame(const SequencerScripting::FSequencerScriptingRange& Range);
        float STATIC_GetEndSeconds(const SequencerScripting::FSequencerScriptingRange& Range);
        int32_t STATIC_GetEndFrame(const SequencerScripting::FSequencerScriptingRange& Range);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SequencerScripting.SequencerScriptingRangeExtensions");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
