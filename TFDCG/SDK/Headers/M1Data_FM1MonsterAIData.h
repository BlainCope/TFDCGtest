#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "CoreUObject_FSoftObjectPath.h"
#include "M1Data_FM1MonsterAISubBehaviorTree.h"
#include "M1Data_ENUMS.h"
#include "M1Data_FM1MonsterAIBattleState.h"
#include "M1Data_FM1MonsterAIMission.h"
#include "M1Data_FM1MonsterAIOverride.h"
#include "Engine_FTableRowBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Data
{
    /**
     * ScriptStruct /Script/M1Data.M1MonsterAIData
     * Size -> 0x01B0 (FullSize[0x01B8] - InheritedSize[0x0008])
     */
    struct FM1MonsterAIData : public Engine::FTableRowBase
    {
    public:
        BasicTypes::FString                                          StringId;                                                //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FSoftObjectPath                                 BTPath;                                                  //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::FM1MonsterAISubBehaviorTree                          SubBT;                                                   //  Edit, NativeAccessSpecifierPublic
        M1Data::EM1MonsterAIPattern                                  MonsterPattern;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         TargetSearchEnable;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        SightRadius;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1AITargetingType                                   TargetingType;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        AfterAttackDelay;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::FM1MonsterAIBattleState                              NonBattle;                                               //  Edit, NativeAccessSpecifierPublic
        M1Data::FM1MonsterAIBattleState                              Battle;                                                  //  Edit, NativeAccessSpecifierPublic
        M1Data::FM1MonsterAIBattleState                              BattleEnd;                                               //  Edit, NativeAccessSpecifierPublic
        M1Data::FM1MonsterAIMission                                  Mission;                                                 //  Edit, NativeAccessSpecifierPublic
        M1Data::FM1MonsterAIOverride                                 Override;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
