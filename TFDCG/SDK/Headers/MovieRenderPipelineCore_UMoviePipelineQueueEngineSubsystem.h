#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_UEngineSubsystem.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieRenderPipelineCore { class UMoviePipelineExecutorBase; };
namespace CG::MovieRenderPipelineCore { class UMoviePipelineQueue; };
namespace CG::MovieRenderPipelineCore { class UMovieRenderDebugWidget; };
namespace CG::MovieRenderPipelineCore { class UMoviePipelineExecutorJob; };
namespace CG::LevelSequence { class ULevelSequence; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieRenderPipelineCore
{
    /**
     * Class /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem
     * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
     */
    class UMoviePipelineQueueEngineSubsystem : public Engine::UEngineSubsystem
    {
    public:
        BasicTypes::UMulticastInlineDelegate                         OnRenderFinished;                                        //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        MovieRenderPipelineCore::UMoviePipelineExecutorBase*         ActiveExecutor;                                          //  ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        MovieRenderPipelineCore::UMoviePipelineQueue*                CurrentQueue;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x40];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetConfiguration(MovieRenderPipelineCore::UMovieRenderDebugWidget* InProgressWidgetClass, bool bRenderPlayerViewport);
        void RenderQueueWithExecutorInstance(MovieRenderPipelineCore::UMoviePipelineExecutorBase* InExecutor);
        MovieRenderPipelineCore::UMoviePipelineExecutorBase* RenderQueueWithExecutor(MovieRenderPipelineCore::UMoviePipelineExecutorBase* InExecutorType);
        void RenderJob(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob);
        bool IsRendering();
        MovieRenderPipelineCore::UMoviePipelineQueue* GetQueue();
        MovieRenderPipelineCore::UMoviePipelineExecutorBase* GetActiveExecutor();
        MovieRenderPipelineCore::UMoviePipelineExecutorJob* AllocateJob(LevelSequence::ULevelSequence* InSequence);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
