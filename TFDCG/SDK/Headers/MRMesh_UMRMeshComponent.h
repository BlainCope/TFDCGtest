#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_UPrimitiveComponent.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::MRMesh { class UMRMeshBodyHolder; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MRMesh
{
    /**
     * Class /Script/MRMesh.MRMeshComponent
     * Size -> 0x0088 (FullSize[0x0500] - InheritedSize[0x0478])
     */
    class UMRMeshComponent : public Engine::UPrimitiveComponent
    {
    public:
        uint8_t                                                      UnknownData_0003[0x8];                                   //  Fix Super Size
        Engine::UMaterialInterface*                                  Material;                                                //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::UMaterialInterface*                                  WireframeMaterial;                                       //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bCreateMeshProxySections;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUpdateNavMeshOnMeshUpdate;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bNeverCreateCollisionMesh;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x44];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<MRMesh::UMRMeshBodyHolder*>               BodyHolders;                                             //  ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetWireframeMaterial(Engine::UMaterialInterface* InMaterial);
        void SetWireframeColor(const CoreUObject::FLinearColor& InColor);
        void SetUseWireframe(bool bUseWireframe);
        void SetEnableMeshOcclusion(bool bEnable);
        void RequestNavMeshUpdate();
        bool IsConnected();
        CoreUObject::FLinearColor GetWireframeColor();
        bool GetUseWireframe();
        bool GetEnableMeshOcclusion();
        void ForceNavMeshUpdate();
        void Clear();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MRMesh.MRMeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
