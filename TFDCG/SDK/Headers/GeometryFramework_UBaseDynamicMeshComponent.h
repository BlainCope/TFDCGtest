#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FLinearColor.h"
#include "GeometryFramework_ENUMS.h"
#include "CoreUObject_FColor.h"
#include "BasicTypes_TArray.h"
#include "Engine_UMeshComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::GeometryFramework { class UDynamicMesh; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GeometryFramework
{
    /**
     * Class /Script/GeometryFramework.BaseDynamicMeshComponent
     * Size -> 0x0070 (FullSize[0x0520] - InheritedSize[0x04B0])
     */
    class UBaseDynamicMeshComponent : public Engine::UMeshComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bExplicitShowWireframe;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FLinearColor                                    WireframeColor;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        GeometryFramework::EDynamicMeshComponentColorOverrideMode    ColorMode;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FColor                                          ConstantColor;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableFlatShading;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableViewModeOverrides;                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UMaterialInterface*                                  OverrideRenderMaterial;                                  //  ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UMaterialInterface*                                  SecondaryRenderMaterial;                                 //  ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0004[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bEnableRayTracing;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UMaterialInterface*>              BaseMaterials;                                           //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void SetViewModeOverridesEnabled(bool bEnabled);
        void SetShadowsEnabled(bool bEnabled);
        void SetSecondaryRenderMaterial(Engine::UMaterialInterface* Material);
        void SetSecondaryBuffersVisibility(bool bSetVisible);
        void SetOverrideRenderMaterial(Engine::UMaterialInterface* Material);
        void SetEnableWireframeRenderPass(bool bEnable);
        void SetEnableRaytracing(bool bSetEnabled);
        void SetEnableFlatShading(bool bEnable);
        void SetConstantOverrideColor(const CoreUObject::FColor& NewColor);
        void SetColorOverrideMode(GeometryFramework::EDynamicMeshComponentColorOverrideMode NewMode);
        bool HasOverrideRenderMaterial(int32_t K);
        bool GetViewModeOverridesEnabled();
        bool GetShadowsEnabled();
        Engine::UMaterialInterface* GetSecondaryRenderMaterial();
        bool GetSecondaryBuffersVisibility();
        Engine::UMaterialInterface* GetOverrideRenderMaterial(int32_t MaterialIndex);
        bool GetFlatShadingEnabled();
        bool GetEnableWireframeRenderPass();
        bool GetEnableRaytracing();
        GeometryFramework::UDynamicMesh* GetDynamicMesh();
        CoreUObject::FColor GetConstantOverrideColor();
        GeometryFramework::EDynamicMeshComponentColorOverrideMode GetColorOverrideMode();
        void ClearSecondaryRenderMaterial();
        void ClearOverrideRenderMaterial();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/GeometryFramework.BaseDynamicMeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
