#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "ConsoleVariablesEditorRuntime_FConsoleVariablesEditorAssetSaveData.h"
#include "CoreUObject_UObject.h"
#include "CoreUObject_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::ConsoleVariablesEditorRuntime { class UConsoleVariablesAsset; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ConsoleVariablesEditorRuntime
{
    /**
     * Class /Script/ConsoleVariablesEditorRuntime.ConsoleVariablesAsset
     * Size -> 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
     */
    class UConsoleVariablesAsset : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          VariableCollectionDescription;                           //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<ConsoleVariablesEditorRuntime::FConsoleVariablesEditorAssetSaveData> SavedCommands;                                           //  ZeroConstructor, NativeAccessSpecifierPrivate

    public:
        void SetVariableCollectionDescription(const BasicTypes::FString& InVariableCollectionDescription);
        void ReplaceSavedCommands(BasicTypes::TArray<ConsoleVariablesEditorRuntime::FConsoleVariablesEditorAssetSaveData> Replacement);
        bool RemoveConsoleVariable(const BasicTypes::FString& InCommandString);
        BasicTypes::FString GetVariableCollectionDescription();
        int32_t GetSavedCommandsCount();
        BasicTypes::TArray<BasicTypes::FString> GetSavedCommandsAsStringArray(bool bOnlyIncludeChecked);
        BasicTypes::FString GetSavedCommandsAsCommaSeparatedString(bool bOnlyIncludeChecked);
        BasicTypes::TArray<ConsoleVariablesEditorRuntime::FConsoleVariablesEditorAssetSaveData> GetSavedCommands();
        bool FindSavedDataByCommandString(const BasicTypes::FString& InCommandString, ConsoleVariablesEditorRuntime::FConsoleVariablesEditorAssetSaveData* OutValue, CoreUObject::ESearchCase SearchCase);
        void ExecuteSavedCommands(CoreUObject::UObject* WorldContextObject, bool bOnlyIncludeChecked);
        void CopyFrom(ConsoleVariablesEditorRuntime::UConsoleVariablesAsset* InAssetToCopy);
        void AddOrSetConsoleObjectSavedData(const ConsoleVariablesEditorRuntime::FConsoleVariablesEditorAssetSaveData& InData);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ConsoleVariablesEditorRuntime.ConsoleVariablesAsset");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
