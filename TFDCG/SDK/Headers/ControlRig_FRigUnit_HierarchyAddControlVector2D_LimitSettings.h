#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "ControlRig_FRigControlLimitEnabled.h"
#include "CoreUObject_FVector2D.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * ScriptStruct /Script/ControlRig.RigUnit_HierarchyAddControlVector2D_LimitSettings
     * Size -> 0x0018
     */
    struct FRigUnit_HierarchyAddControlVector2D_LimitSettings
    {
    public:
        ControlRig::FRigControlLimitEnabled                          LimitX;                                                  //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        ControlRig::FRigControlLimitEnabled                          LimitY;                                                  //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FVector2D                                       MinValue;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector2D                                       MaxValue;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDrawLimits;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
