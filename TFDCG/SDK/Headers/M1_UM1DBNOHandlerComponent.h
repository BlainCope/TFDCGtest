#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "M1_UM1CharacterComponent.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class UM1StatComponent; };
namespace CG::M1 { class UM1QueryServiceComponent; };
namespace CG::M1 { class UM1BattleInputComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1DBNOHandlerComponent
     * Size -> 0x0078 (FullSize[0x0148] - InheritedSize[0x00D0])
     */
    class UM1DBNOHandlerComponent : public M1::UM1CharacterComponent
    {
    public:
        int32_t                                                      DBNOTotalCount;                                          //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bTrueDeath;                                              //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bRevive;                                                 //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bDBNOActive;                                             //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        CurrentDuration;                                         //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        Duration;                                                //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Player*                                               Player_Owner;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1StatComponent*                                        Stat_Component;                                          //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1QueryServiceComponent*                                QueryService_Component;                                  //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::AM1Player*                                               HelperPlayer;                                            //  Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::AM1Player*                                               TargetPlayer;                                            //  Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1BattleInputComponent*                                 BattleInput_Component;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        CurrentInteractionTime;                                  //  Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bRescueSucceed;                                          //  Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x1B];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::EM1DBNOContentsType                                      CurrentDBNOType;                                         //  Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        void ServerHandleRescueReleased();
        void ServerHandleRescuePressed();
        void ServerHandleGiveupRescueReleased();
        void ServerHandleGiveUpRescuePressed();
        void OnRepTrueDeath();
        void OnRepTargetPlayer(M1::AM1Player* PrevTargetPlayer);
        void OnRepRevive();
        void OnRepHelperPlayer();
        void OnRepActive();
        void NetMulticastEndDBNO(bool bFadeIn);
        void ClientRespawn(M1::EM1RecoverSupplyType InRecoverType, const CoreUObject::FVector& SpawnLocation, const CoreUObject::FRotator& SpawnRotation);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1DBNOHandlerComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
