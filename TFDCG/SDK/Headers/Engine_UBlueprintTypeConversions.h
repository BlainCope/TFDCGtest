#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "BasicTypes_TSet.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.BlueprintTypeConversions
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UBlueprintTypeConversions : public CoreUObject::UObject
    {
    public:
        BasicTypes::TSet<int32_t> STATIC_ConvertSetType(BasicTypes::TSet<int32_t> InSet);
        BasicTypes::TMap<int32_t, int32_t> STATIC_ConvertMapType(BasicTypes::TMap<int32_t, int32_t> InMap);
        int32_t STATIC_ConvertFVector4fToFVector4d(int32_t InFromData);
        int32_t STATIC_ConvertFVector4dToFVector4f(int32_t InFromData);
        int32_t STATIC_ConvertFVector3fToFVector3d(int32_t InFromData);
        int32_t STATIC_ConvertFVector3dToFVector3f(int32_t InFromData);
        int32_t STATIC_ConvertFVector2fToFVector2d(int32_t InFromData);
        int32_t STATIC_ConvertFVector2dToFVector2f(int32_t InFromData);
        int32_t STATIC_ConvertFTransform3fToFTransform3d(int32_t InFromData);
        int32_t STATIC_ConvertFTransform3dToFTransform3f(int32_t InFromData);
        int32_t STATIC_ConvertFRotator3fToFRotator3d(int32_t InFromData);
        int32_t STATIC_ConvertFRotator3dToFRotator3f(int32_t InFromData);
        int32_t STATIC_ConvertFQuat4fToFQuat4d(int32_t InFromData);
        int32_t STATIC_ConvertFQuat4dToFQuat4f(int32_t InFromData);
        int32_t STATIC_ConvertFPlane4fToFPlane4d(int32_t InFromData);
        int32_t STATIC_ConvertFPlane4dToFPlane4f(int32_t InFromData);
        int32_t STATIC_ConvertFMatrix44fToFMatrix44d(int32_t InFromData);
        int32_t STATIC_ConvertFMatrix44dToFMatrix44f(int32_t InFromData);
        int32_t STATIC_ConvertFBox2fToFBox2d(int32_t InFromData);
        int32_t STATIC_ConvertFBox2dToFBox2f(int32_t InFromData);
        BasicTypes::TArray<int32_t> STATIC_ConvertArrayType(BasicTypes::TArray<int32_t> inArray);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.BlueprintTypeConversions");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
