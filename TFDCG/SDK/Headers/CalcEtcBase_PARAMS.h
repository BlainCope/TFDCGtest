#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1AbilityOpCalcParam.h"
#include "M1_FM1CalcDamageInfo.h"
#include "M1Data_ENUMS.h"
#include "M1Data_FM1ScaledInteger.h"
#include "M1_FM1AbilityOpExecCalcOutput.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::CalcEtcBase
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UCalcEtcBase_C_ApplySkillATK_Params
    {
    public:
        M1::FM1AbilityOpCalcParam                                    Param;                                                   //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
        M1::FM1CalcDamageInfo                                        DamageInfo;                                              //  0x0008(0x0138)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
        M1Data::EM1ElementalDamageChannel                            ElementalChannel;                                        //  0x0140(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        M1Data::EM1SkillArcheType                                    ArcheType;                                               //  0x0141(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x6];                                   //  0x0142(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        M1Data::FM1ScaledInteger                                     AddPower;                                                //  0x0148(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
        M1Data::FM1ScaledInteger                                     AddAttack;                                               //  0x0150(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
        bool                                                         IsHittingPC;                                             //  0x0158(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCalcEtcBase_C_ApplySkillCost_Params
    {
    public:
        M1::FM1AbilityOpCalcParam                                    Param;                                                   //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
        M1::FM1CalcDamageInfo                                        DamageInfo;                                              //  0x0008(0x0138)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
        bool                                                         IsRatio;                                                 //  0x0140(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0141(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        double                                                       Value;                                                   //  0x0148(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        M1Data::EM1StatType                                          MaxStat;                                                 //  0x0150(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bIgnoreCoefficient;                                      //  0x0151(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0003[0x6];                                   //  0x0152(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCalcEtcBase_C_DoCalculation_Params
    {
    public:
        M1::FM1AbilityOpCalcParam                                    Param;                                                   //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
        M1::FM1CalcDamageInfo                                        DamageInfo;                                              //  0x0008(0x0138)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
        M1::FM1AbilityOpExecCalcOutput                               Output;                                                  //  0x0140(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCalcEtcBase_C_Execute_Params
    {
    public:
        M1::FM1AbilityOpCalcParam                                    Param;                                                   //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
        M1::FM1AbilityOpExecCalcOutput                               Output;                                                  //  0x0008(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
