#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1OptionValueKeySetting.h"
#include "M1_FM1OptionValueAxisSetting.h"
#include "M1_FM1OptionValueGamepadKeySetting.h"
#include "BasicTypes_FString.h"
#include "Engine_UGameUserSettings.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1GameUserSettings
     * Size -> 0x03A0 (FullSize[0x04F8] - InheritedSize[0x0158])
     */
    class UM1GameUserSettings : public Engine::UGameUserSettings
    {
    public:
        uint8_t                                                      UnknownData_0000[0x6C];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      M1Version;                                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        Test;                                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseElementalFloater;                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseSkillDetailFloater;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::FM1OptionValueKeySetting>             KeyInput;                                                //  ZeroConstructor, Config, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::FM1OptionValueAxisSetting>            AxisInput;                                               //  ZeroConstructor, Config, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::FM1OptionValueGamepadKeySetting>      GamepadKeyInput;                                         //  ZeroConstructor, Config, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ChatAutoHide;                                            //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ChatBGVisible;                                           //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ChatTextSize;                                            //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ChatRange;                                               //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         VoiceChat_bInputAlwaysOpen;                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          VoiceChat_ChannelToJoin;                                 //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         VoiceChat_bInputEnable;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        VoiceChat_InputVolume;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         VoiceChat_bOutputEnable;                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        VoiceChat_OutputVolume;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bCrossPlatformPlay;                                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          CrossPlatformChatRange;                                  //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          FriendInviteOption;                                      //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          PartyInviteOption;                                       //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ReceiveRequestSupportOption;                             //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int64_t                                                      Notice_LastShowDateTime;                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Normal;                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_AR;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_BR;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_HC;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_HG;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_LNC;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_MG;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_SCR;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_SG;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_SMG;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_SR;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MouseSensitivity_Zoom_TR;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        GamepadSensitivity_NormalX;                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        GamepadSensitivity_NormalY;                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        GamepadSensitivity_ZoomX;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        GamepadSensitivity_ZoomY;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bIndividualMouseSensitivity;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bMouseInvertAxis_X;                                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bMouseInvertAxis_Y;                                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bGamepadInvertAxis_X;                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bGamepadInvertAxis_Y;                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bZoomControl;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bSprintControl;                                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0x5];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          Locale;                                                  //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          AudioLocale;                                             //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bShowDamage;                                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          ShowStatusEffectNoticeType;                              //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bGrapplingHookCorrect;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bGrapplingHookHUDGuide;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0008[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          GrapplingHookHUDGuideWidgetType;                         //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          DisplayBattleFXType;                                     //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bDesiredUsingHDRDisplayOutput;                           //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0009[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DesiredBrightness;                                       //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        DesiredContrast;                                         //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0010[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          QualityPreset;                                           //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ConsoleQuality;                                          //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bConsoleFG;                                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bConsoleRayTracing;                                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0011[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      ViewDistance;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      AntiAliasing;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      PostProcessing;                                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Shadows;                                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      GlobalIllumination;                                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Reflections;                                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Textures;                                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Effects;                                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Foliage;                                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Shading;                                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Mesh;                                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      Physics;                                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      RayTracingQuality;                                       //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          SelectUpscaler;                                          //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          DLSS_SR;                                                 //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          DLSS_FG;                                                 //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bDLSS_RR;                                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0012[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          NVIDIAReflex;                                            //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          FSR;                                                     //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          FSR_FG;                                                  //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          XeSS;                                                    //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          TSR;                                                     //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MasterVolume;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        MusicVolume;                                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        SfxVolume;                                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        DialogueVolume;                                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        HitMarkerSoundVolume;                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         b3DAudioAcive;                                           //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bPlayAudioWhenFocusIsLost;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0013[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          PanningRule;                                             //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bBattleVoice;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0014[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          AudioMix;                                                //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        FOV;                                                     //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bMotionBlur;                                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0015[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        Sharpness;                                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0016[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          BattleKeyPreset;                                         //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          BattleAxisPreset;                                        //  ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        VirtualCursorMaxSpeed;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         UseControllerVibration;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0017[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ControllerVibrationStrength;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bCityCameraDistance;                                     //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bHardwareCursor;                                         //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bAdaptiveTrigger;                                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0018[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      ColorBlindness;                                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bLauncherHipfireGuide;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bBulletHitPositionGuide;                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseAimAssist;                                           //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0019[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        AimAssistAimRotateIntensity;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        AimAssistAimSlowdownIntensity;                           //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        AimAssistStickyAimIntensity;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseAimAssistHipFire;                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bShowHUDNumbers;                                         //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bShowCreatorIcon;                                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bHideUserName;                                           //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bCameraShake;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bCityCrosshairVisible;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bAutoStartFireControl;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0020[0x5];                                   //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1GameUserSettings");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
