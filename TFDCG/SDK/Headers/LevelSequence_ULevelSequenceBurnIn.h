#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "LevelSequence_FLevelSequencePlayerSnapshot.h"
#include "UMG_UUserWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::LevelSequence { class ALevelSequenceActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::LevelSequence { class ULevelSequenceBurnInInitSettings; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::LevelSequence
{
    /**
     * Class /Script/LevelSequence.LevelSequenceBurnIn
     * Size -> 0x00D8 (FullSize[0x0328] - InheritedSize[0x0250])
     */
    class ULevelSequenceBurnIn : public UMG::UUserWidget
    {
    public:
        LevelSequence::FLevelSequencePlayerSnapshot                  FrameInformation;                                        //  BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        LevelSequence::ALevelSequenceActor*                          LevelSequenceActor;                                      //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected

    public:
        void SetSettings(CoreUObject::UObject* InSettings);
        LevelSequence::ULevelSequenceBurnInInitSettings* GetSettingsClass();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/LevelSequence.LevelSequenceBurnIn");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
