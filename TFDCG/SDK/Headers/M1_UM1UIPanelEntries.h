#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1MultiConditionCreateParam.h"
#include "CoreUObject_FVector2D.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "M1_UM1UIWidget.h"
#include "SlateCore_FPointerEvent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1PanelType; };
namespace CG::M1 { class UM1UIMultiCondition; };
namespace CG::UMG { class UWidget; };
namespace CG::UMG { class UScrollBox; };
namespace CG::UMG { class UUserWidget; };
namespace CG::M1 { class UM1UIData; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIPanelEntries
     * Size -> 0x0350 (FullSize[0x0A58] - InheritedSize[0x0708])
     */
    class UM1UIPanelEntries : public M1::UM1UIWidget
    {
    public:
        float                                                        SavedScrollOffset;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1PanelType*                                            PanelTypeObject;                                         //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bHorizontalScroll;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0xA7];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1MultiConditionCreateParam                             MultiConditionParam;                                     //  Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected
        M1::UM1UIMultiCondition*                                     UI_MultiCondition;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UWidget*                                                Panel_Items;                                             //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UScrollBox*                                             ScrollBox_Default;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIWidget*                                             WidgetEntryClass;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       EntryPadding;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector2D                                       EntrySize;                                               //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      DefaultItemNum;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bUseDefaultItemNum;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bCollapseIfNoData;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bSetTooltipTypeOnSlot;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0xD1];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1UIData*>                           AllEntries;                                              //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::UM1UIWidget*                                             CursorOnSlot;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::UMulticastInlineDelegate                         OnEventEntryClicked;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventEntryDimmedClicked;                               //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventEntryPressed;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventEntryReleased;                                    //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventCursorEnteredSlot;                                //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventCursorLeftSlot;                                   //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventCursorRightMouseButtonUp;                         //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0009[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventUIWheelEvent;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0010[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnEventEntriesShown;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0011[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0013[0x60];                                  //  Fix size for supers

    public:
        void ShowEntries(BasicTypes::TArray<M1::UM1UIData*> InEntries, bool bKeepScrollOffset);
        void SetEntrySize(const CoreUObject::FVector2D& InEntrySize);
        void SetEntryPadding(const CoreUObject::FVector2D& InPaddingSize);
        void ResetEntrySize();
        void OnRightMouseButtonUp(M1::UM1UIWidget* InWidget);
        void OnRemoveEntryTooltipWidgetImpl(M1::UM1UIWidget* InWidget);
        void OnMouseWheelOnAnySlot(const SlateCore::FPointerEvent& InPointerEvent, bool* bHandled);
        void OnMouseUnhovered(M1::UM1UIWidget* InWidget);
        void OnMouseHovered(M1::UM1UIWidget* InWidget);
        void OnCreateEntryTooltipWidgetImpl(M1::UM1UIWidget* InWidget);
        void OnButtonReleased(M1::UM1UIWidget* InWidget);
        void OnButtonPressed(M1::UM1UIWidget* InWidget);
        void OnButtonDimmedClicked(M1::UM1UIWidget* InWidget);
        void OnButtonClicked(M1::UM1UIWidget* InWidget);
        bool IsUsingMulticondition();
        BasicTypes::TArray<M1::UM1UIWidget*> GetValidEntryWidgets();
        M1::UM1UIWidget* GetValidEntryWidget(M1::UM1UIData* InUIData);
        int32_t GetChildrenCount();
        UMG::UUserWidget* GetChildAt(int32_t InIndex);
        void BP_ShowEntries(BasicTypes::TArray<M1::UM1UIWidget*> InWidgets);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIPanelEntries");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
