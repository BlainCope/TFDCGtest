#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FBoneReference.h"
#include "BasicTypes_TArray.h"
#include "KawaiiPhysics_FKawaiiPhysicsSettings.h"
#include "KawaiiPhysics_ENUMS.h"
#include "KawaiiPhysics_FSphericalLimit.h"
#include "KawaiiPhysics_FCapsuleLimit.h"
#include "KawaiiPhysics_FPlanarLimit.h"
#include "CoreUObject_FVector.h"
#include "M1Actor_FM1WindChannels.h"
#include "KawaiiPhysics_FKawaiiPhysicsModifyBone.h"
#include "CoreUObject_FTransform.h"
#include "AnimGraphRuntime_FAnimNode_SkeletalControlBase.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UCurveFloat; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::KawaiiPhysics
{
    /**
     * ScriptStruct /Script/KawaiiPhysics.AnimNode_KawaiiPhysics
     * Size -> 0x01B8 (FullSize[0x0280] - InheritedSize[0x00C8])
     */
    struct FAnimNode_KawaiiPhysics : public AnimGraphRuntime::FAnimNode_SkeletalControlBase
    {
    public:
        Engine::FBoneReference                                       RootBone;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FBoneReference>                   ExcludeBones;                                            //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FBoneReference>                   RootBonesParallel;                                       //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        int32_t                                                      TargetFrameRate;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         OverrideTargetFramerate;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        KawaiiPhysics::FKawaiiPhysicsSettings                        PhysicsSettings;                                         //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         DampingCurve;                                            //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         WorldDampingLocationCurve;                               //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         WorldDampingRotationCurve;                               //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         StiffnessCurve;                                          //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         RadiusCurve;                                             //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         LimitAngleCurve;                                         //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         SmoothingCurve;                                          //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bUpdatePhysicsSettingsInGame;                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DummyBoneLength;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        KawaiiPhysics::EPlanarConstraint                             PlanarConstraint;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<KawaiiPhysics::FSphericalLimit>           SphericalLimits;                                         //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<KawaiiPhysics::FCapsuleLimit>             CapsuleLimits;                                           //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<KawaiiPhysics::FPlanarLimit>              PlanarLimits;                                            //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        float                                                        TeleportDistanceThreshold;                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        TeleportRotationThreshold;                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         Gravity;                                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableWind;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        WindScale;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Actor::FM1WindChannels                                     WindChannels;                                            //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        InterpSpeedWhenSuspendingSim;                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        EvaluationResetTime;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        EvaluationSuspendSimTimeAfterReset;                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        EvaluationSmoothingTime;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        SmoothMovementThreshold;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        KawaiiPhysics::EPhysicsSignificanceLevel                     Significance;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<KawaiiPhysics::FKawaiiPhysicsModifyBone>  ModifyBones;                                             //  ZeroConstructor, NativeAccessSpecifierPublic
        float                                                        TotalBoneLength;                                         //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      PreSkelCompTransform;                                    //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bInitPhysicsSettings;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x4F];                                  //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
