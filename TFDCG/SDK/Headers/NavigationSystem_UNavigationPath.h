#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_FVector.h"
#include "Engine_ENUMS.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::NavigationSystem
{
    /**
     * Class /Script/NavigationSystem.NavigationPath
     * Size -> 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
     */
    class UNavigationPath : public CoreUObject::UObject
    {
    public:
        BasicTypes::UMulticastInlineDelegate                         PathUpdatedNotifier;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TArray<CoreUObject::FVector>                     PathPoints;                                              //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
        Engine::ENavigationOptionFlag                                RecalculateOnInvalidation;                               //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3F];                                  //  MISSED OFFSET (PADDING)

    public:
        bool IsValid();
        bool IsStringPulled();
        bool IsPartial();
        double GetPathLength();
        double GetPathCost();
        BasicTypes::FString GetDebugString();
        void EnableRecalculationOnInvalidation(Engine::ENavigationOptionFlag DoRecalculation);
        void EnableDebugDrawing(bool bShouldDrawDebugData, const CoreUObject::FLinearColor& PathColor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/NavigationSystem.NavigationPath");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
