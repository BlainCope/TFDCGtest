#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "MovieSceneTracks_FBoolParameterNameAndCurve.h"
#include "MovieSceneTracks_FScalarParameterNameAndCurve.h"
#include "MovieSceneTracks_FVector2DParameterNameAndCurves.h"
#include "MovieSceneTracks_FVectorParameterNameAndCurves.h"
#include "MovieSceneTracks_FColorParameterNameAndCurves.h"
#include "MovieSceneTracks_FTransformParameterNameAndCurves.h"
#include "MovieScene_UMovieSceneSection.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TSet.h"
#include "CoreUObject_FFrameNumber.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieSceneTracks
{
    /**
     * Class /Script/MovieSceneTracks.MovieSceneParameterSection
     * Size -> 0x0068 (FullSize[0x0158] - InheritedSize[0x00F0])
     */
    class UMovieSceneParameterSection : public MovieScene::UMovieSceneSection
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<MovieSceneTracks::FBoolParameterNameAndCurve> BoolParameterNamesAndCurves;                             //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<MovieSceneTracks::FScalarParameterNameAndCurve> ScalarParameterNamesAndCurves;                           //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<MovieSceneTracks::FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves;                         //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<MovieSceneTracks::FVectorParameterNameAndCurves> VectorParameterNamesAndCurves;                           //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<MovieSceneTracks::FColorParameterNameAndCurves> ColorParameterNamesAndCurves;                            //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<MovieSceneTracks::FTransformParameterNameAndCurves> TransformParameterNamesAndCurves;                        //  ZeroConstructor, Protected, NativeAccessSpecifierProtected

    public:
        bool RemoveVectorParameter(const BasicTypes::FName& InParameterName);
        bool RemoveVector2DParameter(const BasicTypes::FName& InParameterName);
        bool RemoveTransformParameter(const BasicTypes::FName& InParameterName);
        bool RemoveScalarParameter(const BasicTypes::FName& InParameterName);
        bool RemoveColorParameter(const BasicTypes::FName& InParameterName);
        bool RemoveBoolParameter(const BasicTypes::FName& InParameterName);
        void GetParameterNames(BasicTypes::TSet<BasicTypes::FName>* ParameterNames);
        void AddVectorParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FVector& InValue);
        void AddVector2DParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FVector2D& InValue);
        void AddTransformParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FTransform& InValue);
        void AddScalarParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, float InValue);
        void AddColorParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FLinearColor& InValue);
        void AddBoolParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, bool InValue);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieSceneTracks.MovieSceneParameterSection");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
