#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_ENUMS.h"
#include "Engine_FTimerHandle.h"
#include "BasicTypes_TMap.h"
#include "M1_UM1PrivateOnlineSubService.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FString.h"
#include "M1Data_FM1TemplateId.h"
#include "M1_FM1SocialServiceReceiveMailAttachment.h"
#include "M1_FM1SocialServiceReceiveMultipleMailAttachmentAll.h"
#include "M1_FM1SocialServiceMailCommon.h"
#include "M1_FM1SocialServiceMailList.h"
#include "M1_FM1SocialServiceDeleteAllMail.h"
#include "M1Data_FM1NewMailPushInfo.h"
#include "M1Data_FM1MailDeletePushInfo.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PrivateOnlineServiceMail
     * Size -> 0x0068 (FullSize[0x00A8] - InheritedSize[0x0040])
     */
    class UM1PrivateOnlineServiceMail : public M1::UM1PrivateOnlineSubService
    {
    public:
        int32_t                                                      RequestedDeleteAllMailCount;                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::EM1MailReason                                        DeleteAllMailReason;                                     //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::FTimerHandle                                         TimerHandle_MailOpReload;                                //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1Data::EM1MailType, Engine::FTimerHandle>  TimerHandle_TypedGetMailInfos;                           //  Transient, NativeAccessSpecifierPrivate
        Engine::FTimerHandle                                         TimerHandle_MailOpReloadRequestedTimer;                  //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void ServerRequestRecieveAttachmentAll(int64_t InMailId);
        void ServerRequestRecieveAttachment(int64_t InMailId, int32_t InIndex);
        void ServerRequestReceiveMultipleAttachmentAll(BasicTypes::TArray<int64_t> InMailIds);
        void ServerRequestReadMail(int64_t InMailId);
        void ServerRequestMailOpReload();
        void ServerRequestGetMailList(M1Data::EM1MailType InMailType, int64_t InLastMailId);
        void ServerRequestDeleteMail(int64_t InMailId);
        void ServerRequestDeleteAllMail(M1Data::EM1MailType InMailType);
        void ServerRequestCreateMailTest2(M1Data::EM1MailType InMailType, M1Data::EM1Locale InLocale, const BasicTypes::FString& InSender, const BasicTypes::FString& InTitle, const BasicTypes::FString& InContent, int32_t InMinutes, const M1Data::FM1TemplateId& InDropGroupTemplateId);
        void ServerRequestCreateMailTest(M1Data::EM1MailType InMailType, int32_t InMailId, const M1Data::FM1TemplateId& InDropGroupTemplateId);
        void ClientRequestGetMailList(M1Data::EM1MailType InMailType);
        void ClientReceiveRecieveAttachmentAll(M1Data::EM1MailReason InReason, int64_t InMailId);
        void ClientReceiveRecieveAttachment(const M1::FM1SocialServiceReceiveMailAttachment& InResult);
        void ClientReceiveReceiveMultipleAttachmentAll(const M1::FM1SocialServiceReceiveMultipleMailAttachmentAll& InResponse);
        void ClientReceiveReadMail(const M1::FM1SocialServiceMailCommon& InResult);
        void ClientReceiveGetMailList(M1Data::EM1MailType InMailType, const M1::FM1SocialServiceMailList& InResult);
        void ClientReceiveDeleteMail(const M1::FM1SocialServiceMailCommon& InResult);
        void ClientReceiveDeleteAllMail(const M1::FM1SocialServiceDeleteAllMail& InResult);
        void ClientOnNewMailNotification(const M1Data::FM1NewMailPushInfo& InNewMailNoti);
        void ClientMailDeleteNotification(const M1Data::FM1MailDeletePushInfo& InNotify);
        void ClientAddNarrativeMail(const M1Data::FM1TemplateId& InContentsTemplateID);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PrivateOnlineServiceMail");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
