#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "AkAudio_FAkWaapiFieldNames.h"
#include "BasicTypes_FString.h"
#include "AkAudio_FAKWaapiJsonObject.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FText.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AkAudio
{
    /**
     * Class /Script/AkAudio.AkWaapiJsonManager
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UAkWaapiJsonManager : public Engine::UBlueprintFunctionLibrary
    {
    public:
        AkAudio::FAKWaapiJsonObject STATIC_SetStringField(const AkAudio::FAkWaapiFieldNames& FieldName, const BasicTypes::FString& FieldValue, const AkAudio::FAKWaapiJsonObject& Target);
        AkAudio::FAKWaapiJsonObject STATIC_SetObjectField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& FieldValue, const AkAudio::FAKWaapiJsonObject& Target);
        AkAudio::FAKWaapiJsonObject STATIC_SetNumberField(const AkAudio::FAkWaapiFieldNames& FieldName, float FieldValue, const AkAudio::FAKWaapiJsonObject& Target);
        AkAudio::FAKWaapiJsonObject STATIC_SetBoolField(const AkAudio::FAkWaapiFieldNames& FieldName, bool FieldValue, const AkAudio::FAKWaapiJsonObject& Target);
        AkAudio::FAKWaapiJsonObject STATIC_SetArrayStringFields(const AkAudio::FAkWaapiFieldNames& FieldName, BasicTypes::TArray<BasicTypes::FString> FieldStringValues, const AkAudio::FAKWaapiJsonObject& Target);
        AkAudio::FAKWaapiJsonObject STATIC_SetArrayObjectFields(const AkAudio::FAkWaapiFieldNames& FieldName, BasicTypes::TArray<AkAudio::FAKWaapiJsonObject> FieldObjectValues, const AkAudio::FAKWaapiJsonObject& Target);
        BasicTypes::FString STATIC_GetStringField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target);
        AkAudio::FAKWaapiJsonObject STATIC_GetObjectField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target);
        float STATIC_GetNumberField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target);
        int32_t STATIC_GetIntegerField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target);
        bool STATIC_GetBoolField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target);
        BasicTypes::TArray<AkAudio::FAKWaapiJsonObject> STATIC_GetArrayField(const AkAudio::FAkWaapiFieldNames& FieldName, const AkAudio::FAKWaapiJsonObject& Target);
        BasicTypes::FText STATIC_Conv_FAKWaapiJsonObjectToText(const AkAudio::FAKWaapiJsonObject& INAKWaapiJsonObject);
        BasicTypes::FString STATIC_Conv_FAKWaapiJsonObjectToString(const AkAudio::FAKWaapiJsonObject& INAKWaapiJsonObject);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AkAudio.AkWaapiJsonManager");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
