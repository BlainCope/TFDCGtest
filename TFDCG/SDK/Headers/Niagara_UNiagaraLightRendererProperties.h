#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Niagara_ENUMS.h"
#include "CoreUObject_FVector3f.h"
#include "Niagara_FNiagaraVariableAttributeBinding.h"
#include "Niagara_UNiagaraRendererProperties.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Niagara
{
    /**
     * Class /Script/Niagara.NiagaraLightRendererProperties
     * Size -> 0x02C0 (FullSize[0x03A0] - InheritedSize[0x00E0])
     */
    class UNiagaraLightRendererProperties : public Niagara::UNiagaraRendererProperties
    {
    public:
        Niagara::ENiagaraRendererSourceDataMode                      SourceMode;                                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bUseInverseSquaredFalloff : 1;                           //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAffectsTranslucency : 1;                                //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAlphaScalesBrightness : 1;                              //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bOverrideInverseExposureBlend : 1;                       //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        RadiusScale;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        DefaultExponent;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector3f                                       ColorAdd;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        InverseExposureBlend;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      RendererVisibility;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Niagara::FNiagaraVariableAttributeBinding                    LightRenderingEnabledBinding;                            //  Edit, NativeAccessSpecifierPublic
        Niagara::FNiagaraVariableAttributeBinding                    LightExponentBinding;                                    //  Edit, NativeAccessSpecifierPublic
        Niagara::FNiagaraVariableAttributeBinding                    PositionBinding;                                         //  Edit, NativeAccessSpecifierPublic
        Niagara::FNiagaraVariableAttributeBinding                    ColorBinding;                                            //  Edit, NativeAccessSpecifierPublic
        Niagara::FNiagaraVariableAttributeBinding                    RadiusBinding;                                           //  Edit, NativeAccessSpecifierPublic
        Niagara::FNiagaraVariableAttributeBinding                    VolumetricScatteringBinding;                             //  Edit, NativeAccessSpecifierPublic
        Niagara::FNiagaraVariableAttributeBinding                    RendererVisibilityTagBinding;                            //  Edit, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x30];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Niagara.NiagaraLightRendererProperties");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
