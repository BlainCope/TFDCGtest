#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "M1_UM1UIWidget.h"
#include "SlateCore_FPointerEvent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UPanelWidget; };
namespace CG::M1 { class UM1UIButton; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIInformationOnEquipments
     * Size -> 0x0038 (FullSize[0x0740] - InheritedSize[0x0708])
     */
    class UM1UIInformationOnEquipments : public M1::UM1UIWidget
    {
    public:
        UMG::UPanelWidget*                                           Panel_Slots;                                             //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<M1::UM1UIButton*>                         EquipmentSlots;                                          //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::UM1UIWidget*                                             CursorOnSlot;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::EM1EquipmentSlotType                                 EntryEquipmentSlotType;                                  //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnEventUIWheelEvent;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY

    public:
        void OnSelectPrevSlot(M1::UM1UIWidget* InWidget);
        void OnSelectNextSlot(M1::UM1UIWidget* InWidget);
        void OnMouseWheelOnSlot(const SlateCore::FPointerEvent& InPointerEvent, bool* bHandled);
        void OnEventCursorLeftSlot(M1::UM1UIWidget* InWidget);
        void OnEventCursorEnteredSlot(M1::UM1UIWidget* InWidget);
        void OnCreateEquipmentTooltipWidget(M1::UM1UIWidget* InTooltipWidget);
        void OnChangeWeaponClicked(M1::UM1UIWidget* InWidget);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIInformationOnEquipments");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
