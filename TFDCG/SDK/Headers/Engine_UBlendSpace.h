#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FInterpolationParameter.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "Engine_FPerBoneInterpolation.h"
#include "Engine_FBlendSpaceBlendProfile.h"
#include "Engine_FBlendSample.h"
#include "Engine_FEditorElement.h"
#include "Engine_FBlendSpaceData.h"
#include "Engine_FBlendParameter.h"
#include "Engine_UAnimationAsset.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.BlendSpace
     * Size -> 0x0140 (FullSize[0x01C0] - InheritedSize[0x0080])
     */
    class UBlendSpace : public Engine::UAnimationAsset
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bContainsRotationOffsetMeshSpaceSamples;                 //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FInterpolationParameter                              InterpolationParam[0x3];                                 //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        TargetWeightInterpolationSpeedPerSec;                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bTargetWeightInterpolationEaseInOut;                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowMeshSpaceBlending;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bLoop;                                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        AnimLength;                                              //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::ENotifyTriggerMode                                   NotifyTriggerMode;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bInterpolateUsingGrid;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EPreferredTriangulationDirection                     PreferredTriangulationDirection;                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EBlendSpacePerBoneBlendMode                          PerBoneBlendMode;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FPerBoneInterpolation>            ManualPerBoneOverrides;                                  //  Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        Engine::FBlendSpaceBlendProfile                              PerBoneBlendProfile;                                     //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0004[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      SampleIndexWithMarkers;                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0005[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FBlendSample>                     SampleData;                                              //  Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::FEditorElement>                   GridSamples;                                             //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        Engine::FBlendSpaceData                                      BlendSpaceData;                                          //  Protected, NativeAccessSpecifierProtected
        Engine::FBlendParameter                                      BlendParameters[0x3];                                    //  Edit, Protected, NativeAccessSpecifierProtected
        Engine::EBlendSpaceAxis                                      AxisToScaleAnimation;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0006[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<int32_t>                                  DimensionIndices;                                        //  ZeroConstructor, Protected, NativeAccessSpecifierProtected

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.BlendSpace");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
