#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1SocialMotionAnimMontage.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "Engine_ENUMS.h"
#include "M1_UM1Ability.h"
#include "M1_FM1CalcDamageInfo.h"
#include "M1_FM1AbilityEvent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::Engine { class UAnimMontage; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1SocialMotion
     * Size -> 0x00E0 (FullSize[0x0380] - InheritedSize[0x02A0])
     */
    class UM1SocialMotion : public M1::UM1Ability
    {
    public:
        M1::FM1SocialMotionAnimMontage                               Montage;                                                 //  Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        BasicTypes::FName                                            StringId;                                                //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        TargetArmLength;                                         //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         CameraSocketOffset;                                      //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        CameraTransitionTime;                                    //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bDisableFootIK;                                          //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            StartFX;                                                 //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            EndFX;                                                   //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      PreviewCameraIndex;                                      //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         CameraPositionOffset;                                    //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         CameraDetailPositionOffset;                              //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bAppliedCameraSetting;                                   //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TWeakObjectPtr<M1::AM1Player>                    OwnerPlayer;                                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TWeakObjectPtr<Engine::UAnimMontage>             ActiveMontage;                                           //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bAppliedAnimTickOption;                                  //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::EVisibilityBasedAnimTickOption                       StoredAnimTickOption;                                    //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bCancelledSocialMotion;                                  //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x1D];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnSocialMotionCancelled();
        void OnSocialMotionAnimInit();
        void OnSocialMotionAnimEnded(Engine::UAnimMontage* InMontage, bool bInterrupted);
        void OnPlayerMoved(float DeltaTime, const CoreUObject::FVector& OldLocation, const CoreUObject::FVector& OldVelocity);
        void OnPlayerDamaged(const M1::FM1CalcDamageInfo& DamageInfo);
        void OnPlayerAbilityEvent(const M1::FM1AbilityEvent& InAbilityEvent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1SocialMotion");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
