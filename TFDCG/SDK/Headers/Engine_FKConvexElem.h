#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FBox.h"
#include "CoreUObject_FTransform.h"
#include "Engine_FKShapeElem.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.KConvexElem
     * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
     */
    struct FKConvexElem : public Engine::FKShapeElem
    {
    public:
        BasicTypes::TArray<CoreUObject::FVector>                     VertexData;                                              //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<int32_t>                                  IndexData;                                               //  ZeroConstructor, NativeAccessSpecifierPublic
        CoreUObject::FBox                                            ElemBox;                                                 //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      Transform;                                               //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
