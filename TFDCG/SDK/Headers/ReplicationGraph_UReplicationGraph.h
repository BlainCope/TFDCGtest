#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_UReplicationDriver.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::ReplicationGraph { class UNetReplicationGraphConnection; };
namespace CG::Engine { class UNetDriver; };
namespace CG::ReplicationGraph { class UReplicationGraphNode; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ReplicationGraph
{
    /**
     * Class /Script/ReplicationGraph.ReplicationGraph
     * Size -> 0x0548 (FullSize[0x0570] - InheritedSize[0x0028])
     */
    class UReplicationGraph : public Engine::UReplicationDriver
    {
    public:
        ReplicationGraph::UNetReplicationGraphConnection*            ReplicationConnectionManagerClass;                       //  ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UNetDriver*                                          NetDriver;                                               //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<ReplicationGraph::UNetReplicationGraphConnection*> Connections;                                             //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<ReplicationGraph::UNetReplicationGraphConnection*> PendingConnections;                                      //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x40];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<ReplicationGraph::UReplicationGraphNode*> GlobalGraphNodes;                                        //  ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        BasicTypes::TArray<ReplicationGraph::UReplicationGraphNode*> PrepareForReplicationNodes;                              //  ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4B8];                                 //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ReplicationGraph.ReplicationGraph");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
