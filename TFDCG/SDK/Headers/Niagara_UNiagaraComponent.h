#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Niagara_ENUMS.h"
#include "Niagara_FNiagaraUserRedirectionParameterStore.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "BasicTypes_FName.h"
#include "Engine_ENUMS.h"
#include "Engine_UFXSystemComponent.h"
#include "CoreUObject_FVector4.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FQuat.h"
#include "CoreUObject_FMatrix.h"
#include "CoreUObject_FLinearColor.h"
#include "CoreUObject_FBox.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Niagara { class UNiagaraSystem; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Niagara { class UNiagaraSimCache; };
namespace CG::Niagara { class UNiagaraCullProxyComponent; };
namespace CG::Engine { class UTextureRenderTarget; };
namespace CG::Engine { class UTexture; };
namespace CG::Engine { class UStaticMesh; };
namespace CG::CoreUObject { class UObject; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::Engine { class AActor; };
namespace CG::Niagara { class UNiagaraDataInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Niagara
{
    /**
     * Class /Script/Niagara.NiagaraComponent
     * Size -> 0x0248 (FullSize[0x06C0] - InheritedSize[0x0478])
     */
    class UNiagaraComponent : public Engine::UFXSystemComponent
    {
    public:
        Niagara::UNiagaraSystem*                                     Asset;                                                   //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Niagara::ENiagaraTickBehavior                                TickBehavior;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      RandomSeedOffset;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Niagara::FNiagaraUserRedirectionParameterStore               OverrideParameters;                                      //  NativeAccessSpecifierPrivate
        bool                                                         bForceSolo : 1;                                          //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bEnableGpuComputeDebug : 1;                              //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bOverrideWarmupSettings : 1;                             //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      WarmupTickCount;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        WarmupTickDelta;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x34];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bAutoManageAttachment : 1;                               //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAutoAttachWeldSimulatedBodies : 1;                      //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAutoDestroy : 1;                                        //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bRenderingEnabled : 1;                                   //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MaxTimeBeforeForceUpdateTransform;                       //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnSystemFinished;                                        //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, DuplicateTransient, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TWeakObjectPtr<Engine::USceneComponent>          AutoAttachParent;                                        //  Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            AutoAttachSocketName;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAttachmentRule                                      AutoAttachLocationRule;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAttachmentRule                                      AutoAttachRotationRule;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAttachmentRule                                      AutoAttachScaleRule;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0x9];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         UnknownData_0007 : 4;                                    //  BIT_FIELD (PADDING)
        bool                                                         bAllowScalability : 1;                                   //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0008[0xD3];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Niagara::UNiagaraSimCache*                                   SimCache;                                                //  ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Niagara::UNiagaraCullProxyComponent*                         CullProxy;                                               //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void SetVariableVec4(const BasicTypes::FName& InVariableName, const CoreUObject::FVector4& InValue);
        void SetVariableVec3(const BasicTypes::FName& InVariableName, const CoreUObject::FVector& InValue);
        void SetVariableVec2(const BasicTypes::FName& InVariableName, const CoreUObject::FVector2D& InValue);
        void SetVariableTextureRenderTarget(const BasicTypes::FName& InVariableName, Engine::UTextureRenderTarget* TextureRenderTarget);
        void SetVariableTexture(const BasicTypes::FName& InVariableName, Engine::UTexture* Texture);
        void SetVariableStaticMesh(const BasicTypes::FName& InVariableName, Engine::UStaticMesh* InValue);
        void SetVariableQuat(const BasicTypes::FName& InVariableName, const CoreUObject::FQuat& InValue);
        void SetVariablePosition(const BasicTypes::FName& InVariableName, const CoreUObject::FVector& InValue);
        void SetVariableObject(const BasicTypes::FName& InVariableName, CoreUObject::UObject* Object);
        void SetVariableMatrix(const BasicTypes::FName& InVariableName, const CoreUObject::FMatrix& InValue);
        void SetVariableMaterial(const BasicTypes::FName& InVariableName, Engine::UMaterialInterface* Object);
        void SetVariableLinearColor(const BasicTypes::FName& InVariableName, const CoreUObject::FLinearColor& InValue);
        void SetVariableInt(const BasicTypes::FName& InVariableName, int32_t InValue);
        void SetVariableFloat(const BasicTypes::FName& InVariableName, float InValue);
        void SetVariableBool(const BasicTypes::FName& InVariableName, bool InValue);
        void SetVariableActor(const BasicTypes::FName& InVariableName, Engine::AActor* Actor);
        void SetTickBehavior(Niagara::ENiagaraTickBehavior NewTickBehavior);
        void SetSystemFixedBounds(const CoreUObject::FBox& LocalBounds);
        void SetSimCache(Niagara::UNiagaraSimCache* SimCache, bool bResetSystem);
        void SetSeekDelta(float InSeekDelta);
        void SetRenderingEnabled(bool bInRenderingEnabled);
        void SetRandomSeedOffset(int32_t NewRandomSeedOffset);
        void SetPreviewLODDistance(bool bEnablePreviewLODDistance, float PreviewLODDistance, float PreviewMaxDistance);
        void SetPaused(bool bInPaused);
        void SetNiagaraVariableVec4(const BasicTypes::FString& InVariableName, const CoreUObject::FVector4& InValue);
        void SetNiagaraVariableVec3(const BasicTypes::FString& InVariableName, const CoreUObject::FVector& InValue);
        void SetNiagaraVariableVec2(const BasicTypes::FString& InVariableName, const CoreUObject::FVector2D& InValue);
        void SetNiagaraVariableQuat(const BasicTypes::FString& InVariableName, const CoreUObject::FQuat& InValue);
        void SetNiagaraVariablePosition(const BasicTypes::FString& InVariableName, const CoreUObject::FVector& InValue);
        void SetNiagaraVariableObject(const BasicTypes::FString& InVariableName, CoreUObject::UObject* Object);
        void SetNiagaraVariableMatrix(const BasicTypes::FString& InVariableName, const CoreUObject::FMatrix& InValue);
        void SetNiagaraVariableLinearColor(const BasicTypes::FString& InVariableName, const CoreUObject::FLinearColor& InValue);
        void SetNiagaraVariableInt(const BasicTypes::FString& InVariableName, int32_t InValue);
        void SetNiagaraVariableFloat(const BasicTypes::FString& InVariableName, float InValue);
        void SetNiagaraVariableBool(const BasicTypes::FString& InVariableName, bool InValue);
        void SetNiagaraVariableActor(const BasicTypes::FString& InVariableName, Engine::AActor* Actor);
        void SetMaxSimTime(float InMaxTime);
        void SetLockDesiredAgeDeltaTimeToSeekDelta(bool bLock);
        void SetGpuComputeDebug(bool bEnableDebug);
        void SetForceSolo(bool bInForceSolo);
        void SetForceLocalPlayerEffect(bool bIsPlayerEffect);
        void SetEmitterFixedBounds(const BasicTypes::FName& EmitterName, const CoreUObject::FBox& LocalBounds);
        void SetDesiredAge(float InDesiredAge);
        void SetCustomTimeDilation(float Dilation);
        void SetCanRenderWhileSeeking(bool bInCanRenderWhileSeeking);
        void SetAutoDestroy(bool bInAutoDestroy);
        void SetAsset(Niagara::UNiagaraSystem* InAsset, bool bResetExistingOverrideParameters);
        void SetAllowScalability(bool bAllow);
        void SetAgeUpdateMode(Niagara::ENiagaraAgeUpdateMode InAgeUpdateMode);
        void SeekToDesiredAge(float InDesiredAge);
        void ResetSystem();
        void ReinitializeSystem();
        bool IsPaused();
        void InitForPerformanceBaseline();
        Niagara::ENiagaraTickBehavior GetTickBehavior();
        CoreUObject::FBox GetSystemFixedBounds();
        Niagara::UNiagaraSimCache* GetSimCache();
        float GetSeekDelta();
        int32_t GetRandomSeedOffset();
        bool GetPreviewLODDistanceEnabled();
        float GetPreviewLODDistance();
        BasicTypes::TArray<CoreUObject::FVector> GetNiagaraParticleValueVec3_DebugOnly(const BasicTypes::FString& InEmitterName, const BasicTypes::FString& InValueName);
        BasicTypes::TArray<float> GetNiagaraParticleValues_DebugOnly(const BasicTypes::FString& InEmitterName, const BasicTypes::FString& InValueName);
        BasicTypes::TArray<CoreUObject::FVector> GetNiagaraParticlePositions_DebugOnly(const BasicTypes::FString& InEmitterName);
        float GetMaxSimTime();
        bool GetLockDesiredAgeDeltaTimeToSeekDelta();
        bool GetForceSolo();
        bool GetForceLocalPlayerEffect();
        CoreUObject::FBox GetEmitterFixedBounds(const BasicTypes::FName& EmitterName);
        float GetDesiredAge();
        Niagara::UNiagaraDataInterface* GetDataInterface(const BasicTypes::FString& Name);
        float GetCustomTimeDilation();
        Niagara::UNiagaraSystem* GetAsset();
        bool GetAllowScalability();
        Niagara::ENiagaraAgeUpdateMode GetAgeUpdateMode();
        void ClearSystemFixedBounds();
        void ClearSimCache(bool bResetSystem);
        void ClearEmitterFixedBounds(const BasicTypes::FName& EmitterName);
        void AdvanceSimulationByTime(float SimulateTime, float TickDeltaSeconds);
        void AdvanceSimulation(int32_t TickCount, float TickDeltaSeconds);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Niagara.NiagaraComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
