#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "NetCore_FStateStruct.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::NetCore
{
    /**
     * ScriptStruct /Script/NetCore.EscalationState
     * Size -> 0x0018 (FullSize[0x0030] - InheritedSize[0x0018])
     */
    struct FEscalationState : public NetCore::FStateStruct
    {
    public:
        bool                                                         bLogEscalate;                                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDormant;                                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int16_t                                                      CooloffTime;                                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int16_t                                                      AutoEscalateTime;                                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int8_t                                                       HighestTimePeriod;                                       //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<int8_t>                                   AllTimePeriods;                                          //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
