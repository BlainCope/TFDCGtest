#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1UIWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1TextBlock; };
namespace CG::UMG { class UPanelWidget; };
namespace CG::UMG { class UImage; };
namespace CG::M1 { class UM1UIRuneBoardStatInfo_Dps; };
namespace CG::M1 { class UM1WidgetSwitcher; };
namespace CG::M1 { class UM1UIRuneBoardStatInfo_Normal; };
namespace CG::M1 { class UM1UIRuneBoardStatInfo_Conditional; };
namespace CG::M1 { class UM1UIRuneBoardStatInfo_Weapon; };
namespace CG::M1 { class UM1UIKeyButton; };
namespace CG::UMG { class UUserWidget; };
namespace CG::M1 { class UM1UIDataRuneSocket; };
namespace CG::M1 { class UM1UIDataItemInfo_Rune; };
namespace CG::M1 { class UM1UIRune; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIRuneBoardPreview_Weapon
     * Size -> 0x0070 (FullSize[0x0778] - InheritedSize[0x0708])
     */
    class UM1UIRuneBoardPreview_Weapon : public M1::UM1UIWidget
    {
    public:
        M1::UM1TextBlock*                                            Text_WeaponLevel;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            Text_WeaponName;                                         //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            Text_WeaponClass;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TextBlock*                                            Text_WeaponTier;                                         //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UPanelWidget*                                           Panel_EquipStatus;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UImage*                                                 Image_WeaponIcon;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UImage*                                                 Image_WeaponIcon_Anim;                                   //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneBoardStatInfo_Dps*                              UI_Stat_Dps;                                             //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1WidgetSwitcher*                                       WS_Stat_Info;                                            //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneBoardStatInfo_Normal*                           UI_Stat_Normal;                                          //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneBoardStatInfo_Conditional*                      UI_Stat_Conditional;                                     //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIRuneBoardStatInfo_Weapon*                           UI_Stat_Weapon;                                          //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIKeyButton*                                          Button_Stat_Switch;                                      //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      CurrentWeaponIndex;                                      //  BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      NumOfSameTidWeapons;                                     //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnSwitchStatInfoWidget(M1::UM1UIWidget* InWidget);
        void OnRuneDragCancelled(UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnRuneDragAttachFailed(M1::UM1UIDataItemInfo_Rune* InDraggedRuneData, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnRuneDetached(M1::UM1UIDataItemInfo_Rune* InDetachedRuneData, M1::UM1UIDataRuneSocket* InRuneSocketData, bool bIsQuickDetach);
        void OnRuneAttached(M1::UM1UIDataItemInfo_Rune* InAttachedRuneData, M1::UM1UIDataRuneSocket* InRuneSocketData, bool bIsQuickAttach);
        void OnDragLeftFromSocket(UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnDragLeftFromRune(M1::UM1UIRune* InRuneWidget, UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataItemInfo_Rune* InRuneData);
        void OnDragEnteredToSocket(UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataRuneSocket* InRuneSocketData);
        void OnDragEnteredToRune(M1::UM1UIRune* InRuneWidget, UMG::UUserWidget* InDraggedRuneIcon, M1::UM1UIDataItemInfo_Rune* InRuneData);
        void OnChangeToPrevWeapon(M1::UM1UIWidget* InWidget);
        void OnChangeToNextWeapon(M1::UM1UIWidget* InWidget);
        void BP_PlayChangeWeaponToPrevAnimation();
        void BP_PlayChangeWeaponToNextAnimation();
        void BP_OnWeaponChanged(int32_t InPrevIndex);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIRuneBoardPreview_Weapon");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
