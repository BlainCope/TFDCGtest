#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "M1Data_ENUMS.h"
#include "M1Data_FM1RegionLatencyInfosMs.h"
#include "M1Data_FM1CrossPlayOptionData.h"
#include "M1Data_FM1ExternalParticipateInfo.h"
#include "M1Data_FM1ClientChecksum.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Data
{
    /**
     * ScriptStruct /Script/M1Data.M1LoginRequestInfo
     * Size -> 0x0130
     */
    struct FM1LoginRequestInfo
    {
    public:
        BasicTypes::FString                                          Name;                                                    //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1ExternalLinkerType                                ExternalLinkerType;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          ExternalLinkerData;                                      //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          CountryName;                                             //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          SignCountry;                                             //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          DeviceName;                                              //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1OsTypes                                           OsType;                                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          OsName;                                                  //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          OsLanguage;                                              //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1Locale                                            Locale;                                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          LoginPlatformId;                                         //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int64_t                                                      LoginPlatformUid;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1LoginPlatformTypes                                LoginPlatform;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::FM1RegionLatencyInfosMs                              RegionLatencyInfos;                                      //  Edit, NativeAccessSpecifierPublic
        M1Data::FM1CrossPlayOptionData                               CrossPlayOptionData;                                     //  Edit, NoDestructor, NativeAccessSpecifierPublic
        M1Data::FM1ExternalParticipateInfo                           ParticipateInfo;                                         //  Edit, NativeAccessSpecifierPublic
        bool                                                         Boosting;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      Revision;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         IsCreator;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::FM1ClientChecksum                                    Checksum;                                                //  Edit, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
