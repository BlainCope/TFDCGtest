#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSoftObjectPtr.h"
#include "ApexDestruction_UDestructibleMesh.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1LargeChunkSettings.h"
#include "M1_FM1SmallChunkSettings.h"
#include "M1_FM1FractureEffect.h"
#include "M1_ENUMS.h"
#include "CoreUObject_FFloatRange.h"
#include "M1_UM1NavStaticMeshComponent.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::GameplayCameras { class ULegacyCameraShake; };
namespace CG::NavigationSystem { class UNavModifierComponent; };
namespace CG::M1 { class UM1DestructibleComponent; };
namespace CG::Engine { class AActor; };
namespace CG::M1 { class UM1DestructibleStaticMeshComponent; };
namespace CG::M1 { class AM1NavLinkProxy; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1DestructibleStaticMeshComponent
     * Size -> 0x0200 (FullSize[0x0740] - InheritedSize[0x0540])
     */
    class UM1DestructibleStaticMeshComponent : public M1::UM1NavStaticMeshComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSoftObjectPtr<ApexDestruction::UDestructibleMesh> DestructibleMesh;                                        //  ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        ApexDestruction::UDestructibleMesh*                          DestructibleMeshLoaded;                                  //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bForcePreLoadDestructibleMesh;                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UMaterialInterface*>              DMOverrideMaterials;                                     //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bOverridePowerResistance;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      OverridePowerResistance;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        LargeChunkThreshold;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bForceNoPartialDestruction;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1LargeChunkSettings                                    LargeChunkSettings;                                      //  Edit, NativeAccessSpecifierPublic
        M1::FM1SmallChunkSettings                                    SmallChunkSettings;                                      //  Edit, NativeAccessSpecifierPublic
        float                                                        FractureImpulseMultiplier;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        FractureImpulseRadiusMultiplier;                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<M1::FM1FractureEffect>                    EffectSettings;                                          //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        GameplayCameras::ULegacyCameraShake*                         CameraShake;                                             //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1::EM1DestructibleNavAreaType                               NavAreaType;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        NavigationSystem::UNavModifierComponent*                     NavModifierComponent;                                    //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FFloatRange                                     CameraShakeRadius;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1::UM1DestructibleComponent*                                DestructibleComponent;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::AActor*>                          LinkedActors;                                            //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<M1::UM1DestructibleStaticMeshComponent*>  LinkedComponents;                                        //  Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
        BasicTypes::TArray<M1::AM1NavLinkProxy*>                     LinkedProxies;                                           //  Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0006[0x58];                                  //  MISSED OFFSET (PADDING)

    public:
        void SpawnFXAndSound(const M1::FM1FractureEffect& EffectSetting);
        void PostDestructibleMeshLoad();
        void OnComponentFracture(const CoreUObject::FVector& HitPoint, const CoreUObject::FVector& HitDirection);
        void BeginApplyRadiusDamage(float Damage, const CoreUObject::FVector& DamageOrigin, float DamageRadius, float ImpulseStrength, float RadialImpulseStrength);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1DestructibleStaticMeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
