#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "ControlRig_FRigPose.h"
#include "ControlRig_ENUMS.h"
#include "RigVM_ENUMS.h"
#include "ControlRig_FRigElementKeyCollection.h"
#include "ControlRig_FRigUnit_HierarchyBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * ScriptStruct /Script/ControlRig.RigUnit_PoseGetDelta
     * Size -> 0x0120 (FullSize[0x0128] - InheritedSize[0x0008])
     */
    struct FRigUnit_PoseGetDelta : public ControlRig::FRigUnit_HierarchyBase
    {
    public:
        ControlRig::FRigPose                                         PoseA;                                                   //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        ControlRig::FRigPose                                         PoseB;                                                   //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        float                                                        PositionThreshold;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        RotationThreshold;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ScaleThreshold;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        CurveThreshold;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::ERigElementType                                  ElementType;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        RigVM::ERigVMTransformSpace                                  Space;                                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ControlRig::FRigElementKeyCollection                         ItemsToCompare;                                          //  Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         PosesAreEqual;                                           //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ControlRig::FRigElementKeyCollection                         ItemsWithDelta;                                          //  BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
