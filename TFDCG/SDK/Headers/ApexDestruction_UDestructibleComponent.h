#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_FFractureEffect.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_USkinnedMeshComponent.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::ApexDestruction { class UDestructibleMesh; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ApexDestruction
{
    /**
     * Class /Script/ApexDestruction.DestructibleComponent
     * Size -> 0x00DC (FullSize[0x087C] - InheritedSize[0x07A0])
     */
    class UDestructibleComponent : public Engine::USkinnedMeshComponent
    {
    public:
        bool                                                         bFractureEffectOverride : 1;                             //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FFractureEffect>                  FractureEffects;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bEnableHardSleeping;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        LargeChunkThreshold;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnComponentFracture;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0005[0x9C];                                  //  Fix size for supers

    public:
        void SetDestructibleMesh(ApexDestruction::UDestructibleMesh* NewMesh);
        ApexDestruction::UDestructibleMesh* GetDestructibleMesh();
        void ApplyRadiusDamage(float BaseDamage, const CoreUObject::FVector& HurtOrigin, float DamageRadius, float ImpulseStrength, bool bFullDamage);
        void ApplyDamage(float DamageAmount, const CoreUObject::FVector& HitLocation, const CoreUObject::FVector& ImpulseDir, float ImpulseStrength);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ApexDestruction.DestructibleComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
