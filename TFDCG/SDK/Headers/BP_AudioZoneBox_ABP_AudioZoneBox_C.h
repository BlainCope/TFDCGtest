#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "AkEnvZoneType_ENUMS.h"
#include "Amb_Space_ENUMS.h"
#include "BasicTypes_FText.h"
#include "CoreUObject_FLinearColor.h"
#include "CoreUObject_FTransform.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FVector.h"
#include "AkAmbienceMultiple_FAkAmbienceMultiple.h"
#include "BasicTypes_TArray.h"
#include "Engine_FTimerHandle.h"
#include "BP_AudioActorBase_ABP_AudioActorBase_C.h"
#include "CoreUObject_FBox.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AkAudio { class UAkLateReverbComponent; };
namespace CG::AkAudio { class UAkRoomComponent; };
namespace CG::AkAudio { class UAkComponent; };
namespace CG::Engine { class UTextRenderComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::BP_GlobalEnvManager { class ABP_GlobalEnvManager_C; };
namespace CG::AkAudio { class UAkAudioEvent; };
namespace CG::BP_AK_Ambient_3D { class ABP_AK_Ambient_3D_C; };
namespace CG::BP_AudioZoneBox { class ABP_AudioZoneBox_C; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BP_AudioZoneBox
{
    /**
     * BlueprintGeneratedClass /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AudioZoneBox.BP_AudioZoneBox_C
     * Size -> 0x0250 (FullSize[0x04A0] - InheritedSize[0x0250])
     */
    class ABP_AudioZoneBox_C : public BP_AudioActorBase::ABP_AudioActorBase_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        AkAudio::UAkLateReverbComponent*                             AkLateReverb;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        AkAudio::UAkRoomComponent*                                   AkRoom;                                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        AkAudio::UAkComponent*                                       Ak3DSpot;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UTextRenderComponent*                                ZoneInfo;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                Zone;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        AkAudio::UAkComponent*                                       Ak_Amb_zone;                                             //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                AttenuateRadius;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash
        AkEnvZoneType::EAkEnvZoneType                                AkEnvZoneType;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Amb_Space::EAmb_Space                                        AmbSpace;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        double                                                       Priority;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       AmbIntensity;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BP_GlobalEnvManager::ABP_GlobalEnvManager_C*                 GlobalManager;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        BasicTypes::FText                                            Comment;                                                 //  Edit, BlueprintVisible
        CoreUObject::FLinearColor                                    DebugColor;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FTransform                                      ZoneSoundHandler;                                        //  Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       Slapback_FxStyle;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       ZoneCloseAmount;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       AdpativeSlapBackVol;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TMap<AkAudio::UAkAudioEvent*, double>            RandomSpot3DSound;                                       //  Edit, BlueprintVisible
        AkAudio::UAkAudioEvent*                                      _2DZoneAdditiveLP;                                       //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash
        bool                                                         Playerinside;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         bUse2DZoneLongFadeOut;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        AkAudio::UAkAudioEvent*                                      _3DCenterSpotLP;                                         //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash
        BasicTypes::FString                                          FindSpotMeshName;                                        //  Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
        BasicTypes::TMap<CoreUObject::FVector, BasicTypes::FString>  AmbienceSpotSound;                                       //  Edit, BlueprintVisible
        AkAmbienceMultiple::FAkAmbienceMultiple                      AmbienceDetectTool;                                      //  Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
        double                                                       RAbsorption;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       RDecay;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       RStereoWidth;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       RLevel;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       _3DCenterSpotLPAttenuation;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       RPreDelay;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<AkAudio::UAkAudioEvent*>                  RandomSpot;                                              //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TArray<BP_AK_Ambient_3D::ABP_AK_Ambient_3D_C*>   CullingObject;                                           //  Edit, BlueprintVisible, DisableEditOnTemplate
        BasicTypes::FString                                          VO_LocKey;                                               //  Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
        Engine::FTimerHandle                                         GlobalManagerInitializeTimer;                            //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        bool                                                         bCollisionActivated;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BP_AudioZoneBox::ABP_AudioZoneBox_C*>     SlaveOcclusionZone;                                      //  Edit, BlueprintVisible, DisableEditOnTemplate
        BasicTypes::TArray<BP_AudioZoneBox::ABP_AudioZoneBox_C*>     MasterOcclusionZone;                                     //  Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance

    public:
        void IsIntersect(const CoreUObject::FBox& A, const CoreUObject::FBox& B, bool* bResult);
        void FillAllOverlappedZonesAsSlave();
        BP_AudioZoneBox::ABP_AudioZoneBox_C* GetHighestPriorityMaster();
        void UpdateMasterOcclusionZones(BP_AudioZoneBox::ABP_AudioZoneBox_C* InMaster, bool bAdd);
        void EnableAkComponentsTick(bool bEnable);
        void Reverb_param();
        void Spawn3dEnvEvent(AkAudio::UAkAudioEvent* AkEvent, AkAudio::UAkAudioEvent** PlayedAk, double* Delay);
        void FindAmbienceSpotPoint();
        void setReverb();
        void ActiveIndoor(bool* ActiveIndoor);
        void CalculateAttenuate();
        void CollisionAcitive();
        void UserConstructionScript();
        void Bp_EnvZoneEnter(BP_AudioZoneBox::ABP_AudioZoneBox_C* OverlapedZone);
        void BP_EnvZoneLeave(BP_AudioZoneBox::ABP_AudioZoneBox_C* LeaveZone);
        void BP_EnvZoneInitActive();
        void BP_EnvZoneActiveByPlayer();
        void BP_EnvZoneDiscard();
        void BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const Engine::FHitResult& SweepResult);
        void BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
        void BpSpawnDirecEnvEventStart();
        void BpAkZone3dBaseRepeat(AkAudio::UAkAudioEvent* RepeatAkEvent, double Delay);
        void BpAkZone3dSecodryRepeat(AkAudio::UAkAudioEvent* RepeatAkEvent, double Delay);
        void ReceiveBeginPlay();
        void CustomEvent();
        void OnMyPlayerEnter();
        void NotifyOcclusionToSlave(bool bActivated);
        void ExecuteUbergraph_BP_AudioZoneBox(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AudioZoneBox.BP_AudioZoneBox_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
