#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_UBlueprintAsyncActionBase.h"
#include "CoreUObject_FFrameTime.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieScene { class UMovieSceneSequencePlayer; };
namespace CG::Engine { class USceneComponent; };
namespace CG::MovieSceneTracks { class UMovieSceneAsyncAction_SequencePrediction; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieSceneTracks
{
    /**
     * Class /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction
     * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
     */
    class UMovieSceneAsyncAction_SequencePrediction : public Engine::UBlueprintAsyncActionBase
    {
    public:
        BasicTypes::UMulticastInlineDelegate                         Result;                                                  //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         Failure;                                                 //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        MovieScene::UMovieSceneSequencePlayer*                       SequencePlayer;                                          //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::USceneComponent*                                     SceneComponent;                                          //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* STATIC_PredictWorldTransformAtTime(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, float TimeInSeconds);
        MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* STATIC_PredictWorldTransformAtFrame(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, const CoreUObject::FFrameTime& FrameTime);
        MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* STATIC_PredictLocalTransformAtTime(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, float TimeInSeconds);
        MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* STATIC_PredictLocalTransformAtFrame(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, const CoreUObject::FFrameTime& FrameTime);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
