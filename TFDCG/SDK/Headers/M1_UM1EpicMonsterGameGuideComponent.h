#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "M1_FM1BossGameGuideGroup.h"
#include "M1_UM1ActorComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1PlayerControllerInGame; };
namespace CG::M1 { class AM1EpicMonster; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1EpicMonsterGameGuideComponent
     * Size -> 0x00C0 (FullSize[0x0188] - InheritedSize[0x00C8])
     */
    class UM1EpicMonsterGameGuideComponent : public M1::UM1ActorComponent
    {
    public:
        BasicTypes::TMap<M1::EM1BossGameGuideCondition, M1::FM1BossGameGuideGroup> GameGuides;                                              //  Edit, Protected, NativeAccessSpecifierProtected
        int32_t                                                      GameGuideGroupId;                                        //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1PlayerControllerInGame*                               PC;                                                      //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::AM1EpicMonster*                                          EpicMonster_Owner;                                       //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x58];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnActivateForTheFirstTime();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1EpicMonsterGameGuideComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
