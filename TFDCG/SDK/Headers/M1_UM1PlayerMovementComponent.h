#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FRuntimeFloatCurve.h"
#include "CoreUObject_FVector.h"
#include "M1_UM1CharacterMovementComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class UM1QueryServiceComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PlayerMovementComponent
     * Size -> 0x0164 (FullSize[0x0E40] - InheritedSize[0x0CDC])
     */
    class UM1PlayerMovementComponent : public M1::UM1CharacterMovementComponent
    {
    public:
        uint8_t                                                      UnknownData_0003[0x4];                                   //  Fix Super Size
        uint8_t                                                      UnknownData_0000[0xA8];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FRuntimeFloatCurve                                   SmoothLocationSpeedCurve;                                //  Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
        float                                                        DoubleJumpZVelocity;                                     //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Player*                                               Player_Owner;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1QueryServiceComponent*                                QueryService_Component;                                  //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        CoreUObject::FVector                                         LastWalkingOnGroundLocation;                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0xC];                                   //  MISSED OFFSET (PADDING)

    public:
        bool WillLandHard();
        float GetFallingFromHeightTime();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PlayerMovementComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
