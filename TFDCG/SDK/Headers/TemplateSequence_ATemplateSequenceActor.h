#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "MovieScene_FMovieSceneSequencePlaybackSettings.h"
#include "CoreUObject_FSoftObjectPath.h"
#include "TemplateSequence_FTemplateSequenceBindingOverrideData.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::TemplateSequence { class UTemplateSequencePlayer; };
namespace CG::TemplateSequence { class UTemplateSequence; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TemplateSequence
{
    /**
     * Class /Script/TemplateSequence.TemplateSequenceActor
     * Size -> 0x0068 (FullSize[0x02B0] - InheritedSize[0x0248])
     */
    class ATemplateSequenceActor : public Engine::AActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        MovieScene::FMovieSceneSequencePlaybackSettings              PlaybackSettings;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        TemplateSequence::UTemplateSequencePlayer*                   SequencePlayer;                                          //  BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FSoftObjectPath                                 TemplateSequence;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        TemplateSequence::FTemplateSequenceBindingOverrideData       BindingOverride;                                         //  BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (PADDING)

    public:
        void SetSequence(TemplateSequence::UTemplateSequence* InSequence);
        void SetBinding(Engine::AActor* Actor, bool bOverridesDefault);
        TemplateSequence::UTemplateSequence* LoadSequence();
        TemplateSequence::UTemplateSequencePlayer* GetSequencePlayer();
        TemplateSequence::UTemplateSequence* GetSequence();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/TemplateSequence.TemplateSequenceActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
