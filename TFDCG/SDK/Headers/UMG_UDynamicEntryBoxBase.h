#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector2D.h"
#include "BasicTypes_TArray.h"
#include "UMG_ENUMS.h"
#include "UMG_FSlateChildSize.h"
#include "SlateCore_ENUMS.h"
#include "UMG_FRadialBoxSettings.h"
#include "UMG_FUserWidgetPool.h"
#include "UMG_UWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UUserWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.DynamicEntryBoxBase
     * Size -> 0x00D8 (FullSize[0x0208] - InheritedSize[0x0130])
     */
    class UDynamicEntryBoxBase : public UMG::UWidget
    {
    public:
        CoreUObject::FVector2D                                       EntrySpacing;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<CoreUObject::FVector2D>                   SpacingPattern;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        UMG::EDynamicBoxType                                         EntryBoxType;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::FSlateChildSize                                         EntrySizeRule;                                           //  Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected
        SlateCore::EHorizontalAlignment                              EntryHorizontalAlignment;                                //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SlateCore::EVerticalAlignment                                EntryVerticalAlignment;                                  //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      MaxElementSize;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::FRadialBoxSettings                                      RadialBoxSettings;                                       //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x14];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::FUserWidgetPool                                         EntryWidgetPool;                                         //  Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate

    public:
        void SetRadialSettings(const UMG::FRadialBoxSettings& InSettings);
        void SetEntrySpacing(const CoreUObject::FVector2D& InEntrySpacing);
        int32_t GetNumEntries();
        BasicTypes::TArray<UMG::UUserWidget*> GetAllEntries();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.DynamicEntryBoxBase");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
