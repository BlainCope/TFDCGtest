#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1LargeChunkSettings.h"
#include "M1_FM1SmallChunkSettings.h"
#include "ApexDestruction_UDestructibleComponent.h"
#include "Engine_FNavDataConfig.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1DestructibleComponent
     * Size -> 0x0104 (FullSize[0x0980] - InheritedSize[0x087C])
     */
    class UM1DestructibleComponent : public ApexDestruction::UDestructibleComponent
    {
    public:
        int32_t                                                      OverridePowerResistance;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1::FM1LargeChunkSettings                                    LargeChunkSettings;                                      //  Edit, NativeAccessSpecifierPublic
        M1::FM1SmallChunkSettings                                    SmallChunkSettings;                                      //  Edit, NativeAccessSpecifierPublic
        float                                                        FractureImpulseMultiplier;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        FractureImpulseRadiusMultiplier;                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x11];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bDestructed;                                             //  Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x1E];                                  //  MISSED OFFSET (PADDING)

    public:
        bool OnShouldUseGeometry(const Engine::FNavDataConfig& NavDataConfig);
        void OnFractured(const CoreUObject::FVector& HitPoint, const CoreUObject::FVector& HitDirection);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1DestructibleComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
