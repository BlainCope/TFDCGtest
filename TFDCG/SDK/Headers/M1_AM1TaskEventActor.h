#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TMap.h"
#include "Engine_AActor.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1PushAwayCharacterComponent; };
namespace CG::M1 { class UM1ActorWidgetComponent; };
namespace CG::M1 { class UM1TaskEvent; };
namespace CG::M1 { class UM1TaskComponent; };
namespace CG::M1 { class AM1TaskEventActorDynamicGoalActor; };
namespace CG::M1 { class UM1InteractionInvokerComponent; };
namespace CG::M1 { class UM1ActivatedByEventComponent; };
namespace CG::M1 { class UM1StateMachine; };
namespace CG::M1 { class UM1VisibilityControlComponent; };
namespace CG::M1 { class UM1TaskEventActorTrait; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1TaskEventActor
     * Size -> 0x01E0 (FullSize[0x0428] - InheritedSize[0x0248])
     */
    class AM1TaskEventActor : public Engine::AActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x1A];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bPushAwayWhenActivated;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        PushAwayRadiusInCentimeters;                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1PushAwayCharacterComponent*                           PushAwayCharacterComponent;                              //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1ActorWidgetComponent*                                 WidgetComponent;                                         //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::EM1TaskEventActorRunResult                               RunResult;                                               //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bEnabledManualCompletion;                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x96];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bOverlapEnabled;                                         //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseInvokerOverlap;                                      //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1TaskEvent*>                        ExecutedEvents;                                          //  ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<M1::UM1TaskComponent*>                    TaskComponents;                                          //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::AM1TaskEventActorDynamicGoalActor*>   DynamicGoalActors;                                       //  ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0005[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      CurrentTaskEventPhaseIndex;                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            TaskActorUIKey;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1EventActorState                                       EventActorState;                                         //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1InteractionInvokerComponent*                          InteractionInvokerComponent;                             //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0008[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1ActivatedByEventComponent*>        ActivatedByEventComponents;                              //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::UM1StateMachine*                                         StateMachineForActivated;                                //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1VisibilityControlComponent*                           VisibilityControlComponent;                              //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1::UM1TaskEventActorTrait*, M1::UM1TaskEventActorTrait*> CurrentTraits;                                           //  Transient, NativeAccessSpecifierPrivate

    public:
        void TaskActorStateChanged(M1::EM1EventActorState InState);
        void OnRep_UseInvokerOverlap();
        void OnRep_TaskActorState();
        void OnRep_RunResult();
        void OnComponentEndOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex);
        void OnComponentBeginOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool InbFromSweep, const Engine::FHitResult& InSweepResult);
        void OnBeginInteraction(CoreUObject::UObject* InInteractionAccepter);
        void NetMulticastRunActivationEvents(BasicTypes::TArray<M1::UM1TaskEvent*> InEvents);
        bool HasTypeOfEvent(M1::UM1TaskEvent* InType);
        M1::UM1InteractionInvokerComponent* GetInteractionInvokerComponent();
        BasicTypes::TArray<Engine::AActor*> GetAttachedActorsByType(Engine::AActor* InType);
        M1::UM1ActorWidgetComponent* GetActorWidgetComponent();
        M1::EM1EventActorState GetActorState();
        void BP_ShouldBeVisibleOnLocal(bool InVisible);
        void BP_RunResult(M1::EM1TaskEventActorRunResult InRunResult);
        void BP_EventActorState(M1::EM1EventActorState InState);
        void Activate(bool InActivated);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1TaskEventActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
