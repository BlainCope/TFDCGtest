#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1ActiveAbilityOperationId.h"
#include "BasicTypes_TMap.h"
#include "M1Data_ENUMS.h"
#include "M1_UM1SkillAbility.h"
#include "M1Data_FM1AbilityParamData.h"
#include "M1_FM1AbilityEvent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAnimInstance; };
namespace CG::Engine { class UAnimMontage; };
namespace CG::M1 { class UM1AbilityTask_PlayMontageAndWait; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Skill_Evade
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Gameplay/PC/Common/Skill_Evade.Skill_Evade_C
     * Size -> 0x0300 (FullSize[0x0618] - InheritedSize[0x0318])
     */
    class USkill_Evade_C : public M1::UM1SkillAbility
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        CoreUObject::FVector                                         StartLoc;                                                //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FVector                                         EvadeDir;                                                //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       EvadeTime;                                               //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       EvadeMoveTimeRate;                                       //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       EvadeDistance;                                           //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<Engine::UAnimInstance*>                   AbilityAnimLayers;                                       //  Edit, BlueprintVisible, DisableEditOnInstance
        CoreUObject::FVector                                         SavedInputAxis;                                          //  Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::FM1ActiveAbilityOperationId>          EventEvadeOprationIds;                                   //  Edit, BlueprintVisible, DisableEditOnInstance
        double                                                       EvadeExitCooltime;                                       //  Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_F;                                          //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_FL;                                         //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_FR;                                         //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_L;                                          //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_R;                                          //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_BL;                                         //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_BR;                                         //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::TMap<M1Data::EM1CharacterGender, Engine::UAnimMontage*> EvadeMontage_B;                                          //  Edit, BlueprintVisible, DisableEditOnInstance
        Engine::UAnimMontage*                                        SelectedMontage;                                         //  Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        M1::UM1AbilityTask_PlayMontageAndWait*                       PlayMontageTask;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash

    public:
        void GetEvadeDistance(double* OutDistance);
        void IsPlayerRunning(bool* bOutRunning);
        void ConvertDegreeTo8Direction(double Angle, Engine::UAnimMontage** outMontage);
        void AxisMoveSmoothingOnReached();
        BasicTypes::TArray<M1Data::FM1AbilityParamData> MakeSkillActivateParams(Engine::AActor* InOwner);
        void IsRunning(bool* bRunning);
        void GetEvadeAnimLength(double* OutLength);
        void GetEvadeRecoveryAnimLength(double* OutLength);
        void OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F(bool DestinationReached, bool TimedOut, const CoreUObject::FVector& FinalTargetLocation);
        void OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF(const M1::FM1AbilityEvent& Event);
        void OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF(const M1::FM1AbilityEvent& Event);
        void OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF(const M1::FM1AbilityEvent& Event);
        void BP_OnActivated();
        void BP_OnDeactivated(bool bCancelled);
        void ExecuteUbergraph_Skill_Evade(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Gameplay/PC/Common/Skill_Evade.Skill_Evade_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
