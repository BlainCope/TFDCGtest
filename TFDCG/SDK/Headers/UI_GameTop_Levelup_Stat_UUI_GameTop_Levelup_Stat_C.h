#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "M1_UM1UIGameTop_LevelUpStat.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UWidgetAnimation; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UI_GameTop_Levelup_Stat
{
    /**
     * WidgetBlueprintGeneratedClass /Game/UI/Game/Widgets/UI_GameTop_Levelup_Stat.UI_GameTop_Levelup_Stat_C
     * Size -> 0x0010 (FullSize[0x0728] - InheritedSize[0x0718])
     */
    class UUI_GameTop_Levelup_Stat_C : public M1::UM1UIGameTop_LevelUpStat
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        UMG::UWidgetAnimation*                                       UI_AnimOpen;                                             //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash

    public:
        void PreConstruct(bool IsDesignTime);
        void PlayStatOpenAnim(double InDelay);
        void ExecuteUbergraph_UI_GameTop_Levelup_Stat(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("WidgetBlueprintGeneratedClass /Game/UI/Game/Widgets/UI_GameTop_Levelup_Stat.UI_GameTop_Levelup_Stat_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
