#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "BasicTypes_TSet.h"
#include "BasicTypes_FString.h"
#include "Engine_AHUD.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1DataWidgetPackage; };
namespace CG::M1 { class UM1UIWidgetContainer; };
namespace CG::M1 { class AM1PreviewLevelSelector; };
namespace CG::M1 { class UM1UIWidget; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1HUD
     * Size -> 0x0110 (FullSize[0x0448] - InheritedSize[0x0338])
     */
    class AM1HUD : public Engine::AHUD
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::EM1MainWidgetType                                        DefaultMainWidgetType;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1DataWidgetPackage*                                    DataWidgetPackage;                                       //  ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1UIWidgetContainer*                                    WidgetContainer;                                         //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<BasicTypes::FString>                        ForciblyHiddenContexts;                                  //  Transient, NativeAccessSpecifierPrivate
        bool                                                         bNetworkWaitingUIVisible;                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1PreviewLevelSelector*                                 PreviewLevelSelectorClass;                               //  Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::AM1PreviewLevelSelector*                                 PreviewLevelSelector;                                    //  ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0005[0x68];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1UIWidget*                                             ToolTipWidget;                                           //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void STATIC_ToggleDevelopmenetUI(CoreUObject::UObject* WorldContextObject, bool bVisible);
        void STATIC_ShowWaitingForNetworkUI(CoreUObject::UObject* WorldContextObject, float InDuration, float InShowDelay);
        M1::UM1UIWidget* STATIC_ShowBackgroundLoadingUI(CoreUObject::UObject* WorldContextObject);
        void PrintForcingUIModeWidgets();
        M1::AM1PreviewLevelSelector* GetPreviewLevelSelector();
        M1::UM1UIWidget* STATIC_FindOverlayWidget(CoreUObject::UObject* WorldContextObject, M1::EM1OverlayWidgetType InType);
        M1::UM1UIWidget* STATIC_FindOrCreateDialogWidget(CoreUObject::UObject* WorldContextObject);
        M1::UM1UIWidget* STATIC_FindDialogWidget(CoreUObject::UObject* WorldContextObject);
        M1::UM1UIWidget* STATIC_FindBoostNoticeWidget(CoreUObject::UObject* WorldContextObject);
        M1::UM1UIWidget* STATIC_CreateStandaloneWidget(CoreUObject::UObject* WorldContextObject, M1::EStandaloneWidgetType InType);
        M1::UM1UIWidget* STATIC_CreateOverlayWidget(CoreUObject::UObject* WorldContextObject, M1::EM1OverlayWidgetType InType);
        M1::UM1UIWidget* STATIC_CreateMatchingWidget(CoreUObject::UObject* WorldContextObject);
        M1::UM1UIWidget* STATIC_CreateMainWidget(CoreUObject::UObject* WorldContextObject, M1::EM1MainWidgetType InType);
        M1::UM1UIWidget* STATIC_CreateInGameSequenceWidget(CoreUObject::UObject* WorldContextObject, M1::EM1InGameSequenceType InSequenceType);
        M1::UM1UIWidget* STATIC_CreateCommonWidget(CoreUObject::UObject* WorldContextObject, M1::EM1CommonWidgetType InType);
        M1::UM1UIWidget* STATIC_CreateBetweenStandaloneWidget(CoreUObject::UObject* WorldContextObject, M1::EM1AboveMainButUnderStandaloneWidgetType InType);
        void STATIC_CloseWaitingForNetworkUI(CoreUObject::UObject* WorldContextObject);
        void CloseStandalone();
        void STATIC_CloseBackgroundLoadingUI(CoreUObject::UObject* WorldContextObject);
        void ClearTestWidgets();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1HUD");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
