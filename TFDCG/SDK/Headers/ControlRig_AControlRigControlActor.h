#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "ControlRig_UControlRig.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FTransform.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UMaterialInstanceDynamic; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * Class /Script/ControlRig.ControlRigControlActor
     * Size -> 0x00B8 (FullSize[0x0300] - InheritedSize[0x0248])
     */
    class AControlRigControlActor : public Engine::AActor
    {
    public:
        Engine::AActor*                                              ActorToTrack;                                            //  Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::UControlRig*                                     ControlRigClass;                                         //  Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bRefreshOnTick;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsSelectable;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UMaterialInterface*                                  MaterialOverride;                                        //  Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          ColorParameter;                                          //  Edit, BlueprintVisible, ZeroConstructor, Interp, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCastShadows;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USceneComponent*                                     ActorRootComponent;                                      //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TSoftObjectPtr<ControlRig::UControlRig>          ControlRig;                                              //  ELEMENT_SIZE_MISMATCH Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TArray<BasicTypes::FName>                        ControlNames;                                            //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        BasicTypes::TArray<CoreUObject::FTransform>                  ShapeTransforms;                                         //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UStaticMeshComponent*>            Components;                                              //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UMaterialInstanceDynamic*>        Materials;                                               //  ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            ColorParameterName;                                      //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void ResetControlActor();
        void Refresh();
        void Clear();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ControlRig.ControlRigControlActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
