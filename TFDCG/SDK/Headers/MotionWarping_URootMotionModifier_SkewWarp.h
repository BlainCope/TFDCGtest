#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "MotionWarping_URootMotionModifier_Warp.h"
#include "BasicTypes_FName.h"
#include "MotionWarping_ENUMS.h"
#include "CoreUObject_FTransform.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MotionWarping { class UMotionWarpingComponent; };
namespace CG::Engine { class UAnimSequenceBase; };
namespace CG::MotionWarping { class URootMotionModifier_SkewWarp; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MotionWarping
{
    /**
     * Class /Script/MotionWarping.RootMotionModifier_SkewWarp
     * Size -> 0x0000 (FullSize[0x0190] - InheritedSize[0x0190])
     */
    class URootMotionModifier_SkewWarp : public MotionWarping::URootMotionModifier_Warp
    {
    public:
        MotionWarping::URootMotionModifier_SkewWarp* STATIC_AddRootMotionModifierSkewWarp(MotionWarping::UMotionWarpingComponent* InMotionWarpingComp, Engine::UAnimSequenceBase* InAnimation, float InStartTime, float InEndTime, const BasicTypes::FName& InWarpTargetName, MotionWarping::EWarpPointAnimProvider InWarpPointAnimProvider, const CoreUObject::FTransform& InWarpPointAnimTransform, const BasicTypes::FName& InWarpPointAnimBoneName, bool bInWarpTranslation, bool bInIgnoreZAxis, bool bInWarpRotation, MotionWarping::EMotionWarpRotationType InRotationType, float InWarpRotationTimeMultiplier);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MotionWarping.RootMotionModifier_SkewWarp");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
