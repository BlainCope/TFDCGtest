#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UScriptDelegate.h"
#include "BasicTypes_FText.h"
#include "UMG_FWidgetTransform.h"
#include "CoreUObject_FVector2D.h"
#include "SlateCore_ENUMS.h"
#include "CoreUObject_ENUMS.h"
#include "UMG_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "UMG_UVisual.h"
#include "BasicTypes_FName.h"
#include "UMG_FEventReply.h"
#include "SlateCore_FGeometry.h"
#include "SlateCore_FPointerEvent.h"
#include "UMG_FFieldNotificationId.h"
#include "SlateCore_FSlateColor.h"
#include "SlateCore_FSlateBrush.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UPanelSlot; };
namespace CG::UMG { class UWidget; };
namespace CG::UMG { class USlateAccessibleWidgetData; };
namespace CG::UMG { class UWidgetNavigation; };
namespace CG::UMG { class UPropertyBinding; };
namespace CG::Engine { class APlayerController; };
namespace CG::UMG { class UPanelWidget; };
namespace CG::Engine { class ULocalPlayer; };
namespace CG::Engine { class UGameInstance; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.Widget
     * Size -> 0x0108 (FullSize[0x0130] - InheritedSize[0x0028])
     */
    class UWidget : public UMG::UVisual
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::UPanelSlot*                                             Slot;                                                    //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, TextExportTransient, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  bIsEnabledDelegate;                                      //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FText                                            ToolTipText;                                             //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  ToolTipTextDelegate;                                     //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        UMG::UWidget*                                                ToolTipWidget;                                           //  Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  ToolTipWidgetDelegate;                                   //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  VisibilityDelegate;                                      //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        UMG::FWidgetTransform                                        RenderTransform;                                         //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FVector2D                                       RenderTransformPivot;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::EFlowDirectionPreference                          FlowDirectionPreference;                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsVolatile : 1;                                         //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsEnabled : 1;                                          //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bOverride_Cursor : 1;                                    //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsVariable : 1;                                         //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCreatedByConstructionScript : 1;                        //  BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::EMouseCursor                                    Cursor;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::EWidgetClipping                                   Clipping;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        UMG::ESlateVisibility                                        Visibility;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        RenderOpacity;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::EPixelSnappingMethod                              PixelSnappingMethod;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIgnoreCulling : 1;                                      //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::USlateAccessibleWidgetData*                             AccessibleWidgetData;                                    //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        UMG::UWidgetNavigation*                                      Navigation;                                              //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<UMG::UPropertyBinding*>                   NativeBindings;                                          //  ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0004[0x20];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetVisibility(UMG::ESlateVisibility InVisibility);
        void SetUserFocus(Engine::APlayerController* PlayerController);
        void SetToolTipText(const BasicTypes::FText& InToolTipText);
        void SetToolTip(UMG::UWidget* Widget);
        void SetRenderTranslation(const CoreUObject::FVector2D& Translation);
        void SetRenderTransformPivot(const CoreUObject::FVector2D& Pivot);
        void SetRenderTransformAngle(float Angle);
        void SetRenderTransform(const UMG::FWidgetTransform& InTransform);
        void SetRenderShear(const CoreUObject::FVector2D& Shear);
        void SetRenderScale(const CoreUObject::FVector2D& Scale);
        void SetRenderOpacity(float InOpacity);
        void SetPixelSnappingMethod(SlateCore::EPixelSnappingMethod InPixelSnappingMethod);
        void SetNavigationRuleExplicit(SlateCore::EUINavigation Direction, UMG::UWidget* InWidget);
        void SetNavigationRuleCustomBoundary(SlateCore::EUINavigation Direction, const BasicTypes::UScriptDelegate& InCustomDelegate);
        void SetNavigationRuleCustom(SlateCore::EUINavigation Direction, const BasicTypes::UScriptDelegate& InCustomDelegate);
        void SetNavigationRuleBase(SlateCore::EUINavigation Direction, SlateCore::EUINavigationRule Rule);
        void SetNavigationRule(SlateCore::EUINavigation Direction, SlateCore::EUINavigationRule Rule, const BasicTypes::FName& WidgetToFocus);
        void SetKeyboardFocus();
        void SetIsEnabled(bool bInIsEnabled);
        void SetIgnoreCulling(bool bInIgnoreCulling);
        void SetFocus();
        void SetCursor(CoreUObject::EMouseCursor InCursor);
        void SetClipping(SlateCore::EWidgetClipping InClipping);
        void SetAllNavigationRules(SlateCore::EUINavigationRule Rule, const BasicTypes::FName& WidgetToFocus);
        void ResetCursor();
        void RemoveFromParent();
        UMG::FEventReply OnReply__DelegateSignature();
        UMG::FEventReply OnPointerEvent__DelegateSignature(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent);
        void K2_RemoveFieldValueChangedDelegate(const UMG::FFieldNotificationId& FieldId, const BasicTypes::UScriptDelegate& Delegate);
        void K2_BroadcastFieldValueChanged(const UMG::FFieldNotificationId& FieldId);
        void K2_AddFieldValueChangedDelegate(const UMG::FFieldNotificationId& FieldId, const BasicTypes::UScriptDelegate& Delegate);
        bool IsVisible();
        bool IsRendered();
        bool IsInViewport();
        bool IsHovered();
        bool IsCulledInLastFrame();
        void InvalidateLayoutAndVolatility();
        bool HasUserFocusedDescendants(Engine::APlayerController* PlayerController);
        bool HasUserFocus(Engine::APlayerController* PlayerController);
        bool HasMouseCaptureByUser(int32_t UserIndex, int32_t PointerIndex);
        bool HasMouseCapture();
        bool HasKeyboardFocus();
        bool HasFocusedDescendants();
        bool HasAnyUserFocus();
        UMG::UWidget* GetWidget__DelegateSignature();
        UMG::ESlateVisibility GetVisibility();
        SlateCore::FGeometry GetTickSpaceGeometry();
        BasicTypes::FText GetText__DelegateSignature();
        UMG::ESlateVisibility GetSlateVisibility__DelegateSignature();
        SlateCore::FSlateColor GetSlateColor__DelegateSignature();
        SlateCore::FSlateBrush GetSlateBrush__DelegateSignature();
        float GetRenderTransformAngle();
        float GetRenderOpacity();
        SlateCore::EPixelSnappingMethod GetPixelSnappingMethod();
        UMG::UPanelWidget* GetParent();
        SlateCore::FGeometry GetPaintSpaceGeometry();
        Engine::APlayerController* GetOwningPlayer();
        Engine::ULocalPlayer* GetOwningLocalPlayer();
        CoreUObject::EMouseCursor GetMouseCursor__DelegateSignature();
        CoreUObject::FLinearColor GetLinearColor__DelegateSignature();
        bool GetIsEnabled();
        int32_t GetInt32__DelegateSignature();
        bool GetIgnoreCulling();
        Engine::UGameInstance* GetGameInstance();
        float GetFloat__DelegateSignature();
        CoreUObject::FVector2D GetDesiredSize();
        SlateCore::EWidgetClipping GetClipping();
        SlateCore::ECheckBoxState GetCheckBoxState__DelegateSignature();
        SlateCore::FGeometry GetCachedGeometry();
        bool GetBool__DelegateSignature();
        BasicTypes::FText GetAccessibleText();
        BasicTypes::FText GetAccessibleSummaryText();
        UMG::UWidget* GenerateWidgetForString__DelegateSignature(const BasicTypes::FString& Item);
        UMG::UWidget* GenerateWidgetForObject__DelegateSignature(CoreUObject::UObject* Item);
        void ForceVolatile(bool bForce);
        void ForceLayoutPrepass();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.Widget");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
