#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPerQualityLevelInt.h"
#include "Engine_FPerPlatformInt.h"
#include "BasicTypes_TArray.h"
#include "Engine_FStaticMaterial.h"
#include "Engine_FStaticMeshCurvature.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FBoxSphereBounds.h"
#include "Engine_UStreamableRenderAsset.h"
#include "BasicTypes_TMap.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FBox.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UBodySetup; };
namespace CG::Engine { class UStaticMeshSocket; };
namespace CG::Engine { class UAssetUserData; };
namespace CG::Engine { class UNavCollisionBase; };
namespace CG::StaticMeshDescription { class UStaticMeshDescription; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.StaticMesh
     * Size -> 0x0168 (FullSize[0x0230] - InheritedSize[0x00C8])
     */
    class UStaticMesh : public Engine::UStreamableRenderAsset
    {
    public:
        uint8_t                                                      UnknownData_0000[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FPerQualityLevelInt                                  MinQualityLevelLOD;                                      //  NativeAccessSpecifierPublic
        Engine::FPerPlatformInt                                      MinLOD;                                                  //  NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FStaticMaterial>                  StaticMaterials;                                         //  BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate
        float                                                        LightmapUVDensity;                                       //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      LightMapResolution;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      LightMapCoordinateIndex;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        DistanceFieldSelfShadowBias;                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UBodySetup*                                          BodySetup;                                               //  Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      LODForCollision;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDoFastBuild : 1;                                        //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSupportRayTracing : 1;                                  //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSupportPhysicalMaterialMasks : 1;                       //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsBuiltAtRuntime : 1;                                   //  BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bHasNavigationData : 1;                                  //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bStripComplexCollisionForConsole : 1;                    //  BIT_FIELD Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bGenerateMeshDistanceField : 1;                          //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSupportUniformlyDistributedSampling : 1;                //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0002 : 1;                                    //  BIT_FIELD (PADDING)
        bool                                                         bAllowCPUAccess : 1;                                     //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSupportGpuUniformlyDistributedSampling : 1;             //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0xA];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bCalcSTMeshCurvature;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FStaticMeshCurvature>             STMeshLODCurvatureData;                                  //  ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UStaticMeshSocket*>               Sockets;                                                 //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         PositiveBoundsExtension;                                 //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         NegativeBoundsExtension;                                 //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FBoxSphereBounds                                ExtendedBounds;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        bool                                                         bReceiveGrassTrail;                                      //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        GrassTrailMultiplier;                                    //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      ElementToIgnoreForTexFactor;                             //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::UAssetUserData*>                  AssetUserData;                                           //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        Engine::UNavCollisionBase*                                   NavCollision;                                            //  Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, DuplicateTransient, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void SetStaticMaterials(BasicTypes::TArray<Engine::FStaticMaterial> InStaticMaterials);
        void SetMinLODForQualityLevels(BasicTypes::TMap<Engine::EPerQualityLevels, int32_t> QualityLevelMinimumLODs, int32_t Default);
        void SetMinimumLODForPlatforms(BasicTypes::TMap<BasicTypes::FName, int32_t> PlatformMinimumLODs);
        void SetMinimumLODForPlatform(const BasicTypes::FName& PlatformName, int32_t InMinLOD);
        void RemoveSocket(Engine::UStaticMeshSocket* Socket);
        StaticMeshDescription::UStaticMeshDescription* GetStaticMeshDescription(int32_t LODIndex);
        BasicTypes::TArray<Engine::FStaticMaterial> GetStaticMaterials();
        BasicTypes::TArray<Engine::UStaticMeshSocket*> GetSocketsByTag(const BasicTypes::FString& InSocketTag);
        int32_t GetNumTriangles(int32_t LODIndex);
        int32_t GetNumSections(int32_t InLOD);
        int32_t GetNumLODs();
        void GetMinLODForQualityLevels(BasicTypes::TMap<Engine::EPerQualityLevels, int32_t>* QualityLevelMinimumLODs, int32_t* Default);
        void GetMinimumLODForQualityLevels(BasicTypes::TMap<BasicTypes::FName, int32_t>* QualityLevelMinimumLODs);
        int32_t GetMinimumLODForQualityLevel(const BasicTypes::FName& QualityLevel);
        void GetMinimumLODForPlatforms(BasicTypes::TMap<BasicTypes::FName, int32_t>* PlatformMinimumLODs);
        int32_t GetMinimumLODForPlatform(const BasicTypes::FName& PlatformName);
        int32_t GetMaterialIndex(const BasicTypes::FName& MaterialSlotName);
        Engine::UMaterialInterface* GetMaterial(int32_t MaterialIndex);
        CoreUObject::FBoxSphereBounds GetBounds();
        CoreUObject::FBox GetBoundingBox();
        Engine::UStaticMeshSocket* FindSocket(const BasicTypes::FName& InSocketName);
        StaticMeshDescription::UStaticMeshDescription* STATIC_CreateStaticMeshDescription(CoreUObject::UObject* Outer);
        void BuildFromStaticMeshDescriptions(BasicTypes::TArray<StaticMeshDescription::UStaticMeshDescription*> StaticMeshDescriptions, bool bBuildSimpleCollision, bool bFastBuild);
        void AddSocket(Engine::UStaticMeshSocket* Socket);
        BasicTypes::FName AddMaterial(Engine::UMaterialInterface* Material);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.StaticMesh");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
