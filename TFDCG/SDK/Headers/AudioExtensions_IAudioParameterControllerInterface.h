#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_IInterface.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "AudioExtensions_FAudioParameter.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioExtensions
{
    /**
     * Class /Script/AudioExtensions.AudioParameterControllerInterface
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class IAudioParameterControllerInterface : public CoreUObject::IInterface
    {
    public:
        void SetTriggerParameter(const BasicTypes::FName& InName);
        void SetStringParameter(const BasicTypes::FName& InName, const BasicTypes::FString& InValue);
        void SetStringArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<BasicTypes::FString> InValue);
        void SetParameters_Blueprint(BasicTypes::TArray<AudioExtensions::FAudioParameter> InParameters);
        void SetObjectParameter(const BasicTypes::FName& InName, CoreUObject::UObject* InValue);
        void SetObjectArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<CoreUObject::UObject*> InValue);
        void SetIntParameter(const BasicTypes::FName& InName, int32_t inInt);
        void SetIntArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<int32_t> InValue);
        void SetFloatParameter(const BasicTypes::FName& InName, float InFloat);
        void SetFloatArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<float> InValue);
        void SetBoolParameter(const BasicTypes::FName& InName, bool InBool);
        void SetBoolArrayParameter(const BasicTypes::FName& InName, BasicTypes::TArray<bool> InValue);
        void ResetParameters();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AudioExtensions.AudioParameterControllerInterface");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
