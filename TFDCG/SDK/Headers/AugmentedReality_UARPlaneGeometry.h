#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "BasicTypes_TArray.h"
#include "AugmentedReality_UARTrackedGeometry.h"
#include "AugmentedReality_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AugmentedReality { class UARPlaneGeometry; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AugmentedReality
{
    /**
     * Class /Script/AugmentedReality.ARPlaneGeometry
     * Size -> 0x0038 (FullSize[0x0130] - InheritedSize[0x00F8])
     */
    class UARPlaneGeometry : public AugmentedReality::UARTrackedGeometry
    {
    public:
        uint8_t                                                      UnknownData_0001[0x4];                                   //  Fix Super Size
        CoreUObject::FVector                                         Center;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        CoreUObject::FVector                                         Extent;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<CoreUObject::FVector>                     BoundaryPolygon;                                         //  ZeroConstructor, NativeAccessSpecifierPrivate
        AugmentedReality::UARPlaneGeometry*                          SubsumedBy;                                              //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        AugmentedReality::UARPlaneGeometry* GetSubsumedBy();
        AugmentedReality::EARPlaneOrientation GetOrientation();
        CoreUObject::FVector GetExtent();
        CoreUObject::FVector GetCenter();
        BasicTypes::TArray<CoreUObject::FVector> GetBoundaryPolygonInLocalSpace();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AugmentedReality.ARPlaneGeometry");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
