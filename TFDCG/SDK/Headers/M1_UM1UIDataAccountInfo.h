#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "M1Data_FM1TemplateId.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_FText.h"
#include "M1_UM1UIData.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UTexture2D.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIDataAccountInfo
     * Size -> 0x0070 (FullSize[0x00A8] - InheritedSize[0x0038])
     */
    class UM1UIDataAccountInfo : public M1::UM1UIData
    {
    public:
        BasicTypes::FString                                          AccountName;                                             //  ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1Data::FM1TemplateId                                        CharacterTid;                                            //  Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      CharacterLevel;                                          //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      MasteryRank;                                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int64_t                                                      PartyUID;                                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1Data::FM1TemplateId                                        MapTemplateId;                                           //  Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bMaxCharacterLevel;                                      //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bMaxMasteryRank;                                         //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1Data::EM1LoginPlatformTypes                                PlatformType;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int64_t                                                      PlatformUid;                                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FString                                          PlatformOnlineId;                                        //  ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int64_t                                                      Npsn;                                                    //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsPlatformFriend;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsInGameOnline;                                         //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsPlatformOnline;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bCreator;                                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FText                                            PlayerTitle;                                             //  Transient, Protected, NativeAccessSpecifierProtected

    public:
        bool IsPlayingSameMissionWithLocalPlayer();
        bool IsPartyMember();
        bool IsPartyMaster();
        bool IsMaxMasteryRank();
        bool IsMaxCharacterLevel();
        bool IsCreatorUser();
        bool IsBlockUser();
        BasicTypes::FText GetPlayerTitle();
        int64_t GetPlatformUid();
        M1Data::EM1LoginPlatformTypes GetPlatformType();
        BasicTypes::FString GetPlatformOnlineId();
        BasicTypes::FString GetPlatformAccountName();
        int64_t GetNpsn();
        M1Data::EM1LoginPlatformTypes GetMyPlatformType();
        BasicTypes::FString GetMasteryRankString();
        BasicTypes::TSoftObjectPtr<Engine::UTexture2D> GetMasteryRankIcon();
        BasicTypes::TSoftObjectPtr<Engine::UTexture2D> GetMasteryRankBigIcon();
        int32_t GetMasteryRank();
        BasicTypes::FText GetMapText();
        bool GetIsPlatformOnline();
        bool GetIsPlatformFriend();
        bool GetIsOnline();
        bool GetIsInGameOnline();
        bool GetIsBookmark();
        BasicTypes::FText GetCharacterName();
        BasicTypes::FString GetCharacterLevelString();
        int32_t GetCharacterLevel();
        BasicTypes::FString GetAccountName();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIDataAccountInfo");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
