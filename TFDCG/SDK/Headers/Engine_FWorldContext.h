#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FURL.h"
#include "BasicTypes_TArray.h"
#include "Engine_FFullyLoadedPackagesInfo.h"
#include "Engine_FLevelStreamingStatus.h"
#include "Engine_FNamedNetDriver.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UPendingNetGame; };
namespace CG::Engine { class ULevel; };
namespace CG::Engine { class UObjectReferencer; };
namespace CG::Engine { class UGameViewportClient; };
namespace CG::Engine { class UGameInstance; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.WorldContext
     * Size -> 0x02C8
     */
    struct FWorldContext
    {
    public:
        uint8_t                                                      UnknownData_0000[0xC0];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FURL                                                 LastURL;                                                 //  NativeAccessSpecifierPublic
        Engine::FURL                                                 LastRemoteURL;                                           //  NativeAccessSpecifierPublic
        Engine::UPendingNetGame*                                     PendingNetGame;                                          //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FFullyLoadedPackagesInfo>         PackagesToFullyLoad;                                     //  ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::ULevel*>                          LoadedLevelsForPendingMapChange;                         //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UObjectReferencer*>               ObjectReferencers;                                       //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FLevelStreamingStatus>            PendingLevelStreamingStatusUpdates;                      //  ZeroConstructor, NativeAccessSpecifierPublic
        Engine::UGameViewportClient*                                 GameViewport;                                            //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UGameInstance*                                       OwningGameInstance;                                      //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FNamedNetDriver>                  ActiveNetDrivers;                                        //  ZeroConstructor, Transient, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0xA8];                                  //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
