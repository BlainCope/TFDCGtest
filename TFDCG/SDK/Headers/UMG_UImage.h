#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SlateCore_FSlateBrush.h"
#include "BasicTypes_UScriptDelegate.h"
#include "CoreUObject_FLinearColor.h"
#include "UMG_UWidget.h"
#include "CoreUObject_FVector2D.h"
#include "SlateCore_FSlateColor.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UTexture2D.h"
#include "Engine_UMaterialInterface.h"
#include "BasicTypes_TScriptInterface.h"
#include "Engine_ISlateTextureAtlasInterface.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::Engine { class UTexture2DDynamic; };
namespace CG::Engine { class USlateBrushAsset; };
namespace CG::Engine { class UMaterialInstanceDynamic; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.Image
     * Size -> 0x0148 (FullSize[0x0278] - InheritedSize[0x0130])
     */
    class UImage : public UMG::UWidget
    {
    public:
        SlateCore::FSlateBrush                                       Brush;                                                   //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  BrushDelegate;                                           //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    ColorAndOpacity;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  ColorAndOpacityDelegate;                                 //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bFlipForRightToLeftFlowDirection;                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptDelegate                                  OnMouseButtonDownEvent;                                  //  Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x44];                                  //  Fix size for supers

    public:
        void SetOpacity(float InOpacity);
        void SetDesiredSizeOverride(const CoreUObject::FVector2D& DesiredSize);
        void SetColorAndOpacity(const CoreUObject::FLinearColor& InColorAndOpacity);
        void SetBrushTintColor(const SlateCore::FSlateColor& TintColor);
        void SetBrushResourceObject(CoreUObject::UObject* ResourceObject);
        void SetBrushFromTextureDynamic(Engine::UTexture2DDynamic* Texture, bool bMatchSize);
        void SetBrushFromTexture(Engine::UTexture2D* Texture, bool bMatchSize);
        void SetBrushFromSoftTexture(BasicTypes::TSoftObjectPtr<Engine::UTexture2D> SoftTexture, bool bMatchSize);
        void SetBrushFromSoftMaterial(BasicTypes::TSoftObjectPtr<Engine::UMaterialInterface> SoftMaterial);
        void SetBrushFromMaterial(Engine::UMaterialInterface* Material);
        void SetBrushFromAtlasInterface(const BasicTypes::TScriptInterface<Engine::ISlateTextureAtlasInterface>& AtlasRegion, bool bMatchSize);
        void SetBrushFromAsset(Engine::USlateBrushAsset* Asset);
        void SetBrush(const SlateCore::FSlateBrush& InBrush);
        Engine::UMaterialInstanceDynamic* GetDynamicMaterial();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.Image");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
