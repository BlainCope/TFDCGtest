#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_UObject.h"
#include "M1_FM1Notice_NoticeRecentPlayerResponse.h"
#include "M1_FM1ToyFriend.h"
#include "M1_FM1Notice_SearchResponse.h"
#include "M1_FM1Notice_NoticeFriendUpdate.h"
#include "M1_FM1Notice_NoticeFriendMessage.h"
#include "M1_FM1Notice_NoticeFriendRequestUpdate.h"
#include "M1_FM1Notice_NoticeBlockUpdate.h"
#include "M1_FM1Notice_NoticeBlockMessage.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1SocialSimpleData; };
namespace CG::M1 { class UM1SocialInviteData; };
namespace CG::M1 { class UM1SocialPlayerData; };
namespace CG::M1 { class UM1SocialBlockData; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1SocialSystem
     * Size -> 0x07A0 (FullSize[0x07C8] - InheritedSize[0x0028])
     */
    class UM1SocialSystem : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x2D0];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<BasicTypes::FString, M1::UM1SocialSimpleData*> RequestFriendInvitePendingList;                          //  Transient, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, M1::UM1SocialInviteData*> ReceivedFriendInvitePendingList;                         //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x270];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<BasicTypes::FString, M1::UM1SocialPlayerData*> RecentList;                                              //  NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, M1::UM1SocialPlayerData*> InGameFriendList;                                        //  NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, M1::UM1SocialPlayerData*> PlatformFriendList;                                      //  NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1SocialInviteData*>                 PartyInvitedList;                                        //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1SocialInviteData*>                 FriendInvitedList;                                       //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, M1::UM1SocialBlockData*> InGameBlockList;                                         //  NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x60];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRecentPlayerResponse(const M1::FM1Notice_NoticeRecentPlayerResponse& InNotification);
        void OnReceivePlatformFriendList(bool InIsSuccess, BasicTypes::TArray<M1::FM1ToyFriend> InFriendList);
        void OnReceiveEventSearchResponse(const M1::FM1Notice_SearchResponse& InNotification);
        void OnReceiveEventInGameFriendUpdate(const M1::FM1Notice_NoticeFriendUpdate& InNotification);
        void OnReceiveEventFriendMessage(const M1::FM1Notice_NoticeFriendMessage& InNotification);
        void OnReceiveEventFriendInviteUpdate(const M1::FM1Notice_NoticeFriendRequestUpdate& InNotification);
        void OnReceiveEventBlockUpdate(const M1::FM1Notice_NoticeBlockUpdate& InNotification);
        void OnReceiveEventBlockMessage(const M1::FM1Notice_NoticeBlockMessage& InNotification);
        void OnInGamePolicyChanged();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1SocialSystem");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
