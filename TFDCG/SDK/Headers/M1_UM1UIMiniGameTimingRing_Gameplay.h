#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SlateCore_FProgressBarStyle.h"
#include "BasicTypes_TArray.h"
#include "M1_ENUMS.h"
#include "M1_UM1UIWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UIMiniGameTimingRing_Ring; };
namespace CG::M1 { class UM1ProgressBar; };
namespace CG::UMG { class UImage; };
namespace CG::M1 { class UM1UIKeySymbol; };
namespace CG::UMG { class UPanelWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIMiniGameTimingRing_Gameplay
     * Size -> 0x0578 (FullSize[0x0C80] - InheritedSize[0x0708])
     */
    class UM1UIMiniGameTimingRing_Gameplay : public M1::UM1UIWidget
    {
    public:
        float                                                        RemainingTimeToStartAlert;                               //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SlateCore::FProgressBarStyle                                 DefaultProgressBarStyle;                                 //  Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
        SlateCore::FProgressBarStyle                                 AlertProgressBarStyle;                                   //  Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
        M1::UM1UIMiniGameTimingRing_Ring*                            RingWidgetClass;                                         //  Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<M1::EM1SystemKey>                         StopNeedleKeyCandidates;                                 //  Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        float                                                        StartDelay;                                              //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1ProgressBar*                                          PB_RemainingTime;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UImage*                                                 Image_SuccessRange;                                      //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UImage*                                                 Image_Needle;                                            //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIKeySymbol*                                          UI_StopNeedleKey;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UPanelWidget*                                           Panel_Rings;                                             //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<M1::UM1UIMiniGameTimingRing_Ring*>        OrderedRingWidgets;                                      //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x58];                                  //  MISSED OFFSET (PADDING)

    public:
        void Start(float InDelay);
        void OnKeyPressed_StopNeedleCandidate(M1::UM1UIWidget* InWidget);
        void OnKeyPressed_SelectedStopNeedle(M1::UM1UIWidget* InWidget);
        void BP_PlayAnim_ShowNeedleAndRange(bool bShow);
        void BP_OnTimingMiss();
        void BP_OnTimingHit();
        void AddRingWidget(int32_t InRingIndex);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIMiniGameTimingRing_Gameplay");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
