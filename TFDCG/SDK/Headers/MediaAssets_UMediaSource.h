#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MediaAssets
{
    /**
     * Class /Script/MediaAssets.MediaSource
     * Size -> 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
     */
    class UMediaSource : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x58];                                  //  MISSED OFFSET (PADDING)

    public:
        bool Validate();
        void SetMediaOptionString(const BasicTypes::FName& Key, const BasicTypes::FString& Value);
        void SetMediaOptionInt64(const BasicTypes::FName& Key, int64_t Value);
        void SetMediaOptionFloat(const BasicTypes::FName& Key, float Value);
        void SetMediaOptionBool(const BasicTypes::FName& Key, bool Value);
        BasicTypes::FString GetUrl();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MediaAssets.MediaSource");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
