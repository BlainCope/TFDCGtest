#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "M1_FM1CustomizePartsLineInfo.h"
#include "CoreUObject_FLinearColor.h"
#include "M1_UM1UICustomizePageBase.h"
#include "M1Data_FM1TemplateId.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UICustomizeItemSlot; };
namespace CG::M1 { class UM1UICharacterList; };
namespace CG::M1 { class UM1UIWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UICustomizeCharacter
     * Size -> 0x00B8 (FullSize[0x0980] - InheritedSize[0x08C8])
     */
    class UM1UICustomizeCharacter : public M1::UM1UICustomizePageBase
    {
    public:
        M1::UM1UICustomizeItemSlot*                                  UI_HeadSkinSlot;                                         //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UICustomizeItemSlot*                                  UI_BodySkinSlot;                                         //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UICustomizeItemSlot*                                  UI_FaceSkinSlot;                                         //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UICustomizeItemSlot*                                  UI_BackAttachmentSlot;                                   //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UICustomizeItemSlot*                                  UI_ChestAttachmentSlot;                                  //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UICharacterList*                                      UI_Character_List;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIWidget*                                             CursorOnCharacterSlot;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1UIWidget*                                             SelectedCharacterSlot;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bShowCharacterList;                                      //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        CharacterSlotMoveInterval;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1::EM1CustomizeCharacterParts, M1::FM1CustomizePartsLineInfo> PartsLineInfoList;                                       //  BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        CoreUObject::FLinearColor                                    LineColor;                                               //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        LineThickness;                                           //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ActorRotationValue;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnToggleCharacterListClicked(M1::UM1UIWidget* InWidget);
        void OnShowCharacterListClicked(M1::UM1UIWidget* InWidget);
        void OnEventPreviewCameraControl(bool InProceeding);
        void OnEventPreviewCameraBlend(bool InProceeding);
        void OnEventPreviewActorControl(bool InProceeding);
        void OnEquipCustomizedCharacterSkinImpl(const M1Data::FM1TemplateId& InCharacterId, const M1Data::FM1TemplateId& InSkinTid, bool bEquipped);
        void OnCharacterSlotCursorLeft(M1::UM1UIWidget* InWidget);
        void OnCharacterSlotCursorEntered(M1::UM1UIWidget* InWidget);
        void OnCharacterSlotClicked(M1::UM1UIWidget* InWidget);
        void OnCharacterPrevPressed(M1::UM1UIWidget* InWidget);
        void OnCharacterNextPressed(M1::UM1UIWidget* InWidget);
        void BP_PlayMoveCharacterSlotSound();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UICustomizeCharacter");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
