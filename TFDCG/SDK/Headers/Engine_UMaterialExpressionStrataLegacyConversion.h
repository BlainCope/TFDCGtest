#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FExpressionInput.h"
#include "Engine_FShadingModelMaterialInput.h"
#include "Engine_FStrataMaterialInfo.h"
#include "Engine_UMaterialExpressionStrataBSDF.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USubsurfaceProfile; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.MaterialExpressionStrataLegacyConversion
     * Size -> 0x0348 (FullSize[0x03F8] - InheritedSize[0x00B0])
     */
    class UMaterialExpressionStrataLegacyConversion : public Engine::UMaterialExpressionStrataBSDF
    {
    public:
        Engine::FExpressionInput                                     BaseColor;                                               //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Metallic;                                                //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Specular;                                                //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Roughness;                                               //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Anisotropy;                                              //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     EmissiveColor;                                           //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Normal;                                                  //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Tangent;                                                 //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     SubsurfaceColor;                                         //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     ClearCoat;                                               //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     ClearCoatRoughness;                                      //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     Opacity;                                                 //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     TransmittanceColor;                                      //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     WaterScatteringCoefficients;                             //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     WaterAbsorptionCoefficients;                             //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     WaterPhaseG;                                             //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     ColorScaleBehindWater;                                   //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     ClearCoatNormal;                                         //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     CustomTangent;                                           //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FShadingModelMaterialInput                           ShadingModel;                                            //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USubsurfaceProfile*                                  SubsurfaceProfile;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FStrataMaterialInfo                                  ConvertedStrataMaterialInfo;                             //  NativeAccessSpecifierPublic

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.MaterialExpressionStrataLegacyConversion");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
