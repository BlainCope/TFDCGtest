#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "LiveLinkInterface_FSubjectFrameHandle.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "LiveLinkInterface_FLiveLinkTransform.h"
#include "LiveLinkInterface_FLiveLinkSubjectKey.h"
#include "LiveLinkInterface_FLiveLinkSourceHandle.h"
#include "CoreUObject_FTransform.h"
#include "LiveLinkInterface_FLiveLinkSubjectName.h"
#include "CoreUObject_FGuid.h"
#include "BasicTypes_FText.h"
#include "LiveLinkInterface_FLiveLinkBasicBlueprintData.h"
#include "LiveLinkInterface_FSubjectMetadata.h"
#include "BasicTypes_TMap.h"
#include "LiveLinkInterface_FLiveLinkSkeletonStaticData.h"
#include "LiveLinkInterface_FLiveLinkAnimationFrameData.h"
#include "LiveLinkInterface_FLiveLinkBaseBlueprintData.h"
#include "CoreUObject_FTimecode.h"
#include "LiveLinkInterface_FLiveLinkSubjectRepresentation.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::LiveLinkInterface { class ULiveLinkRole; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::LiveLink
{
    /**
     * Class /Script/LiveLink.LiveLinkBlueprintLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class ULiveLinkBlueprintLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_TransformNames(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, BasicTypes::TArray<BasicTypes::FName>* TransformNames);
        void STATIC_TransformName(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, BasicTypes::FName* Name);
        void STATIC_SetLiveLinkSubjectEnabled(const LiveLinkInterface::FLiveLinkSubjectKey& SubjectKey, bool bEnabled);
        bool STATIC_RemoveSource(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle);
        void STATIC_ParentBoneSpaceTransform(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, CoreUObject::FTransform* Transform);
        int32_t STATIC_NumberOfTransforms(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle);
        bool STATIC_IsSpecificLiveLinkSubjectEnabled(const LiveLinkInterface::FLiveLinkSubjectKey& SubjectKey, bool bForThisFrame);
        bool STATIC_IsSourceStillValid(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle);
        bool STATIC_IsLiveLinkSubjectEnabled(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName);
        bool STATIC_HasParent(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform);
        void STATIC_GetTransformByName(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, const BasicTypes::FName& TransformName, LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform);
        void STATIC_GetTransformByIndex(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, int32_t TransformIndex, LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform);
        LiveLinkInterface::ULiveLinkRole* STATIC_GetSpecificLiveLinkSubjectRole(const LiveLinkInterface::FLiveLinkSubjectKey& SubjectKey);
        BasicTypes::FText STATIC_GetSourceTypeFromGuid(const CoreUObject::FGuid& SourceGuid);
        BasicTypes::FText STATIC_GetSourceType(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle);
        BasicTypes::FText STATIC_GetSourceStatus(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle);
        BasicTypes::FText STATIC_GetSourceMachineName(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle);
        void STATIC_GetRootTransform(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform);
        bool STATIC_GetPropertyValue(LiveLinkInterface::FLiveLinkBasicBlueprintData* BasicData, const BasicTypes::FName& PropertyName, float* Value);
        void STATIC_GetParent(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, LiveLinkInterface::FLiveLinkTransform* Parent);
        void STATIC_GetMetadata(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FSubjectMetadata* MetaData);
        BasicTypes::TArray<LiveLinkInterface::FLiveLinkSubjectKey> STATIC_GetLiveLinkSubjects(bool bIncludeDisabledSubject, bool bIncludeVirtualSubject);
        LiveLinkInterface::ULiveLinkRole* STATIC_GetLiveLinkSubjectRole(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName);
        BasicTypes::TArray<LiveLinkInterface::FLiveLinkSubjectName> STATIC_GetLiveLinkEnabledSubjectNames(bool bIncludeVirtualSubject);
        void STATIC_GetCurves(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, BasicTypes::TMap<BasicTypes::FName, float>* Curves);
        void STATIC_GetChildren(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, BasicTypes::TArray<LiveLinkInterface::FLiveLinkTransform>* Children);
        void STATIC_GetBasicData(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkBasicBlueprintData* BasicBlueprintData);
        bool STATIC_GetAnimationStaticData(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkSkeletonStaticData* AnimationStaticData);
        bool STATIC_GetAnimationFrameData(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkAnimationFrameData* AnimationFrameData);
        bool STATIC_EvaluateLiveLinkFrameWithSpecificRole(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName, LiveLinkInterface::ULiveLinkRole* Role, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData);
        bool STATIC_EvaluateLiveLinkFrameAtWorldTimeOffset(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName, LiveLinkInterface::ULiveLinkRole* Role, float WorldTimeOffset, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData);
        bool STATIC_EvaluateLiveLinkFrameAtSceneTime(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName, LiveLinkInterface::ULiveLinkRole* Role, const CoreUObject::FTimecode& SceneTime, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData);
        bool STATIC_EvaluateLiveLinkFrame(const LiveLinkInterface::FLiveLinkSubjectRepresentation& SubjectRepresentation, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData);
        void STATIC_ComponentSpaceTransform(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, CoreUObject::FTransform* Transform);
        int32_t STATIC_ChildCount(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/LiveLink.LiveLinkBlueprintLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
