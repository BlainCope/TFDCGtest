#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1MissionDeathEvasionBarrierSymbols.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "M1_AM1MissionTargetActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USphereComponent; };
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class AM1MissionInstantDeathBarrierSpline; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTargetInstantDeathBarrier
     * Size -> 0x0040 (FullSize[0x05C8] - InheritedSize[0x0588])
     */
    class AM1MissionTargetInstantDeathBarrier : public M1::AM1MissionTargetActor
    {
    public:
        M1::FM1MissionDeathEvasionBarrierSymbols                     BarrierSymbols;                                          //  Net, Transient, RepNotify, NativeAccessSpecifierPrivate
        Engine::USphereComponent*                                    SphereComponent;                                         //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<BasicTypes::TWeakObjectPtr<M1::AM1Player>> OverlappedPlayers;                                       //  ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        float                                                        MoveSpeed;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        DistanceAlongSpline;                                     //  Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::AM1MissionInstantDeathBarrierSpline*                     SplineActor;                                             //  Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnRep_SplineActor();
        void OnRep_BarrierSymbols();
        void OnEndOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        void OnBeginOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        bool CanBeOverlappedBy(Engine::AActor* InPlayer);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTargetInstantDeathBarrier");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
