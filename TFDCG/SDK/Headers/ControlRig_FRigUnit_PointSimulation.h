#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "RigVM_FRigVMSimPoint.h"
#include "ControlRig_FCRSimLinearSpring.h"
#include "ControlRig_FCRSimPointForce.h"
#include "ControlRig_FCRSimSoftCollision.h"
#include "RigVM_ENUMS.h"
#include "ControlRig_FRigUnit_PointSimulation_BoneTarget.h"
#include "CoreUObject_FVector.h"
#include "ControlRig_FRigUnit_PointSimulation_DebugSettings.h"
#include "RigVM_FRigVMFourPointBezier.h"
#include "ControlRig_FRigUnit_PointSimulation_WorkData.h"
#include "RigVM_FRigVMFunction_SimBaseMutable.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * ScriptStruct /Script/ControlRig.RigUnit_PointSimulation
     * Size -> 0x0190 (FullSize[0x0260] - InheritedSize[0x00D0])
     */
    struct FRigUnit_PointSimulation : public RigVM::FRigVMFunction_SimBaseMutable
    {
    public:
        BasicTypes::TArray<RigVM::FRigVMSimPoint>                    Points;                                                  //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<ControlRig::FCRSimLinearSpring>           Links;                                                   //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<ControlRig::FCRSimPointForce>             Forces;                                                  //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<ControlRig::FCRSimSoftCollision>          CollisionVolumes;                                        //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        float                                                        SimulatedStepsPerSecond;                                 //  Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        RigVM::ERigVMSimPointIntegrateType                           IntegratorType;                                          //  Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        VerletBlend;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<ControlRig::FRigUnit_PointSimulation_BoneTarget> BoneTargets;                                             //  Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
        bool                                                         bLimitLocalPosition;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bPropagateToChildren;                                    //  Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         PrimaryAimAxis;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         SecondaryAimAxis;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ControlRig::FRigUnit_PointSimulation_DebugSettings           DebugSettings;                                           //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        RigVM::FRigVMFourPointBezier                                 Bezier;                                                  //  BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        ControlRig::FRigUnit_PointSimulation_WorkData                WorkData;                                                //  Transient, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x8];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
