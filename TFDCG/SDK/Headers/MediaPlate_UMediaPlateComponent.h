#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "MediaAssets_FMediaSourceCacheSettings.h"
#include "MediaAssets_ENUMS.h"
#include "CoreUObject_FVector2D.h"
#include "Engine_UActorComponent.h"
#include "CoreUObject_FTimespan.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MediaAssets { class UMediaSoundComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::MediaAssets { class UMediaPlaylist; };
namespace CG::MediaAssets { class UMediaTexture; };
namespace CG::MediaAssets { class UMediaPlayer; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MediaPlate
{
    /**
     * Class /Script/MediaPlate.MediaPlateComponent
     * Size -> 0x00C0 (FullSize[0x0168] - InheritedSize[0x00A8])
     */
    class UMediaPlateComponent : public Engine::UActorComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bPlayOnOpen;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAutoPlay;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableAudio;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        StartTime;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        MediaAssets::UMediaSoundComponent*                           SoundComponent;                                          //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UStaticMeshComponent*                                StaticMeshComponent;                                     //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UStaticMeshComponent*>            Letterboxes;                                             //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic
        MediaAssets::UMediaPlaylist*                                 MediaPlaylist;                                           //  BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      PlaylistIndex;                                           //  BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        MediaAssets::FMediaSourceCacheSettings                       CacheSettings;                                           //  Edit, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic
        bool                                                         bIsMediaPlatePlaying;                                    //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bPlayOnlyWhenVisible;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bLoop;                                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        MediaAssets::EMediaTextureVisibleMipsTiles                   VisibleMipsTilesCalculations;                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MipMapBias;                                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bIsAspectRatioAuto;                                      //  BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bEnableMipMapUpscaling;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      MipLevelToUpscale;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        LetterboxAspectRatio;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector2D                                       MeshRange;                                               //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<MediaAssets::UMediaTexture*>              MediaTextures;                                           //  ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        MediaAssets::UMediaPlayer*                                   MediaPlayer;                                             //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x38];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetPlayOnlyWhenVisible(bool bInPlayOnlyWhenVisible);
        void SetMeshRange(const CoreUObject::FVector2D& InMeshRange);
        void SetLoop(bool bInLoop);
        void SetLetterboxAspectRatio(float AspectRatio);
        void SetIsAspectRatioAuto(bool bInIsAspectRatioAuto);
        bool Seek(const CoreUObject::FTimespan& Time);
        bool Rewind();
        void Play();
        void Pause();
        void Open();
        void OnMediaOpened(const BasicTypes::FString& DeviceUrl);
        void OnMediaEnd();
        bool IsMediaPlatePlaying();
        CoreUObject::FVector2D GetMeshRange();
        MediaAssets::UMediaTexture* GetMediaTexture(int32_t Index);
        MediaAssets::UMediaPlayer* GetMediaPlayer();
        bool GetLoop();
        float GetLetterboxAspectRatio();
        bool GetIsAspectRatioAuto();
        void Close();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MediaPlate.MediaPlateComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
