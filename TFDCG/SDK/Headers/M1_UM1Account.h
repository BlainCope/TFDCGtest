#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_TMap.h"
#include "M1Data_FM1TemplateId.h"
#include "M1_FM1MasteryLevelStat.h"
#include "M1_FM1GameMapInfo.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1AccountCharacter; };
namespace CG::M1 { class UM1AccountInventory; };
namespace CG::M1 { class UM1AccountMissionInfo; };
namespace CG::M1 { class UM1RuneManager; };
namespace CG::M1 { class UM1MapUserData; };
namespace CG::M1 { class UM1AccountQuestInfo; };
namespace CG::M1 { class UM1AccountSetting; };
namespace CG::M1 { class UM1AccountMailbox; };
namespace CG::M1 { class UM1AccountShop; };
namespace CG::M1 { class UM1AccountBattlePass; };
namespace CG::M1 { class UM1AccountBoostInfo; };
namespace CG::M1 { class UM1AccountCodexInfo; };
namespace CG::M1 { class UM1AccountVoidBattleInfo; };
namespace CG::M1 { class UM1AccountPreset; };
namespace CG::M1 { class UM1AccountInvasionInfo; };
namespace CG::M1 { class UM1AccountSeasonInfo; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1Account
     * Size -> 0x02D0 (FullSize[0x02F8] - InheritedSize[0x0028])
     */
    class UM1Account : public CoreUObject::UObject
    {
    public:
        int64_t                                                      AccountUid;                                              //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          LoginId;                                                 //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          SimpleID;                                                //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          Token;                                                   //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int64_t                                                      Npsn;                                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ConnectedGameServerIP;                                   //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      ConnectedGameServerPort;                                 //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      ConnectedGameServerIndex;                                //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ConnectedGameServerVersion;                              //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          CountryName;                                             //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          DeviceName;                                              //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          OsType;                                                  //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          OsName;                                                  //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          ServiceId;                                               //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          RegionId;                                                //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          FieldSessionId;                                          //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::EM1LoginPlatformTypes                                LoginPlatformType;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          LoginPlatformOnlineId;                                   //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int64_t                                                      LoginPlatformUid;                                        //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bCreator;                                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bJoinedGame;                                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bJustFinishedPrologue;                                   //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x5];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1Data::FM1TemplateId, M1::UM1AccountCharacter*> AllCharacters;                                           //  NativeAccessSpecifierPrivate
        M1::UM1AccountCharacter*                                     SelectedCharacter;                                       //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int64_t                                                      ExtendedCharacterSlotCount;                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountInventory*                                     Inventory;                                               //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountInventory*                                     PrologueInventory;                                       //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1MasteryLevelStat                                      MasteryLevelStat;                                        //  NoDestructor, NativeAccessSpecifierPrivate
        M1::UM1AccountMissionInfo*                                   MissionInfo;                                             //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1RuneManager*                                          RuneManager;                                             //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::FM1TemplateId                                        BattleZoneId;                                            //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bPrivateField;                                           //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1GameMapInfo                                           GameMapInfo;                                             //  Transient, NativeAccessSpecifierPrivate
        M1Data::FM1TemplateId                                        LastFieldDifficultyLevel;                                //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1Data::FM1TemplateId, M1::UM1MapUserData*> AllMaps;                                                 //  NativeAccessSpecifierPrivate
        M1::UM1AccountQuestInfo*                                     QuestInfo;                                               //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountSetting*                                       Setting;                                                 //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountMailbox*                                       Mailbox;                                                 //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<int32_t, bool>                              IsWatchedBannerPerGroup;                                 //  NativeAccessSpecifierPrivate
        M1::UM1AccountShop*                                          Shop;                                                    //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountBattlePass*                                    BattlePass;                                              //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountBoostInfo*                                     BoostInfo;                                               //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountCodexInfo*                                     CodexInfo;                                               //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountVoidBattleInfo*                                VoidBattleInfo;                                          //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountPreset*                                        Preset;                                                  //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountInvasionInfo*                                  InvasionInfo;                                            //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AccountSeasonInfo*                                    SeasonInfo;                                              //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1Account");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
