#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSet.h"
#include "M1_AM1MissionActorSpawner_Dropship.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USphereComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::M1 { class UM1ActorWidgetComponent; };
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class AM1Character; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionActorSpawner_CharacterDropship
     * Size -> 0x00B0 (FullSize[0x0398] - InheritedSize[0x02E8])
     */
    class AM1MissionActorSpawner_CharacterDropship : public M1::AM1MissionActorSpawner_Dropship
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USphereComponent*                                    SphereComponent;                                         //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::USceneComponent*                                     CharacterHangComponent;                                  //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1ActorWidgetComponent*                                 InfoWidgetComponent;                                     //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        ShipRadius;                                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        FakeFloorHeight;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        StartWalkingDelay;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<M1::AM1Player*>                             OverlappingPlayers;                                      //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Character*                                            CarryingCharacter;                                       //  Net, ZeroConstructor, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bReloadAnimPlayed;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bShowBlackMana;                                          //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x6];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnRep_ShowBlackMana();
        void OnRep_CarryingCharacter();
        void OnEndOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex);
        void OnBeginOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool InbFromSweep, const Engine::FHitResult& InSweepResult);
        M1::UM1ActorWidgetComponent* BP_GetInfoWidgetComponent();
        Engine::USceneComponent* BP_GetCharacterHangComponent();
        void BP_DoorOpen();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionActorSpawner_CharacterDropship");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
