#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FString.h"
#include "M1_FM1LoggedInAccountInfo.h"
#include "Engine_APlayerController.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_FName.h"
#include "M1_FM1PlayDialogContext.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1ActorManagerSubsystem; };
namespace CG::M1 { class UM1SoundSubsystem; };
namespace CG::M1 { class UM1AkAudioData; };
namespace CG::M1 { class UM1PrivateOnlineServiceComponent; };
namespace CG::M1 { class UM1InteractionComponent; };
namespace CG::M1 { class UM1IndicatorManagerComponent; };
namespace CG::M1 { class UM1QuestSystemComponent; };
namespace CG::M1 { class UM1PlatformAchievementSystemComponent; };
namespace CG::M1 { class UM1BattleInputComponent; };
namespace CG::M1 { class UM1DialogAkComponent; };
namespace CG::Engine { class AGameModeBase; };
namespace CG::Engine { class USoundBase; };
namespace CG::CoreUObject { class UObject; };
namespace CG::M1 { class UM1AkComponent; };
namespace CG::AkAudio { class UAkAudioEvent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PlayerController
     * Size -> 0x0178 (FullSize[0x0900] - InheritedSize[0x0788])
     */
    class AM1PlayerController : public Engine::APlayerController
    {
    public:
        uint8_t                                                      UnknownData_0000[0x28];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnStreamingLevelsLoaded;                                 //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0002[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bLevelsAreLoaded;                                        //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x1F];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1ActorManagerSubsystem*                                ActorManager_Subsystem;                                  //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1SoundSubsystem*                                       SoundSubsystem;                                          //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AkAudioData*                                          AkAudioData;                                             //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PrivateOnlineServiceComponent*                        PrivateOnlineServiceComponent;                           //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1InteractionComponent*                                 InteractionComponent;                                    //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1IndicatorManagerComponent*                            IndicatorManagerComponent;                               //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1QuestSystemComponent*                                 QuestSystemComponent;                                    //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PlatformAchievementSystemComponent*                   PlatformAchievementSystemComponent;                      //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1BattleInputComponent*                                 BattleInput;                                             //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1DialogAkComponent*                                    DialogComponentClass;                                    //  Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1DialogAkComponent*                                    DialogComponent;                                         //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bPlayerInNpcDialogScene;                                 //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x17];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FString>                      LoginOptionForDedicatedGame;                             //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        M1::FM1LoggedInAccountInfo                                   LoggedInAccountInfo;                                     //  Net, NativeAccessSpecifierPublic
        bool                                                         bSkipSetViewTargetWhenRestart;                           //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bFocused;                                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x26];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::AGameModeBase*                                       CurrrentGameModeClass;                                   //  ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0x30];                                  //  MISSED OFFSET (PADDING)

    public:
        void StopBGM();
        void ShowSessionMenu();
        void ServerRPCValidateLog(const BasicTypes::FString& LogMsg);
        void ServerNotifyInputMethodChanged(M1Data::EM1InputMethod InInputMethod);
        void PlayBGM(Engine::USoundBase* InSound, bool InPersistAcrossLevelTransition);
        void STATIC_GetSelectedCharacterName(CoreUObject::UObject* InWorldContext, BasicTypes::FString* OutName, int32_t* OutLevel);
        M1::UM1QuestSystemComponent* GetQuestSystemComponent();
        M1::UM1PrivateOnlineServiceComponent* GetPrivateServiceComponent();
        M1::UM1PlatformAchievementSystemComponent* GetPlatformAchievementSystemComponent();
        void STATIC_GetLoginID(CoreUObject::UObject* InWorldContext, BasicTypes::FString* OutLoginID);
        M1::UM1InteractionComponent* GetInteractionComponent();
        M1::UM1IndicatorManagerComponent* GetIndicatorManagerComponent();
        M1::UM1AkComponent* GetAkComponent();
        void ClientShowToastMessageFromServer(const BasicTypes::FName& InKey, BasicTypes::TArray<BasicTypes::FString> InParam);
        void ClientShowSystemMessageTypeFromServer(M1Data::EM1SystemMessageType InMessageType);
        void ClientShowPopupMessage(const BasicTypes::FString& InMessage);
        void ClientShowDialogFromServer(const BasicTypes::FName& InKey, const M1::FM1PlayDialogContext& InDialogContext);
        void ClientPlayFadeInOut(bool bInFadeIn, float InFadeDelay, bool bInImmediate);
        void ClientPlayAudioEvent(AkAudio::UAkAudioEvent* InEvent);
        void ClientNotifySomethingsWrong(const BasicTypes::FString& InMessage);
        void ClientNotifySomethingImportant(const BasicTypes::FString& InMessage);
        void ChangeLocaleTo(const BasicTypes::FString& InLocale);
        void ChangeLocaleNext();
        void ChangeAudioLocaleTo(const BasicTypes::FString& InLocale);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PlayerController");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
