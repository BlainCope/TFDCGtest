#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSet.h"
#include "M1_ENUMS.h"
#include "BasicTypes_FString.h"
#include "M1_UM1EditableByMetaObject.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class UM1TaskEventPreCondition; };
namespace CG::M1 { class AM1TaskEventActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1TaskEvent
     * Size -> 0x0188 (FullSize[0x01B0] - InheritedSize[0x0028])
     */
    class UM1TaskEvent : public M1::UM1EditableByMetaObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0xA8];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<M1::AM1Player*>                             PlayersThatReceivedEvent;                                //  Transient, NativeAccessSpecifierPrivate
        BasicTypes::TSet<M1::AM1Player*>                             PlayersThatCompletedEvent;                               //  Transient, NativeAccessSpecifierPrivate
        float                                                        DelayTime;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        ElaspedTime;                                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1TaskEventPreCondition*                                PreCondition;                                            //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bHasRun;                                                 //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1ResetType                                             ResetType;                                               //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1TaskEventActor*                                       OwnerActor;                                              //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          CachedFullName;                                          //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void RunOnClientImpl(M1::AM1Player* InPlayer);
        void RunOnAuthorityImpl(BasicTypes::TArray<M1::AM1Player*> InPlayers);
        void OnRep_Reset();
        void MulticastRunWhenActivatedImpl();
        M1::EM1TaskEventState GetStateImpl();
        void CompleteOnLocal();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1TaskEvent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
