#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "CoreUObject_FVector.h"
#include "M1_FM1AbilityId.h"
#include "M1_UM1SkillAbility.h"
#include "M1Data_ENUMS.h"
#include "GameplayTags_FGameplayTag.h"
#include "M1_FM1AbilityOperationParam.h"
#include "BasicTypes_FName.h"
#include "M1_FM1AbilityEvent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class UM1AbilityTask_WaitDelay; };
namespace CG::M1 { class UM1DataVisualFX; };
namespace CG::M1 { class UM1StatusEffect; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Skill_Bunny_Passive
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Gameplay/PC/Bunny/Skill_Bunny_Passive.Skill_Bunny_Passive_C
     * Size -> 0x0079 (FullSize[0x0391] - InheritedSize[0x0318])
     */
    class USkill_Bunny_Passive_C : public M1::UM1SkillAbility
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        CoreUObject::FVector                                         LastVelocity;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1AbilityId                                             HolingStatusAbilityID;                                   //  Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash
        M1::AM1Player*                                               OwnerCharacter;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        double                                                       WaitingTimeToDecrease;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        M1::UM1AbilityTask_WaitDelay*                                DecreaseAsyncTask;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        bool                                                         HasJumpedTwice;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         IsSkipHoldGague;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        double                                                       AOE_JumpSplashRadius;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        M1::UM1DataVisualFX*                                         LoopVFX;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        bool                                                         bAppliedLoopVFX;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        double                                                       PrevGaugeRatio;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        M1::FM1AbilityId                                             DecreaseSEId;                                            //  Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash
        bool                                                         bDeboneAttached;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void EndDecreaseAsyncTask();
        void PlayFullGuageLeavingSound();
        void PlayFullGuageEnteringSound();
        void PlayLandSound();
        void PlayHoldSound();
        void PlayDecreaseSound();
        void PlayIncreaseSound();
        void PlayDeactivationSound();
        void PlayActivationSound();
        void UpdateLoopVFX();
        void OnChangedGauge(M1Data::EM1StatType StatType);
        void IsMoving(bool* Result);
        void OnRemovedStatus(M1::UM1StatusEffect* StatusEffect);
        void StartHoldingGauge();
        void StartDecreaseGauge();
        void StartIncreaseGauge();
        void OnLandingExplosion();
        void MakeLandingExplosionParams(GameplayTags::FGameplayTag* OpTag, M1::FM1AbilityOperationParam* OpParam, double* Radius, BasicTypes::FName* FXName);
        void OnDoubleJump();
        void IsStopMoving(bool* Result);
        void IsStartMoving(bool* Result);
        void Init();
        void OnFinish_0D2FCA1545A6896DE5C053835CFE4803();
        void OnAbilityEvent_3C54BF444F4B2DFA3DDB0ABF06D3386E(const M1::FM1AbilityEvent& Event);
        void OnAbilityEvent_7750724D4E64E3C330A5AFAE95BBCF70(const M1::FM1AbilityEvent& Event);
        void OnEvent_134BDA8C445F3F990A76638F4D6E5055(const GameplayTags::FGameplayTag& InTag, bool InAdded);
        void BP_OnActivated();
        void OnTick(float DeltaSeconds);
        void BP_OnDeactivated(bool bCancelled);
        void OnStartMoving();
        void CheckOutStartedMovingOnce();
        void OnStopMoving();
        void OnDecreaseDelayFinished();
        void OnDeboneAttached();
        void OnDeboneDetached();
        void ExecuteUbergraph_Skill_Bunny_Passive(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Gameplay/PC/Bunny/Skill_Bunny_Passive.Skill_Bunny_Passive_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
