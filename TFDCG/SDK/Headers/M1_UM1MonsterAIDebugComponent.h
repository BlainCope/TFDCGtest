#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1MonsterAIDebugData.h"
#include "M1_FM1MonsterMoveDebugData.h"
#include "M1_FM1MonsterCoverDebugData.h"
#include "M1_FM1MonsterTargetDebugData.h"
#include "M1_FM1MonsterPatrolDebugData.h"
#include "BasicTypes_FName.h"
#include "M1_UM1CharacterComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MonsterAIDebugComponent
     * Size -> 0x00D8 (FullSize[0x01A8] - InheritedSize[0x00D0])
     */
    class UM1MonsterAIDebugComponent : public M1::UM1CharacterComponent
    {
    public:
        M1::FM1MonsterAIDebugData                                    DebugAIData;                                             //  Net, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1MonsterMoveDebugData                                  DebugAIMoveData;                                         //  Net, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1MonsterCoverDebugData                                 DebugAICoverData;                                        //  Net, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1MonsterTargetDebugData                                DebugAIMonsterTargetData;                                //  Net, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1MonsterPatrolDebugData                                DebugAIPatrolData;                                       //  Net, NoDestructor, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            DebugAICurrentBTNode;                                    //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4C];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MonsterAIDebugComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
