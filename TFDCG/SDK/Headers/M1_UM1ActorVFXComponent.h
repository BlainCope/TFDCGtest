#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1ActorVFX.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "M1_FM1ActorMaterialContext.h"
#include "M1_UM1ActorComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UFXSystemComponent; };
namespace CG::Engine { class UMeshComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1ActorVFXComponent
     * Size -> 0x0150 (FullSize[0x0218] - InheritedSize[0x00C8])
     */
    class UM1ActorVFXComponent : public M1::UM1ActorComponent
    {
    public:
        BasicTypes::TArray<M1::FM1ActorVFX>                          ActorVFXs;                                               //  Edit, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        BasicTypes::TMap<BasicTypes::TWeakObjectPtr<Engine::UFXSystemComponent>, int32_t> ReferencedFXCs;                                          //  Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        BasicTypes::TMap<BasicTypes::TWeakObjectPtr<Engine::UMeshComponent>, M1::FM1ActorMaterialContext> ActorMaterialContexts;                                   //  Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        Engine::UMeshComponent*                                      OwnerMeshComponent;                                      //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x98];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1ActorVFXComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
