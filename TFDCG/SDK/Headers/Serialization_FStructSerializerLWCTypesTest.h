#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FVector4.h"
#include "CoreUObject_FMatrix.h"
#include "CoreUObject_FPlane.h"
#include "CoreUObject_FQuat.h"
#include "CoreUObject_FRotator.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FBox.h"
#include "CoreUObject_FBox2D.h"
#include "CoreUObject_FBoxSphereBounds.h"
#include "CoreUObject_FOrientedBox.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TSet.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Serialization
{
    /**
     * ScriptStruct /Script/Serialization.StructSerializerLWCTypesTest
     * Size -> 0x0220
     */
    struct FStructSerializerLWCTypesTest
    {
    public:
        CoreUObject::FVector                                         Vector;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector2D                                       Vector2D;                                                //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector4                                        Vector4;                                                 //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FMatrix                                         Matrix;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FPlane                                          Plane;                                                   //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FQuat                                           Quat;                                                    //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FRotator                                        Rotator;                                                 //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      Transform;                                               //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FBox                                            Box;                                                     //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FBox2D                                          Box2D;                                                   //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FBoxSphereBounds                                BoxSphereBounds;                                         //  ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FOrientedBox                                    OrientedBox;                                             //  IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        float                                                        _float_;                                                 //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        double                                                       Double;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::FVector>                     VectorArray;                                             //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TMap<BasicTypes::FString, CoreUObject::FVector>  StrToVec;                                                //  NativeAccessSpecifierPublic
        BasicTypes::TSet<CoreUObject::FVector>                       VectorSet;                                               //  NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x8];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
