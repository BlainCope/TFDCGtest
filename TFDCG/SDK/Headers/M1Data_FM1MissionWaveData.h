#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_FM1TemplateId.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "M1Data_FM1MonsterDropInfo.h"
#include "M1Data_FM1MissionRewards.h"
#include "M1Data_FM1EliteAbilityGroup.h"
#include "M1Data_FM1EliteMonsterSkillGroupDataLink.h"
#include "Engine_FTableRowBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Data
{
    /**
     * ScriptStruct /Script/M1Data.M1MissionWaveData
     * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
     */
    struct FM1MissionWaveData : public Engine::FTableRowBase
    {
    public:
        M1Data::FM1TemplateId                                        TemplateId;                                              //  Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            StringId;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      WaveMonsterLevel;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<M1Data::FM1MonsterDropInfo>               DropItems;                                               //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        M1Data::FM1MissionRewards                                    WaveRewards;                                             //  Edit, NativeAccessSpecifierPublic
        float                                                        EliteApperanceChance;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      EliteMonsterSpawnMax;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        EliteMonsterSpawnChance;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1Data::FM1EliteAbilityGroup>             EliteAbilityGroup;                                       //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<M1Data::FM1EliteMonsterSkillGroupDataLink> DefaultEliteAbilityGroup;                                //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
