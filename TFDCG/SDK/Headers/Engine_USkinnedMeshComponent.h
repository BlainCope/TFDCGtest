#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TWeakObjectPtr.h"
#include "BasicTypes_TArray.h"
#include "Engine_ENUMS.h"
#include "Engine_FSkelMeshComponentLODInfo.h"
#include "CoreUObject_FBoxSphereBounds.h"
#include "CoreUObject_FMatrix.h"
#include "Engine_UMeshComponent.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"
#include "CoreUObject_FLinearColor.h"
#include "Engine_FSkelMeshSkinWeightInfo.h"
#include "CoreUObject_FTransform.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USkeletalMesh; };
namespace CG::Engine { class USkinnedAsset; };
namespace CG::Engine { class USkinnedMeshComponent; };
namespace CG::Engine { class UMeshDeformer; };
namespace CG::Engine { class UMeshDeformerInstanceSettings; };
namespace CG::Engine { class UMeshDeformerInstance; };
namespace CG::Engine { class UPhysicsAsset; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.SkinnedMeshComponent
     * Size -> 0x02F0 (FullSize[0x07A0] - InheritedSize[0x04B0])
     */
    class USkinnedMeshComponent : public Engine::UMeshComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USkeletalMesh*                                       SkeletalMesh;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::USkinnedAsset*                                       SkinnedAsset;                                            //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TWeakObjectPtr<Engine::USkinnedMeshComponent>    LeaderPoseComponent;                                     //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::ESkinCacheUsage>                  SkinCacheUsage;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bSetMeshDeformer;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UMeshDeformer*                                       MeshDeformer;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UMeshDeformerInstanceSettings*                       MeshDeformerInstanceSettings;                            //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UMeshDeformerInstance*                               MeshDeformerInstance;                                    //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x178];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UPhysicsAsset*                                       PhysicsAssetOverride;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      ForcedLodModel;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      MinLodModel;                                             //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        StreamingDistanceMultiplier;                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FSkelMeshComponentLODInfo>        LODInfo;                                                 //  ZeroConstructor, Transient, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x24];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::EVisibilityBasedAnimTickOption                       VisibilityBasedAnimTickOption;                           //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         UnknownData_0007 : 3;                                    //  BIT_FIELD (PADDING)
        bool                                                         bOverrideMinLod : 1;                                     //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bUseBoundsFromLeaderPoseComponent : 1;                   //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bForceWireframe : 1;                                     //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDisableMorphTarget : 1;                                 //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHideSkin : 1;                                           //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCastCapsuleIndirectShadow : 1;                          //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCastCapsuleDirectShadow : 1;                            //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bRecentlyRendered : 1;                                   //  BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCanHighlightSelectedSections : 1;                       //  BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bPerBoneMotionBlur : 1;                                  //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bConsiderAllBodiesForBounds : 1;                         //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bComponentUseFixedSkelBounds : 1;                        //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSyncAttachParentLOD : 1;                                //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCPUSkinning : 1;                                        //  BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableUpdateRateOptimizations : 1;                      //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDisplayDebugUpdateRateOptimizations : 1;                //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bRenderStatic : 1;                                       //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIgnoreLeaderPoseComponentLOD : 1;                       //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0008 : 2;                                    //  BIT_FIELD (PADDING)
        bool                                                         bCachedLocalBoundsUpToDate : 1;                          //  BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         UnknownData_0010 : 4;                                    //  BIT_FIELD (PADDING)
        bool                                                         bForceUpdateDynamicDataImmediately : 1;                  //  BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         UnknownData_0009 : 1;                                    //  BIT_FIELD (PADDING)
        bool                                                         bCachedWorldSpaceBoundsUpToDate : 1;                     //  BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bForceMeshObjectUpdate : 1;                              //  BIT_FIELD Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         UnknownData_0011 : 1;                                    //  BIT_FIELD (PADDING)
        bool                                                         bFollowerShouldTickPose : 1;                             //  BIT_FIELD Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0012[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        CapsuleIndirectShadowMinVisibility;                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0013[0x38];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FBoxSphereBounds                                CachedWorldOrLocalSpaceBounds;                           //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0014[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FMatrix                                         CachedWorldToLocalTransform;                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0015[0x20];                                  //  MISSED OFFSET (PADDING)

    public:
        void UnsetMeshDeformer();
        void UnloadSkinWeightProfile(const BasicTypes::FName& InProfileName);
        void UnHideBoneByName(const BasicTypes::FName& BoneName);
        void TransformToBoneSpace(const BasicTypes::FName& BoneName, const CoreUObject::FVector& InPosition, const CoreUObject::FRotator& InRotation, CoreUObject::FVector* OutPosition, CoreUObject::FRotator* OutRotation);
        void TransformFromBoneSpace(const BasicTypes::FName& BoneName, const CoreUObject::FVector& InPosition, const CoreUObject::FRotator& InRotation, CoreUObject::FVector* OutPosition, CoreUObject::FRotator* OutRotation);
        void ShowMaterialSection(int32_t MaterialID, int32_t SectionIndex, bool bShow, int32_t LODIndex);
        void ShowAllMaterialSections(int32_t LODIndex);
        void SetVertexOffsetUsage(int32_t LODIndex, int32_t Usage);
        void SetVertexColorOverride_LinearColor(int32_t LODIndex, BasicTypes::TArray<CoreUObject::FLinearColor> VertexColors);
        bool SetSkinWeightProfile(const BasicTypes::FName& InProfileName);
        void SetSkinWeightOverride(int32_t LODIndex, BasicTypes::TArray<Engine::FSkelMeshSkinWeightInfo> SkinWeights);
        void SetSkinnedAssetAndUpdate(Engine::USkinnedAsset* NewMesh, bool bReinitPose);
        void SetRenderStatic(bool bNewValue);
        void SetPreSkinningOffsets(int32_t LODIndex, BasicTypes::TArray<CoreUObject::FVector> Offsets);
        void SetPostSkinningOffsets(int32_t LODIndex, BasicTypes::TArray<CoreUObject::FVector> Offsets);
        void SetPhysicsAsset(Engine::UPhysicsAsset* NewPhysicsAsset, bool bForceReInit);
        void SetMinLOD(int32_t InNewMinLOD);
        void SetMeshDeformer(Engine::UMeshDeformer* InMeshDeformer);
        void SetLeaderPoseComponent(Engine::USkinnedMeshComponent* NewLeaderBoneComponent, bool bForceUpdate, bool bInFollowerShouldTickPose);
        void SetForcedLOD(int32_t InNewForcedLOD);
        void SetCastCapsuleIndirectShadow(bool bNewValue);
        void SetCastCapsuleDirectShadow(bool bNewValue);
        void SetCapsuleIndirectShadowMinVisibility(float NewValue);
        bool IsUsingSkinWeightProfile();
        bool IsMaterialSectionShown(int32_t MaterialID, int32_t LODIndex);
        bool IsBoneHiddenByName(const BasicTypes::FName& BoneName);
        void HideBoneByName(const BasicTypes::FName& BoneName, Engine::EPhysBodyOp PhysBodyOption);
        int32_t GetVertexOffsetUsage(int32_t LODIndex);
        bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(const BasicTypes::FName& BoneName, float* OutTwistAngle, float* OutSwingAngle);
        BasicTypes::FName GetSocketBoneName(const BasicTypes::FName& InSocketName);
        Engine::USkinnedAsset* GetSkinnedAsset();
        Engine::USkeletalMesh* GetSkeletalMesh_DEPRECATED();
        CoreUObject::FTransform GetRefPoseTransform(int32_t BoneIndex);
        CoreUObject::FVector GetRefPosePosition(int32_t BoneIndex);
        int32_t GetPredictedLODLevel();
        BasicTypes::FName GetParentBone(const BasicTypes::FName& BoneName);
        int32_t GetNumLODs();
        int32_t GetNumBones();
        Engine::UMeshDeformerInstance* GetMeshDeformerInstance();
        int32_t GetForcedLOD();
        CoreUObject::FTransform GetDeltaTransformFromRefPose(const BasicTypes::FName& BoneName, const BasicTypes::FName& BaseName);
        BasicTypes::FName GetCurrentSkinWeightProfileName();
        BasicTypes::FName GetBoneName(int32_t BoneIndex);
        int32_t GetBoneIndex(const BasicTypes::FName& BoneName);
        BasicTypes::FName FindClosestBone_K2(const CoreUObject::FVector& TestLocation, CoreUObject::FVector* BoneLocation, float IgnoreScale, bool bRequirePhysicsAsset);
        void ClearVertexColorOverride(int32_t LODIndex);
        void ClearSkinWeightProfile();
        void ClearSkinWeightOverride(int32_t LODIndex);
        bool BoneIsChildOf(const BasicTypes::FName& BoneName, const BasicTypes::FName& ParentBoneName);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.SkinnedMeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
