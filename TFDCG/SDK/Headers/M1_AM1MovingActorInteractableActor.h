#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "M1_AM1Actor.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1InteractionInvokerComponent; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MovingActorInteractableActor
     * Size -> 0x0018 (FullSize[0x0338] - InheritedSize[0x0320])
     */
    class AM1MovingActorInteractableActor : public M1::AM1Actor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::EM1MovingActorInteractableActorState                     CurrentState;                                            //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1InteractionInvokerComponent*                          InteractionInvokerComponent;                             //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnRep_CurrentState();
        void OnComponentEndOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex);
        void OnComponentBeginOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool InbFromSweep, const Engine::FHitResult& InSweepResult);
        void OnBeginInteraction(CoreUObject::UObject* InInteractionAccepter);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MovingActorInteractableActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
