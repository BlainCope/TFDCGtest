#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "BasicTypes_TScriptInterface.h"
#include "MovieSceneTracks_IMovieSceneConsoleVariableTrackInterface.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "MovieRenderPipelineSettings_FMoviePipelineConsoleVariableEntry.h"
#include "MovieRenderPipelineCore_UMoviePipelineSetting.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieRenderPipelineSettings
{
    /**
     * Class /Script/MovieRenderPipelineSettings.MoviePipelineConsoleVariableSetting
     * Size -> 0x00B0 (FullSize[0x00F8] - InheritedSize[0x0048])
     */
    class UMoviePipelineConsoleVariableSetting : public MovieRenderPipelineCore::UMoviePipelineSetting
    {
    public:
        BasicTypes::TArray<BasicTypes::TScriptInterface<MovieSceneTracks::IMovieSceneConsoleVariableTrackInterface>> ConsoleVariablePresets;                                  //  Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TMap<BasicTypes::FString, float>                 ConsoleVariables;                                        //  Deprecated, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      StartConsoleCommands;                                    //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      EndConsoleCommands;                                      //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<MovieRenderPipelineSettings::FMoviePipelineConsoleVariableEntry> CVars;                                                   //  Edit, ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x20];                                  //  MISSED OFFSET (PADDING)

    public:
        bool UpdateConsoleVariableEnableState(const BasicTypes::FString& Name, bool bIsEnabled);
        bool RemoveConsoleVariable(const BasicTypes::FString& Name, bool bRemoveAllInstances);
        BasicTypes::TArray<MovieRenderPipelineSettings::FMoviePipelineConsoleVariableEntry> GetConsoleVariables();
        bool AddOrUpdateConsoleVariable(const BasicTypes::FString& Name, float Value);
        bool AddConsoleVariable(const BasicTypes::FString& Name, float Value);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieRenderPipelineSettings.MoviePipelineConsoleVariableSetting");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
