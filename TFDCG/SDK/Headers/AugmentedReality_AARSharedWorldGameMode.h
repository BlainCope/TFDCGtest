#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_AGameMode.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AugmentedReality { class AARSharedWorldGameState; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AugmentedReality
{
    /**
     * Class /Script/AugmentedReality.ARSharedWorldGameMode
     * Size -> 0x0068 (FullSize[0x0398] - InheritedSize[0x0330])
     */
    class AARSharedWorldGameMode : public Engine::AGameMode
    {
    public:
        int32_t                                                      BufferSizePerChunk;                                      //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x64];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetPreviewImageData(BasicTypes::TArray<uint8_t> ImageData);
        void SetARWorldSharingIsReady();
        void SetARSharedWorldData(BasicTypes::TArray<uint8_t> ARWorldData);
        AugmentedReality::AARSharedWorldGameState* GetARSharedWorldGameState();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AugmentedReality.ARSharedWorldGameMode");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
