#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_UActorComponent.h"
#include "M1_FM1CalcDamageInfo.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1DamageTrackingInfo; };
namespace CG::Engine { class APawn; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1DamageTrackerComponent
     * Size -> 0x0040 (FullSize[0x00E8] - InheritedSize[0x00A8])
     */
    class UM1DamageTrackerComponent : public Engine::UActorComponent
    {
    public:
        bool                                                         bUsePlayerAsReferenceAxis;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1DamageTrackingInfo*>               Removable;                                               //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        float                                                        TimeInterval;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1DamageTrackingInfo*>               TrackingInfos;                                           //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void RemoveTrack(M1::UM1DamageTrackingInfo* InInfo);
        void OnTimerInterval();
        void OnPossessedPawnChanged(Engine::APawn* OldPawn, Engine::APawn* NewPawn);
        void OnLastDamageInfo(const M1::FM1CalcDamageInfo& LastDamageInfo);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1DamageTrackerComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
