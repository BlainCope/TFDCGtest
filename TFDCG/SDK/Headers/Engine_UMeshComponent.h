#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_UPrimitiveComponent.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.MeshComponent
     * Size -> 0x0038 (FullSize[0x04B0] - InheritedSize[0x0478])
     */
    class UMeshComponent : public Engine::UPrimitiveComponent
    {
    public:
        BasicTypes::TArray<Engine::UMaterialInterface*>              OverrideMaterials;                                       //  Edit, ZeroConstructor, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic
        Engine::UMaterialInterface*                                  OverlayMaterial;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        OverlayMaterialMaxDrawDistance;                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x14];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bEnableMaterialParameterCaching : 1;                     //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        void SetVectorParameterValueOnMaterials(const BasicTypes::FName& ParameterName, const CoreUObject::FVector& ParameterValue);
        void SetScalarParameterValueOnMaterials(const BasicTypes::FName& ParameterName, float ParameterValue);
        void SetOverlayMaterialMaxDrawDistance(float InMaxDrawDistance);
        void SetOverlayMaterial(Engine::UMaterialInterface* NewOverlayMaterial);
        void PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, int32_t CinematicTextureGroups);
        bool IsMaterialSlotNameValid(const BasicTypes::FName& MaterialSlotName);
        Engine::UMaterialInterface* GetOverlayMaterial();
        BasicTypes::TArray<BasicTypes::FName> GetMaterialSlotNames();
        BasicTypes::TArray<Engine::UMaterialInterface*> GetMaterials();
        int32_t GetMaterialIndex(const BasicTypes::FName& MaterialSlotName);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.MeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
