#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSet.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"
#include "M1_ENUMS.h"
#include "M1_AM1MissionDependantActor.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class UM1InteractionInvokerComponent; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UObject; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTargetExplosion
     * Size -> 0x0100 (FullSize[0x04A8] - InheritedSize[0x03A8])
     */
    class AM1MissionTargetExplosion : public M1::AM1MissionDependantActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<M1::AM1Player*>                             OverlappingPlayers;                                      //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x48];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        ExplosiveNames;                                          //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        bool                                                         bMissionActivated;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1InteractionInvokerComponent*                          InteractionInvokerComponent;                             //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      ExplosionIndex;                                          //  Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            MissionTargetRowName;                                    //  Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          StringId;                                                //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1MissionTargetActorWidgetVisibleType                   ActorWidgetVisibleType;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ActorWidgetHiddenRadius;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnRep_MissionTargetRowName();
        void OnEndOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        void OnComponentEndOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex);
        void OnComponentBeginOverlap(Engine::UPrimitiveComponent* InOverlappedComponent, Engine::AActor* InOtherActor, Engine::UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool InbFromSweep, const Engine::FHitResult& InSweepResult);
        void OnBeginOverlapActor(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        void OnBeginInteraction(CoreUObject::UObject* InInteractionAccepter);
        bool IsAnyPlayerEquippedExplosive();
        BasicTypes::TArray<BasicTypes::FName> GetRowNames();
        float GetActorWidgetOpacity();
        bool CanInteractWith();
        void BP_OnChangedCurrentState();
        BasicTypes::TArray<Niagara::UNiagaraComponent*> BP_GetNiagaraComponents(M1::EM1MissionTargetState MissionTargetState);
        BasicTypes::TArray<Niagara::UNiagaraComponent*> BP_GetAllNiagaraComponents();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTargetExplosion");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
