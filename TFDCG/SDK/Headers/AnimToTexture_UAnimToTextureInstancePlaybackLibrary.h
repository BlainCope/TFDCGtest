#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "AnimToTexture_FAnimToTextureInstanceData.h"
#include "AnimToTexture_FAnimToTextureInstancePlaybackData.h"
#include "CoreUObject_FTransform.h"
#include "AnimToTexture_FAnimToTextureAnimState.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UInstancedStaticMeshComponent; };
namespace CG::AnimToTexture { class UAnimToTextureDataAsset; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AnimToTexture
{
    /**
     * Class /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UAnimToTextureInstancePlaybackLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        bool STATIC_UpdateInstanceData(AnimToTexture::FAnimToTextureInstanceData* InstanceData, int32_t InstanceIndex, const AnimToTexture::FAnimToTextureInstancePlaybackData& PlaybackData, const CoreUObject::FTransform& Transform);
        void STATIC_SetupInstancedMeshComponent(Engine::UInstancedStaticMeshComponent* InstancedMeshComponent, AnimToTexture::FAnimToTextureInstanceData* InstanceData, int32_t NumInstances);
        bool STATIC_GetInstanceTransform(const AnimToTexture::FAnimToTextureInstanceData& InstanceData, int32_t InstanceIndex, CoreUObject::FTransform* InstanceTransform);
        bool STATIC_GetInstancePlaybackData(const AnimToTexture::FAnimToTextureInstanceData& InstanceData, int32_t InstanceIndex, AnimToTexture::FAnimToTextureInstancePlaybackData* InstancePlaybackData);
        void STATIC_BatchUpdateInstancedMeshComponent(Engine::UInstancedStaticMeshComponent* InstancedMeshComponent, AnimToTexture::FAnimToTextureInstanceData* InstanceData);
        bool STATIC_AnimStateFromDataAsset(AnimToTexture::UAnimToTextureDataAsset* DataAsset, int32_t StateIndex, AnimToTexture::FAnimToTextureAnimState* AnimState);
        void STATIC_AllocateInstanceData(AnimToTexture::FAnimToTextureInstanceData* InstanceData, int32_t Count);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
