#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "M1Data_FM1TemplateId.h"
#include "M1_FM1NpcCustomizingInfo.h"
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "M1_AM1Npc.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1PlayerCustomizeSkeletalMeshComponent; };
namespace CG::M1 { class UM1ClientOnlySkeletalMeshComponent; };
namespace CG::Engine { class UMeshComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PlayerNpc
     * Size -> 0x00D8 (FullSize[0x0830] - InheritedSize[0x0758])
     */
    class AM1PlayerNpc : public M1::AM1Npc
    {
    public:
        BasicTypes::FName                                            PlayerId;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::FM1TemplateId                                        PlayerTemplateId;                                        //  Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            WeaponId;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1Data::FM1TemplateId                                        WeaponTemplateId;                                        //  Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1NpcCustomizingInfo                                    CustomizingInfo;                                         //  Edit, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1PlayerCustomizeSkeletalMeshComponent*                 FaceMeshComponent;                                       //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PlayerCustomizeSkeletalMeshComponent*                 HeadMeshComponent;                                       //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PlayerCustomizeSkeletalMeshComponent*                 BackAttachmentComponent;                                 //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PlayerCustomizeSkeletalMeshComponent*                 ChestAttachmentComponent;                                //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1ClientOnlySkeletalMeshComponent*                      WeaponMeshComponent;                                     //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1::EM1CharacterMeshSlotType, Engine::UMeshComponent*> CustomizingMeshComponents;                               //  Edit, ExportObject, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PlayerNpc");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
