#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector2D.h"
#include "SlateCore_FGeometry.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UImage; };
namespace CG::Engine { class UMaterialInterface; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::WB_CrosshairLayerBase
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_SetSpread_Params
    {
    public:
        double                                                       Spread;                                                  //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_GetSafeViewportSize_Params
    {
    public:
        CoreUObject::FVector2D                                       ViewportSize;                                            //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_initializeEditableVariables_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_getWeaponRecoilResponsepixels_Params
    {
    public:
        double                                                       Recoil;                                                  //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_getImagePlane_Params
    {
    public:
        UMG::UImage*                                                 Image;                                                   //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_updateAutoRotation_Params
    {
    public:
        double                                                       DeltaTime;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_computeRenderingInfo_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_optimizeMaterialSizeAndPosition_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_GetMaterial_Params
    {
    public:
        Engine::UMaterialInterface*                                  Material;                                                //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_updateMaterialParameters_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_updateCanvasPanelSlot_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_Idle_Params
    {
    public:
        double                                                       DeltaTime;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_PreRender_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_Render_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_Tick_Params
    {
    public:
        SlateCore::FGeometry                                         MyGeometry;                                              //  0x0000(0x0038)  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
        float                                                        InDeltaTime;                                             //  0x0038(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_PreConstruct_Params
    {
    public:
        bool                                                         IsDesignTime;                                            //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_UpdateRender_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UWB_CrosshairLayerBase_C_ExecuteUbergraph_WB_CrosshairLayerBase_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
