#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Paper2D_FSpriteInstanceData.h"
#include "Engine_UMeshComponent.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FLinearColor.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::Paper2D { class UPaperSprite; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Paper2D
{
    /**
     * Class /Script/Paper2D.PaperGroupedSpriteComponent
     * Size -> 0x0030 (FullSize[0x04E0] - InheritedSize[0x04B0])
     */
    class UPaperGroupedSpriteComponent : public Engine::UMeshComponent
    {
    public:
        BasicTypes::TArray<Engine::UMaterialInterface*>              InstanceMaterials;                                       //  ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        BasicTypes::TArray<Paper2D::FSpriteInstanceData>             PerInstanceSpriteData;                                   //  Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        bool UpdateInstanceTransform(int32_t InstanceIndex, const CoreUObject::FTransform& NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);
        bool UpdateInstanceColor(int32_t InstanceIndex, const CoreUObject::FLinearColor& NewInstanceColor, bool bMarkRenderStateDirty);
        void SortInstancesAlongAxis(const CoreUObject::FVector& WorldSpaceSortAxis);
        bool RemoveInstance(int32_t InstanceIndex);
        bool GetInstanceTransform(int32_t InstanceIndex, CoreUObject::FTransform* OutInstanceTransform, bool bWorldSpace);
        int32_t GetInstanceCount();
        void ClearInstances();
        int32_t AddInstance(const CoreUObject::FTransform& Transform, Paper2D::UPaperSprite* Sprite, bool bWorldSpace, const CoreUObject::FLinearColor& Color);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Paper2D.PaperGroupedSpriteComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
