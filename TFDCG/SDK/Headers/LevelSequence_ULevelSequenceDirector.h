#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "CoreUObject_FQualifiedFrameTime.h"
#include "MovieScene_FMovieSceneObjectBindingID.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::LevelSequence { class ULevelSequencePlayer; };
namespace CG::MovieScene { class UMovieSceneSequence; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::LevelSequence
{
    /**
     * Class /Script/LevelSequence.LevelSequenceDirector
     * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
     */
    class ULevelSequenceDirector : public CoreUObject::UObject
    {
    public:
        LevelSequence::ULevelSequencePlayer*                         Player;                                                  //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      SubSequenceID;                                           //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      MovieScenePlayerIndex;                                   //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        void OnCreated();
        MovieScene::UMovieSceneSequence* GetSequence();
        CoreUObject::FQualifiedFrameTime GetRootSequenceTime();
        CoreUObject::FQualifiedFrameTime GetMasterSequenceTime();
        CoreUObject::FQualifiedFrameTime GetCurrentTime();
        BasicTypes::TArray<CoreUObject::UObject*> GetBoundObjects(const MovieScene::FMovieSceneObjectBindingID& ObjectBinding);
        CoreUObject::UObject* GetBoundObject(const MovieScene::FMovieSceneObjectBindingID& ObjectBinding);
        BasicTypes::TArray<Engine::AActor*> GetBoundActors(const MovieScene::FMovieSceneObjectBindingID& ObjectBinding);
        Engine::AActor* GetBoundActor(const MovieScene::FMovieSceneObjectBindingID& ObjectBinding);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/LevelSequence.LevelSequenceDirector");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
