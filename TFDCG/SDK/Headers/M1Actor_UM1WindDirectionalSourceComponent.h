#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Actor_FM1WindGustParameter.h"
#include "M1Actor_FM1WindChannels.h"
#include "Engine_UWindDirectionalSourceComponent.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Actor
{
    /**
     * Class /Script/M1Actor.M1WindDirectionalSourceComponent
     * Size -> 0x0050 (FullSize[0x0260] - InheritedSize[0x0210])
     */
    class UM1WindDirectionalSourceComponent : public Engine::UWindDirectionalSourceComponent
    {
    public:
        M1Actor::FM1WindGustParameter                                GustParameter;                                           //  Edit, NoDestructor, NativeAccessSpecifierPublic
        M1Actor::FM1WindChannels                                     WindChannels;                                            //  Edit, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bEnabled : 1;                                            //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x2F];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetWindChannels(const M1Actor::FM1WindChannels& InWindChannels);
        void SetEnabled(bool InEnabled);
        bool IsWindChannelsValid(const M1Actor::FM1WindChannels& InWindChannels);
        void GustForce(float GustStrength, float GustPreDuration, float GustApexDuration, float GustPostDuration);
        void GetWindStrengthCombinedGust(const CoreUObject::FVector& Position, CoreUObject::FVector* OutDirection, float* OutSpeed);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1Actor.M1WindDirectionalSourceComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
