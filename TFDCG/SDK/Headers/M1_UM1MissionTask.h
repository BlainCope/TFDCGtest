#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1TaskEvents.h"
#include "M1_FM1TaskEventList.h"
#include "MissionGraphRuntime_UMissionGraphTaskNode.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1MissionTaskSpecificTable; };
namespace CG::M1 { class AM1MissionTaskActor; };
namespace CG::M1 { class UM1MissionTaskCustomLogic; };
namespace CG::M1 { class UM1MissionTaskComponent; };
namespace CG::M1 { class AM1MissionSubTaskActor; };
namespace CG::M1 { class UM1TaskEvent; };
namespace CG::M1 { class UM1NextTaskSelector; };
namespace CG::M1 { class UM1NextMissionTaskLink; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTask
     * Size -> 0x0218 (FullSize[0x02B0] - InheritedSize[0x0098])
     */
    class UM1MissionTask : public MissionGraphRuntime::UMissionGraphTaskNode
    {
    public:
        BasicTypes::FName                                            TaskName;                                                //  Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1MissionTaskSpecificTable*                             TaskSpecificTable;                                       //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      TaskIndex;                                               //  Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1MissionTaskActor*                                     TaskActorClass;                                          //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1MissionTaskCustomLogic*                               TaskActorSpecificCustomLogic;                            //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1::UM1MissionTaskComponent*, M1::UM1MissionTaskCustomLogic*> CustomLogicsByTaskComponents;                            //  Edit, ExportObject, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
        bool                                                         bRequireUserInputInteraction;                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1DynamicActorLifespanPolicy                            DynamicActorLifeSpanPolicy;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bBeginTaskWhenActivated;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DistanceLimitOverrideInMeters;                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        LimitTime;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1::AM1MissionSubTaskActor*, float>         SubTaskLimitTime;                                        //  Edit, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1TaskEvent*>                        ActivationEvents;                                        //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1TaskEvent*>                        BeginEvents;                                             //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::FM1TaskEvents>                        EventsByPhase;                                           //  Edit, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1TaskEvent*>                        FailureEvents;                                           //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1TaskEvent*>                        SuccessEvents;                                           //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FName, M1::FM1TaskEventList>    OptionalEventsByKey;                                     //  Edit, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
        bool                                                         bConverted;                                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::FM1TaskEventList>                     OptionalEventList;                                       //  Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FName, M1::FM1TaskEventList>    RuntimeOptionalEventsByKey;                              //  Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1TaskEvent*>                        AllEvents;                                               //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1TaskEvent*>                        AllEventsExceptOptional;                                 //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        M1::UM1NextTaskSelector*                                     NextTaskSelector;                                        //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1NextMissionTaskLink*>              NextTaskLinks;                                           //  Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTask");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
