#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CameraCalibrationCore_FLensDistortionState.h"
#include "CinematicCamera_FCameraFilmbackSettings.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FGuid.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CameraCalibrationCore { class ULensModel; };
namespace CG::Engine { class UMaterialInstanceDynamic; };
namespace CG::Engine { class UTextureRenderTarget2D; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::CameraCalibrationCore
{
    /**
     * Class /Script/CameraCalibrationCore.LensDistortionModelHandlerBase
     * Size -> 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
     */
    class ULensDistortionModelHandlerBase : public CoreUObject::UObject
    {
    public:
        CameraCalibrationCore::ULensModel*                           LensModelClass;                                          //  Edit, BlueprintVisible, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UMaterialInstanceDynamic*                            DistortionPostProcessMID;                                //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CameraCalibrationCore::FLensDistortionState                  CurrentState;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
        CinematicCamera::FCameraFilmbackSettings                     CameraFilmback;                                          //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          DisplayName;                                             //  Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        OverscanFactor;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UMaterialInstanceDynamic*                            UndistortionDisplacementMapMID;                          //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UMaterialInstanceDynamic*                            DistortionDisplacementMapMID;                            //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UTextureRenderTarget2D*                              UndistortionDisplacementMapRT;                           //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UTextureRenderTarget2D*                              DistortionDisplacementMapRT;                             //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FGuid                                           DistortionProducerID;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void SetDistortionState(const CameraCalibrationCore::FLensDistortionState& InNewState);
        bool IsModelSupported(CameraCalibrationCore::ULensModel* ModelToSupport);
        Engine::UTextureRenderTarget2D* GetUndistortionDisplacementMap();
        Engine::UTextureRenderTarget2D* GetDistortionDisplacementMap();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/CameraCalibrationCore.LensDistortionModelHandlerBase");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
