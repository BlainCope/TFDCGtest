#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSet.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1GridArray.h"
#include "CoreUObject_FVector.h"
#include "M1_AM1SpawnLocationSelector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1SpawnLocationSelectorInRealtime
     * Size -> 0x0210 (FullSize[0x04B8] - InheritedSize[0x02A8])
     */
    class AM1SpawnLocationSelectorInRealtime : public M1::AM1SpawnLocationSelector
    {
    public:
        bool                                                         bUseUnOccupiedLocations;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<Engine::AActor*>                            WhiteListActorClasses;                                   //  Edit, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TSet<Engine::AActor*>                            WhiteListNativeClasses;                                  //  Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::FM1GridArray>                         Grid;                                                    //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0xF0];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      DestroyedActorCount;                                     //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bInvalidate;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<CoreUObject::FVector>                       NotOccupiedLocationsSet;                                 //  Transient, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::FVector>                     NotOccupiedLocations;                                    //  ZeroConstructor, Transient, NativeAccessSpecifierPublic

    public:
        void OnActorDestroyed(Engine::AActor* InActor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1SpawnLocationSelectorInRealtime");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
