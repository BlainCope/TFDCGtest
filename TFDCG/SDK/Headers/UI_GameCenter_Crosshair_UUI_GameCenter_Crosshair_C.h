#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "M1_UM1UIGameCenter_Crosshair.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UOverlay; };
namespace CG::WB_CrosshairBase { class UWB_CrosshairBase_C; };
namespace CG::UMG { class UUserWidget; };
namespace CG::UMG { class UPanelWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UI_GameCenter_Crosshair
{
    /**
     * WidgetBlueprintGeneratedClass /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C
     * Size -> 0x0088 (FullSize[0x0838] - InheritedSize[0x07B0])
     */
    class UUI_GameCenter_Crosshair_C : public M1::UM1UIGameCenter_Crosshair
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        UMG::UOverlay*                                               Panel_Default;                                           //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash
        UMG::UOverlay*                                               Panel_InstantHitGuide;                                   //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash
        UMG::UOverlay*                                               Panel_Zoomed;                                            //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash
        WB_CrosshairBase::UWB_CrosshairBase_C*                       CurrentCrosshairWidget;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash
        UMG::UUserWidget*                                            DefaultCrosshairWidget;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash
        UMG::UUserWidget*                                            ZoomCrosshairWidget;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash
        double                                                       LastSpread;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         bZoomed;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         bIsScopeZoomed;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      Temp_WireGuideID;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        UMG::UUserWidget*                                            HitGuideWidget;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash
        UMG::UUserWidget*                                            ZoomHitGuideWidget;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash
        bool                                                         bIsHighReady;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         bInstantHitBlocked;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::UUserWidget*                                            ActiveHitGuideWidget;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash
        UMG::UUserWidget*                                            ActiveHitGuideClass;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        bool                                                         bChangeHitGuide;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        double                                                       DefaultOpaqueValue;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       CrosshairHitGuideSizeMultiplier;                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void CalcHitGuideWidgetClampedPos(const CoreUObject::FVector2D& InPos, bool bClamp, const CoreUObject::FVector2D& OutPos);
        void ResetHitGuide();
        void UpdateCrosshairOpacity();
        void UpdateCrosshairSpread();
        void AttachHitGuideWidget(UMG::UUserWidget* WidgetClass, UMG::UUserWidget** WidgetReference, UMG::UUserWidget** AttachedHitGuideWidget);
        void ApplyZoomState(bool InZoomed);
        void CreateCrosshairWidget(UMG::UUserWidget* CrosshairClass, UMG::UUserWidget* CurrentWidget, UMG::UPanelWidget* ParentWidget, UMG::UUserWidget** OutWidget);
        void ChangeCrosshair(UMG::UUserWidget* CrosshairClass, UMG::UUserWidget* ZoomCrosshairClass);
        void BP_ChangedWeapon(UMG::UUserWidget* InCrosshairClass, UMG::UUserWidget* InZoomCrosshairClass);
        void BP_ChangedWeaponZoom(bool bZoomed, bool bIsScopeZoomed);
        void BP_ChangedWeaponSpread(float Spread);
        void BP_WeaponFireBursted();
        void BP_EnemyInWeaponRange(bool bEnemyInWeaponRange, const CoreUObject::FColor& InAimingNoticeCrosshairColor);
        void BP_ResizedViewport();
        void BP_UpdateWireGuide(const CoreUObject::FVector2D& ScreenPos);
        void BP_ChangedCameraFOV();
        void BP_ChangedWeaponHighReady(bool bHighReady);
        void BP_UpdateInstantHitGuide(bool bShow, UMG::UUserWidget* WidgetClass, UMG::UUserWidget* ZoomWidgetClass, const CoreUObject::FVector2D& ScreenPos);
        void ExecuteUbergraph_UI_GameCenter_Crosshair(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("WidgetBlueprintGeneratedClass /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
