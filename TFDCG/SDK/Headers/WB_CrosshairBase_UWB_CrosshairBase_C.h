#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "M1_UM1UICrosshair.h"
#include "CoreUObject_FColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UWidgetAnimation; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::WB_CrosshairBase
{
    /**
     * WidgetBlueprintGeneratedClass /Game/UI/Game/Crosshair/UMG/CrosshairBaseClasses/WB_CrosshairBase.WB_CrosshairBase_C
     * Size -> 0x0008 (FullSize[0x0728] - InheritedSize[0x0720])
     */
    class UWB_CrosshairBase_C : public M1::UM1UICrosshair
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient

    public:
        void ApplyCrosshairGridOpacity(double Opacity);
        void EnemyInWeaponRange(bool bEnemyInWeaponRange, const CoreUObject::FColor& AimingNoticeCrosshairColor);
        void WeaponFireBursted();
        void ChangedWeaponZoomed(bool bInZoomed);
        void UpdateOverlayPanel(UMG::UWidgetAnimation* ChangeAnimation);
        void ChangedCrosshairSpread(double Spread);
        void PreConstruct(bool IsDesignTime);
        void ExecuteUbergraph_WB_CrosshairBase(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("WidgetBlueprintGeneratedClass /Game/UI/Game/Crosshair/UMG/CrosshairBaseClasses/WB_CrosshairBase.WB_CrosshairBase_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
