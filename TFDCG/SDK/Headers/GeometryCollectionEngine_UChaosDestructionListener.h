#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "GeometryCollectionEngine_FChaosCollisionEventRequestSettings.h"
#include "GeometryCollectionEngine_FChaosBreakingEventRequestSettings.h"
#include "GeometryCollectionEngine_FChaosTrailingEventRequestSettings.h"
#include "GeometryCollectionEngine_FChaosRemovalEventRequestSettings.h"
#include "BasicTypes_TSet.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_USceneComponent.h"
#include "BasicTypes_TArray.h"
#include "GeometryCollectionEngine_FChaosTrailingEventData.h"
#include "GeometryCollectionEngine_ENUMS.h"
#include "GeometryCollectionEngine_FChaosRemovalEventData.h"
#include "GeometryCollectionEngine_FChaosCollisionEventData.h"
#include "GeometryCollectionEngine_FChaosBreakingEventData.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::ChaosSolverEngine { class AChaosSolverActor; };
namespace CG::GeometryCollectionEngine { class AGeometryCollectionActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GeometryCollectionEngine
{
    /**
     * Class /Script/GeometryCollectionEngine.ChaosDestructionListener
     * Size -> 0x0280 (FullSize[0x0470] - InheritedSize[0x01F0])
     */
    class UChaosDestructionListener : public Engine::USceneComponent
    {
    public:
        bool                                                         bIsCollisionEventListeningEnabled : 1;                   //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsBreakingEventListeningEnabled : 1;                    //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsTrailingEventListeningEnabled : 1;                    //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsRemovalEventListeningEnabled : 1;                     //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GeometryCollectionEngine::FChaosCollisionEventRequestSettings CollisionEventRequestSettings;                           //  Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        GeometryCollectionEngine::FChaosBreakingEventRequestSettings BreakingEventRequestSettings;                            //  Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        GeometryCollectionEngine::FChaosTrailingEventRequestSettings TrailingEventRequestSettings;                            //  Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        GeometryCollectionEngine::FChaosRemovalEventRequestSettings  RemovalEventRequestSettings;                             //  Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<ChaosSolverEngine::AChaosSolverActor*>      ChaosSolverActors;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TSet<GeometryCollectionEngine::AGeometryCollectionActor*> GeometryCollectionActors;                                //  Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::UMulticastInlineDelegate                         OnCollisionEvents;                                       //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnBreakingEvents;                                        //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnTrailingEvents;                                        //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnRemovalEvents;                                         //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0006[0x140];                                 //  MISSED OFFSET (PADDING)

    public:
        void SortTrailingEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosTrailingEventData>* TrailingEvents, GeometryCollectionEngine::EChaosTrailingSortMethod SortMethod);
        void SortRemovalEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosRemovalEventData>* RemovalEvents, GeometryCollectionEngine::EChaosRemovalSortMethod SortMethod);
        void SortCollisionEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosCollisionEventData>* CollisionEvents, GeometryCollectionEngine::EChaosCollisionSortMethod SortMethod);
        void SortBreakingEvents(BasicTypes::TArray<GeometryCollectionEngine::FChaosBreakingEventData>* BreakingEvents, GeometryCollectionEngine::EChaosBreakingSortMethod SortMethod);
        void SetTrailingEventRequestSettings(const GeometryCollectionEngine::FChaosTrailingEventRequestSettings& InSettings);
        void SetTrailingEventEnabled(bool bIsEnabled);
        void SetRemovalEventRequestSettings(const GeometryCollectionEngine::FChaosRemovalEventRequestSettings& InSettings);
        void SetRemovalEventEnabled(bool bIsEnabled);
        void SetCollisionEventRequestSettings(const GeometryCollectionEngine::FChaosCollisionEventRequestSettings& InSettings);
        void SetCollisionEventEnabled(bool bIsEnabled);
        void SetBreakingEventRequestSettings(const GeometryCollectionEngine::FChaosBreakingEventRequestSettings& InSettings);
        void SetBreakingEventEnabled(bool bIsEnabled);
        void RemoveGeometryCollectionActor(GeometryCollectionEngine::AGeometryCollectionActor* GeometryCollectionActor);
        void RemoveChaosSolverActor(ChaosSolverEngine::AChaosSolverActor* ChaosSolverActor);
        bool IsEventListening();
        void AddGeometryCollectionActor(GeometryCollectionEngine::AGeometryCollectionActor* GeometryCollectionActor);
        void AddChaosSolverActor(ChaosSolverEngine::AChaosSolverActor* ChaosSolverActor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/GeometryCollectionEngine.ChaosDestructionListener");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
