#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_FText.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FDateTime.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.BlueprintPlatformLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UBlueprintPlatformLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_SetAllowedDeviceOrientation(Engine::EScreenOrientation NewAllowedDeviceOrientation);
        int32_t STATIC_ScheduleLocalNotificationFromNow(int32_t inSecondsFromNow, const BasicTypes::FText& Title, const BasicTypes::FText& Body, const BasicTypes::FText& Action, const BasicTypes::FString& ActivationEvent);
        void STATIC_ScheduleLocalNotificationBadgeFromNow(int32_t inSecondsFromNow, const BasicTypes::FString& ActivationEvent);
        int32_t STATIC_ScheduleLocalNotificationBadgeAtTime(const CoreUObject::FDateTime& FireDateTime, bool LocalTime, const BasicTypes::FString& ActivationEvent);
        int32_t STATIC_ScheduleLocalNotificationAtTime(const CoreUObject::FDateTime& FireDateTime, bool LocalTime, const BasicTypes::FText& Title, const BasicTypes::FText& Body, const BasicTypes::FText& Action, const BasicTypes::FString& ActivationEvent);
        void STATIC_GetLaunchNotification(bool* NotificationLaunchedApp, BasicTypes::FString* ActivationEvent, int32_t* FireDate);
        Engine::EScreenOrientation STATIC_GetDeviceOrientation();
        Engine::EScreenOrientation STATIC_GetAllowedDeviceOrientation();
        void STATIC_ClearAllLocalNotifications();
        void STATIC_CancelLocalNotificationById(int32_t NotificationId);
        void STATIC_CancelLocalNotification(const BasicTypes::FString& ActivationEvent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.BlueprintPlatformLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
