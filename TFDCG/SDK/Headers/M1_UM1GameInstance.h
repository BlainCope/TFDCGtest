#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "Engine_FURL.h"
#include "M1_FM1PreloadScreenParam.h"
#include "Engine_UGameInstance.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1BlueprintClassRepGraphNodeMapping; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1GameInstance
     * Size -> 0x0108 (FullSize[0x02C8] - InheritedSize[0x01C0])
     */
    class UM1GameInstance : public Engine::UGameInstance
    {
    public:
        M1::EM1OnlineServiceConnectionState                          ConnectionState;                                         //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FURL                                                 NextUrlToJoin;                                           //  Transient, NativeAccessSpecifierPrivate
        int64_t                                                      AccountUid;                                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x30];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1PreloadScreenParam                                    PreloadScreenParam;                                      //  Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1BlueprintClassRepGraphNodeMapping*                    BlueprintClassRepGraphNodeMapping;                       //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        int32_t GetRevision();
        BasicTypes::FString GetMiscString();
        int32_t GetDataPatchRevision();
        M1::EM1OnlineServiceConnectionState GetConnectionState();
        BasicTypes::FString GetBranch();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1GameInstance");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
