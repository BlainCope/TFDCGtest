#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "AugmentedReality_ENUMS.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_TArray.h"
#include "Engine_UActorComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ARUtilities
{
    /**
     * Class /Script/ARUtilities.PassthroughMaterialUpdateComponent
     * Size -> 0x0048 (FullSize[0x00F0] - InheritedSize[0x00A8])
     */
    class UPassthroughMaterialUpdateComponent : public Engine::UActorComponent
    {
    public:
        AugmentedReality::EARTextureType                             TextureType;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UMaterialInterface*                                  PassthroughMaterial;                                     //  Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UMaterialInterface*                                  PassthroughMaterialExternalTexture;                      //  Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FLinearColor                                    PassthroughDebugColor;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::UPrimitiveComponent*>             AffectedComponents;                                      //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UPrimitiveComponent*>             PendingComponents;                                       //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate

    public:
        void SetPassthroughDebugColor(const CoreUObject::FLinearColor& NewDebugColor);
        void RemoveAffectedComponent(Engine::UPrimitiveComponent* InComponent);
        void AddAffectedComponent(Engine::UPrimitiveComponent* InComponent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ARUtilities.PassthroughMaterialUpdateComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
