#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1UIMonsterInfo.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1TextBlock; };
namespace CG::UMG { class UProgressBar; };
namespace CG::M1 { class UM1PhaseProgressBar; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIBossMonsterInfo
     * Size -> 0x0020 (FullSize[0x0910] - InheritedSize[0x08F0])
     */
    class UM1UIBossMonsterInfo : public M1::UM1UIMonsterInfo
    {
    public:
        M1::UM1TextBlock*                                            TB_CheatInfo;                                            //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UProgressBar*                                           PB_RunawayBar;                                           //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1PhaseProgressBar*                                     UI_PhaseHPBar;                                           //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bDetectionIndicatorActivated;                            //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x5];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnBerserkGaugeChanged();
        void BP_PlayNameAnim(bool bInForwardAnim);
        void BP_PlayFocusAnim(bool bInForwardAnim);
        void BP_OnDeactivateDetectionIndicator();
        void BP_OnBerserkGaugeChanged(float GaugeRatio);
        void BP_OnActivateDetectionIndicator();
        void BP_InitBossMonsterWidget();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIBossMonsterInfo");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
