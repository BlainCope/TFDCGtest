#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1AimAssistSettingsPerWeapon.h"
#include "BasicTypes_TMap.h"
#include "M1Data_ENUMS.h"
#include "M1_FM1AimAssistTimebasedTypeSettings.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * ScriptStruct /Script/M1.M1AimAssistSettings
     * Size -> 0x00B8
     */
    struct FM1AimAssistSettings
    {
    public:
        M1::FM1AimAssistSettingsPerWeapon                            DefaultSettingsForWeapon;                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        BasicTypes::TMap<M1Data::EM1EquipItemClassType, M1::FM1AimAssistSettingsPerWeapon> SettingsPerWeapon;                                       //  Edit, NativeAccessSpecifierPublic
        M1::FM1AimAssistTimebasedTypeSettings                        AimMagnetTimeSettings;                                   //  Edit, NoDestructor, NativeAccessSpecifierPublic
        M1::FM1AimAssistTimebasedTypeSettings                        StickyAimTimeSettings;                                   //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        AimTargetReleaseTime;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        LimitRotationAngleWhenUserAimInput;                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FName>                        AdditionalTargetableClassName;                           //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
