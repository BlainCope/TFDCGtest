#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MediaIOCore
{
    // --------------------------------------------------
    // # Enums
    // --------------------------------------------------
    /**
     * Enum /Script/MediaIOCore.EFileMediaOutputPixelFormat
     */
    enum class EFileMediaOutputPixelFormat : uint8_t
    {
        B8G8R8A8  = 0,
        FloatRGBA = 1,
        MAX       = 2
    };

    /**
     * Enum /Script/MediaIOCore.EMediaCaptureState
     */
    enum class EMediaCaptureState : uint8_t
    {
        Error         = 0,
        Capturing     = 1,
        Preparing     = 2,
        StopRequested = 3,
        Stopped       = 4,
        MAX           = 5
    };

    /**
     * Enum /Script/MediaIOCore.EMediaCaptureResourceType
     */
    enum class EMediaCaptureResourceType : uint8_t
    {
        Texture = 0,
        Buffer  = 1,
        MAX     = 2
    };

    /**
     * Enum /Script/MediaIOCore.EMediaCaptureCroppingType
     */
    enum class EMediaCaptureCroppingType : uint8_t
    {
        None    = 0,
        Center  = 1,
        TopLeft = 2,
        Custom  = 3,
        MAX     = 4
    };

    /**
     * Enum /Script/MediaIOCore.EMediaCaptureOverrunAction
     */
    enum class EMediaCaptureOverrunAction : uint8_t
    {
        Flush = 0,
        Skip  = 1,
        MAX   = 2
    };

    /**
     * Enum /Script/MediaIOCore.EMediaCapturePhase
     */
    enum class EMediaCapturePhase : uint8_t
    {
        BeforePostProcessing = 0,
        AfterMotionBlur      = 1,
        AfterToneMap         = 2,
        AfterFXAA            = 3,
        EndFrame             = 4,
        MAX                  = 5
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOTransportType
     */
    enum class EMediaIOTransportType : uint8_t
    {
        SingleLink = 0,
        DualLink   = 1,
        QuadLink   = 2,
        HDMI       = 3,
        MAX        = 4
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOQuadLinkTransportType
     */
    enum class EMediaIOQuadLinkTransportType : uint8_t
    {
        SquareDivision      = 0,
        TwoSampleInterleave = 1,
        MAX                 = 2
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOStandardType
     */
    enum class EMediaIOStandardType : uint8_t
    {
        Progressive               = 0,
        Interlaced                = 1,
        ProgressiveSegmentedFrame = 2,
        MAX                       = 3
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOTimecodeFormat
     */
    enum class EMediaIOTimecodeFormat : uint8_t
    {
        None = 0,
        LTC  = 1,
        VITC = 2,
        MAX  = 3
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOAutoDetectableTimecodeFormat
     */
    enum class EMediaIOAutoDetectableTimecodeFormat : uint8_t
    {
        None = 0,
        LTC  = 1,
        VITC = 2,
        Auto = 3,
        MAX  = 4
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOInputType
     */
    enum class EMediaIOInputType : uint8_t
    {
        Fill       = 0,
        FillAndKey = 1,
        MAX        = 2
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOOutputType
     */
    enum class EMediaIOOutputType : uint8_t
    {
        Fill       = 0,
        FillAndKey = 1,
        MAX        = 2
    };

    /**
     * Enum /Script/MediaIOCore.EMediaIOReferenceType
     */
    enum class EMediaIOReferenceType : uint8_t
    {
        FreeRun  = 0,
        External = 1,
        Input    = 2,
        MAX      = 3
    };

    /**
     * Enum /Script/MediaIOCore.EMediaCaptureSourceType
     */
    enum class EMediaCaptureSourceType : uint8_t
    {
        RENDER_TARGET  = 0,
        SCENE_VIEWPORT = 1,
        RHI_RESOURCE   = 2,
        MAX            = 3
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
