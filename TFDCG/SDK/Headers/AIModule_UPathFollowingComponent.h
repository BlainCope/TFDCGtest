#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UActorComponent.h"
#include "CoreUObject_FVector.h"
#include "Engine_FHitResult.h"
#include "AIModule_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UNavMovementComponent; };
namespace CG::NavigationSystem { class ANavigationData; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    /**
     * Class /Script/AIModule.PathFollowingComponent
     * Size -> 0x01B0 (FullSize[0x0258] - InheritedSize[0x00A8])
     */
    class UPathFollowingComponent : public Engine::UActorComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x38];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UNavMovementComponent*                               MovementComp;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        NavigationSystem::ANavigationData*                           MyNavData;                                               //  ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x160];                                 //  MISSED OFFSET (PADDING)

    public:
        void OnNavDataRegistered(NavigationSystem::ANavigationData* NavData);
        void OnActorBump(Engine::AActor* SelfActor, Engine::AActor* OtherActor, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit);
        CoreUObject::FVector GetPathDestination();
        AIModule::EPathFollowingAction GetPathActionType();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AIModule.PathFollowingComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
