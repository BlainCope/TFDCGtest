#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "Engine_UDataAsset.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1Data { class UM1DataTable; };
namespace CG::CoreUObject { class UScriptStruct; };
namespace CG::M1Data { class UM1DataTableGroup; };
namespace CG::M1Data { class UM1SecondaryDataManager; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Data
{
    /**
     * Class /Script/M1Data.M1DataCenter
     * Size -> 0x0208 (FullSize[0x0238] - InheritedSize[0x0030])
     */
    class UM1DataCenter : public Engine::UDataAsset
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1Data::UM1DataTable*>                    Tables;                                                  //  Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate
        BasicTypes::TMap<CoreUObject::UScriptStruct*, M1Data::UM1DataTable*> RowStructToTable;                                        //  Edit, EditConst, NativeAccessSpecifierPrivate
        BasicTypes::TMap<CoreUObject::UScriptStruct*, M1Data::UM1DataTable*> RowStructToGroupOrTable;                                 //  Edit, EditConst, NativeAccessSpecifierPrivate
        BasicTypes::TMap<CoreUObject::UScriptStruct*, M1Data::UM1DataTableGroup*> TableGroups;                                             //  Edit, Transient, EditConst, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1Data::UM1SecondaryDataManager*>         SecondaryManagers;                                       //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x50];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<CoreUObject::UScriptStruct*, M1Data::UM1DataTable*> AltTableMap;                                             //  Transient, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FString, M1Data::UM1DataTable*> PatchTableMap;                                           //  Transient, NativeAccessSpecifierPrivate

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1Data.M1DataCenter");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
