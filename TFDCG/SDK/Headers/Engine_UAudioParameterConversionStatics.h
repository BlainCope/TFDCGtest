#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"
#include "AudioExtensions_FAudioParameter.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.AudioParameterConversionStatics
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UAudioParameterConversionStatics : public Engine::UBlueprintFunctionLibrary
    {
    public:
        AudioExtensions::FAudioParameter STATIC_StringToAudioParameter(const BasicTypes::FName& Name, const BasicTypes::FString& String);
        AudioExtensions::FAudioParameter STATIC_StringArrayToAudioParameter(const BasicTypes::FName& Name, BasicTypes::TArray<BasicTypes::FString> Strings);
        AudioExtensions::FAudioParameter STATIC_ObjectToAudioParameter(const BasicTypes::FName& Name, CoreUObject::UObject* Object);
        AudioExtensions::FAudioParameter STATIC_ObjectArrayToAudioParameter(const BasicTypes::FName& Name, BasicTypes::TArray<CoreUObject::UObject*> Objects);
        AudioExtensions::FAudioParameter STATIC_IntegerToAudioParameter(const BasicTypes::FName& Name, int32_t Integer);
        AudioExtensions::FAudioParameter STATIC_IntegerArrayToAudioParameter(const BasicTypes::FName& Name, BasicTypes::TArray<int32_t> Integers);
        AudioExtensions::FAudioParameter STATIC_FloatToAudioParameter(const BasicTypes::FName& Name, float _float_);
        AudioExtensions::FAudioParameter STATIC_FloatArrayToAudioParameter(const BasicTypes::FName& Name, BasicTypes::TArray<float> Floats);
        AudioExtensions::FAudioParameter STATIC_BooleanToAudioParameter(const BasicTypes::FName& Name, bool _bool_);
        AudioExtensions::FAudioParameter STATIC_BooleanArrayToAudioParameter(const BasicTypes::FName& Name, BasicTypes::TArray<bool> Bools);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.AudioParameterConversionStatics");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
