#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1CharacterBasedWeaponAttachData.h"
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "M1_FM1UpperBodyAnimClass.h"
#include "M1_FM1GenderBasedReloadMontage.h"
#include "M1_FM1WeaponChangeAnimationSetting.h"
#include "M1_FM1GenderBasedPrivatePreviewAnim.h"
#include "M1_FM1WeaponCrosshairClass.h"
#include "M1_FM1WeaponChargeGaugeUIColors.h"
#include "M1_FM1WeaponBottomHudInfo.h"
#include "M1_FM1WeaponZoomHidePlayerSetting.h"
#include "M1_UM1WeaponComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1WeaponReloadComponent; };
namespace CG::Engine { class UAnimMontage; };
namespace CG::M1 { class UM1DataRangedWeaponCameraSetting; };
namespace CG::UMG { class UUserWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1WeaponMiscComponent
     * Size -> 0x0280 (FullSize[0x0358] - InheritedSize[0x00D8])
     */
    class UM1WeaponMiscComponent : public M1::UM1WeaponComponent
    {
    public:
        M1::UM1WeaponReloadComponent*                                ReloadComponent;                                         //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1CharacterBasedWeaponAttachData                        EquipWeapon;                                             //  Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
        M1::FM1CharacterBasedWeaponAttachData                        HangWeapon;                                              //  Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1::EM1WeaponAnimType, Engine::UAnimMontage*> WeaponAnimation;                                         //  Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
        M1::EM1PlayerAnimType                                        CharacterAnimType;                                       //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1UpperBodyAnimClass                                    AnimClass;                                               //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1GenderBasedReloadMontage                              ReloadMontage;                                           //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        M1::UM1DataRangedWeaponCameraSetting*                        CameraSetting;                                           //  Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseWeaponChangeAnimation;                               //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1WeaponChangeAnimationSetting                          WeaponChangeAnimationSetting;                            //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1GenderBasedPrivatePreviewAnim                         PrivatePreviewAnim;                                      //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1WeaponCrosshairClass                                  CrosshairClass;                                          //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        UMG::UUserWidget*                                            ChargeGaugeClass;                                        //  Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1WeaponChargeGaugeUIColors                             ChargeGaugeUIColors;                                     //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x30];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1WeaponBottomHudInfo                                   BottomHudInfo;                                           //  Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
        M1::FM1WeaponZoomHidePlayerSetting                           WeaponZoomHidePlayerSetting;                             //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1WeaponMiscComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
