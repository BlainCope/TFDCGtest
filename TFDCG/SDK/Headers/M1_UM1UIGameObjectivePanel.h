#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_ENUMS.h"
#include "BasicTypes_TMap.h"
#include "M1_UM1UIWidget.h"
#include "M1Data_FM1TemplateId.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1MissionTaskActor; };
namespace CG::M1 { class UM1WidgetSwitcher; };
namespace CG::M1 { class UM1UIGameCodexTrackingPanel; };
namespace CG::UMG { class UWidgetAnimation; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIGameObjectivePanel
     * Size -> 0x0088 (FullSize[0x0790] - InheritedSize[0x0708])
     */
    class UM1UIGameObjectivePanel : public M1::UM1UIWidget
    {
    public:
        BasicTypes::TArray<M1::EM1GameObjectiveDisplayByPriority>    DisplayPriorityQueue;                                    //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        BasicTypes::TMap<M1::EM1GameObjectiveDisplayByPriority, M1::UM1UIWidget*> WidgetsByPriority;                                       //  ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1WidgetSwitcher*                                       Switcher_Objectives;                                     //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIGameCodexTrackingPanel*                             UI_Codex_Tracking;                                       //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        UMG::UWidgetAnimation*                                       UIAnim_Switch;                                           //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bHasActivatedMission;                                    //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bOutOfArea;                                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (PADDING)

    public:
        void OnQuestInfoDeactivated();
        void OnQuestInfoActivated(const M1Data::FM1TemplateId& InQuestTemplateId);
        void OnMissionTaskActivated(M1::AM1MissionTaskActor* InActor);
        BasicTypes::TMap<M1::EM1GameObjectiveDisplayByPriority, M1::UM1UIWidget*> BP_GetWidgetsByPriority();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIGameObjectivePanel");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
