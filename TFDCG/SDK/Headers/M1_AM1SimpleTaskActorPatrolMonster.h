#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_TSet.h"
#include "M1_AM1SimpleTaskActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Monster; };
namespace CG::M1 { class UM1PatrolMonsterAbilityInfo; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1SimpleTaskActorPatrolMonster
     * Size -> 0x00A0 (FullSize[0x04F8] - InheritedSize[0x0458])
     */
    class AM1SimpleTaskActorPatrolMonster : public M1::AM1SimpleTaskActor
    {
    public:
        float                                                        PatrolRange;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      PatrolLocationNum;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<CoreUObject::FVector>                     PatrolLocations;                                         //  Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate
        BasicTypes::TSet<M1::AM1Monster*>                            PatrolMonsters;                                          //  Transient, NativeAccessSpecifierPrivate
        float                                                        DespawnDistanceFromLastLocation;                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1PatrolMonsterAbilityInfo*>         PatrolMonsterAbilities;                                  //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x20];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnPatrolMonsterDestroyed(Engine::AActor* InDestroyed);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1SimpleTaskActorPatrolMonster");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
