#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_ENUMS.h"
#include "Engine_FAlphaBlend.h"
#include "BasicTypes_FName.h"
#include "Engine_FMarkerSyncData.h"
#include "BasicTypes_TArray.h"
#include "Engine_FCompositeSection.h"
#include "Engine_FSlotAnimationTrack.h"
#include "Engine_FBranchingPointMarker.h"
#include "Engine_FTimeStretchCurve.h"
#include "Engine_UAnimCompositeBase.h"
#include "Engine_FAlphaBlendArgs.h"
#include "Engine_FMontageBlendSettings.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UBlendProfile; };
namespace CG::Engine { class UAnimSequenceBase; };
namespace CG::Engine { class UAnimMontage; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.AnimMontage
     * Size -> 0x0128 (FullSize[0x01D8] - InheritedSize[0x00B0])
     */
    class UAnimMontage : public Engine::UAnimCompositeBase
    {
    public:
        Engine::EMontageBlendMode                                    BlendModeIn;                                             //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EMontageBlendMode                                    BlendModeOut;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FAlphaBlend                                          BlendIn;                                                 //  Edit, NoDestructor, NativeAccessSpecifierPublic
        Engine::FAlphaBlend                                          BlendOut;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        BlendOutTriggerTime;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            SyncGroup;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      SyncSlotIndex;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FMarkerSyncData                                      MarkerData;                                              //  NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FCompositeSection>                CompositeSections;                                       //  ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FSlotAnimationTrack>              SlotAnimTracks;                                          //  ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bEnableRootMotionTranslation;                            //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableRootMotionRotation;                               //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableAutoBlendOut;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x5];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UBlendProfile*                                       BlendProfileIn;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UBlendProfile*                                       BlendProfileOut;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::ERootMotionRootLock                                  RootMotionRootLock;                                      //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FBranchingPointMarker>            BranchingPointMarkers;                                   //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<int32_t>                                  BranchingPointStateNotifyIndices;                        //  ZeroConstructor, NativeAccessSpecifierPublic
        Engine::FTimeStretchCurve                                    TimeStretchCurve;                                        //  Edit, NativeAccessSpecifierPublic
        BasicTypes::FName                                            TimeStretchCurveName;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        bool IsValidSectionName(const BasicTypes::FName& InSectionName);
        BasicTypes::FName GetSectionName(int32_t SectionIndex);
        int32_t GetSectionIndex(const BasicTypes::FName& InSectionName);
        int32_t GetNumSections();
        float GetDefaultBlendOutTime();
        float GetDefaultBlendInTime();
        Engine::FAlphaBlendArgs GetBlendOutArgs();
        Engine::FAlphaBlendArgs GetBlendInArgs();
        Engine::UAnimMontage* STATIC_CreateSlotAnimationAsDynamicMontage_WithBlendSettings(Engine::UAnimSequenceBase* Asset, const BasicTypes::FName& SlotNodeName, const Engine::FMontageBlendSettings& BlendInSettings, const Engine::FMontageBlendSettings& BlendOutSettings, float InPlayRate, int32_t LoopCount, float InBlendOutTriggerTime);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.AnimMontage");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
