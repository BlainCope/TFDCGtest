#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "M1_ENUMS.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FVector2D.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FText.h"
#include "SlateCore_FGeometry.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UIWidget; };
namespace CG::UMG { class UWidget; };
namespace CG::Engine { class APlayerController; };
namespace CG::CoreUObject { class UObject; };
namespace CG::AkAudio { class UAkAudioEvent; };
namespace CG::M1 { class UM1UIData; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1WidgetGameBlueprintFunctionLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UM1WidgetGameBlueprintFunctionLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        bool STATIC_SetRelativePositionToWidget(M1::UM1UIWidget* InWidgetToApplyPosition, M1::UM1UIWidget* InWidgetNextTo, M1::EM1TooltipAttachDirection InDirection);
        void STATIC_SetFocusToUI(M1::UM1UIWidget* InWidget);
        void STATIC_SetFocusToParentFocusableWidget(UMG::UWidget* InChildWidget);
        bool STATIC_ProjectWorldToScreenBidirectional(Engine::APlayerController* Player, const CoreUObject::FVector& WorldPosition, CoreUObject::FVector2D* ScreenPosition, bool* bTargetBehindCamera, bool bPlayerViewportRelative);
        void STATIC_PlayAkAudioEvent(CoreUObject::UObject* WorldContextObject, AkAudio::UAkAudioEvent* InAudioEvent, M1::EUIEventType UIType);
        void STATIC_PlayAkAudioByName(CoreUObject::UObject* WorldContextObject, const BasicTypes::FString& InEventName, M1::EUIEventType UIType);
        bool STATIC_IsWidgetOnLeftSide(M1::UM1UIWidget* InWidgetBasedOn, M1::UM1UIWidget* InWidgetToCheckSide);
        bool STATIC_IsVisibleOnScreen(UMG::UWidget* InWidget, UMG::UWidget* InParentWidget);
        bool STATIC_IsKoreanIMESet();
        bool STATIC_IsFocusableWidget(UMG::UWidget* InWidget);
        CoreUObject::FVector2D STATIC_GetNormalizedLocationOnAxes(const CoreUObject::FVector& InMinAxis, const CoreUObject::FVector& InMaxAxis, const CoreUObject::FVector& InLocation);
        BasicTypes::FText STATIC_GetFormattedTimeText(float InSecond, bool bDisplayZeroSecAfterFinished);
        float STATIC_GetDirectionAngleFromViewCenter(CoreUObject::UObject* WorldContext, const SlateCore::FGeometry& InGeometry);
        CoreUObject::FVector2D STATIC_GetCenterPosition(CoreUObject::UObject* WorldContext, UMG::UWidget* InWidget);
        M1::EM1WidgetAnimDirection STATIC_GetAnimationDirection(UMG::UWidget* InWidget, bool bOpen);
        void STATIC_EnableInputModeForUI(CoreUObject::UObject* WorldContextObject, bool InEnable);
        void STATIC_DrawRect(CoreUObject::UObject* WorldContext, UMG::UWidget* InWidget, const CoreUObject::FLinearColor& InColor);
        BasicTypes::TArray<M1::UM1UIData*> STATIC_CreateUIStringDataList(CoreUObject::UObject* WorldContextObject, BasicTypes::TArray<BasicTypes::FString> InStrings);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1WidgetGameBlueprintFunctionLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
