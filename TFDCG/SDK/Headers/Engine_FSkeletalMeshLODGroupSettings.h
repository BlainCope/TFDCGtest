#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPerPlatformFloat.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "Engine_FBoneFilter.h"
#include "BasicTypes_FName.h"
#include "Engine_FSkeletalMeshOptimizationSettings.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAnimSequence; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.SkeletalMeshLODGroupSettings
     * Size -> 0x0090
     */
    struct FSkeletalMeshLODGroupSettings
    {
    public:
        Engine::FPerPlatformFloat                                    ScreenSize;                                              //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        LODHysteresis;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EBoneFilterActionOption                              BoneFilterActionOption;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FBoneFilter>                      BoneList;                                                //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FName>                        BonesToPrioritize;                                       //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<int32_t>                                  SectionsToPrioritize;                                    //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        float                                                        WeightOfPrioritization;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UAnimSequence*                                       BakePose;                                                //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FSkeletalMeshOptimizationSettings                    ReductionSettings;                                       //  Edit, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
