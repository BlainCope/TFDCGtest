#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "PBIK_ENUMS.h"
#include "PBIK_FRootPrePullSettings.h"
#include "BasicTypes_TArray.h"
#include "IKRig_UIKRigSolver.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::IKRig { class UIKRig_FBIKEffector; };
namespace CG::IKRig { class UIKRig_FBIKBoneSettings; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::IKRig
{
    /**
     * Class /Script/IKRig.IKRigFBIKSolver
     * Size -> 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
     */
    class UIKRigFBIKSolver : public IKRig::UIKRigSolver
    {
    public:
        BasicTypes::FName                                            RootBone;                                                //  Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      Iterations;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MassMultiplier;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowStretch;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        PBIK::EPBIKRootBehavior                                      RootBehavior;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        PBIK::FRootPrePullSettings                                   PrePullRootSettings;                                     //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        float                                                        PullChainAlpha;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MaxAngle;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        OverRelaxation;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bStartSolveFromInputPose;                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<IKRig::UIKRig_FBIKEffector*>              Effectors;                                               //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<IKRig::UIKRig_FBIKBoneSettings*>          BoneSettings;                                            //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x68];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/IKRig.IKRigFBIKSolver");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
