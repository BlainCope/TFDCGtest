#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "SlateCore_FPointerEvent.h"
#include "InputCore_FKey.h"
#include "CoreUObject_FVector2D.h"
#include "Engine_ENUMS.h"
#include "Engine_FSlateModifierKeysState.h"
#include "SlateCore_FKeyEvent.h"
#include "SlateCore_ENUMS.h"
#include "SlateCore_FAnalogInputEvent.h"
#include "BasicTypes_FText.h"
#include "SlateCore_FInputEvent.h"
#include "Slate_FInputChord.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.KismetInputLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UKismetInputLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        bool STATIC_PointerEvent_IsTouchEvent(const SlateCore::FPointerEvent& Input);
        bool STATIC_PointerEvent_IsMouseButtonDown(const SlateCore::FPointerEvent& Input, const InputCore::FKey& MouseButton);
        float STATIC_PointerEvent_GetWheelDelta(const SlateCore::FPointerEvent& Input);
        int32_t STATIC_PointerEvent_GetUserIndex(const SlateCore::FPointerEvent& Input);
        int32_t STATIC_PointerEvent_GetTouchpadIndex(const SlateCore::FPointerEvent& Input);
        CoreUObject::FVector2D STATIC_PointerEvent_GetScreenSpacePosition(const SlateCore::FPointerEvent& Input);
        int32_t STATIC_PointerEvent_GetPointerIndex(const SlateCore::FPointerEvent& Input);
        CoreUObject::FVector2D STATIC_PointerEvent_GetLastScreenSpacePosition(const SlateCore::FPointerEvent& Input);
        Engine::ESlateGesture STATIC_PointerEvent_GetGestureType(const SlateCore::FPointerEvent& Input);
        CoreUObject::FVector2D STATIC_PointerEvent_GetGestureDelta(const SlateCore::FPointerEvent& Input);
        InputCore::FKey STATIC_PointerEvent_GetEffectingButton(const SlateCore::FPointerEvent& Input);
        CoreUObject::FVector2D STATIC_PointerEvent_GetCursorDelta(const SlateCore::FPointerEvent& Input);
        bool STATIC_ModifierKeysState_IsShiftDown(const Engine::FSlateModifierKeysState& KeysState);
        bool STATIC_ModifierKeysState_IsControlDown(const Engine::FSlateModifierKeysState& KeysState);
        bool STATIC_ModifierKeysState_IsCommandDown(const Engine::FSlateModifierKeysState& KeysState);
        bool STATIC_ModifierKeysState_IsAltDown(const Engine::FSlateModifierKeysState& KeysState);
        bool STATIC_Key_IsVectorAxis(const InputCore::FKey& Key);
        bool STATIC_Key_IsValid(const InputCore::FKey& Key);
        bool STATIC_Key_IsMouseButton(const InputCore::FKey& Key);
        bool STATIC_Key_IsModifierKey(const InputCore::FKey& Key);
        bool STATIC_Key_IsKeyboardKey(const InputCore::FKey& Key);
        bool STATIC_Key_IsGamepadKey(const InputCore::FKey& Key);
        bool STATIC_Key_IsDigital(const InputCore::FKey& Key);
        bool STATIC_Key_IsButtonAxis(const InputCore::FKey& Key);
        bool STATIC_Key_IsAxis3D(const InputCore::FKey& Key);
        bool STATIC_Key_IsAxis2D(const InputCore::FKey& Key);
        bool STATIC_Key_IsAxis1D(const InputCore::FKey& Key);
        bool STATIC_Key_IsAnalog(const InputCore::FKey& Key);
        SlateCore::EUINavigation STATIC_Key_GetNavigationDirectionFromKey(const SlateCore::FKeyEvent& InKeyEvent);
        SlateCore::EUINavigation STATIC_Key_GetNavigationDirectionFromAnalog(const SlateCore::FAnalogInputEvent& InAnalogEvent);
        SlateCore::EUINavigationAction STATIC_Key_GetNavigationActionFromKey(const SlateCore::FKeyEvent& InKeyEvent);
        SlateCore::EUINavigationAction STATIC_Key_GetNavigationAction(const InputCore::FKey& InKey);
        BasicTypes::FText STATIC_Key_GetDisplayName(const InputCore::FKey& Key, bool bLongDisplayName);
        bool STATIC_InputEvent_IsShiftDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsRightShiftDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsRightControlDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsRightCommandDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsRightAltDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsRepeat(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsLeftShiftDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsLeftControlDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsLeftCommandDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsLeftAltDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsControlDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsCommandDown(const SlateCore::FInputEvent& Input);
        bool STATIC_InputEvent_IsAltDown(const SlateCore::FInputEvent& Input);
        BasicTypes::FText STATIC_InputChord_GetDisplayName(const Slate::FInputChord& Key);
        int32_t STATIC_GetUserIndex(const SlateCore::FKeyEvent& Input);
        Engine::FSlateModifierKeysState STATIC_GetModifierKeysState();
        InputCore::FKey STATIC_GetKey(const SlateCore::FKeyEvent& Input);
        float STATIC_GetAnalogValue(const SlateCore::FAnalogInputEvent& Input);
        bool STATIC_EqualEqual_KeyKey(const InputCore::FKey& A, const InputCore::FKey& B);
        bool STATIC_EqualEqual_InputChordInputChord(const Slate::FInputChord& A, const Slate::FInputChord& B);
        void STATIC_CalibrateTilt();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.KismetInputLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
