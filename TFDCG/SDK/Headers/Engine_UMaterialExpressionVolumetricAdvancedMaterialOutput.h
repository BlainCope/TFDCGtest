#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FExpressionInput.h"
#include "Engine_UMaterialExpressionCustomOutput.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.MaterialExpressionVolumetricAdvancedMaterialOutput
     * Size -> 0x0140 (FullSize[0x01F0] - InheritedSize[0x00B0])
     */
    class UMaterialExpressionVolumetricAdvancedMaterialOutput : public Engine::UMaterialExpressionCustomOutput
    {
    public:
        Engine::FExpressionInput                                     PhaseG;                                                  //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     PhaseG2;                                                 //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     PhaseBlend;                                              //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     MultiScatteringContribution;                             //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     MultiScatteringOcclusion;                                //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     MultiScatteringEccentricity;                             //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FExpressionInput                                     ConservativeDensity;                                     //  NoDestructor, NativeAccessSpecifierPublic
        float                                                        ConstPhaseG;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ConstPhaseG2;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ConstPhaseBlend;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         PerSamplePhaseEvaluation;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      MultiScatteringApproximationOctaveCount;                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ConstMultiScatteringContribution;                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ConstMultiScatteringOcclusion;                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ConstMultiScatteringEccentricity;                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bGroundContribution;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bGrayScaleMaterial;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bRayMarchVolumeShadow;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bClampMultiScatteringContribution;                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.MaterialExpressionVolumetricAdvancedMaterialOutput");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
