#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UUserWidget; };
namespace CG::UMG { class UPanelWidget; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UI_GameCenter_Crosshair
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos_Params
    {
    public:
        CoreUObject::FVector2D                                       InPos;                                                   //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bClamp;                                                  //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector2D                                       OutPos;                                                  //  0x000C(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_ResetHitGuide_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_UpdateCrosshairOpacity_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_UpdateCrosshairSpread_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_AttachHitGuideWidget_Params
    {
    public:
        UMG::UUserWidget*                                            WidgetClass;                                             //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        UMG::UUserWidget*                                            WidgetReference;                                         //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
        UMG::UUserWidget*                                            AttachedHitGuideWidget;                                  //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_ApplyZoomState_Params
    {
    public:
        bool                                                         InZoomed;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_CreateCrosshairWidget_Params
    {
    public:
        UMG::UUserWidget*                                            CrosshairClass;                                          //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        UMG::UUserWidget*                                            CurrentWidget;                                           //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
        UMG::UPanelWidget*                                           ParentWidget;                                            //  0x0010(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
        UMG::UUserWidget*                                            OutWidget;                                               //  0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_ChangeCrosshair_Params
    {
    public:
        UMG::UUserWidget*                                            CrosshairClass;                                          //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        UMG::UUserWidget*                                            ZoomCrosshairClass;                                      //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_ChangedWeapon_Params
    {
    public:
        UMG::UUserWidget*                                            InCrosshairClass;                                        //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
        UMG::UUserWidget*                                            InZoomCrosshairClass;                                    //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom_Params
    {
    public:
        bool                                                         bZoomed;                                                 //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bIsScopeZoomed;                                          //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread_Params
    {
    public:
        float                                                        Spread;                                                  //  0x0000(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_WeaponFireBursted_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange_Params
    {
    public:
        bool                                                         bEnemyInWeaponRange;                                     //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FColor                                          InAimingNoticeCrosshairColor;                            //  0x0004(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_ResizedViewport_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_UpdateWireGuide_Params
    {
    public:
        CoreUObject::FVector2D                                       ScreenPos;                                               //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_ChangedCameraFOV_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady_Params
    {
    public:
        bool                                                         bHighReady;                                              //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide_Params
    {
    public:
        bool                                                         bShow;                                                   //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        UMG::UUserWidget*                                            WidgetClass;                                             //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
        UMG::UUserWidget*                                            ZoomWidgetClass;                                         //  0x0010(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
        CoreUObject::FVector2D                                       ScreenPos;                                               //  0x0018(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
