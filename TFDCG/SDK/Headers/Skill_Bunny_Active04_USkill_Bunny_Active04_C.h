#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "M1_ENUMS.h"
#include "M1Data_ENUMS.h"
#include "BunnyBeamLevelData_FBunnyBeamLevelData.h"
#include "M1_FM1AbilityId.h"
#include "Engine_FTimerHandle.h"
#include "SkillAbility_BeamBase_USkillAbility_BeamBase_C.h"
#include "M1_FM1AbilityEvent.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::M1 { class UM1DataVisualFX; };
namespace CG::M1 { class UM1AbilityTask_WaitAbilityEvent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Skill_Bunny_Active04
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Gameplay/PC/Bunny/Skill_Bunny_Active04.Skill_Bunny_Active04_C
     * Size -> 0x00E8 (FullSize[0x0488] - InheritedSize[0x03A0])
     */
    class USkill_Bunny_Active04_C : public SkillAbility_BeamBase::USkillAbility_BeamBase_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        M1::AM1Player*                                               OwnerActor;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        BasicTypes::UMulticastInlineDelegate                         OnBeamActivationChanged;                                 //  ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnBeamLevelIncrease;                                     //  ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        uint8_t                                                      UnknownData_0001[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        M1::EM1BattleKey                                             BattleKey;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        M1Data::EM1StatType                                          CostStatType;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BunnyBeamLevelData::FBunnyBeamLevelData                      BeamLevelData_LV1;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       ChargeTime_Lv1;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       ChargeTime_Lv2;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       DamageRate_Lv1;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       DamageRate_Lv2;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        double                                                       DamageRate_Lv3;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BunnyBeamLevelData::FBunnyBeamLevelData                      BeamLevelData_LV2;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BunnyBeamLevelData::FBunnyBeamLevelData                      BeamLevelData_LV3;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         bPlayingEndSection;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         bIsBeaming;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0003[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1AbilityId                                             CostSEId;                                                //  Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash
        int32_t                                                      CurrBeamLevel;                                           //  Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FTimerHandle                                         ChargeTimerHandle;                                       //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        M1::UM1DataVisualFX*                                         VFXAsset;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        bool                                                         bCostDepleted;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0005[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1AbilityTask_WaitAbilityEvent*                         WaitCostDepletedAsyncTask;                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash

    public:
        void IncreaseBeamLevel();
        void GetBeamLevelData(int32_t BeamLevel, BunnyBeamLevelData::FBunnyBeamLevelData* BeamLevelData, bool* bValid);
        void JumpEndSection();
        void BeamStart();
        void OnAbilityEvent_4A462A1E4E1E7BE1AE84FA9C4E71DEA4(const M1::FM1AbilityEvent& Event);
        void OnInput_B0EF358841BB5B69F2F99899295ECB10();
        void BP_OnDeactivated(bool bCancelled);
        void BP_OnActivated();
        void OnMontageEventReceived(const M1::FM1AbilityEvent& InEvent);
        void OnHit(const Engine::FHitResult& HitResult);
        void ServerOnReceiveEndInput();
        void NetMulticastOnReceiveEndInput();
        void ExecuteUbergraph_Skill_Bunny_Active04(int32_t EntryPoint);
        void OnBeamActivationChanged__DelegateSignature(bool bActivated);
        void OnBeamLevelIncrease__DelegateSignature(int32_t CurrentBeamLevel, double ChargeTimeToNextLevel, bool bMaxLevel);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Gameplay/PC/Bunny/Skill_Bunny_Active04.Skill_Bunny_Active04_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
