#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "M1Data_ENUMS.h"
#include "GameplayTags_FGameplayTag.h"
#include "M1_FM1ProjectileHomingInfo.h"
#include "Engine_UProjectileMovementComponent.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USphereComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1ProjectileMovementComponent
     * Size -> 0x0070 (FullSize[0x0240] - InheritedSize[0x01D0])
     */
    class UM1ProjectileMovementComponent : public Engine::UProjectileMovementComponent
    {
    public:
        M1::EM1ProjectileHomingTargetSearchType                      HomingTargetSearchType;                                  //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHomingIgnoreObstacle;                                   //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        HomingRadius;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        HomingAngle;                                             //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        WaitTimeWhenLostHomingTarget;                            //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::EM1RelationsCheckType                                HomingTargetRelations;                                   //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GameplayTags::FGameplayTag                                   HomingTargetQueryTag;                                    //  Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bApplySpeedScaling;                                      //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1ProjectileHomingInfo                                  HomingInfo;                                              //  Net, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USphereComponent*                                    HomingSphereComponent;                                   //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        void StopHomingTargetSearch();
        void StartHomingTargetSearch();
        void SetHomingInfo(bool InbIsHomingProjectile, Engine::USceneComponent* InHomingTargetComponent, float InHomingMagnitude);
        void OnRepHomingInfo();
        void OnEndHomingSphereOverlap(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
        void OnBeginHomingSphereOverlap(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const Engine::FHitResult& SweepResult);
        void NetMulticastSetHomingTarget(Engine::USceneComponent* HomingTarget);
        Engine::USceneComponent* GetHomingTargetComponent();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1ProjectileMovementComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
