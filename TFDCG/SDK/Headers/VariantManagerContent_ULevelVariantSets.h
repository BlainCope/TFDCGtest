#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };
namespace CG::VariantManagerContent { class UVariantSet; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::VariantManagerContent
{
    /**
     * Class /Script/VariantManagerContent.LevelVariantSets
     * Size -> 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
     */
    class ULevelVariantSets : public CoreUObject::UObject
    {
    public:
        CoreUObject::UObject*                                        DirectorClass;                                           //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<VariantManagerContent::UVariantSet*>      VariantSets;                                             //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x50];                                  //  MISSED OFFSET (PADDING)

    public:
        VariantManagerContent::UVariantSet* GetVariantSetByName(const BasicTypes::FString& VariantSetName);
        VariantManagerContent::UVariantSet* GetVariantSet(int32_t VariantSetIndex);
        int32_t GetNumVariantSets();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/VariantManagerContent.LevelVariantSets");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
