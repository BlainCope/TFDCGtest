#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FLightingChannels.h"
#include "M1Data_FM1TemplateId.h"
#include "BasicTypes_TArray.h"
#include "M1Data_ENUMS.h"
#include "M1_ENUMS.h"
#include "Engine_AActor.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::M1 { class UM1PreviewAnimInstance; };
namespace CG::M1 { class UM1PreviewPlayerWeaponSlotControlComponent; };
namespace CG::M1 { class UM1InventoryItemEquipment; };
namespace CG::M1 { class AM1Weapon; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1CharacterPreview
     * Size -> 0x0200 (FullSize[0x0448] - InheritedSize[0x0248])
     */
    class AM1CharacterPreview : public Engine::AActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x150];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FLightingChannels                                    LighingChannels;                                         //  Transient, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::FM1TemplateId                                        CharacterId;                                             //  NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USkeletalMeshComponent*                              PreviewMesh;                                             //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1PreviewAnimInstance*                                  PreviewAnimInstanceClass;                                //  Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1PreviewPlayerWeaponSlotControlComponent*              PreviewPlayerWeaponSlotControlComponent;                 //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::UM1InventoryItemEquipment*>           EquippedItems;                                           //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::EM1CharacterGender                                   AnimPresetType;                                          //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Weapon*                                               CurrentWeaponCDO;                                        //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bNoCameraBlendOnFirstRefresh;                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1CharacterCameraType                                   CameraType;                                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x56];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetCharacterTestData(int64_t InTestID);
        M1Data::EM1CharacterGender GetCharacterGender();
        BasicTypes::FName BP_GetCharacterStringId();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1CharacterPreview");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
