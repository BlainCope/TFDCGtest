#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1ItemProbabilityInfo.h"
#include "M1_FM1ShopDisplayInfo.h"
#include "M1_UM1UIData.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_FText.h"
#include "M1_ENUMS.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UTexture2D.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1InventoryItem; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIDataItemInfo
     * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
     */
    class UM1UIDataItemInfo : public M1::UM1UIData
    {
    public:
        M1::UM1InventoryItem*                                        ItemData;                                                //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      RewardProbability;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1ItemProbabilityInfo                                   ProbabilityInfo;                                         //  Transient, NoDestructor, NativeAccessSpecifierPrivate
        M1::FM1ShopDisplayInfo                                       ShopDisplayInfo;                                         //  Transient, NoDestructor, NativeAccessSpecifierPublic

    public:
        bool ShouldBeVisibleInInventory();
        bool IsVoidBattleItem();
        bool IsRune();
        bool IsOwned();
        bool IsNewlyObtained();
        bool IsJunkable();
        bool IsJunk();
        bool IsImportantItem();
        bool IsEquipment();
        bool IsEmotion();
        bool IsDeletable();
        bool IsCustomizing();
        bool IsCurrency();
        bool IsConsumable();
        bool IsBookmarkable();
        bool IsBookmark();
        bool HasNotification();
        M1Data::EM1CurrencyType GetSellingType();
        int64_t GetSellingPrice();
        int64_t GetQuantity();
        BasicTypes::FText GetProbabilityText();
        double GetProbability();
        int32_t GetMaxLevel();
        int32_t GetLevel();
        M1Data::EM1ItemType GetItemType();
        BasicTypes::FText GetItemTierText();
        M1Data::EM1ItemTierType GetItemTier();
        BasicTypes::FText GetItemText(M1::EM1UITextType InTextType);
        BasicTypes::FString GetItemStringId();
        BasicTypes::FText GetItemName();
        int32_t GetImportantPriority();
        BasicTypes::TSoftObjectPtr<Engine::UTexture2D> GetIcon();
        int64_t GetChanges();
        BasicTypes::TSoftObjectPtr<Engine::UTexture2D> GetBigIcon();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIDataItemInfo");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
