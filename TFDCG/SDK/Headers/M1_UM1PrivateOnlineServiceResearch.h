#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1PrivateOnlineSubService.h"
#include "M1Data_FM1TemplateId.h"
#include "M1_FM1Response_RequestUnSetResearchBookmark.h"
#include "M1_FM1Response_RequestSetResearchBookmark.h"
#include "M1_FM1Response_CheckResearchStatus.h"
#include "M1_FM1GameplayServiceEventResearchResult.h"
#include "M1_FM1Response_GetResearachBookmarkData.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1PrivateOnlineServiceResearch
     * Size -> 0x0060 (FullSize[0x00A0] - InheritedSize[0x0040])
     */
    class UM1PrivateOnlineServiceResearch : public M1::UM1PrivateOnlineSubService
    {
    public:
        uint8_t                                                      UnknownData_0000[0x60];                                  //  MISSED OFFSET (PADDING)

    public:
        void ServerRequestUnsetGoalResearch();
        void ServerRequestStartResearch(const M1Data::FM1TemplateId& InResearchTemplateId);
        void ServerRequestSetGoalResearch(const M1Data::FM1TemplateId& InResearchTemplateId);
        void ServerRequestResearchStatus();
        void ServerRequestResearchBookmark();
        void ServerRequestReceiveResearch(const M1Data::FM1TemplateId& InResearchTemplateId);
        void ServerRequestQuickStartResearch(const M1Data::FM1TemplateId& InResearchTemplateId);
        void ServerRequestCancelResearch(const M1Data::FM1TemplateId& InResearchTemplateId);
        void ServerRequestBoostResearch(const M1Data::FM1TemplateId& InResearchTemplateId);
        void ClientReceiveUnSetGoalResearch(const M1::FM1Response_RequestUnSetResearchBookmark& InResult);
        void ClientReceiveSetGoalResearch(const M1Data::FM1TemplateId& InResearchTemplateId, const M1::FM1Response_RequestSetResearchBookmark& InResult);
        void ClientReceiveResearchStatus(const M1::FM1Response_CheckResearchStatus& InResult);
        void ClientReceiveResearchResult(const M1::FM1GameplayServiceEventResearchResult& InResult);
        void ClientReceiveResearchBookmark(const M1::FM1Response_GetResearachBookmarkData& InResult);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1PrivateOnlineServiceResearch");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
