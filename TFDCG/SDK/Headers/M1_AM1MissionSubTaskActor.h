#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "BasicTypes_TSet.h"
#include "BasicTypes_FName.h"
#include "M1_FM1TMissionTimeLimiter.h"
#include "M1_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "M1_AM1SimpleTaskActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1MissionTaskComponent; };
namespace CG::M1 { class UM1MissionTaskCustomLogic; };
namespace CG::M1 { class UM1MissionDynamicDerivative; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionSubTaskActor
     * Size -> 0x01D0 (FullSize[0x0628] - InheritedSize[0x0458])
     */
    class AM1MissionSubTaskActor : public M1::AM1SimpleTaskActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0xA8];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1::UM1MissionTaskComponent*, M1::UM1MissionTaskCustomLogic*> CustomLogicsByTaskComponents;                            //  Edit, ExportObject, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::UM1MissionTaskCustomLogic*                               OwnCustomLogic;                                          //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bRefresh;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<BasicTypes::FName>                          ActivatedEventContexts;                                  //  Transient, NativeAccessSpecifierPrivate
        M1::FM1TMissionTimeLimiter                                   SubTaskTimeLimiter;                                      //  Net, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x4C];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      SubTaskScheduleIndex;                                    //  Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bShouldRunWhenActivated;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::EM1DynamicActorLifespanPolicy                            LifeSpanPolicy;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::UM1MissionDynamicDerivative*>         SubTaskDynamicDerivatives;                               //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::EM1MissionTaskActorWidgetVisibleType                     ActorWidgetVisibleType;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ActorWidgetHiddenRadius;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnActorDestroyed(Engine::AActor* InDestroyed);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionSubTaskActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
