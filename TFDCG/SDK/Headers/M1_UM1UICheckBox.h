#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "M1_UM1UIWidget.h"
#include "BasicTypes_FText.h"
#include "SlateCore_ENUMS.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1CheckBox; };
namespace CG::M1 { class UM1TextBlock; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UICheckBox
     * Size -> 0x0030 (FullSize[0x0738] - InheritedSize[0x0708])
     */
    class UM1UICheckBox : public M1::UM1UIWidget
    {
    public:
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1CheckBox*                                             CheckBox;                                                //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1TextBlock*                                            Text_Default;                                            //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FString                                          StringKey;                                               //  Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

    public:
        void SetText(const BasicTypes::FText& InText);
        void SetString(const BasicTypes::FString& InStringKey);
        void SetIsChecked(bool InIsChecked);
        void SetCheckedState(SlateCore::ECheckBoxState InCheckedState);
        void OnCheckStateChanged(const BasicTypes::FName& CheckBoxName, bool bIsChecked);
        bool IsPressed();
        bool IsChecked();
        SlateCore::ECheckBoxState GetCheckedState();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UICheckBox");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
