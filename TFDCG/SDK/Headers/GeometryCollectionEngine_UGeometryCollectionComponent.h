#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Chaos_ENUMS.h"
#include "GeometryCollectionEngine_FGeometryCollectionDamagePropagationData.h"
#include "ChaosSolverEngine_ENUMS.h"
#include "CoreUObject_FVector.h"
#include "GeometryCollectionEngine_FGeomComponentCacheParameters.h"
#include "CoreUObject_FTransform.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "GeometryCollectionEngine_FGeometryCollectionRepData.h"
#include "Engine_UMeshComponent.h"
#include "CoreUObject_FBox.h"
#include "ChaosSolverEngine_FChaosPhysicsCollisionInfo.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::ChaosSolverEngine { class AChaosSolverActor; };
namespace CG::GeometryCollectionEngine { class UGeometryCollection; };
namespace CG::FieldSystemEngine { class AFieldSystemActor; };
namespace CG::PhysicsCore { class UChaosPhysicalMaterial; };
namespace CG::PhysicsCore { class UPhysicalMaterial; };
namespace CG::GeometryCollectionEngine { class AGeometryCollectionISMPoolActor; };
namespace CG::Engine { class UBodySetup; };
namespace CG::Engine { class UInstancedStaticMeshComponent; };
namespace CG::GeometryCollectionEngine { class UGeometryCollectionComponent; };
namespace CG::FieldSystemEngine { class UFieldSystemMetaData; };
namespace CG::FieldSystemEngine { class UFieldNodeBase; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GeometryCollectionEngine
{
    /**
     * Class /Script/GeometryCollectionEngine.GeometryCollectionComponent
     * Size -> 0x0520 (FullSize[0x09D0] - InheritedSize[0x04B0])
     */
    class UGeometryCollectionComponent : public Engine::UMeshComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ChaosSolverEngine::AChaosSolverActor*                        ChaosSolverActor;                                        //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0xE0];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GeometryCollectionEngine::UGeometryCollection*               RestCollection;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<FieldSystemEngine::AFieldSystemActor*>    InitializationFields;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, UObjectWrapper, NativeAccessSpecifierPublic
        bool                                                         Simulating;                                              //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Chaos::EObjectStateTypeEnum                                  ObjectType;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bForceMotionBlur;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         EnableClustering;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      ClusterGroupIndex;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      MaxClusterLevel;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    DamageThreshold;                                         //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bUseSizeSpecificDamageThreshold;                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GeometryCollectionEngine::FGeometryCollectionDamagePropagationData DamagePropagationData;                                   //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        bool                                                         bEnableDamageFromCollision;                              //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowRemovalOnSleep;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowRemovalOnBreak;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ChaosSolverEngine::EClusterConnectionTypeEnum                ClusterConnectionType;                                   //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      CollisionGroup;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        CollisionSampleFraction;                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        LinearEtherDrag;                                         //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        AngularEtherDrag;                                        //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        PhysicsCore::UChaosPhysicalMaterial*                         PhysicalMaterial;                                        //  ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Chaos::EInitialVelocityTypeEnum                              InitialVelocityType;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         InitialLinearVelocity;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         InitialAngularVelocity;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        PhysicsCore::UPhysicalMaterial*                              PhysicalMaterialOverride;                                //  ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        GeometryCollectionEngine::FGeomComponentCacheParameters      CacheParameters;                                         //  NoDestructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::FTransform>                  RestTransforms;                                          //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::UMulticastInlineDelegate                         NotifyGeometryCollectionPhysicsStateChange;              //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         NotifyGeometryCollectionPhysicsLoadingStateChange;       //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0009[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0010[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnChaosBreakEvent;                                       //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0011[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnChaosRemovalEvent;                                     //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0012[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::UMulticastInlineDelegate                         OnChaosCrumblingEvent;                                   //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0013[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        float                                                        DesiredCacheTime;                                        //  Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         CachePlayback;                                           //  Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0014[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnChaosPhysicsCollision;                                 //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0015[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        bool                                                         bNotifyBreaks;                                           //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bNotifyCollisions;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bNotifyTrailing;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bNotifyRemovals;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bNotifyCrumblings;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCrumblingEventIncludesChildren;                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bStoreVelocities;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bShowBoneColors;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bUseRootProxyForNavigation;                              //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bUpdateNavigationInTick;                                 //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0016[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GeometryCollectionEngine::AGeometryCollectionISMPoolActor*   ISMPool;                                                 //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0017[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bEnableReplication;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bEnableAbandonAfterLevel;                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0018[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      ReplicationAbandonClusterLevel;                          //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      ReplicationAbandonAfterLevel;                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0019[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GeometryCollectionEngine::FGeometryCollectionRepData         RepData;                                                 //  Net, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0020[0x220];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UBodySetup*                                          DummyBodySetup;                                          //  ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0021[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UInstancedStaticMeshComponent*>   EmbeddedGeometryComponents;                              //  ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0022[0x28];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetRestCollection(GeometryCollectionEngine::UGeometryCollection* RestCollectionIn);
        void SetNotifyRemovals(bool bNewNotifyRemovals);
        void SetNotifyCrumblings(bool bNewNotifyCrumblings, bool bNewCrumblingEventIncludesChildren);
        void SetNotifyBreaks(bool bNewNotifyBreaks);
        void SetEnableDamageFromCollision(bool bValue);
        void SetAnchoredByTransformedBox(const CoreUObject::FBox& Box, const CoreUObject::FTransform& Transform, bool bAnchored, int32_t MaxLevel);
        void SetAnchoredByIndex(int32_t Index, bool bAnchored);
        void SetAnchoredByBox(const CoreUObject::FBox& WorldSpaceBox, bool bAnchored, int32_t MaxLevel);
        void RemoveAllAnchors();
        void ReceivePhysicsCollision(const ChaosSolverEngine::FChaosPhysicsCollisionInfo& CollisionInfo);
        void NotifyGeometryCollectionPhysicsStateChange__DelegateSignature(GeometryCollectionEngine::UGeometryCollectionComponent* FracturedComponent);
        void NotifyGeometryCollectionPhysicsLoadingStateChange__DelegateSignature(GeometryCollectionEngine::UGeometryCollectionComponent* FracturedComponent);
        int32_t GetRootIndex();
        void GetMassAndExtents(int32_t ItemIndex, float* OutMass, CoreUObject::FBox* OutExtents);
        CoreUObject::FBox GetLocalBounds();
        int32_t GetInitialLevel(int32_t ItemIndex);
        BasicTypes::FString GetDebugInfo();
        void CrumbleCluster(int32_t ItemIndex);
        void CrumbleActiveClusters();
        void ApplyPhysicsField(bool Enabled, Chaos::EGeometryCollectionPhysicsTypeEnum Target, FieldSystemEngine::UFieldSystemMetaData* MetaData, FieldSystemEngine::UFieldNodeBase* Field);
        void ApplyLinearVelocity(int32_t ItemIndex, const CoreUObject::FVector& LinearVelocity);
        void ApplyKinematicField(float Radius, const CoreUObject::FVector& Position);
        void ApplyInternalStrain(int32_t ItemIndex, const CoreUObject::FVector& Location, float Radius, int32_t PropagationDepth, float PropagationFactor, float Strain);
        void ApplyExternalStrain(int32_t ItemIndex, const CoreUObject::FVector& Location, float Radius, int32_t PropagationDepth, float PropagationFactor, float Strain);
        void ApplyBreakingLinearVelocity(int32_t ItemIndex, const CoreUObject::FVector& LinearVelocity);
        void ApplyBreakingAngularVelocity(int32_t ItemIndex, const CoreUObject::FVector& AngularVelocity);
        void ApplyAngularVelocity(int32_t ItemIndex, const CoreUObject::FVector& AngularVelocity);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/GeometryCollectionEngine.GeometryCollectionComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
