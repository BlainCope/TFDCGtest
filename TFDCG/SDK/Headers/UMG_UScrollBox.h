#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SlateCore_FScrollBoxStyle.h"
#include "SlateCore_FScrollBarStyle.h"
#include "SlateCore_ENUMS.h"
#include "UMG_ENUMS.h"
#include "CoreUObject_FVector2D.h"
#include "SlateCore_FMargin.h"
#include "Slate_ENUMS.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "UMG_UPanelWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.ScrollBox
     * Size -> 0x0A78 (FullSize[0x0BC0] - InheritedSize[0x0148])
     */
    class UScrollBox : public UMG::UPanelWidget
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SlateCore::FScrollBoxStyle                                   WidgetStyle;                                             //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        SlateCore::FScrollBarStyle                                   WidgetBarStyle;                                          //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        SlateCore::EOrientation                                      Orientation;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        UMG::ESlateVisibility                                        ScrollBarVisibility;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::EConsumeMouseWheel                                ConsumeMouseWheel;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector2D                                       ScrollbarThickness;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::FMargin                                           ScrollbarPadding;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        bool                                                         AlwaysShowScrollbar;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         AlwaysShowScrollbarTrack;                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         AllowOverscroll;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         BackPadScrolling;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         FrontPadScrolling;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAnimateWheelScrolling;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Slate::EDescendantScrollDestination                          NavigationDestination;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        NavigationScrollPadding;                                 //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Slate::EScrollWhenFocusChanges                               ScrollWhenFocusChanges;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowRightClickDragScrolling;                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        WheelScrollMultiplier;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UMulticastInlineDelegate                         OnUserScrolled;                                          //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0005[0x20];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetWheelScrollMultiplier(float NewWheelScrollMultiplier);
        void SetScrollWhenFocusChanges(Slate::EScrollWhenFocusChanges NewScrollWhenFocusChanges);
        void SetScrollOffset(float NewScrollOffset);
        void SetScrollbarVisibility(UMG::ESlateVisibility NewScrollBarVisibility);
        void SetScrollbarThickness(const CoreUObject::FVector2D& NewScrollbarThickness);
        void SetScrollbarPadding(const SlateCore::FMargin& NewScrollbarPadding);
        void SetOrientation(SlateCore::EOrientation NewOrientation);
        void SetNavigationDestination(Slate::EDescendantScrollDestination NewNavigationDestination);
        void SetConsumeMouseWheel(SlateCore::EConsumeMouseWheel NewConsumeMouseWheel);
        void SetAnimateWheelScrolling(bool bShouldAnimateWheelScrolling);
        void SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar);
        void SetAllowOverscroll(bool NewAllowOverscroll);
        void ScrollWidgetIntoView(UMG::UWidget* WidgetToFind, bool AnimateScroll, Slate::EDescendantScrollDestination ScrollDestination, float Padding);
        void ScrollToStart();
        void ScrollToEnd();
        float GetViewOffsetFraction();
        float GetViewFraction();
        float GetScrollOffsetOfEnd();
        float GetScrollOffset();
        void EndInertialScrolling();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.ScrollBox");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
