#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_UM1UIWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1UICurrency; };
namespace CG::M1 { class UM1UIKeyButton; };
namespace CG::M1 { class UM1WidgetSwitcher; };
namespace CG::M1 { class UM1UIRune; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIRuneCompose_Inform
     * Size -> 0x00A0 (FullSize[0x07A8] - InheritedSize[0x0708])
     */
    class UM1UIRuneCompose_Inform : public M1::UM1UIWidget
    {
    public:
        M1::UM1UICurrency*                                           UI_CurrencyGold;                                         //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1UIKeyButton*                                          UI_ComposeButton;                                        //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1WidgetSwitcher*                                       WS_SelectRuneGuide;                                      //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<M1::UM1UIRune*>                           MaterialSlots;                                           //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x78];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnMaterialSlotMouseUnhovered(M1::UM1UIWidget* InWidget);
        void OnMaterialSlotMouseHovered(M1::UM1UIWidget* InWidget);
        void OnMaterialSlotClicked(M1::UM1UIWidget* InWidget);
        void OnHoldCompleted_ComposeRune(M1::UM1UIWidget* InWidget);
        void OnEndedComposeSequence();
        void BP_UpdateRequiredCurrency(bool bEnough);
        void BP_PlayComposeSequence();
        bool BP_IsComposeSequencePlaying();
        BasicTypes::TArray<M1::UM1UIRune*> BP_GetMaterialSlots();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIRuneCompose_Inform");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
