#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FBoneReference.h"
#include "AnimationCore_FAxis.h"
#include "CoreUObject_FVector.h"
#include "AnimGraphRuntime_FAnimNode_SkeletalControlBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * ScriptStruct /Script/M1.M1AnimNode_HeadIK
     * Size -> 0x00F8 (FullSize[0x01C0] - InheritedSize[0x00C8])
     */
    struct FM1AnimNode_HeadIK : public AnimGraphRuntime::FAnimNode_SkeletalControlBase
    {
    public:
        bool                                                         bEnableEyesParallalAim;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FBoneReference                                       EyeLeftBone;                                             //  Edit, NoDestructor, NativeAccessSpecifierPublic
        Engine::FBoneReference                                       EyeRightBone;                                            //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        EyeAimClamp;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        AnimationCore::FAxis                                         EyeLookAtAxis;                                           //  Edit, NoDestructor, NativeAccessSpecifierPublic
        bool                                                         bEnableHeadAim;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FBoneReference                                       BustBone;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        Engine::FBoneReference                                       HeadBone;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        HeadAimClamp;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        AnimationCore::FAxis                                         HeadLookAtAxis;                                          //  Edit, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         AimLocation;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x7C];                                  //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
