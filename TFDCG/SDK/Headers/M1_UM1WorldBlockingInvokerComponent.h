#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Niagara_UNiagaraSystem.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "Engine_FHitResult.h"
#include "M1_UM1CharacterComponent.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1WorldBlockingInvokerComponent
     * Size -> 0x01A0 (FullSize[0x0270] - InheritedSize[0x00D0])
     */
    class UM1WorldBlockingInvokerComponent : public M1::UM1CharacterComponent
    {
    public:
        BasicTypes::TMap<M1::EM1CollisionEffectType, BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>> VFXs;                                                    //  Edit, UObjectWrapper, NativeAccessSpecifierPrivate
        M1::AM1Player*                                               Player_Owner;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TWeakObjectPtr<Niagara::UNiagaraComponent>       ActiveVFX;                                               //  ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::FHitResult                                           CahcedImpact;                                            //  Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0xA4];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnStartVFXEnded(Niagara::UNiagaraComponent* InComponent);
        void OnOwnerMoveBlockedBy(const Engine::FHitResult& Impact);
        void HandleBlockFX(M1::EM1CollisionEffectType InType, const CoreUObject::FVector& InSpawnLocation, const CoreUObject::FRotator& InSpawnRotation);
        CoreUObject::FVector GetClosestPointOnPlane(Engine::UPrimitiveComponent* InHitObject);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1WorldBlockingInvokerComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
