#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FLinearConstraint.h"
#include "Engine_FConeConstraint.h"
#include "Engine_FTwistConstraint.h"
#include "Engine_FLinearDriveConstraint.h"
#include "Engine_FAngularDriveConstraint.h"
#include "PhysicsCore_ENUMS.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.ConstraintProfileProperties
     * Size -> 0x0120
     */
    struct FConstraintProfileProperties
    {
    public:
        float                                                        ProjectionLinearTolerance;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ProjectionAngularTolerance;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ProjectionLinearAlpha;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ProjectionAngularAlpha;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ShockPropagationAlpha;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        LinearBreakThreshold;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        LinearPlasticityThreshold;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        AngularBreakThreshold;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        AngularPlasticityThreshold;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ContactTransferScale;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FLinearConstraint                                    LinearLimit;                                             //  Edit, NoDestructor, NativeAccessSpecifierPublic
        Engine::FConeConstraint                                      ConeLimit;                                               //  Edit, NoDestructor, NativeAccessSpecifierPublic
        Engine::FTwistConstraint                                     TwistLimit;                                              //  Edit, NoDestructor, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0003 : 4;                                    //  BIT_FIELD (PADDING)
        bool                                                         bEnableAngularProjection : 1;                            //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0002 : 1;                                    //  BIT_FIELD (PADDING)
        bool                                                         bParentDominates : 1;                                    //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableLinearProjection : 1;                             //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0001 : 1;                                    //  BIT_FIELD (PADDING)
        bool                                                         bEnableProjection : 1;                                   //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableShockPropagation : 1;                             //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableMassConditioning : 1;                             //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAngularBreakable : 1;                                   //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0000 : 7;                                    //  BIT_FIELD (PADDING)
        bool                                                         bDisableCollision : 1;                                   //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAngularPlasticity : 1;                                  //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bLinearBreakable : 1;                                    //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bLinearPlasticity : 1;                                   //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FLinearDriveConstraint                               LinearDrive;                                             //  Edit, NoDestructor, NativeAccessSpecifierPublic
        Engine::FAngularDriveConstraint                              AngularDrive;                                            //  Edit, NoDestructor, NativeAccessSpecifierPublic
        PhysicsCore::EConstraintPlasticityType                       LinearPlasticityType;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
