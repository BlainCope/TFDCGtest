#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FSoftObjectPath.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "M1_UM1DataHitEffects.h"
#include "BasicTypes_TMap.h"
#include "M1_ENUMS.h"
#include "Niagara_UNiagaraSystem.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1DecalInfo.h"
#include "BasicTypes_FName.h"
#include "M1_UM1WeaponComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::M1 { class UM1WeaponAttackComponent; };
namespace CG::M1 { class UM1WeaponAimComponent; };
namespace CG::M1 { class UM1WeaponSprayPatternComponent; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::Engine { class UStaticMesh; };
namespace CG::Engine { class UFXSystemAsset; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1WeaponVfxComponent
     * Size -> 0x0310 (FullSize[0x03E8] - InheritedSize[0x00D8])
     */
    class UM1WeaponVfxComponent : public M1::UM1WeaponComponent
    {
    public:
        Engine::USkeletalMeshComponent*                              WeaponMesh;                                              //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1WeaponAttackComponent*                                AttackComponent;                                         //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1WeaponAimComponent*                                   AimComponent;                                            //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1WeaponSprayPatternComponent*                          SprayPatternComponent;                                   //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FSoftObjectPath                                 CurHitEffects;                                           //  Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseAltHitEffects;                                       //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bUseAltFireEffectsNS;                                    //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSoftObjectPtr<M1::UM1DataHitEffects>            AltHitEffects;                                           //  ELEMENT_SIZE_MISMATCH Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TMap<M1::EM1WeaponFXType, BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>> AltFireEffectsNS;                                        //  Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Niagara::UNiagaraComponent*>              ChargeFxs;                                               //  ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        Engine::UStaticMesh*                                         WeaponMagazineMesh;                                      //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1DecalInfo                                             Decal;                                                   //  Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
        BasicTypes::TSoftObjectPtr<M1::UM1DataHitEffects>            HitEffects;                                              //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TMap<M1::EM1WeaponFXType, BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>> FireEffectsNS;                                           //  Edit, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            FireBone;                                                //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          GuideBeamEffect;                                         //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          GuideProjectileHitEffect;                                //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          GuideExplosionEffect;                                    //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        bool                                                         bRotationGuideExplosionEffectToHitNormal;                //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        InputLevelFxSockets;                                     //  Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UFXSystemAsset*>                  InputLevelFxs;                                           //  Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
        BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>> InputLevelHitFXs;                                        //  Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0008[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bSpawnMuzzleFXWhenScopedZoom;                            //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0009[0x9F];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRepCurHitEffects();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1WeaponVfxComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
