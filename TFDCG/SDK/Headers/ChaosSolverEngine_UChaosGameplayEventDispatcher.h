#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "ChaosSolverEngine_FChaosHandlerSet.h"
#include "ChaosSolverEngine_FBreakEventCallbackWrapper.h"
#include "ChaosSolverEngine_FRemovalEventCallbackWrapper.h"
#include "ChaosSolverEngine_FCrumblingEventCallbackWrapper.h"
#include "ChaosSolverEngine_UChaosEventListenerComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ChaosSolverEngine
{
    /**
     * Class /Script/ChaosSolverEngine.ChaosGameplayEventDispatcher
     * Size -> 0x0260 (FullSize[0x0310] - InheritedSize[0x00B0])
     */
    class UChaosGameplayEventDispatcher : public ChaosSolverEngine::UChaosEventListenerComponent
    {
    public:
        uint8_t                                                      UnknownData_0000[0x110];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<Engine::UPrimitiveComponent*, ChaosSolverEngine::FChaosHandlerSet> CollisionEventRegistrations;                             //  ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TMap<Engine::UPrimitiveComponent*, ChaosSolverEngine::FBreakEventCallbackWrapper> BreakEventRegistrations;                                 //  ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TMap<Engine::UPrimitiveComponent*, ChaosSolverEngine::FRemovalEventCallbackWrapper> RemovalEventRegistrations;                               //  ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TMap<Engine::UPrimitiveComponent*, ChaosSolverEngine::FCrumblingEventCallbackWrapper> CrumblingEventRegistrations;                             //  ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/ChaosSolverEngine.ChaosGameplayEventDispatcher");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
