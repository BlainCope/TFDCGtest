#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FGuid.h"
#include "BasicTypes_TArray.h"
#include "Engine_FCollectionScalarParameter.h"
#include "Engine_FCollectionVectorParameter.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.MaterialParameterCollection
     * Size -> 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
     */
    class UMaterialParameterCollection : public CoreUObject::UObject
    {
    public:
        CoreUObject::FGuid                                           StateId;                                                 //  ZeroConstructor, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bFullPrecision;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FCollectionScalarParameter>       ScalarParameters;                                        //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FCollectionVectorParameter>       VectorParameters;                                        //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        BasicTypes::TArray<BasicTypes::FName> GetVectorParameterNames();
        CoreUObject::FLinearColor GetVectorParameterDefaultValue(const BasicTypes::FName& ParameterName, bool* bParameterFound);
        BasicTypes::TArray<BasicTypes::FName> GetScalarParameterNames();
        float GetScalarParameterDefaultValue(const BasicTypes::FName& ParameterName, bool* bParameterFound);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.MaterialParameterCollection");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
