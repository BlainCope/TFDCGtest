#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1CheatExtensionBase.h"
#include "BasicTypes_FName.h"
#include "M1Data_FM1TemplateId.h"
#include "M1Data_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1CheatExtensionQuest
     * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
     */
    class UM1CheatExtensionQuest : public M1::UM1CheatExtensionBase
    {
    public:
        void UnsetQuestTracker(bool bMainTracker);
        void StartQuestById(const BasicTypes::FName& ID);
        void StartQuest(const M1Data::FM1TemplateId& TemplateId);
        void SetQuestTracker(const M1Data::FM1TemplateId& TemplateId);
        void SetIgnoreStartCondition(bool bIgnore);
        void ResetAll();
        void Reset(const M1Data::FM1TemplateId& TemplateId);
        void MarkCompletedPlatformAchievements(const M1Data::FM1TemplateId& AchievementId, M1Data::EM1ContentsPlatformType PlatformType);
        void JumpMainQuestById(const BasicTypes::FName& ID);
        void JumpMainQuest(const M1Data::FM1TemplateId& TemplateId);
        void IncQuestProgress(const M1Data::FM1TemplateId& TemplateId, int32_t CompleteConditionIndex, int32_t incCount, bool bComplete);
        void GetQuestListInProgress();
        void GetQuestInfoBy(M1Data::EM1QuestType InQuestType);
        void GetQuestInfo();
        void GetCompletedPlatformAchievements();
        void DataCheck();
        void CompleteTrackingCharacterStoryQuest();
        void CompleteQuestById(const BasicTypes::FName& ID);
        void CompleteQuest(const M1Data::FM1TemplateId& TemplateId);
        void CompleteCurrentMainQuest();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1CheatExtensionQuest");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
