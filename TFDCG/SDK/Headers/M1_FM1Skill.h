#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "M1_FM1AbilityId.h"
#include "M1_FM1AlarmId.h"
#include "M1_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * ScriptStruct /Script/M1.M1Skill
     * Size -> 0x00A0
     */
    struct FM1Skill
    {
    public:
        BasicTypes::FName                                            DefaultSkillDataRowName;                                 //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            SkillDataRowName;                                        //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<M1::FM1AbilityId>                         AbilityIdByLevels;                                       //  ZeroConstructor, NativeAccessSpecifierPrivate
        M1::FM1AbilityId                                             ActiveHandle;                                            //  HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1AlarmId                                               CooltimeAlarmId;                                         //  HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::FM1AlarmId                                               StackChargingTimeAlarmId;                                //  HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      StackChargingCount;                                      //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1AlarmId                                               ActiveDurationAlarmId;                                   //  HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1BattleKey                                             BattleKey;                                               //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1SkillActiveType                                       ActiveType;                                              //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x2E];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::AActor*                                              OwnerActor;                                              //  ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
