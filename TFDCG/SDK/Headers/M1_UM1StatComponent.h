#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1StatArraySerializer.h"
#include "M1_UM1ActorComponent.h"
#include "BasicTypes_TArray.h"
#include "M1Data_FM1StatTypeOpFloat.h"
#include "M1Data_ENUMS.h"
#include "M1Data_FM1ScaledInteger.h"
#include "BasicTypes_UScriptDelegate.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1StatComponent
     * Size -> 0x0300 (FullSize[0x03C8] - InheritedSize[0x00C8])
     */
    class UM1StatComponent : public M1::UM1ActorComponent
    {
    public:
        M1::FM1StatArraySerializer                                   ReplicatedStats;                                         //  Net, RepNotify, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x198];                                 //  MISSED OFFSET (PADDING)

    public:
        void ServerCheatExecuteStats(BasicTypes::TArray<M1Data::FM1StatTypeOpFloat> Stats);
        void OnStatValueChangedDynamicEvent__DelegateSignature(M1Data::EM1StatType StatType);
        void OnRep_Stats();
        M1Data::FM1ScaledInteger GetStatValue(M1Data::EM1StatType InStatType);
        float GetGaugeStatRatio(M1Data::EM1StatType InStatType);
        void BP_AddStatValueChangedEventWithMax(M1Data::EM1StatType StatType, const BasicTypes::UScriptDelegate& Event);
        void BP_AddStatValueChangedEvent(M1Data::EM1StatType StatType, const BasicTypes::UScriptDelegate& Event);
        void Auth_InitializeGaugePageFromStatTypes(BasicTypes::TArray<M1Data::EM1StatType> InGaugeStatTypes);
        void Auth_InitializeGaugePage();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1StatComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
