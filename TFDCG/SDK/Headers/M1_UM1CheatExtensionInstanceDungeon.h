#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_UM1CheatExtensionBase.h"
#include "M1Data_FM1TemplateId.h"
#include "BasicTypes_FString.h"
#include "M1Data_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1CheatExtensionInstanceDungeon
     * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
     */
    class UM1CheatExtensionInstanceDungeon : public M1::UM1CheatExtensionBase
    {
    public:
        void ServerSetPlayerCount(int32_t InCount);
        void ServerAddScore(int32_t InAddSocre);
        void IndunStartInvasion(const M1Data::FM1TemplateId& InInvasionDungeonTid, float InSec, int32_t InRotationIndex);
        void IndunSetPlayerCount(int32_t InCount);
        void IndunResetPlayerCount();
        void IndunPlayGameByTid(const M1Data::FM1TemplateId& InstanceDungeonTid, bool bPrivate);
        void IndunPlayGameByName(const BasicTypes::FString& InstanceDungeonName, bool bPrivate);
        void IndunOpenMapUI(M1Data::EM1InstanceDungeonDifficulty InDifficulty);
        void IndunInvasionLog();
        void IndunClearInvasion();
        void IndunAddScore(int32_t InAddSocre);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1CheatExtensionInstanceDungeon");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
