#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "MovieScene_UMovieSceneSequencePlayer.h"
#include "MovieScene_FMovieSceneSequencePlaybackSettings.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UCameraComponent; };
namespace CG::CoreUObject { class UObject; };
namespace CG::LevelSequence { class ULevelSequence; };
namespace CG::LevelSequence { class ALevelSequenceActor; };
namespace CG::LevelSequence { class ULevelSequencePlayer; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::LevelSequence
{
    /**
     * Class /Script/LevelSequence.LevelSequencePlayer
     * Size -> 0x0130 (FullSize[0x05F0] - InheritedSize[0x04C0])
     */
    class ULevelSequencePlayer : public MovieScene::UMovieSceneSequencePlayer
    {
    public:
        BasicTypes::UMulticastInlineDelegate                         OnCameraCut;                                             //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0001[0x120];                                 //  MISSED OFFSET (PADDING)

    public:
        Engine::UCameraComponent* GetActiveCameraComponent();
        LevelSequence::ULevelSequencePlayer* STATIC_CreateLevelSequencePlayer(CoreUObject::UObject* WorldContextObject, LevelSequence::ULevelSequence* LevelSequence, const MovieScene::FMovieSceneSequencePlaybackSettings& Settings, LevelSequence::ALevelSequenceActor** OutActor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/LevelSequence.LevelSequencePlayer");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
