#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "GeometryFramework_ENUMS.h"
#include "PhysicsCore_ENUMS.h"
#include "Engine_FKAggregateGeom.h"
#include "BasicTypes_TArray.h"
#include "GeometryFramework_UBaseDynamicMeshComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::GeometryFramework { class UDynamicMesh; };
namespace CG::Engine { class UBodySetup; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GeometryFramework
{
    /**
     * Class /Script/GeometryFramework.DynamicMeshComponent
     * Size -> 0x0210 (FullSize[0x0730] - InheritedSize[0x0520])
     */
    class UDynamicMeshComponent : public GeometryFramework::UBaseDynamicMeshComponent
    {
    public:
        GeometryFramework::UDynamicMesh*                             MeshObject;                                              //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0xF8];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GeometryFramework::EDynamicMeshComponentTangentsMode         TangentsType;                                            //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x3F];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        PhysicsCore::ECollisionTraceFlag                             CollisionType;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bUseAsyncCooking;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableComplexCollision;                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDeferCollisionUpdates;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UBodySetup*                                          MeshBodySetup;                                           //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x38];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FKAggregateGeom                                      AggGeom;                                                 //  Edit, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::UBodySetup*>                      AsyncBodySetupQueue;                                     //  ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0004[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        bool ValidateMaterialSlots(bool bCreateIfMissing, bool bDeleteExtraSlots);
        void UpdateCollision(bool bOnlyIfPending);
        void SetTangentsType(GeometryFramework::EDynamicMeshComponentTangentsMode NewTangentsType);
        void SetDynamicMesh(GeometryFramework::UDynamicMesh* NewMesh);
        void SetDeferredCollisionUpdatesEnabled(bool bEnabled, bool bImmediateUpdate);
        void SetComplexAsSimpleCollisionEnabled(bool bEnabled, bool bImmediateUpdate);
        GeometryFramework::EDynamicMeshComponentTangentsMode GetTangentsType();
        void EnableComplexAsSimpleCollision();
        void ConfigureMaterialSet(BasicTypes::TArray<Engine::UMaterialInterface*> NewMaterialSet);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/GeometryFramework.DynamicMeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
