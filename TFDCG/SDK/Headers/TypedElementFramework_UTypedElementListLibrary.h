#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "TypedElementFramework_FScriptTypedElementListProxy.h"
#include "TypedElementFramework_FScriptTypedElementHandle.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class IInterface; };
namespace CG::TypedElementFramework { class UTypedElementRegistry; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TypedElementFramework
{
    /**
     * Class /Script/TypedElementFramework.TypedElementListLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UTypedElementListLibrary : public CoreUObject::UObject
    {
    public:
        void STATIC_Shrink(const TypedElementFramework::FScriptTypedElementListProxy& ElementList);
        void STATIC_Reset(const TypedElementFramework::FScriptTypedElementListProxy& ElementList);
        void STATIC_Reserve(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, int32_t Size);
        bool STATIC_Remove(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementFramework::FScriptTypedElementHandle& ElementHandle);
        int32_t STATIC_Num(const TypedElementFramework::FScriptTypedElementListProxy& ElementList);
        bool STATIC_IsValidIndex(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, int32_t Index);
        bool STATIC_HasElementsOfType(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const BasicTypes::FName& ElementTypeName);
        bool STATIC_HasElements(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, CoreUObject::IInterface* BaseInterfaceType);
        CoreUObject::UObject* STATIC_GetElementInterface(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementFramework::FScriptTypedElementHandle& ElementHandle, CoreUObject::IInterface* BaseInterfaceType);
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> STATIC_GetElementHandles(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, CoreUObject::IInterface* BaseInterfaceType);
        TypedElementFramework::FScriptTypedElementHandle STATIC_GetElementHandleAt(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, int32_t Index);
        void STATIC_Empty(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, int32_t Slack);
        TypedElementFramework::FScriptTypedElementListProxy STATIC_CreateScriptElementList(TypedElementFramework::UTypedElementRegistry* Registry);
        int32_t STATIC_CountElementsOfType(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const BasicTypes::FName& ElementTypeName);
        int32_t STATIC_CountElements(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, CoreUObject::IInterface* BaseInterfaceType);
        bool STATIC_Contains(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementFramework::FScriptTypedElementHandle& ElementHandle);
        TypedElementFramework::FScriptTypedElementListProxy STATIC_Clone(const TypedElementFramework::FScriptTypedElementListProxy& ElementList);
        void STATIC_AppendList(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementFramework::FScriptTypedElementListProxy& OtherElementList);
        void STATIC_Append(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> ElementHandles);
        bool STATIC_Add(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, const TypedElementFramework::FScriptTypedElementHandle& ElementHandle);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/TypedElementFramework.TypedElementListLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
