#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FSoundAttenuationSettings.h"
#include "BasicTypes_TSet.h"
#include "BasicTypes_TArray.h"
#include "Engine_FSoundSubmixSendInfo.h"
#include "Engine_FSoundSourceBusSendInfo.h"
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "Engine_USceneComponent.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USoundAttenuation; };
namespace CG::Engine { class USoundConcurrency; };
namespace CG::Engine { class USoundClass; };
namespace CG::Engine { class USoundEffectSourcePresetChain; };
namespace CG::Engine { class USoundSubmixBase; };
namespace CG::AudioMixer { class USynthSound; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioMixer
{
    /**
     * Class /Script/AudioMixer.SynthComponent
     * Size -> 0x04F0 (FullSize[0x06E0] - InheritedSize[0x01F0])
     */
    class USynthComponent : public Engine::USceneComponent
    {
    public:
        bool                                                         bAutoDestroy : 1;                                        //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bStopWhenOwnerDestroyed : 1;                             //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowSpatialization : 1;                                //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bOverrideAttenuation : 1;                                //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0001 : 4;                                    //  BIT_FIELD (PADDING)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bEnableBusSends : 1;                                     //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableBaseSubmix : 1;                                   //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableSubmixSends : 1;                                  //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundAttenuation*                                   AttenuationSettings;                                     //  Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FSoundAttenuationSettings                            AttenuationOverrides;                                    //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        Engine::USoundConcurrency*                                   ConcurrencySettings;                                     //  ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TSet<Engine::USoundConcurrency*>                 ConcurrencySet;                                          //  Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic
        Engine::USoundClass*                                         SoundClass;                                              //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::USoundEffectSourcePresetChain*                       SourceEffectChain;                                       //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::USoundSubmixBase*                                    SoundSubmix;                                             //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FSoundSubmixSendInfo>             SoundSubmixSends;                                        //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FSoundSourceBusSendInfo>          BusSends;                                                //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FSoundSourceBusSendInfo>          PreEffectBusSends;                                       //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bIsUISound : 1;                                          //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsPreviewSound : 1;                                     //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      EnvelopeFollowerAttackTime;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      EnvelopeFollowerReleaseTime;                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnAudioEnvelopeValue;                                    //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        uint8_t                                                      UnknownData_0006[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        AudioMixer::USynthSound*                                     Synth;                                                   //  ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::UAudioComponent*                                     AudioComponent;                                          //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x30];                                  //  MISSED OFFSET (PADDING)

    public:
        void Stop();
        void Start();
        void SetVolumeMultiplier(float VolumeMultiplier);
        void SetSubmixSend(Engine::USoundSubmixBase* Submix, float SendLevel);
        void SetOutputToBusOnly(bool bInOutputToBusOnly);
        void SetLowPassFilterFrequency(float InLowPassFilterFrequency);
        void SetLowPassFilterEnabled(bool InLowPassFilterEnabled);
        bool IsPlaying();
        void FadeOut(float FadeOutDuration, float FadeVolumeLevel, Engine::EAudioFaderCurve FadeCurve);
        void FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime, Engine::EAudioFaderCurve FadeCurve);
        void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel, Engine::EAudioFaderCurve FadeCurve);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AudioMixer.SynthComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
