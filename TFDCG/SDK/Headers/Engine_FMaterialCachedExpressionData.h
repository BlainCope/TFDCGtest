#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FMaterialCachedParameterEntry.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_FLinearColor.h"
#include "CoreUObject_FVector4d.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UTexture.h"
#include "Engine_UFont.h"
#include "Engine_URuntimeVirtualTexture.h"
#include "Engine_USparseVolumeTexture.h"
#include "Engine_FMaterialFunctionInfo.h"
#include "Engine_FMaterialParameterCollectionInfo.h"
#include "Engine_FMaterialLayersFunctionsRuntimeData.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::Landscape { class ULandscapeGrassType; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.MaterialCachedExpressionData
     * Size -> 0x03D8
     */
    struct FMaterialCachedExpressionData
    {
    public:
        Engine::FMaterialCachedParameterEntry                        RuntimeEntries[0x8];                                     //  NativeAccessSpecifierPublic
        BasicTypes::TArray<int32_t>                                  ScalarPrimitiveDataIndexValues;                          //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<int32_t>                                  VectorPrimitiveDataIndexValues;                          //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    ScalarValues;                                            //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<bool>                                     StaticSwitchValues;                                      //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<bool>                                     DynamicSwitchValues;                                     //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::FLinearColor>                VectorValues;                                            //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::FVector4d>                   DoubleVectorValues;                                      //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::UTexture>> TextureValues;                                           //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::UFont>> FontValues;                                              //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<int32_t>                                  FontPageValues;                                          //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::URuntimeVirtualTexture>> RuntimeVirtualTextureValues;                             //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::TSoftObjectPtr<Engine::USparseVolumeTexture>> SparseVolumeTextureValues;                               //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::UObject*>                    ReferencedTextures;                                      //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FMaterialFunctionInfo>            FunctionInfos;                                           //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FMaterialParameterCollectionInfo> ParameterCollectionInfos;                                //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Landscape::ULandscapeGrassType*>          GrassTypes;                                              //  ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
        Engine::FMaterialLayersFunctionsRuntimeData                  MaterialLayers;                                          //  NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FName>                        DynamicParameterNames;                                   //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<bool>                                     QualityLevelsUsed;                                       //  ZeroConstructor, NativeAccessSpecifierPublic
        bool                                                         bHasMaterialLayers : 1;                                  //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasRuntimeVirtualTextureOutput : 1;                     //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasSceneColor : 1;                                      //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasPerInstanceCustomData : 1;                           //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasPerInstanceRandom : 1;                               //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasVertexInterpolator : 1;                              //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0002 : 2;                                    //  BIT_FIELD (PADDING)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bHasSequenceMode;                                        //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bHasSpeedTree : 1;                                       //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        uint64_t                                                     PropertyConnectedBitmask;                                //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
