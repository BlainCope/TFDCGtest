#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "AIModule_FBlackboardKeySelector.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FRotator.h"
#include "BasicTypes_FName.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AIModule { class UBTNode; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::AIModule { class UBlackboardComponent; };
namespace CG::AIModule { class UBehaviorTreeComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    /**
     * Class /Script/AIModule.BTFunctionLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UBTFunctionLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_StopUsingExternalEvent(AIModule::UBTNode* NodeOwner);
        void STATIC_StartUsingExternalEvent(AIModule::UBTNode* NodeOwner, Engine::AActor* OwningActor);
        void STATIC_SetBlackboardValueAsVector(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const CoreUObject::FVector& Value);
        void STATIC_SetBlackboardValueAsString(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const BasicTypes::FString& Value);
        void STATIC_SetBlackboardValueAsRotator(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const CoreUObject::FRotator& Value);
        void STATIC_SetBlackboardValueAsObject(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, CoreUObject::UObject* Value);
        void STATIC_SetBlackboardValueAsName(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const BasicTypes::FName& Value);
        void STATIC_SetBlackboardValueAsInt(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, int32_t Value);
        void STATIC_SetBlackboardValueAsFloat(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, float Value);
        void STATIC_SetBlackboardValueAsEnum(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, uint8_t Value);
        void STATIC_SetBlackboardValueAsClass(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, CoreUObject::UObject* Value);
        void STATIC_SetBlackboardValueAsBool(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, bool Value);
        AIModule::UBlackboardComponent* STATIC_GetOwnersBlackboard(AIModule::UBTNode* NodeOwner);
        AIModule::UBehaviorTreeComponent* STATIC_GetOwnerComponent(AIModule::UBTNode* NodeOwner);
        CoreUObject::FVector STATIC_GetBlackboardValueAsVector(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        BasicTypes::FString STATIC_GetBlackboardValueAsString(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        CoreUObject::FRotator STATIC_GetBlackboardValueAsRotator(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        CoreUObject::UObject* STATIC_GetBlackboardValueAsObject(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        BasicTypes::FName STATIC_GetBlackboardValueAsName(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        int32_t STATIC_GetBlackboardValueAsInt(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        float STATIC_GetBlackboardValueAsFloat(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        uint8_t STATIC_GetBlackboardValueAsEnum(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        CoreUObject::UObject* STATIC_GetBlackboardValueAsClass(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        bool STATIC_GetBlackboardValueAsBool(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        Engine::AActor* STATIC_GetBlackboardValueAsActor(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        void STATIC_ClearBlackboardValueAsVector(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        void STATIC_ClearBlackboardValue(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AIModule.BTFunctionLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
