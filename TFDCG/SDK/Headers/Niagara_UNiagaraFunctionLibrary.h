#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "Engine_FFXSystemSpawnParameters.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"
#include "Engine_ENUMS.h"
#include "Niagara_ENUMS.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::Niagara { class UNiagaraSystem; };
namespace CG::Engine { class USceneComponent; };
namespace CG::CoreUObject { class UObject; };
namespace CG::Engine { class UVolumeTexture; };
namespace CG::Engine { class UTexture; };
namespace CG::Engine { class UTexture2DArray; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class UStaticMesh; };
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::Niagara { class UNiagaraParameterCollection; };
namespace CG::Niagara { class UNiagaraParameterCollectionInstance; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Niagara
{
    /**
     * Class /Script/Niagara.NiagaraFunctionLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UNiagaraFunctionLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        Niagara::UNiagaraComponent* STATIC_SpawnSystemAttachedWithParams(Engine::FFXSystemSpawnParameters* SpawnParams);
        Niagara::UNiagaraComponent* STATIC_SpawnSystemAttached(Niagara::UNiagaraSystem* SystemTemplate, Engine::USceneComponent* AttachToComponent, const BasicTypes::FName& AttachPointName, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Rotation, Engine::EAttachLocation LocationType, bool bAutoDestroy, bool bAutoActivate, Niagara::ENCPoolMethod PoolingMethod, bool bPreCullCheck);
        Niagara::UNiagaraComponent* STATIC_SpawnSystemAtLocationWithParams(Engine::FFXSystemSpawnParameters* SpawnParams);
        Niagara::UNiagaraComponent* STATIC_SpawnSystemAtLocation(CoreUObject::UObject* WorldContextObject, Niagara::UNiagaraSystem* SystemTemplate, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Rotation, const CoreUObject::FVector& Scale, bool bAutoDestroy, bool bAutoActivate, Niagara::ENCPoolMethod PoolingMethod, bool bPreCullCheck);
        void STATIC_SetVolumeTextureObject(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, Engine::UVolumeTexture* Texture);
        void STATIC_SetTextureObject(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, Engine::UTexture* Texture);
        void STATIC_SetTexture2DArrayObject(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, Engine::UTexture2DArray* Texture);
        void STATIC_SetSkeletalMeshDataInterfaceSamplingRegions(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, BasicTypes::TArray<BasicTypes::FName> SamplingRegions);
        void STATIC_SetSkeletalMeshDataInterfaceFilteredSockets(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, BasicTypes::TArray<BasicTypes::FName> FilteredSockets);
        void STATIC_SetSkeletalMeshDataInterfaceFilteredBones(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, BasicTypes::TArray<BasicTypes::FName> FilteredBones);
        void STATIC_SetComponentNiagaraGPURayTracedCollisionGroup(CoreUObject::UObject* WorldContextObject, Engine::UPrimitiveComponent* Primitive, int32_t CollisionGroup);
        void STATIC_SetActorNiagaraGPURayTracedCollisionGroup(CoreUObject::UObject* WorldContextObject, Engine::AActor* Actor, int32_t CollisionGroup);
        void STATIC_ReleaseNiagaraGPURayTracedCollisionGroup(CoreUObject::UObject* WorldContextObject, int32_t CollisionGroup);
        void STATIC_OverrideSystemUserVariableStaticMeshComponent(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, Engine::UStaticMeshComponent* StaticMeshComponent);
        void STATIC_OverrideSystemUserVariableStaticMesh(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, Engine::UStaticMesh* StaticMesh);
        void STATIC_OverrideSystemUserVariableSkeletalMeshComponent(Niagara::UNiagaraComponent* NiagaraSystem, const BasicTypes::FString& OverrideName, Engine::USkeletalMeshComponent* SkeletalMeshComponent);
        Niagara::UNiagaraParameterCollectionInstance* STATIC_GetNiagaraParameterCollection(CoreUObject::UObject* WorldContextObject, Niagara::UNiagaraParameterCollection* Collection);
        int32_t STATIC_AcquireNiagaraGPURayTracedCollisionGroup(CoreUObject::UObject* WorldContextObject);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Niagara.NiagaraFunctionLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
