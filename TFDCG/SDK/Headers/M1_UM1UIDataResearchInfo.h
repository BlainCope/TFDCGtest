#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_ENUMS.h"
#include "M1_UM1UIData.h"
#include "BasicTypes_FText.h"
#include "M1Data_ENUMS.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1Research; };
namespace CG::Engine { class UTexture2D; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1UIDataResearchInfo
     * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
     */
    class UM1UIDataResearchInfo : public M1::UM1UIData
    {
    public:
        M1::UM1Research*                                             ResearchInfo;                                            //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::EM1ResearchActionType                                    ActionType;                                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        float GetTimeRequired();
        float GetTimeRemaining();
        float GetTimeRatio();
        BasicTypes::FText GetResultTierTypeText();
        M1Data::EM1ItemTierType GetResultTierType();
        M1Data::EM1RoundsType GetResultRoundType();
        BasicTypes::FString GetResultItemStringId();
        Engine::UTexture2D* GetResultItemIcon();
        BasicTypes::FText GetResultCategoryTypeText();
        M1Data::EM1ResearchType GetResearchType();
        int64_t GetPriceByActionType();
        M1Data::EM1CurrencyType GetCurrencyTypeByActionType();
        BasicTypes::FText GetAmountText();
        int32_t GetAmount();
        M1::EM1ResearchActionType GetActionType();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1UIDataResearchInfo");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
