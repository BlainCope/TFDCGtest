#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AnimGraphRuntime
{
    // --------------------------------------------------
    // # Enums
    // --------------------------------------------------
    /**
     * Enum /Script/AnimGraphRuntime.EBoneModificationMode
     */
    enum class EBoneModificationMode : uint8_t
    {
        BMM_Ignore   = 0,
        BMM_Replace  = 1,
        BMM_Additive = 2,
        BMM_MAX      = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.ERefPoseType
     */
    enum class ERefPoseType : uint8_t
    {
        EIT_LocalSpace = 0,
        EIT_Additive   = 1,
        EIT_MAX        = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EEasingFuncType
     */
    enum class EEasingFuncType : uint8_t
    {
        Linear         = 0,
        Sinusoidal     = 1,
        Cubic          = 2,
        QuadraticInOut = 3,
        CubicInOut     = 4,
        HermiteCubic   = 5,
        QuarticInOut   = 6,
        QuinticInOut   = 7,
        CircularIn     = 8,
        CircularOut    = 9,
        CircularInOut  = 10,
        ExpIn          = 11,
        ExpOut         = 12,
        ExpInOut       = 13,
        CustomCurve    = 14,
        MAX            = 15
    };

    /**
     * Enum /Script/AnimGraphRuntime.ERotationComponent
     */
    enum class ERotationComponent : uint8_t
    {
        EulerX          = 0,
        EulerY          = 1,
        EulerZ          = 2,
        QuaternionAngle = 3,
        SwingAngle      = 4,
        TwistAngle      = 5,
        MAX             = 6
    };

    /**
     * Enum /Script/AnimGraphRuntime.EBlendListTransitionType
     */
    enum class EBlendListTransitionType : uint8_t
    {
        StandardBlend   = 0,
        Inertialization = 1,
        MAX             = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EAnimFunctionCallSite
     */
    enum class EAnimFunctionCallSite : uint8_t
    {
        OnInitialize                  = 0,
        OnUpdate                      = 1,
        OnBecomeRelevant              = 2,
        OnEvaluate                    = 3,
        OnInitializePostRecursion     = 4,
        OnUpdatePostRecursion         = 5,
        OnBecomeRelevantPostRecursion = 6,
        OnEvaluatePostRecursion       = 7,
        OnStartedBlendingOut          = 8,
        OnStartedBlendingIn           = 9,
        OnFinishedBlendingOut         = 10,
        OnFinishedBlendingIn          = 11,
        MAX                           = 12
    };

    /**
     * Enum /Script/AnimGraphRuntime.ELayeredBoneBlendMode
     */
    enum class ELayeredBoneBlendMode : uint8_t
    {
        BranchFilter = 0,
        BlendMask    = 1,
        MAX          = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EModifyCurveApplyMode
     */
    enum class EModifyCurveApplyMode : uint8_t
    {
        Add                   = 0,
        Scale                 = 1,
        Blend                 = 2,
        WeightedMovingAverage = 3,
        RemapCurve            = 4,
        MAX                   = 5
    };

    /**
     * Enum /Script/AnimGraphRuntime.EPoseDriverType
     */
    enum class EPoseDriverType : uint8_t
    {
        SwingAndTwist = 0,
        SwingOnly     = 1,
        Translation   = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.EPoseDriverSource
     */
    enum class EPoseDriverSource : uint8_t
    {
        Rotation    = 0,
        Translation = 1,
        MAX         = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EPoseDriverOutput
     */
    enum class EPoseDriverOutput : uint8_t
    {
        DrivePoses  = 0,
        DriveCurves = 1,
        MAX         = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESnapshotSourceMode
     */
    enum class ESnapshotSourceMode : uint8_t
    {
        NamedSnapshot = 0,
        SnapshotPin   = 1,
        MAX           = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESequenceEvalReinit
     */
    enum class ESequenceEvalReinit : uint8_t
    {
        NoReset       = 0,
        StartPosition = 1,
        ExplicitTime  = 2,
        MAX           = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESwapRootBone
     */
    enum class ESwapRootBone : uint8_t
    {
        SwapRootBone_Component = 0,
        SwapRootBone_Actor     = 1,
        SwapRootBone_None      = 2,
        SwapRootBone_MAX       = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.AnimPhysAngularConstraintType
     */
    enum class EAnimPhysAngularConstraintType : uint8_t
    {
        AnimPhysAngularConstraintTypeAngular                           = 0,
        AnimPhysAngularConstraintTypeCone                              = 1,
        AnimPhysAngularConstraintTypeAnimPhysAngularConstraintType_MAX = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.AnimPhysLinearConstraintType
     */
    enum class EAnimPhysLinearConstraintType : uint8_t
    {
        AnimPhysLinearConstraintTypeFree                             = 0,
        AnimPhysLinearConstraintTypeLimited                          = 1,
        AnimPhysLinearConstraintTypeAnimPhysLinearConstraintType_MAX = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.AnimPhysSimSpaceType
     */
    enum class EAnimPhysSimSpaceType : uint8_t
    {
        AnimPhysSimSpaceTypeComponent                = 0,
        AnimPhysSimSpaceTypeActor                    = 1,
        AnimPhysSimSpaceTypeWorld                    = 2,
        AnimPhysSimSpaceTypeRootRelative             = 3,
        AnimPhysSimSpaceTypeBoneRelative             = 4,
        AnimPhysSimSpaceTypeAnimPhysSimSpaceType_MAX = 5
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESphericalLimitType
     */
    enum class ESphericalLimitType : uint8_t
    {
        Inner = 0,
        Outer = 1,
        MAX   = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EDrivenBoneModificationMode
     */
    enum class EDrivenBoneModificationMode : uint8_t
    {
        AddToInput       = 0,
        ReplaceComponent = 1,
        AddToRefPose     = 2,
        MAX              = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.EDrivenDestinationMode
     */
    enum class EDrivenDestinationMode : uint8_t
    {
        Bone              = 0,
        MorphTarget       = 1,
        MaterialParameter = 2,
        MAX               = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.EConstraintOffsetOption
     */
    enum class EConstraintOffsetOption : uint8_t
    {
        None           = 0,
        Offset_RefPose = 1,
        MAX            = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.CopyBoneDeltaMode
     */
    enum class ECopyBoneDeltaMode : uint8_t
    {
        CopyBoneDeltaModeAccumulate            = 0,
        CopyBoneDeltaModeCopy                  = 1,
        CopyBoneDeltaModeCopyBoneDeltaMode_MAX = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EInterpolationBlend
     */
    enum class EInterpolationBlend : uint8_t
    {
        Linear             = 0,
        Cubic              = 1,
        Sinusoidal         = 2,
        EaseInOutExponent2 = 3,
        EaseInOutExponent3 = 4,
        EaseInOutExponent4 = 5,
        EaseInOutExponent5 = 6,
        MAX                = 7
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESimulationSpace
     */
    enum class ESimulationSpace : uint8_t
    {
        ComponentSpace = 0,
        WorldSpace     = 1,
        BaseBoneSpace  = 2,
        MAX            = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESimulationTiming
     */
    enum class ESimulationTiming : uint8_t
    {
        Default     = 0,
        Synchronous = 1,
        Deferred    = 2,
        MAX         = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.EScaleChainInitialLength
     */
    enum class EScaleChainInitialLength : uint8_t
    {
        FixedDefaultLengthValue = 0,
        Distance                = 1,
        ChainLength             = 2,
        MAX                     = 3
    };

    /**
     * Enum /Script/AnimGraphRuntime.ESplineBoneAxis
     */
    enum class ESplineBoneAxis : uint8_t
    {
        None = 0,
        X    = 1,
        Y    = 2,
        Z    = 3,
        MAX  = 4
    };

    /**
     * Enum /Script/AnimGraphRuntime.EWarpingEvaluationMode
     */
    enum class EWarpingEvaluationMode : uint8_t
    {
        Manual = 0,
        Graph  = 1,
        MAX    = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.EWarpingVectorMode
     */
    enum class EWarpingVectorMode : uint8_t
    {
        ComponentSpaceVector       = 0,
        ActorSpaceVector           = 1,
        WorldSpaceVector           = 2,
        IKFootRootLocalSpaceVector = 3,
        MAX                        = 4
    };

    /**
     * Enum /Script/AnimGraphRuntime.ERBFSolverType
     */
    enum class ERBFSolverType : uint8_t
    {
        Additive      = 0,
        Interpolative = 1,
        MAX           = 2
    };

    /**
     * Enum /Script/AnimGraphRuntime.ERBFFunctionType
     */
    enum class ERBFFunctionType : uint8_t
    {
        Gaussian        = 0,
        Exponential     = 1,
        Linear          = 2,
        Cubic           = 3,
        Quintic         = 4,
        DefaultFunction = 5,
        MAX             = 6
    };

    /**
     * Enum /Script/AnimGraphRuntime.ERBFDistanceMethod
     */
    enum class ERBFDistanceMethod : uint8_t
    {
        Euclidean     = 0,
        Quaternion    = 1,
        SwingAngle    = 2,
        TwistAngle    = 3,
        DefaultMethod = 4,
        MAX           = 5
    };

    /**
     * Enum /Script/AnimGraphRuntime.ERBFNormalizeMethod
     */
    enum class ERBFNormalizeMethod : uint8_t
    {
        OnlyNormalizeAboveOne = 0,
        AlwaysNormalize       = 1,
        NormalizeWithinMedian = 2,
        NoNormalization       = 3,
        MAX                   = 4
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
