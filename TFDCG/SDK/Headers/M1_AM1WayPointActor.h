#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TWeakObjectPtr.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1MapEntity; };
namespace CG::M1 { class UM1ActorWidgetComponent; };
namespace CG::M1 { class AM1Monster; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1WayPointActor
     * Size -> 0x0038 (FullSize[0x0280] - InheritedSize[0x0248])
     */
    class AM1WayPointActor : public Engine::AActor
    {
    public:
        BasicTypes::TWeakObjectPtr<M1::UM1MapEntity>                 MapEntityWPtr;                                           //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        TargetUnscaledSphereRadius;                              //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1ActorWidgetComponent*                                 WidgetComponent;                                         //  Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x20];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetMapEntity(M1::UM1MapEntity* InMapEntity);
        void OnEventMonsterDestroyReserved(M1::AM1Monster* InMonster);
        void OnEventActorDestroyed(Engine::AActor* InSpawnedActor);
        void OnEventActorBeginOverlap(Engine::AActor* InOverlappedActor, Engine::AActor* InOtherActor);
        M1::UM1ActorWidgetComponent* GetActorWidgetComponent();
        void BP_SetMapEntity(M1::UM1MapEntity* InMapEntity);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1WayPointActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
