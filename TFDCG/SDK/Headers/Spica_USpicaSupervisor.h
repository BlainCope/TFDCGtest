#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "Spica_FSpicaAssistantDefinition.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::Spica { class USpicaActorSaveInfo; };
namespace CG::Spica { class USpicaNetDriver; };
namespace CG::Spica { class USpicaSubNetDriver; };
namespace CG::Spica { class USpicaActorTickAssistant; };
namespace CG::Spica { class USpicaAIAssistant; };
namespace CG::Spica { class USpicaAssistant; };
namespace CG::Spica { class USpicaInfoCreator; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Spica
{
    /**
     * Class /Script/Spica.SpicaSupervisor
     * Size -> 0x1A28 (FullSize[0x1A50] - InheritedSize[0x0028])
     */
    class USpicaSupervisor : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x20];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<Engine::AActor*, Spica::USpicaActorSaveInfo*> SpicaActorSaveInfos;                                     //  NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x398];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      SubNetDriverPort;                                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      MaxAssignedActorCount;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      SendActorCmdMaxCount;                                    //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      ProcessReserveActorCmdMaxCount;                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        ReserveActorTimeoutSeconds;                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      ProcessPendingActorCmdMaxCount;                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        PendingActorTimeoutSeconds;                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        UpdateInfoFrequency;                                     //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bSkipMainNetReplicate;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MainNetUpdateFrequency;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            SpicaInfoCreatorClassName;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            SpicaActorSaveInfoClassName;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FName                                            SpicaRPCHelperComponentClassName;                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Spica::FSpicaAssistantDefinition>         SpicaAssistantDefinitions;                               //  ZeroConstructor, Config, NativeAccessSpecifierPrivate
        float                                                        StartSubNetTimeoutSeconds;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        ConnectPrivateSubNetTimeoutSeconds;                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        ConnectPublicSubNetTimeoutSeconds;                       //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        ResendConnectionlessPacketIntervalSeconds;               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        STUNHeartbeatIntervalSeconds;                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        STUNHolePunchingIntervalSeconds;                         //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      ReceiveTimeoutMaxCount;                                  //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        SubNetHeartbeatIntervalSeconds;                          //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        SubNetReceiveTimeoutSeconds;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      RTTTimeoutMaxCount;                                      //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        SubNetRTTCheckIntervalSeconds;                           //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        SubNetRTTTimeoutSeconds;                                 //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Spica::USpicaNetDriver*                                      MainNetDriver;                                           //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Spica::USpicaSubNetDriver*>               SubNetDrivers;                                           //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Spica::USpicaSubNetDriver*>               PendingDestroySubNetDrivers;                             //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Spica::USpicaSubNetDriver*>               ShutdownSubNetDrivers;                                   //  ZeroConstructor, NativeAccessSpecifierPrivate
        Spica::USpicaActorTickAssistant*                             ActorTickAssistant;                                      //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Spica::USpicaAIAssistant*                                    AIAssistant;                                             //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Spica::USpicaAssistant*>                  Assistants;                                              //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x14D0];                                //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Spica::USpicaInfoCreator*                                    InfoCreator;                                             //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        CoreUObject::UObject*                                        SpicaActorSaveInfoClass;                                 //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        CoreUObject::UObject*                                        SpicaRPCHelperComponentClass;                            //  ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x60];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Spica.SpicaSupervisor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
