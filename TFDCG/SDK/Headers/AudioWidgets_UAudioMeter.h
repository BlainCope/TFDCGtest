#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "AudioWidgets_FMeterChannelInfo.h"
#include "BasicTypes_UScriptDelegate.h"
#include "AudioWidgets_FAudioMeterStyle.h"
#include "SlateCore_ENUMS.h"
#include "CoreUObject_FLinearColor.h"
#include "UMG_UWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioWidgets
{
    /**
     * Class /Script/AudioWidgets.AudioMeter
     * Size -> 0x0510 (FullSize[0x0640] - InheritedSize[0x0130])
     */
    class UAudioMeter : public UMG::UWidget
    {
    public:
        BasicTypes::TArray<AudioWidgets::FMeterChannelInfo>          MeterChannelInfo;                                        //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::UScriptDelegate                                  MeterChannelInfoDelegate;                                //  ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        AudioWidgets::FAudioMeterStyle                               WidgetStyle;                                             //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        SlateCore::EOrientation                                      Orientation;                                             //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FLinearColor                                    BackgroundColor;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    MeterBackgroundColor;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    MeterValueColor;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    MeterPeakColor;                                          //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    MeterClippingColor;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    MeterScaleColor;                                         //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    MeterScaleLabelColor;                                    //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x1C];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetMeterValueColor(const CoreUObject::FLinearColor& InValue);
        void SetMeterScaleLabelColor(const CoreUObject::FLinearColor& InValue);
        void SetMeterScaleColor(const CoreUObject::FLinearColor& InValue);
        void SetMeterPeakColor(const CoreUObject::FLinearColor& InValue);
        void SetMeterClippingColor(const CoreUObject::FLinearColor& InValue);
        void SetMeterChannelInfo(BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> InMeterChannelInfo);
        void SetMeterBackgroundColor(const CoreUObject::FLinearColor& InValue);
        void SetBackgroundColor(const CoreUObject::FLinearColor& InValue);
        BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> GetMeterChannelInfo__DelegateSignature();
        BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> GetMeterChannelInfo();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AudioWidgets.AudioMeter");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
