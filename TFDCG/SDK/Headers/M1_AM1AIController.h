#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "AIModule_AAIController.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::M1 { class UM1AIPerceptionComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1AIController
     * Size -> 0x0110 (FullSize[0x0470] - InheritedSize[0x0360])
     */
    class AM1AIController : public AIModule::AAIController
    {
    public:
        uint8_t                                                      UnknownData_0000[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::TWeakObjectPtr<Engine::AActor>> TargetCandidates;                                        //  ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0xE0];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1AIPerceptionComponent*                                AIPerceptionComponent;                                   //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        bool StartTaunt(Engine::AActor* NewTarget);
        void SetSpawnPlanIndex(int32_t PlanIndex);
        void RestartBrain(const BasicTypes::FString& Reason);
        void PauseBrain(const BasicTypes::FString& Reason);
        bool IsTargetInPursuitDistance(Engine::AActor* TargetActor);
        int32_t GetSpawnPlanIndex();
        Engine::AActor* GetMainTarget();
        CoreUObject::FVector GetHomeLocation();
        BasicTypes::TArray<Engine::AActor*> GetAllTargets();
        void EndTaunt();
        bool ChangeMainTarget(Engine::AActor* InNewTarget, bool InForceChange);
        bool CanChangeTarget();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1AIController");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
