#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector4.h"
#include "CoreUObject_FVector2D.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FQuat.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Niagara { class UNiagaraDataChannelHandler; };
namespace CG::Engine { class UActorComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Niagara
{
    /**
     * Class /Script/Niagara.NiagaraDataChannelReader
     * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
     */
    class UNiagaraDataChannelReader : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Niagara::UNiagaraDataChannelHandler*                         Owner;                                                   //  ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        CoreUObject::FVector4 ReadVector4(const BasicTypes::FName& VarName, int32_t Index);
        CoreUObject::FVector2D ReadVector2D(const BasicTypes::FName& VarName, int32_t Index);
        CoreUObject::FVector ReadVector(const BasicTypes::FName& VarName, int32_t Index);
        CoreUObject::FQuat ReadQuat(const BasicTypes::FName& VarName, int32_t Index);
        CoreUObject::FLinearColor ReadLinearColor(const BasicTypes::FName& VarName, int32_t Index);
        int32_t ReadInt(const BasicTypes::FName& VarName, int32_t Index);
        double ReadFloat(const BasicTypes::FName& VarName, int32_t Index);
        bool ReadBool(const BasicTypes::FName& VarName, int32_t Index);
        int32_t Num();
        bool InitAccess(Engine::UActorComponent* OwningComponent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Niagara.NiagaraDataChannelReader");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
