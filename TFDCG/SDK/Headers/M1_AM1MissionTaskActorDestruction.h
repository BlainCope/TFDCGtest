#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "M1_FM1TaskDestructionInfo.h"
#include "M1_AM1MissionTaskActor.h"
#include "M1_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1MissionTargetDestruction; };
namespace CG::M1 { class AM1RuleBasedActorSpawner; };
namespace CG::M1 { class AM1MissionTargetActor; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1MissionTaskActorDestruction
     * Size -> 0x0070 (FullSize[0x06C8] - InheritedSize[0x0658])
     */
    class AM1MissionTaskActorDestruction : public M1::AM1MissionTaskActor
    {
    public:
        int32_t                                                      CurrentPhase;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<M1::AM1MissionTargetDestruction*>         DestructionTargetActors;                                 //  ZeroConstructor, Transient, NativeAccessSpecifierPrivate
        M1::FM1TaskDestructionInfo                                   DestructionInfo;                                         //  Net, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
        M1::AM1RuleBasedActorSpawner*                                RuleBasedActorSpawner;                                   //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void OnMissionTargetDectivated(M1::AM1MissionTargetActor* InMissionTarget, M1::EM1ResetType InResetType);
        void OnDestructionTargetActorDestroyed(Engine::AActor* InActor);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1MissionTaskActorDestruction");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
