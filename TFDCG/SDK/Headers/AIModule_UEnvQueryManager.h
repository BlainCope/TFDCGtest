#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "AIModule_FEnvQueryInstanceCache.h"
#include "AIModule_UAISubsystem.h"
#include "AIModule_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AIModule { class UEnvQueryContext; };
namespace CG::AIModule { class UEnvQueryInstanceBlueprintWrapper; };
namespace CG::CoreUObject { class UObject; };
namespace CG::AIModule { class UEnvQuery; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    /**
     * Class /Script/AIModule.EnvQueryManager
     * Size -> 0x0120 (FullSize[0x0158] - InheritedSize[0x0038])
     */
    class UEnvQueryManager : public AIModule::UAISubsystem
    {
    public:
        uint8_t                                                      UnknownData_0000[0x70];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<AIModule::FEnvQueryInstanceCache>         InstanceCache;                                           //  ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<AIModule::UEnvQueryContext*>              LocalContexts;                                           //  ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        BasicTypes::TArray<AIModule::UEnvQueryInstanceBlueprintWrapper*> GCShieldedWrappers;                                      //  ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x54];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        MaxAllowedTestingTime;                                   //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bTestQueriesUsingBreadth;                                //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      QueryCountWarningThreshold;                              //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        double                                                       QueryCountWarningInterval;                               //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        double                                                       ExecutionTimeWarningSeconds;                             //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        double                                                       HandlingResultTimeWarningSeconds;                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        double                                                       GenerationTimeWarningSeconds;                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

    public:
        AIModule::UEnvQueryInstanceBlueprintWrapper* STATIC_RunEQSQuery(CoreUObject::UObject* WorldContextObject, AIModule::UEnvQuery* QueryTemplate, CoreUObject::UObject* Querier, AIModule::EEnvQueryRunMode RunMode, AIModule::UEnvQueryInstanceBlueprintWrapper* WrapperClass);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AIModule.EnvQueryManager");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
