#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_FM1TemplateId.h"
#include "BasicTypes_TMap.h"
#include "Engine_UActorComponent.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1InstanceFieldContentDataWrapper; };
namespace CG::M1 { class AM1PlayerControllerInGame; };
namespace CG::M1 { class UM1PrivateOnlineServiceComponent; };
namespace CG::M1 { class AM1PlayerState; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1InstanceDungeonComponent
     * Size -> 0x0088 (FullSize[0x0130] - InheritedSize[0x00A8])
     */
    class UM1InstanceDungeonComponent : public Engine::UActorComponent
    {
    public:
        M1::UM1InstanceFieldContentDataWrapper*                      InstanceContentData;                                     //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::FM1TemplateId                                        FixedModifierIdInMatch;                                  //  Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<M1Data::FM1TemplateId, bool>                SelectionModifierIdInMatch;                              //  Transient, NativeAccessSpecifierPrivate
        M1::AM1PlayerControllerInGame*                               PC_Owner;                                                //  ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1PrivateOnlineServiceComponent*                        PrivateOnlineService_Component;                          //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        void ServerSetSelectedInstanceDungeon(const M1Data::FM1TemplateId& InTemplateId);
        void OnPlayerStateReady(M1::AM1PlayerState* InPlayerState);
        void ClientSetSelectedInstanceDungeon(const M1Data::FM1TemplateId& InTemplateId);
        void ClientRestartJoinGame(const M1Data::FM1TemplateId& InFixedMOD, BasicTypes::TArray<M1Data::FM1TemplateId> InSelectionMOD);
        void ClientOnReceiveDediGameModifierUpdate(BasicTypes::TArray<M1Data::FM1TemplateId> InModifierTemplateIds);
        void ClientOnInstanceDungeonSelectMODReroll(BasicTypes::TArray<M1Data::FM1TemplateId> InSelectionMODs);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1InstanceDungeonComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
