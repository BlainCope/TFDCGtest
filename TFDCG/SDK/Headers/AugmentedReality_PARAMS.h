#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "AugmentedReality_ENUMS.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FTransform.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_TArray.h"
#include "AugmentedReality_FARVideoFormat.h"
#include "CoreUObject_FVector2D.h"
#include "BasicTypes_TMap.h"
#include "AugmentedReality_FARPose3D.h"
#include "CoreUObject_FBox.h"
#include "CoreUObject_FGuid.h"
#include "CoreUObject_FRotator.h"
#include "CoreUObject_FIntPoint.h"
#include "AugmentedReality_FARTraceResult.h"
#include "AugmentedReality_FARCameraIntrinsics.h"
#include "AugmentedReality_FARSessionStatus.h"
#include "AugmentedReality_FARPose2D.h"
#include "AugmentedReality_FARPlaneUpdatePayload.h"
#include "AugmentedReality_FARPointUpdatePayload.h"
#include "AugmentedReality_FARFaceUpdatePayload.h"
#include "AugmentedReality_FARImageUpdatePayload.h"
#include "AugmentedReality_FARQRCodeUpdatePayload.h"
#include "AugmentedReality_FARPoseUpdatePayload.h"
#include "AugmentedReality_FAREnvironmentProbeUpdatePayload.h"
#include "AugmentedReality_FARObjectUpdatePayload.h"
#include "AugmentedReality_FARMeshUpdatePayload.h"
#include "AugmentedReality_FARGeoAnchorUpdatePayload.h"
#include "Engine_FLatentActionInfo.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MRMesh { class UMRMeshComponent; };
namespace CG::AugmentedReality { class UAREnvironmentCaptureProbeTexture; };
namespace CG::AugmentedReality { class UARGeoTrackingSupport; };
namespace CG::AugmentedReality { class UARTrackedGeometry; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UWorld; };
namespace CG::AugmentedReality { class UARCandidateObject; };
namespace CG::AugmentedReality { class UARCandidateImage; };
namespace CG::AugmentedReality { class AARSharedWorldGameState; };
namespace CG::AugmentedReality { class UAREnvironmentCaptureProbe; };
namespace CG::AugmentedReality { class UARPlaneGeometry; };
namespace CG::Engine { class UTexture2D; };
namespace CG::AugmentedReality { class UARComponent; };
namespace CG::AugmentedReality { class UARSessionConfig; };
namespace CG::AugmentedReality { class UARPin; };
namespace CG::AugmentedReality { class UARTexture; };
namespace CG::AugmentedReality { class UARLightEstimate; };
namespace CG::AugmentedReality { class UARTextureCameraImage; };
namespace CG::AugmentedReality { class UARTextureCameraDepth; };
namespace CG::AugmentedReality { class UARTrackedPose; };
namespace CG::AugmentedReality { class UARTrackedPoint; };
namespace CG::AugmentedReality { class UARTrackedImage; };
namespace CG::CoreUObject { class UObject; };
namespace CG::AugmentedReality { class UARSaveWorldAsyncTaskBlueprintProxy; };
namespace CG::AugmentedReality { class UARGetCandidateObjectAsyncTaskBlueprintProxy; };
namespace CG::AugmentedReality { class UARDependencyHandler; };
namespace CG::AugmentedReality { class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy; };
namespace CG::AugmentedReality { class UGetGeoLocationAsyncTaskBlueprintProxy; };
namespace CG::AugmentedReality { class AARActor; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AugmentedReality
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_IsTracked_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_HasSpatialMeshUsageFlag_Params
    {
    public:
        AugmentedReality::EARSpatialMeshUsageFlags                   InFlag;                                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetUnderlyingMesh_Params
    {
    public:
        MRMesh::UMRMeshComponent*                                    ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetTrackingState_Params
    {
    public:
        AugmentedReality::EARTrackingState                           ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetObjectClassification_Params
    {
    public:
        AugmentedReality::EARObjectClassification                    ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetName_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetLocalToWorldTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetLocalToTrackingTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetLastUpdateTimestamp_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetLastUpdateFrameNumber_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedGeometry_GetDebugName_Params
    {
    public:
        BasicTypes::FName                                            ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAREnvironmentCaptureProbe_GetExtent_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAREnvironmentCaptureProbe_GetEnvironmentCaptureTexture_Params
    {
    public:
        AugmentedReality::UAREnvironmentCaptureProbeTexture*         ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoTrackingSupport_GetGeoTrackingSupport_Params
    {
    public:
        AugmentedReality::UARGeoTrackingSupport*                     ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoTrackingSupport_GetGeoTrackingStateReason_Params
    {
    public:
        AugmentedReality::EARGeoTrackingStateReason                  ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoTrackingSupport_GetGeoTrackingState_Params
    {
    public:
        AugmentedReality::EARGeoTrackingState                        ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoTrackingSupport_GetGeoTrackingAccuracy_Params
    {
    public:
        AugmentedReality::EARGeoTrackingAccuracy                     ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoTrackingSupport_AddGeoAnchorAtLocationWithAltitude_Params
    {
    public:
        float                                                        Longitude;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Latitude;                                                //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        AltitudeMeters;                                          //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          OptionalAnchorName;                                      //  0x0010(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoTrackingSupport_AddGeoAnchorAtLocation_Params
    {
    public:
        float                                                        Longitude;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Latitude;                                                //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          OptionalAnchorName;                                      //  0x0008(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARMeshGeometry_GetObjectClassificationAtLocation_Params
    {
    public:
        CoreUObject::FVector                                         InWorldLocation;                                         //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::EARObjectClassification                    OutClassification;                                       //  0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         OutClassificationLocation;                               //  0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        MaxLocationDiff;                                         //  0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_GetTrackingState_Params
    {
    public:
        AugmentedReality::EARTrackingState                           ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_GetTrackedGeometry_Params
    {
    public:
        AugmentedReality::UARTrackedGeometry*                        ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_GetPinnedComponent_Params
    {
    public:
        Engine::USceneComponent*                                     ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_GetLocalToWorldTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_GetLocalToTrackingTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_GetDebugName_Params
    {
    public:
        BasicTypes::FName                                            ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPin_DebugDraw_Params
    {
    public:
        Engine::UWorld*                                              World;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FLinearColor                                    Color;                                                   //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Scale;                                                   //  0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        PersistForSeconds;                                       //  0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_ShouldResetTrackedObjects_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_ShouldResetCameraTracking_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_ShouldRenderCameraOverlay_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_ShouldEnableCameraTracking_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_ShouldEnableAutoFocus_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetWorldMapData_Params
    {
    public:
        BasicTypes::TArray<uint8_t>                                  WorldMapData;                                            //  0x0000(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetSessionTrackingFeatureToEnable_Params
    {
    public:
        AugmentedReality::EARSessionTrackingFeature                  InSessionTrackingFeature;                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetSceneReconstructionMethod_Params
    {
    public:
        AugmentedReality::EARSceneReconstruction                     InSceneReconstructionMethod;                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetResetTrackedObjects_Params
    {
    public:
        bool                                                         bNewValue;                                               //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetResetCameraTracking_Params
    {
    public:
        bool                                                         bNewValue;                                               //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetFaceTrackingUpdate_Params
    {
    public:
        AugmentedReality::EARFaceTrackingUpdate                      InUpdate;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetFaceTrackingDirection_Params
    {
    public:
        AugmentedReality::EARFaceTrackingDirection                   InDirection;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetEnableAutoFocus_Params
    {
    public:
        bool                                                         bNewValue;                                               //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetDesiredVideoFormat_Params
    {
    public:
        AugmentedReality::FARVideoFormat                             NewFormat;                                               //  0x0000(0x000C)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_SetCandidateObjectList_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARCandidateObject*>    InCandidateObjects;                                      //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetWorldMapData_Params
    {
    public:
        BasicTypes::TArray<uint8_t>                                  ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetWorldAlignment_Params
    {
    public:
        AugmentedReality::EARWorldAlignment                          ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetSessionType_Params
    {
    public:
        AugmentedReality::EARSessionType                             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetSceneReconstructionMethod_Params
    {
    public:
        AugmentedReality::EARSceneReconstruction                     ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetPlaneDetectionMode_Params
    {
    public:
        AugmentedReality::EARPlaneDetectionMode                      ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetMaxNumSimultaneousImagesTracked_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetLightEstimationMode_Params
    {
    public:
        AugmentedReality::EARLightEstimationMode                     ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetFrameSyncMode_Params
    {
    public:
        AugmentedReality::EARFrameSyncMode                           ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetFaceTrackingUpdate_Params
    {
    public:
        AugmentedReality::EARFaceTrackingUpdate                      ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetFaceTrackingDirection_Params
    {
    public:
        AugmentedReality::EARFaceTrackingDirection                   ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetEnvironmentCaptureProbeType_Params
    {
    public:
        AugmentedReality::EAREnvironmentCaptureProbeType             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetEnabledSessionTrackingFeature_Params
    {
    public:
        AugmentedReality::EARSessionTrackingFeature                  ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetDesiredVideoFormat_Params
    {
    public:
        AugmentedReality::FARVideoFormat                             ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetCandidateObjectList_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARCandidateObject*>    ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_GetCandidateImageList_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARCandidateImage*>     ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_AddCandidateObject_Params
    {
    public:
        AugmentedReality::UARCandidateObject*                        CandidateObject;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSessionConfig_AddCandidateImage_Params
    {
    public:
        AugmentedReality::UARCandidateImage*                         NewCandidateImage;                                       //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldGameMode_SetPreviewImageData_Params
    {
    public:
        BasicTypes::TArray<uint8_t>                                  ImageData;                                               //  0x0000(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldGameMode_SetARWorldSharingIsReady_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldGameMode_SetARSharedWorldData_Params
    {
    public:
        BasicTypes::TArray<uint8_t>                                  ARWorldData;                                             //  0x0000(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldGameMode_GetARSharedWorldGameState_Params
    {
    public:
        AugmentedReality::AARSharedWorldGameState*                   ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldGameState_K2_OnARWorldMapIsReady_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldPlayerController_ServerMarkReadyForReceiving_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldPlayerController_ClientUpdatePreviewImageData_Params
    {
    public:
        int32_t                                                      Offset;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<uint8_t>                                  Buffer;                                                  //  0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldPlayerController_ClientUpdateARWorldData_Params
    {
    public:
        int32_t                                                      Offset;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<uint8_t>                                  Buffer;                                                  //  0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSharedWorldPlayerController_ClientInitSharedWorld_Params
    {
    public:
        int32_t                                                      PreviewImageSize;                                        //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ARWorldDataSize;                                         //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARSkyLight_SetEnvironmentCaptureProbe_Params
    {
    public:
        AugmentedReality::UAREnvironmentCaptureProbe*                InCaptureProbe;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneGeometry_GetSubsumedBy_Params
    {
    public:
        AugmentedReality::UARPlaneGeometry*                          ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneGeometry_GetOrientation_Params
    {
    public:
        AugmentedReality::EARPlaneOrientation                        ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneGeometry_GetExtent_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneGeometry_GetCenter_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneGeometry_GetBoundaryPolygonInLocalSpace_Params
    {
    public:
        BasicTypes::TArray<CoreUObject::FVector>                     ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedImage_GetEstimateSize_Params
    {
    public:
        CoreUObject::FVector2D                                       ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedImage_GetDetectedImage_Params
    {
    public:
        AugmentedReality::UARCandidateImage*                         ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceGeometry_GetWorldSpaceEyeTransform_Params
    {
    public:
        AugmentedReality::EAREye                                     Eye;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0xF];                                   //  0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0010(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceGeometry_GetLocalSpaceEyeTransform_Params
    {
    public:
        AugmentedReality::EAREye                                     Eye;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0xF];                                   //  0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0010(0x0030)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceGeometry_GetBlendShapeValue_Params
    {
    public:
        AugmentedReality::EARFaceBlendShape                          BlendShape;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceGeometry_GetBlendShapes_Params
    {
    public:
        BasicTypes::TMap<AugmentedReality::EARFaceBlendShape, float> ReturnValue;                                             //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedObject_GetDetectedObject_Params
    {
    public:
        AugmentedReality::UARCandidateObject*                        ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTrackedPose_GetTrackedPoseData_Params
    {
    public:
        AugmentedReality::FARPose3D                                  ReturnValue;                                             //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchor_GetLongitude_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchor_GetLatitude_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchor_GetAltitudeSource_Params
    {
    public:
        AugmentedReality::EARAltitudeSource                          ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchor_GetAltitudeMeters_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateImage_GetPhysicalWidth_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateImage_GetPhysicalHeight_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateImage_GetOrientation_Params
    {
    public:
        AugmentedReality::EARCandidateImageOrientation               ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateImage_GetFriendlyName_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateImage_GetCandidateTexture_Params
    {
    public:
        Engine::UTexture2D*                                          ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateObject_SetFriendlyName_Params
    {
    public:
        BasicTypes::FString                                          NewName;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateObject_SetCandidateObjectData_Params
    {
    public:
        BasicTypes::TArray<uint8_t>                                  InCandidateObject;                                       //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateObject_SetBoundingBox_Params
    {
    public:
        CoreUObject::FBox                                            InBoundingBox;                                           //  0x0000(0x001C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateObject_GetFriendlyName_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateObject_GetCandidateObjectData_Params
    {
    public:
        BasicTypes::TArray<uint8_t>                                  ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARCandidateObject_GetBoundingBox_Params
    {
    public:
        CoreUObject::FBox                                            ReturnValue;                                             //  0x0000(0x001C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AARActor_AddARComponent_Params
    {
    public:
        AugmentedReality::UARComponent*                              InComponentClass;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FGuid                                           NativeID;                                                //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARComponent*                              ReturnValue;                                             //  0x0018(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_UnpinComponent_Params
    {
    public:
        Engine::USceneComponent*                                     ComponentToUnpin;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_ToggleARCapture_Params
    {
    public:
        bool                                                         bOnOff;                                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::EARCaptureType                             CaptureType;                                             //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_StopARSession_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_StartARSession_Params
    {
    public:
        AugmentedReality::UARSessionConfig*                          SessionConfig;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_SetEnabledXRCamera_Params
    {
    public:
        bool                                                         bOnOff;                                                  //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_SetARWorldScale_Params
    {
    public:
        float                                                        InWorldScale;                                            //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_SetARWorldOriginLocationAndRotation_Params
    {
    public:
        CoreUObject::FVector                                         OriginLocation;                                          //  0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        OriginRotation;                                          //  0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         bIsTransformInWorldSpace;                                //  0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bMaintainUpDirection;                                    //  0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_SetAlignmentTransform_Params
    {
    public:
        CoreUObject::FTransform                                      InAlignmentTransform;                                    //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_SaveARPinToLocalStore_Params
    {
    public:
        BasicTypes::FName                                            InSaveName;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARPin*                                    InPin;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_ResizeXRCamera_Params
    {
    public:
        CoreUObject::FIntPoint                                       InSize;                                                  //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FIntPoint                                       ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_RemovePin_Params
    {
    public:
        AugmentedReality::UARPin*                                    PinToRemove;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_RemoveARPinFromLocalStore_Params
    {
    public:
        BasicTypes::FName                                            InSaveName;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_RemoveAllARPinsFromLocalStore_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_PinComponentToTraceResult_Params
    {
    public:
        Engine::USceneComponent*                                     ComponentToPin;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0010(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            DebugName;                                               //  0x0070(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARPin*                                    ReturnValue;                                             //  0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_PinComponentToARPin_Params
    {
    public:
        Engine::USceneComponent*                                     ComponentToPin;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARPin*                                    Pin;                                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_PinComponent_Params
    {
    public:
        Engine::USceneComponent*                                     ComponentToPin;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      PinToWorldTransform;                                     //  0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARTrackedGeometry*                        TrackedGeometry;                                         //  0x0040(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            DebugName;                                               //  0x0048(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARPin*                                    ReturnValue;                                             //  0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_PauseARSession_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_LoadARPinsFromLocalStore_Params
    {
    public:
        BasicTypes::TMap<BasicTypes::FName, AugmentedReality::UARPin*> ReturnValue;                                             //  0x0000(0x0050)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_LineTraceTrackedObjects3D_Params
    {
    public:
        CoreUObject::FVector                                         Start;                                                   //  0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         End;                                                     //  0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestFeaturePoints;                                      //  0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestGroundPlane;                                        //  0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestPlaneExtents;                                       //  0x001A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestPlaneBoundaryPolygon;                               //  0x001B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x4];                                   //  0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AugmentedReality::FARTraceResult>         ReturnValue;                                             //  0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_LineTraceTrackedObjects_Params
    {
    public:
        CoreUObject::FVector2D                                       ScreenCoord;                                             //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestFeaturePoints;                                      //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestGroundPlane;                                        //  0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestPlaneExtents;                                       //  0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bTestPlaneBoundaryPolygon;                               //  0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AugmentedReality::FARTraceResult>         ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_IsSessionTypeSupported_Params
    {
    public:
        AugmentedReality::EARSessionType                             SessionType;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_IsSessionTrackingFeatureSupported_Params
    {
    public:
        AugmentedReality::EARSessionType                             SessionType;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::EARSessionTrackingFeature                  SessionTrackingFeature;                                  //  0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_IsSceneReconstructionSupported_Params
    {
    public:
        AugmentedReality::EARSessionType                             SessionType;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::EARSceneReconstruction                     SceneReconstructionMethod;                               //  0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_IsARSupported_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_IsARPinLocalStoreSupported_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_IsARPinLocalStoreReady_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetWorldMappingStatus_Params
    {
    public:
        AugmentedReality::EARWorldMappingState                       ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetTrackingQualityReason_Params
    {
    public:
        AugmentedReality::EARTrackingQualityReason                   ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetTrackingQuality_Params
    {
    public:
        AugmentedReality::EARTrackingQuality                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetSupportedVideoFormats_Params
    {
    public:
        AugmentedReality::EARSessionType                             SessionType;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0004[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<AugmentedReality::FARVideoFormat>         ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetSessionConfig_Params
    {
    public:
        AugmentedReality::UARSessionConfig*                          ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetPointCloud_Params
    {
    public:
        BasicTypes::TArray<CoreUObject::FVector>                     ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetPersonSegmentationImage_Params
    {
    public:
        AugmentedReality::UARTexture*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetPersonSegmentationDepthImage_Params
    {
    public:
        AugmentedReality::UARTexture*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetObjectClassificationAtLocation_Params
    {
    public:
        CoreUObject::FVector                                         InWorldLocation;                                         //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::EARObjectClassification                    OutClassification;                                       //  0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0005[0x3];                                   //  0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         OutClassificationLocation;                               //  0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        MaxLocationDiff;                                         //  0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetNumberOfTrackedFacesSupported_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetCurrentLightEstimate_Params
    {
    public:
        AugmentedReality::UARLightEstimate*                          ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetCameraIntrinsics_Params
    {
    public:
        AugmentedReality::FARCameraIntrinsics                        OutCameraIntrinsics;                                     //  0x0000(0x0018)  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetCameraImage_Params
    {
    public:
        AugmentedReality::UARTextureCameraImage*                     ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetCameraDepth_Params
    {
    public:
        AugmentedReality::UARTextureCameraDepth*                     ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetARWorldScale_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetARTexture_Params
    {
    public:
        AugmentedReality::EARTextureType                             TextureType;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0006[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AugmentedReality::UARTexture*                                ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetARSessionStatus_Params
    {
    public:
        AugmentedReality::FARSessionStatus                           ReturnValue;                                             //  0x0000(0x0018)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllTrackedPoses_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARTrackedPose*>        ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllTrackedPoints_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARTrackedPoint*>       ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllTrackedPlanes_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARPlaneGeometry*>      ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllTrackedImages_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARTrackedImage*>       ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllTrackedEnvironmentCaptureProbes_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UAREnvironmentCaptureProbe*> ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllTracked2DPoses_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::FARPose2D>              ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllPins_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARPin*>                ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllGeometriesByClass_Params
    {
    public:
        AugmentedReality::UARTrackedGeometry*                        GeometryClass;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AugmentedReality::UARTrackedGeometry*>    ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAllGeometries_Params
    {
    public:
        BasicTypes::TArray<AugmentedReality::UARTrackedGeometry*>    ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_GetAlignmentTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_FindTrackedPointsByName_Params
    {
    public:
        BasicTypes::FString                                          PointName;                                               //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<AugmentedReality::UARTrackedPoint*>       ReturnValue;                                             //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_DebugDrawTrackedGeometry_Params
    {
    public:
        AugmentedReality::UARTrackedGeometry*                        TrackedGeometry;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FLinearColor                                    Color;                                                   //  0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        OutlineThickness;                                        //  0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        PersistForSeconds;                                       //  0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_DebugDrawPin_Params
    {
    public:
        AugmentedReality::UARPin*                                    ARPin;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FLinearColor                                    Color;                                                   //  0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Scale;                                                   //  0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        PersistForSeconds;                                       //  0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_CalculateClosestIntersection_Params
    {
    public:
        BasicTypes::TArray<CoreUObject::FVector>                     StartPoints;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<CoreUObject::FVector>                     EndPoints;                                               //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         ClosestIntersection;                                     //  0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_CalculateAlignmentTransform_Params
    {
    public:
        CoreUObject::FTransform                                      TransformInFirstCoordinateSystem;                        //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      TransformInSecondCoordinateSystem;                       //  0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      AlignmentTransform;                                      //  0x0060(0x0030)  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_AddTrackedPointWithName_Params
    {
    public:
        CoreUObject::FTransform                                      WorldTransform;                                          //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          PointName;                                               //  0x0030(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bDeletePointsWithSameName;                               //  0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_AddRuntimeCandidateImage_Params
    {
    public:
        AugmentedReality::UARSessionConfig*                          SessionConfig;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::UTexture2D*                                          CandidateTexture;                                        //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          FriendlyName;                                            //  0x0010(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        PhysicalWidth;                                           //  0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0007[0x4];                                   //  0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AugmentedReality::UARCandidateImage*                         ReturnValue;                                             //  0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBlueprintLibrary_AddManualEnvironmentCaptureProbe_Params
    {
    public:
        CoreUObject::FVector                                         Location;                                                //  0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Extent;                                                  //  0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTraceResultLibrary_GetTrackedGeometry_Params
    {
    public:
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AugmentedReality::UARTrackedGeometry*                        ReturnValue;                                             //  0x0060(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTraceResultLibrary_GetTraceChannel_Params
    {
    public:
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        AugmentedReality::EARLineTraceChannels                       ReturnValue;                                             //  0x0060(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTraceResultLibrary_GetLocalTransform_Params
    {
    public:
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0060(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTraceResultLibrary_GetLocalToWorldTransform_Params
    {
    public:
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0060(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTraceResultLibrary_GetLocalToTrackingTransform_Params
    {
    public:
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0060(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARTraceResultLibrary_GetDistanceFromCamera_Params
    {
    public:
        AugmentedReality::FARTraceResult                             TraceResult;                                             //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0060(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARSaveWorldAsyncTaskBlueprintProxy_ARSaveWorld_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARSaveWorldAsyncTaskBlueprintProxy*       ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGetCandidateObjectAsyncTaskBlueprintProxy_ARGetCandidateObject_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Extent;                                                  //  0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARGetCandidateObjectAsyncTaskBlueprintProxy* ReturnValue;                                             //  0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARComponent_UpdateVisualization_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARComponent_SetNativeID_Params
    {
    public:
        CoreUObject::FGuid                                           NativeID;                                                //  0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARComponent_ReceiveRemove_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARComponent_OnRep_Payload_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARComponent_GetMRMesh_Params
    {
    public:
        MRMesh::UMRMeshComponent*                                    ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneComponent_SetPlaneComponentDebugMode_Params
    {
    public:
        AugmentedReality::EPlaneComponentDebugMode                   NewDebugMode;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneComponent_SetObjectClassificationDebugColors_Params
    {
    public:
        BasicTypes::TMap<AugmentedReality::EARObjectClassification, CoreUObject::FLinearColor> InColors;                                                //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARPlaneUpdatePayload                      NewPayload;                                              //  0x0000(0x0080)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARPlaneUpdatePayload                      Payload;                                                 //  0x0000(0x0080)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARPlaneUpdatePayload                      Payload;                                                 //  0x0000(0x0080)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPlaneComponent_GetObjectClassificationDebugColors_Params
    {
    public:
        BasicTypes::TMap<AugmentedReality::EARObjectClassification, CoreUObject::FLinearColor> ReturnValue;                                             //  0x0000(0x0050)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPointComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARPointUpdatePayload                      NewPayload;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPointComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARPointUpdatePayload                      Payload;                                                 //  0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPointComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARPointUpdatePayload                      Payload;                                                 //  0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceComponent_SetFaceComponentDebugMode_Params
    {
    public:
        AugmentedReality::EFaceComponentDebugMode                    NewDebugMode;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARFaceUpdatePayload                       NewPayload;                                              //  0x0000(0x0040)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARFaceUpdatePayload                       Payload;                                                 //  0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARFaceComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARFaceUpdatePayload                       Payload;                                                 //  0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARImageComponent_SetImageComponentDebugMode_Params
    {
    public:
        AugmentedReality::EImageComponentDebugMode                   NewDebugMode;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARImageComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARImageUpdatePayload                      NewPayload;                                              //  0x0000(0x0060)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARImageComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARImageUpdatePayload                      Payload;                                                 //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARImageComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARImageUpdatePayload                      Payload;                                                 //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARQRCodeComponent_SetQRCodeComponentDebugMode_Params
    {
    public:
        AugmentedReality::EQRCodeComponentDebugMode                  NewDebugMode;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARQRCodeComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARQRCodeUpdatePayload                     NewPayload;                                              //  0x0000(0x0070)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARQRCodeComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARQRCodeUpdatePayload                     Payload;                                                 //  0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARQRCodeComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARQRCodeUpdatePayload                     Payload;                                                 //  0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPoseComponent_SetPoseComponentDebugMode_Params
    {
    public:
        AugmentedReality::EPoseComponentDebugMode                    NewDebugMode;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPoseComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARPoseUpdatePayload                       NewPayload;                                              //  0x0000(0x0040)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPoseComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARPoseUpdatePayload                       Payload;                                                 //  0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARPoseComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARPoseUpdatePayload                       Payload;                                                 //  0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAREnvironmentProbeComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FAREnvironmentProbeUpdatePayload           NewPayload;                                              //  0x0000(0x0030)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAREnvironmentProbeComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FAREnvironmentProbeUpdatePayload           Payload;                                                 //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAREnvironmentProbeComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FAREnvironmentProbeUpdatePayload           Payload;                                                 //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARObjectComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARObjectUpdatePayload                     NewPayload;                                              //  0x0000(0x0030)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARObjectComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARObjectUpdatePayload                     Payload;                                                 //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARObjectComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARObjectUpdatePayload                     Payload;                                                 //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARMeshComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARMeshUpdatePayload                       NewPayload;                                              //  0x0000(0x0060)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARMeshComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARMeshUpdatePayload                       Payload;                                                 //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARMeshComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARMeshUpdatePayload                       Payload;                                                 //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchorComponent_SetGeoAnchorComponentDebugMode_Params
    {
    public:
        AugmentedReality::EGeoAnchorComponentDebugMode               NewDebugMode;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchorComponent_ServerUpdatePayload_Params
    {
    public:
        AugmentedReality::FARGeoAnchorUpdatePayload                  NewPayload;                                              //  0x0000(0x0070)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchorComponent_ReceiveUpdate_Params
    {
    public:
        AugmentedReality::FARGeoAnchorUpdatePayload                  Payload;                                                 //  0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARGeoAnchorComponent_ReceiveAdd_Params
    {
    public:
        AugmentedReality::FARGeoAnchorUpdatePayload                  Payload;                                                 //  0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARDependencyHandler_StartARSessionLatent_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARSessionConfig*                          SessionConfig;                                           //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0010(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARDependencyHandler_RequestARSessionPermission_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UARSessionConfig*                          SessionConfig;                                           //  0x0008(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0010(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
        AugmentedReality::EARServicePermissionRequestResult          OutPermissionResult;                                     //  0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARDependencyHandler_InstallARService_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0008(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
        AugmentedReality::EARServiceInstallRequestResult             OutInstallResult;                                        //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARDependencyHandler_GetARDependencyHandler_Params
    {
    public:
        AugmentedReality::UARDependencyHandler*                      ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARDependencyHandler_CheckARServiceAvailability_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FLatentActionInfo                                    LatentInfo;                                              //  0x0008(0x0018)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
        AugmentedReality::EARServiceAvailability                     OutAvailability;                                         //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_GeoTrackingAvailabilityDelegate__DelegateSignature_Params
    {
    public:
        bool                                                         bIsAvailable;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          Error;                                                   //  0x0008(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_CheckGeoTrackingAvailabilityAtLocation_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Longitude;                                               //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Latitude;                                                //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_CheckGeoTrackingAvailability_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGetGeoLocationAsyncTaskBlueprintProxy_GetGeoLocationDelegate__DelegateSignature_Params
    {
    public:
        float                                                        Longitude;                                               //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Latitude;                                                //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Altitude;                                                //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          Error;                                                   //  0x0010(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGetGeoLocationAsyncTaskBlueprintProxy_GetGeoLocationAtWorldPosition_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         WorldPosition;                                           //  0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AugmentedReality::UGetGeoLocationAsyncTaskBlueprintProxy*    ReturnValue;                                             //  0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARLifeCycleComponent_ServerSpawnARActor_Params
    {
    public:
        CoreUObject::UObject*                                        ComponentClass;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FGuid                                           NativeID;                                                //  0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARLifeCycleComponent_ServerDestroyARActor_Params
    {
    public:
        AugmentedReality::AARActor*                                  Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARLifeCycleComponent_InstanceARActorToBeDestroyedDelegate__DelegateSignature_Params
    {
    public:
        AugmentedReality::AARActor*                                  Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARLifeCycleComponent_InstanceARActorSpawnedDelegate__DelegateSignature_Params
    {
    public:
        CoreUObject::UObject*                                        ComponentClass;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FGuid                                           NativeID;                                                //  0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        AugmentedReality::AARActor*                                  SpawnedActor;                                            //  0x0018(0x0008)  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBasicLightEstimate_GetAmbientIntensityLumens_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBasicLightEstimate_GetAmbientColorTemperatureKelvin_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UARBasicLightEstimate_GetAmbientColor_Params
    {
    public:
        CoreUObject::FLinearColor                                    ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
