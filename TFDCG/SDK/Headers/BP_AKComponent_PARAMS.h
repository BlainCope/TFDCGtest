#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "AkAudio_ENUMS.h"
#include "CoreUObject_FVector.h"
#include "M1_ENUMS.h"
#include "BasicTypes_FName.h"
#include "M1Data_ENUMS.h"
#include "PhysicsCore_ENUMS.h"
#include "CoreUObject_FRotator.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::AkAudio { class UAkCallbackInfo; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class USceneComponent; };
namespace CG::AkAudio { class UAkComponent; };
namespace CG::AkAudio { class UAkAudioEvent; };
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::M1 { class UM1DataSoundEffects; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BP_AKComponent
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetReviveByRevive_Params
    {
    public:
        M1::AM1Player*                                               Helper;                                                  //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        BasicTypes::FString                                          Event;                                                   //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0018(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetReviveByRescue_Params
    {
    public:
        M1::AM1Player*                                               Helper;                                                  //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        BasicTypes::FString                                          Event;                                                   //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0018(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_NpcAkEventCallback_Params
    {
    public:
        AkAudio::EAkCallbackType                                     CallbackType;                                            //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::UAkCallbackInfo*                                    CallbackInfo;                                            //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetDamagedLocation_Params
    {
    public:
        double                                                       Angle;                                                   //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetDeboneSuccessArg_Params
    {
    public:
        BasicTypes::FString                                          Event;                                                   //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0010(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetDeboneArg_Params
    {
    public:
        BasicTypes::FString                                          Event;                                                   //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0010(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetEmptyRoundsArg_Params
    {
    public:
        M1::EM1DynamicDialogueStimulus                               Stimulus;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          Event;                                                   //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0018(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetDamagedArg_Params
    {
    public:
        M1::EM1DynamicDialogueStimulus                               Stimulus;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          Event;                                                   //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0018(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetRegCampArg_Params
    {
    public:
        BasicTypes::FString                                          Event;                                                   //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0010(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetJoinMissionArg_Params
    {
    public:
        BasicTypes::FString                                          Event;                                                   //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0010(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetRescueArg_Params
    {
    public:
        Engine::AActor*                                              Object;                                                  //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        BasicTypes::FString                                          Event;                                                   //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0018(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetEpicbossKillArg_Params
    {
    public:
        BasicTypes::FString                                          SourceString;                                            //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::FString                                          Event;                                                   //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      Array;                                                   //  0x0020(0x0010)  (ConstParm, Parm, OutParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_GetOrCreateAkComponent_Params
    {
    public:
        Engine::USceneComponent*                                     AttachToComponent;                                       //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
        BasicTypes::FName                                            AttachPointName;                                         //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FVector                                         Offset;                                                  //  0x0010(0x000C)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bComponentCreated;                                       //  0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0003[0x3];                                   //  0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        AkAudio::UAkComponent*                                       OutAkComponent;                                          //  0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_TryPlayUIAkEventByName_Params
    {
    public:
        BasicTypes::FString                                          AkEventName;                                             //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_TryPlayUIAkEvent_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnDoorOpenStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnDoorOpenEnd_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnDoorCloseStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnDoorCloseEnd_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnTrapStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnTrapLoop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnTrapEnd_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnTrapHit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMiniGameFinished_Params
    {
    public:
        bool                                                         bIsSuccess;                                              //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnTimingHit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnTimingMiss_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnRemainingTimeAlertStarted_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnRoundStarted_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMiniGameStartedBySpecialCharacter_Params
    {
    public:
        M1Data::EM1MiniGameType                                      InMiniGameType;                                          //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMovingActorMoveStart_Params
    {
    public:
        float                                                        Speed;                                                   //  0x0000(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMovingActorSpawn_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMovingActorDespawn_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMovingActorMoveEnd_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnChangeAudioMixOption_Params
    {
    public:
        M1::EM1AudioMix                                              InOption;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnNpcLookedAtPlayer_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnNpcPlayerApproached_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnNpcInteractionStarted_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnDropItemObtained_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnDropItemSpawned_Params
    {
    public:
        M1Data::EM1ImportanceType                                    InImportanceType;                                        //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterReceiveAnimNotify_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        bool                                                         bIsFollowComponent;                                      //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0004[0x7];                                   //  0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          AttachTargetName;                                        //  0x0010(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
        Engine::USkeletalMeshComponent*                              TargetMesh;                                              //  0x0020(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
        bool                                                         bIsDebugNotify;                                          //  0x0028(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0005[0x3];                                   //  0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Offset;                                                  //  0x002C(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterReceiveAnimNotifyEnd_Params
    {
    public:
        AkAudio::UAkComponent*                                       TargetAkComponent;                                       //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterReceiveFootStepAnimNotify_Params
    {
    public:
        PhysicsCore::EPhysicalSurface                                SurfaceType;                                             //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      PlayerFootStepAction;                                    //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterDamaged_Params
    {
    public:
        bool                                                         bIsHitWeakPoint;                                         //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterStartNormalRangedAttack_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterStartMoveByPurpose_Params
    {
    public:
        M1::EM1AIMovePurpose                                         MovePurpose;                                             //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bInBattle;                                               //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterStopMoveByPurpose_Params
    {
    public:
        M1::EM1AIMovePurpose                                         MovePurpose;                                             //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bInBattle;                                               //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bIdle;                                                   //  0x0002(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterAIMontageSound_Params
    {
    public:
        M1::EM1MonsterMontageSoundType                               MonsterMontageSoundType;                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterStartNormalMeleeAttack_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterGainKnockStatusEffect_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterStartMoveWithDamage_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnMonsterStartRush_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerInitSound_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerUpdateCameraTransform_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerBattleStateChanged_Params
    {
    public:
        bool                                                         bInBattleState;                                          //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerReceiveAnimNotify_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        bool                                                         bIsFollowComponent;                                      //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerReceiveFootStepAnimNotify_Params
    {
    public:
        PhysicsCore::EPhysicalSurface                                SurfaceType;                                             //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      PlayerFootStepAction;                                    //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerRangedWeaponFired_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        float                                                        fireinterval;                                            //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        RoundRate;                                               //  0x000C(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      ChargeLevel;                                             //  0x0010(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerNeedToPlayLocalSound_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      LocalSoundToPlay;                                        //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerActiveDBNO_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerReviveByRescue_Params
    {
    public:
        M1::AM1Player*                                               HelperPlayer;                                            //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerReviveByRespawn_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerEnterEpicBossRange_Params
    {
    public:
        BasicTypes::FString                                          EpicBossName;                                            //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerExitEpicBossRange_Params
    {
    public:
        BasicTypes::FString                                          EpicBossName;                                            //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerEnterArea_Params
    {
    public:
        BasicTypes::FString                                          LocationString;                                          //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerJoinMission_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerEndDebone_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerDamaged_Params
    {
    public:
        M1::EM1DynamicDialogueStimulus                               DamageStimulus;                                          //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerRegisteredCamp_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerFirstFailedOfAutoReload_Params
    {
    public:
        M1::EM1DynamicDialogueStimulus                               EmptyRoundsStimulus;                                     //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerSelectHero_Params
    {
    public:
        BasicTypes::FString                                          SelectedHeroStringID;                                    //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnCharacterReceiveDynamicDialogueAnimNotify_Params
    {
    public:
        M1::EM1DynamicDialogueStimulus                               Stimulus;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0006[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          InEventName;                                             //  0x0008(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::TArray<BasicTypes::FString>                      ArgPaths;                                                //  0x0018(0x0010)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerKilledEpicBoss_Params
    {
    public:
        BasicTypes::FString                                          EpicBossName;                                            //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerLanded_Params
    {
    public:
        bool                                                         Hard;                                                    //  0x0000(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerFalling_Params
    {
    public:
        float                                                        VelocityZ;                                               //  0x0000(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerWireHooked_Params
    {
    public:
        CoreUObject::FVector                                         HookedLocation;                                          //  0x0000(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerStartDebone_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerOutPlayableArea_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      InActivatedEvent;                                        //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerSuccessRescue_Params
    {
    public:
        M1::AM1Player*                                               RescueTarget;                                            //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerChangedWireState_Params
    {
    public:
        M1::EM1WireState                                             State;                                                   //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerRangedWeaponStopFire_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnWireMiss_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnWireHooked_Params
    {
    public:
        PhysicsCore::EPhysicalSurface                                HitSurfaceType;                                          //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bHookSuccess;                                            //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnHookChangedWireState_Params
    {
    public:
        M1::EM1WireState                                             State;                                                   //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnAbilityProjectileExplosion_Params
    {
    public:
        CoreUObject::FVector                                         Location;                                                //  0x0000(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FRotator                                        Rotation;                                                //  0x000C(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnAbilityProjectileHit_Params
    {
    public:
        PhysicsCore::EPhysicalSurface                                HitSurfaceType;                                          //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0007[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Location;                                                //  0x0004(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FRotator                                        Rotation;                                                //  0x0010(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnAbilityProjectilePassBy_Params
    {
    public:
        CoreUObject::FVector                                         Velocity;                                                //  0x0000(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnAbilityProjectileBounce_Params
    {
    public:
        CoreUObject::FVector                                         Velocity;                                                //  0x0000(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnAbilityActorSpawned_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnAbilityActorDestroyed_Params
    {
    public:
        CoreUObject::FVector                                         Location;                                                //  0x0000(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FRotator                                        Rotation;                                                //  0x000C(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIPlayDefaultHitMarkerSound_Params
    {
    public:
        M1::EUIEventType                                             UIType;                                                  //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIPlayAkEvent_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        M1::EUIEventType                                             UIType;                                                  //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIPlayAkEventByName_Params
    {
    public:
        BasicTypes::FString                                          InEventName;                                             //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
        M1::EUIEventType                                             UIType;                                                  //  0x0010(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIInGameContentOpened_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIInGameContentClosed_Params
    {
    public:
        AkAudio::UAkAudioEvent*                                      AkEvent;                                                 //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIPlayWeaknessKillHitMarkerSound_Params
    {
    public:
        M1::EUIEventType                                             UIType;                                                  //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIShowLoadingScreen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnUIHideLoadingScreen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnChangeGamePadVibrationAmount_Params
    {
    public:
        float                                                        InMount;                                                 //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnChangeUseGamepadVibration_Params
    {
    public:
        bool                                                         bUse;                                                    //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnCharacterDie_Params
    {
    public:
        bool                                                         bWeakness;                                               //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnCharacterMeleeHit_Params
    {
    public:
        M1::UM1DataSoundEffects*                                     OptionalSoundEffects;                                    //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        PhysicsCore::EPhysicalSurface                                HitSurfaceType;                                          //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0008[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Location;                                                //  0x000C(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnCharacterRangeHit_Params
    {
    public:
        M1::UM1DataSoundEffects*                                     SoundEffects;                                            //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
        PhysicsCore::EPhysicalSurface                                HitSurfaceType;                                          //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0009[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Location;                                                //  0x000C(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        CoreUObject::FRotator                                        Rotation;                                                //  0x0018(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnCharacterReceiveFootStepAnimNotify_Params
    {
    public:
        BasicTypes::FString                                          SurfaceType;                                             //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
        BasicTypes::FString                                          CharacterFootStepAction;                                 //  0x0010(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnChangedTimeDilation_Params
    {
    public:
        float                                                        Rate;                                                    //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnPlayerDamagedFromDirection_Params
    {
    public:
        float                                                        Angle;                                                   //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnChangedWeaponByHold_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_OnApplyBattleVoice_Params
    {
    public:
        bool                                                         InActivate;                                              //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_StopAllAkEventOfOwner_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_PauseAll_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_BP_ResumeAll_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBP_AKComponent_C_ExecuteUbergraph_BP_AKComponent_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
