#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "AppleARKitFaceSupport_FNetQuantizeFaceCurve.h"
#include "ProceduralMeshComponent_UProceduralMeshComponent.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_TMap.h"
#include "AugmentedReality_ENUMS.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FVector2D.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AppleARKitFaceSupport
{
    /**
     * Class /Script/AppleARKitFaceSupport.AppleARKitFaceMeshComponent
     * Size -> 0x00C8 (FullSize[0x05E0] - InheritedSize[0x0518])
     */
    class UAppleARKitFaceMeshComponent : public ProceduralMeshComponent::UProceduralMeshComponent
    {
    public:
        uint8_t                                                      UnknownData_0001[0x8];                                   //  Fix Super Size
        Engine::UMaterialInterface*                                  FaceMaterial;                                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            LiveLinkSubjectName;                                     //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<AppleARKitFaceSupport::FNetQuantizeFaceCurve> RemoteCurves;                                            //  Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0xA0];                                  //  MISSED OFFSET (PADDING)

    public:
        void UpdateMeshFromBlendShapes();
        void UpdateMesh(BasicTypes::TArray<CoreUObject::FVector> Vertices);
        void SetBlendShapes(BasicTypes::TMap<AugmentedReality::EARFaceBlendShape, float> InBlendShapes);
        void SetBlendShapeAmount(AugmentedReality::EARFaceBlendShape BlendShape, float Amount);
        void SetAutoBind(bool bAutoBind);
        void ServerUpdateFaceCurves(BasicTypes::TArray<AppleARKitFaceSupport::FNetQuantizeFaceCurve> ClientCurves);
        void PublishViaLiveLink(const BasicTypes::FName& SubjectName);
        void OnRep_RemoteCurves();
        CoreUObject::FTransform GetTransform();
        float GetLastUpdateTimestamp();
        int32_t GetLastUpdateFrameNumber();
        float GetFaceBlendShapeAmount(AugmentedReality::EARFaceBlendShape BlendShape);
        void CreateMesh(BasicTypes::TArray<CoreUObject::FVector> Vertices, BasicTypes::TArray<int32_t> Triangles, BasicTypes::TArray<CoreUObject::FVector2D> UV0);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AppleARKitFaceSupport.AppleARKitFaceMeshComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
