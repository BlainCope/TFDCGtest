#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "TypedElementFramework_FScriptTypedElementListProxy.h"
#include "Engine_FTypedElementPasteOptions.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "TypedElementFramework_FScriptTypedElementHandle.h"
#include "CoreUObject_FVector.h"
#include "Engine_FTypedElementDeletionOptions.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UWorld; };
namespace CG::TypedElementRuntime { class UTypedElementSelectionSet; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.TypedElementCommonActions
     * Size -> 0x0800 (FullSize[0x0828] - InheritedSize[0x0028])
     */
    class UTypedElementCommonActions : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x800];                                 //  MISSED OFFSET (PADDING)

    public:
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> PasteNormalizedElementsFromString(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, Engine::UWorld* World, const Engine::FTypedElementPasteOptions& PasteOption, const BasicTypes::FString& InputString);
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> PasteElementsFromString(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, Engine::UWorld* World, const Engine::FTypedElementPasteOptions& PasteOption, const BasicTypes::FString& InputString);
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> K2_PasteNormalizedElements(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, Engine::UWorld* World, const Engine::FTypedElementPasteOptions& PasteOption);
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> K2_PasteElements(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, Engine::UWorld* World, const Engine::FTypedElementPasteOptions& PasteOption);
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> K2_DuplicateSelectedElements(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, Engine::UWorld* World, const CoreUObject::FVector& LocationOffset);
        BasicTypes::TArray<TypedElementFramework::FScriptTypedElementHandle> DuplicateNormalizedElements(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, Engine::UWorld* World, const CoreUObject::FVector& LocationOffset);
        bool DeleteSelectedElements(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, Engine::UWorld* World, const Engine::FTypedElementDeletionOptions& DeletionOptions);
        bool DeleteNormalizedElements(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, Engine::UWorld* World, TypedElementRuntime::UTypedElementSelectionSet* InSelectionSet, const Engine::FTypedElementDeletionOptions& DeletionOptions);
        bool CopySelectedElementsToString(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet, BasicTypes::FString* OutputString);
        bool CopySelectedElements(TypedElementRuntime::UTypedElementSelectionSet* SelectionSet);
        bool CopyNormalizedElementsToString(const TypedElementFramework::FScriptTypedElementListProxy& ElementList, BasicTypes::FString* OutputString);
        bool CopyNormalizedElements(const TypedElementFramework::FScriptTypedElementListProxy& ElementList);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.TypedElementCommonActions");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
