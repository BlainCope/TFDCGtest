#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "ControlRig_FRigElementKey.h"
#include "CoreUObject_FVector.h"
#include "ControlRig_FRegionScaleFactors.h"
#include "ControlRig_FSphericalPoseReaderDebugSettings.h"
#include "ControlRig_FSphericalRegion.h"
#include "ControlRig_FCachedRigElement.h"
#include "CoreUObject_FTransform.h"
#include "ControlRig_FRigUnit_HighlevelBaseMutable.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ControlRig
{
    /**
     * ScriptStruct /Script/ControlRig.RigUnit_SphericalPoseReader
     * Size -> 0x0130 (FullSize[0x0230] - InheritedSize[0x0100])
     */
    struct FRigUnit_SphericalPoseReader : public ControlRig::FRigUnit_HighlevelBaseMutable
    {
    public:
        float                                                        OutputParam;                                             //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FRigElementKey                                   DriverItem;                                              //  Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         DriverAxis;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         RotationOffset;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ActiveRegionSize;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FRegionScaleFactors                              ActiveRegionScaleFactors;                                //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        float                                                        FalloffSize;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FRegionScaleFactors                              FalloffRegionScaleFactors;                               //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        bool                                                         FlipWidthScaling;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         FlipHeightScaling;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ControlRig::FRigElementKey                                   OptionalParentItem;                                      //  Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FSphericalPoseReaderDebugSettings                Debug;                                                   //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        ControlRig::FSphericalRegion                                 InnerRegion;                                             //  Transient, NoDestructor, NativeAccessSpecifierPublic
        ControlRig::FSphericalRegion                                 OuterRegion;                                             //  Transient, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         DriverNormal;                                            //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         Driver2D;                                                //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FCachedRigElement                                DriverCache;                                             //  NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        ControlRig::FCachedRigElement                                OptionalParentCache;                                     //  NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FTransform                                      LocalDriverTransformInit;                                //  IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         CachedRotationOffset;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCachedInitTransforms;                                   //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
