#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FFilePath.h"
#include "CoreUObject_FDirectoryPath.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "PhysicsCore_UPhysicalMaterial.h"
#include "AkAudio_FAkGeometrySurfacePropertiesToMap.h"
#include "AkAudio_UAkAuxBus.h"
#include "BasicTypes_FString.h"
#include "AkAudio_UAkRtpc.h"
#include "AkAudio_UAkAudioEvent.h"
#include "CoreUObject_FGuid.h"
#include "AkAudio_FAkAcousticTextureParams.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AkAudio
{
    /**
     * Class /Script/AkAudio.AkSettings
     * Size -> 0x02E0 (FullSize[0x0308] - InheritedSize[0x0028])
     */
    class UAkSettings : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      MaxSimultaneousReverbVolumes;                            //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FFilePath                                       WwiseProjectPath;                                        //  Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FDirectoryPath                                  WwiseSoundDataFolder;                                    //  Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAutoConnectToWAAPI;                                     //  ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::ECollisionChannel                                    DefaultOcclusionCollisionChannel;                        //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::ECollisionChannel                                    DefaultFitToGeometryCollisionChannel;                    //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x5];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TMap<BasicTypes::TSoftObjectPtr<PhysicsCore::UPhysicalMaterial>, AkAudio::FAkGeometrySurfacePropertiesToMap> AkGeometryMap;                                           //  Edit, EditFixedSize, Config, NativeAccessSpecifierPublic
        float                                                        GlobalDecayAbsorption;                                   //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSoftObjectPtr<AkAudio::UAkAuxBus>               DefaultReverbAuxBus;                                     //  ELEMENT_SIZE_MISMATCH Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TMap<float, BasicTypes::TSoftObjectPtr<AkAudio::UAkAuxBus>> EnvironmentDecayAuxBusMap;                               //  Edit, Config, UObjectWrapper, NativeAccessSpecifierPublic
        BasicTypes::FString                                          HFDampingName;                                           //  Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          DecayEstimateName;                                       //  Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          TimeToFirstReflectionName;                               //  Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TSoftObjectPtr<AkAudio::UAkRtpc>                 HFDampingRTPC;                                           //  ELEMENT_SIZE_MISMATCH Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<AkAudio::UAkRtpc>                 DecayEstimateRTPC;                                       //  ELEMENT_SIZE_MISMATCH Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0005[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<AkAudio::UAkRtpc>                 TimeToFirstReflectionRTPC;                               //  ELEMENT_SIZE_MISMATCH Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0006[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<AkAudio::UAkAudioEvent>           AudioInputEvent;                                         //  ELEMENT_SIZE_MISMATCH Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TMap<CoreUObject::FGuid, AkAudio::FAkAcousticTextureParams> AcousticTextureParamsMap;                                //  Config, NativeAccessSpecifierPublic
        bool                                                         SplitSwitchContainerMedia;                               //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         SplitMediaPerFolder;                                     //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UseEventBasedPackaging;                                  //  Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         EnableAutomaticAssetSynchronization;                     //  ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          CommandletCommitMessage;                                 //  Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TMap<BasicTypes::FString, BasicTypes::FString>   UnrealCultureToWwiseCulture;                             //  Edit, Config, NativeAccessSpecifierPublic
        bool                                                         AskedToUseNewAssetManagement;                            //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnableMultiCoreRendering;                               //  ZeroConstructor, Config, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         MigratedEnableMultiCoreRendering;                        //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         FixupRedirectorsDuringMigration;                         //  ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0009[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FDirectoryPath                                  WwiseWindowsInstallationPath;                            //  ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FFilePath                                       WwiseMacInstallationPath;                                //  ZeroConstructor, Config, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0010[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AkAudio.AkSettings");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
