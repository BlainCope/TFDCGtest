#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1AlarmId.h"
#include "M1_UM1Ability.h"
#include "GameplayTags_FGameplayTag.h"
#include "M1Data_FM1StatusEffectData.h"
#include "GameplayTags_FGameplayTagContainer.h"
#include "M1Data_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class UM1StatusEffectComponent; };
namespace CG::M1 { class UM1NetSyncAlarmComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1StatusEffect
     * Size -> 0x0098 (FullSize[0x0338] - InheritedSize[0x02A0])
     */
    class UM1StatusEffect : public M1::UM1Ability
    {
    public:
        uint8_t                                                      UnknownData_0000[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1AlarmId                                               DurationAlarmId;                                         //  Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1AlarmId                                               PeriodAlarmId;                                           //  Net, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      StackCount;                                              //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::UM1StatusEffectComponent*                                StatusEffectComponent;                                   //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        M1::UM1NetSyncAlarmComponent*                                NetSyncAlarmComponent;                                   //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x40];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRepStackCount(int32_t PrevStackCount);
        void OnRepPeriodAlarmId();
        bool MatchesIdTag(const GameplayTags::FGameplayTag& InTag);
        bool IsStackable();
        bool IsMaxStack();
        M1Data::FM1StatusEffectData GetStatusEffectData();
        int32_t GetStartStackCount();
        int32_t GetStackCount();
        GameplayTags::FGameplayTagContainer GetRemoveTags();
        float GetRemainingTime();
        float GetPeriod();
        int32_t GetMaxStackCount();
        GameplayTags::FGameplayTagContainer GetImmuneTags();
        GameplayTags::FGameplayTag GetIdTag();
        float GetDuration();
        void BP_OnUpdateStackCount(int32_t DeltaStackCount);
        void BP_OnPeriod();
        void Auth_UpdateStackCount(int32_t DeltaStackCount);
        void Auth_ModifyRemainingTime(M1Data::EM1StatModifierOp InModOp, float InValue);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1StatusEffect");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
