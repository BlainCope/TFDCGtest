#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "StreamlineBlueprint_ENUMS.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::StreamlineBlueprint
{
    /**
     * Class /Script/StreamlineBlueprint.StreamlineLibraryDLSSG
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UStreamlineLibraryDLSSG : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_SetDLSSGMode(StreamlineBlueprint::EUStreamlineDLSSGMode DLSSGMode);
        StreamlineBlueprint::EUStreamlineFeatureSupport STATIC_QueryDLSSGSupport();
        bool STATIC_IsDLSSGSupported();
        bool STATIC_IsDLSSGModeSupported(StreamlineBlueprint::EUStreamlineDLSSGMode DLSSGMode);
        BasicTypes::TArray<StreamlineBlueprint::EUStreamlineDLSSGMode> STATIC_GetSupportedDLSSGModes();
        StreamlineBlueprint::EUStreamlineDLSSGMode STATIC_GetDLSSGMode();
        void STATIC_GetDLSSGFrameTiming(float* FrameRateInHertz, int32_t* FramesPresented);
        StreamlineBlueprint::EUStreamlineDLSSGMode STATIC_GetDefaultDLSSGMode();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/StreamlineBlueprint.StreamlineLibraryDLSSG");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
