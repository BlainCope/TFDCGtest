#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UMaterialInstance.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UPhysicalMaterialMask; };
namespace CG::Engine { class UTexture; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.MaterialInstanceConstant
     * Size -> 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
     */
    class UMaterialInstanceConstant : public Engine::UMaterialInstance
    {
    public:
        Engine::UPhysicalMaterialMask*                               PhysMaterialMask;                                        //  Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        CoreUObject::FLinearColor K2_GetVectorParameterValue(const BasicTypes::FName& ParameterName);
        Engine::UTexture* K2_GetTextureParameterValue(const BasicTypes::FName& ParameterName);
        float K2_GetScalarParameterValue(const BasicTypes::FName& ParameterName);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.MaterialInstanceConstant");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
