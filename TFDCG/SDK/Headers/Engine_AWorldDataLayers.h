#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSet.h"
#include "BasicTypes_TMap.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "BasicTypes_TArray.h"
#include "Engine_AInfo.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UDataLayerInstance; };
namespace CG::Engine { class UDataLayer; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.WorldDataLayers
     * Size -> 0x0328 (FullSize[0x0570] - InheritedSize[0x0248])
     */
    class AWorldDataLayers : public Engine::AInfo
    {
    public:
        uint8_t                                                      UnknownData_0000[0xA0];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<Engine::UDataLayerInstance*>                DataLayerInstances;                                      //  UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TMap<BasicTypes::FName, BasicTypes::TWeakObjectPtr<Engine::UDataLayerInstance>> DeprecatedDataLayerNameToDataLayerInstance;              //  UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TSet<Engine::UDataLayer*>                        WorldDataLayers;                                         //  Deprecated, UObjectWrapper, NativeAccessSpecifierPrivate
        BasicTypes::TArray<BasicTypes::FName>                        RepActiveDataLayerNames;                                 //  Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
        BasicTypes::TArray<BasicTypes::FName>                        RepLoadedDataLayerNames;                                 //  Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0xA0];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        RepEffectiveActiveDataLayerNames;                        //  Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
        BasicTypes::TArray<BasicTypes::FName>                        RepEffectiveLoadedDataLayerNames;                        //  Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0xB8];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRep_LoadedDataLayerNames();
        void OnRep_EffectiveLoadedDataLayerNames();
        void OnRep_EffectiveActiveDataLayerNames();
        void OnRep_ActiveDataLayerNames();
        void OnDataLayerRuntimeStateChanged(Engine::UDataLayerInstance* InDataLayer, Engine::EDataLayerRuntimeState InState);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.WorldDataLayers");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
