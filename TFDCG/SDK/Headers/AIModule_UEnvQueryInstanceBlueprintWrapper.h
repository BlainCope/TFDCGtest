#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UMulticastInlineDelegate.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_FVector.h"
#include "AIModule_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::AIModule { class UEnvQueryItemType; };
namespace CG::Engine { class AActor; };
namespace CG::AIModule { class UEnvQueryInstanceBlueprintWrapper; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    /**
     * Class /Script/AIModule.EnvQueryInstanceBlueprintWrapper
     * Size -> 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
     */
    class UEnvQueryInstanceBlueprintWrapper : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      QueryID;                                                 //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x24];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        AIModule::UEnvQueryItemType*                                 ItemType;                                                //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        int32_t                                                      OptionIndex;                                             //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UMulticastInlineDelegate                         OnQueryFinishedEvent;                                    //  ELEMENT_SIZE_MISMATCH ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0xF];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY

    public:
        void SetNamedParam(const BasicTypes::FName& ParamName, float Value);
        BasicTypes::TArray<CoreUObject::FVector> GetResultsAsLocations();
        BasicTypes::TArray<Engine::AActor*> GetResultsAsActors();
        bool GetQueryResultsAsLocations(BasicTypes::TArray<CoreUObject::FVector>* ResultLocations);
        bool GetQueryResultsAsActors(BasicTypes::TArray<Engine::AActor*>* ResultActors);
        float GetItemScore(int32_t ItemIndex);
        void EQSQueryDoneSignature__DelegateSignature(AIModule::UEnvQueryInstanceBlueprintWrapper* QueryInstance, AIModule::EEnvQueryStatus QueryStatus);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AIModule.EnvQueryInstanceBlueprintWrapper");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
