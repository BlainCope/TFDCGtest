#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FText.h"
#include "MovieRenderPipelineCore_UMoviePipelineSetting.h"
#include "MovieRenderPipelineCore_FMoviePipelineFormatArgs.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieRenderPipelineCore { class UMoviePipeline; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieRenderPipelineCore
{
    /**
     * Class /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase
     * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
     */
    class UMoviePipelineSetting_BlueprintBase : public MovieRenderPipelineCore::UMoviePipelineSetting
    {
    public:
        BasicTypes::FText                                            CategoryText;                                            //  Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
        bool                                                         bIsValidOnPrimary;                                       //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bIsValidOnShots;                                         //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bCanBeDisabled;                                          //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x5];                                   //  MISSED OFFSET (PADDING)

    public:
        void ReceiveTeardownForPipelineImpl(MovieRenderPipelineCore::UMoviePipeline* InPipeline);
        void ReceiveSetupForPipelineImpl(MovieRenderPipelineCore::UMoviePipeline* InPipeline);
        MovieRenderPipelineCore::FMoviePipelineFormatArgs ReceiveGetFormatArguments(MovieRenderPipelineCore::FMoviePipelineFormatArgs* InOutFormatArgs);
        void OnEngineTickBeginFrame();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
