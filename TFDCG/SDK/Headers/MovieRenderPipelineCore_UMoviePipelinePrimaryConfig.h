#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "MovieRenderPipelineCore_UMoviePipelineConfigBase.h"
#include "CoreUObject_FFrameRate.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieRenderPipelineCore { class UMoviePipelineShotConfig; };
namespace CG::MovieRenderPipelineCore { class UMoviePipelineOutputSetting; };
namespace CG::MovieRenderPipelineCore { class UMoviePipelineSetting; };
namespace CG::LevelSequence { class ULevelSequence; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieRenderPipelineCore
{
    /**
     * Class /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig
     * Size -> 0x0068 (FullSize[0x00E8] - InheritedSize[0x0080])
     */
    class UMoviePipelinePrimaryConfig : public MovieRenderPipelineCore::UMoviePipelineConfigBase
    {
    public:
        BasicTypes::TMap<BasicTypes::FString, MovieRenderPipelineCore::UMoviePipelineShotConfig*> PerShotConfigMapping;                                    //  ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic
        MovieRenderPipelineCore::UMoviePipelineOutputSetting*        OutputSetting;                                           //  ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> TransientSettings;                                       //  ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate

    public:
        void InitializeTransientSettings();
        BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> GetTransientSettings();
        CoreUObject::FFrameRate GetEffectiveFrameRate(LevelSequence::ULevelSequence* InSequence);
        BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> GetAllSettings(bool bIncludeDisabledSettings, bool bIncludeTransientSettings);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
