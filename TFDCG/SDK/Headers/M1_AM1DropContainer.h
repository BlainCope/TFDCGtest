#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1_FM1DropContainerRepInfo.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TSoftObjectPtr.h"
#include "Niagara_UNiagaraSystem.h"
#include "BasicTypes_TSet.h"
#include "BasicTypes_TWeakObjectPtr.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "Engine_UTexture2D.h"
#include "CoreUObject_FVector.h"
#include "Engine_AActor.h"
#include "Engine_FHitResult.h"
#include "M1_FM1DropContainerLaunchParam.h"
#include "CoreUObject_FRotator.h"
#include "CoreUObject_FTransform.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::M1 { class AM1Player; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Niagara { class UNiagaraComponent; };
namespace CG::Engine { class UBoxComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class UCapsuleComponent; };
namespace CG::M1 { class UM1InteractionInvokerComponent; };
namespace CG::M1 { class UM1AkAudioData; };
namespace CG::CoreUObject { class UObject; };
namespace CG::M1 { class AM1PlayerController; };
namespace CG::Engine { class UMeshComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1
{
    /**
     * Class /Script/M1.M1DropContainer
     * Size -> 0x0388 (FullSize[0x05D0] - InheritedSize[0x0248])
     */
    class AM1DropContainer : public Engine::AActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x28];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::FM1DropContainerRepInfo                                  ContainerRepInfo;                                        //  Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
        bool                                                         bIsBeingSimulatedByLaunch;                               //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0xAF];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          JustDropContext;                                         //  ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1::AM1Player*                                               PlayerWhoPickedUp;                                       //  Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          SymbolFxAsset;                                           //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0004[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          IndicatorFxAsset;                                        //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0005[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          GainFxAsset;                                             //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0006[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          OnGroundFx;                                              //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0007[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::TSoftObjectPtr<Niagara::UNiagaraSystem>          OnAirFx;                                                 //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0008[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        bool                                                         bUseFixedLocationForFxs;                                 //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0009[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSet<BasicTypes::TWeakObjectPtr<Engine::AActor>> CurrentOverlappingActors;                                //  Transient, UObjectWrapper, NativeAccessSpecifierPrivate
        bool                                                         bBeingPickedLocally;                                     //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bTriedSetToObtained;                                     //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0010[0x1E];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Niagara::UNiagaraComponent*                                  OnGroundFxComponent;                                     //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Niagara::UNiagaraComponent*                                  InAirFxComponent;                                        //  ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::UBoxComponent*                                       BoxCollisionComponent;                                   //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        float                                                        LaunchForceScale;                                        //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bAlwaysGrounded;                                         //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0011[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        PickupDuration;                                          //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            PickupAbilityRowName;                                    //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0012[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UStaticMeshComponent*                                MeshComponent;                                           //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::UCapsuleComponent*                                   CollisionComponent;                                      //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1InteractionInvokerComponent*                          InteractionInvokerComponent;                             //  Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        M1::UM1AkAudioData*                                          AkAudioData;                                             //  Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        int32_t                                                      CurrentHitOnGroundCount;                                 //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bObtained;                                               //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bObtainedAndDestroyRequired;                             //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0013[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        ElapsedTimeInAir;                                        //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0014[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Niagara::UNiagaraComponent*>              SpawnedEffects;                                          //  ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0015[0x14];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        HideInSecondsAfterObtained;                              //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bIsInPool;                                               //  Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0016[0xB];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bShouldShowMarker;                                       //  Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0017[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TSoftObjectPtr<Engine::UTexture2D>               MarkerAsset;                                             //  ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0018[0xC];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        bool                                                         bLockInViewportToMarker;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0019[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         MarkerLocation;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bAlwaysVisibleInAnyDistance;                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0020[0x1F];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnRep_ObtainedAndDestroyRequired();
        void OnRep_Obtained();
        void OnRep_IsInPool();
        void OnRep_DropContainerRepInfo();
        void OnHitComponent(Engine::UPrimitiveComponent* HitComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit);
        void OnEndOverlap(Engine::UPrimitiveComponent* OverlappedComp, Engine::AActor* Other, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
        void OnEndInteractionCancel(CoreUObject::UObject* InInteractionAccepter);
        void OnEndInteraction(CoreUObject::UObject* InInteractionAccepter);
        void OnBeginOverlap(Engine::UPrimitiveComponent* OverlappedComp, Engine::AActor* Other, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const Engine::FHitResult& SweepResult);
        void OnBeginInteraction(CoreUObject::UObject* InInteractionAccepter);
        void NetMulticastPlayGainEffect(M1::AM1PlayerController* Obtainer);
        void NetMulticastPickedUp();
        void NetMulticastLaunchSimple(const M1::FM1DropContainerLaunchParam& InParam);
        void NetMulticastJustDrop(const CoreUObject::FVector& InLocation, const CoreUObject::FRotator& InRotation);
        bool IsObtained();
        bool IsDropCompleted();
        float GetPickupDuration();
        Niagara::UNiagaraComponent* GetOnGroundFxComponent();
        Niagara::UNiagaraComponent* GetOnAirFxComponent();
        Engine::UMeshComponent* GetMeshComponent();
        void EnableReObtain(const BasicTypes::FString& InContext);
        bool CanInteractNow();
        void BP_SimulationEnabled();
        bool BP_ShouldDestroyWhenObtained();
        bool BP_ShouldBeginInteractionWithHoldBegin();
        bool BP_RequireUserInputInteraction();
        void BP_OnSetWhoDroppedThis(Engine::AActor* InActor);
        void BP_OnContainerPickedup();
        void BP_OnContainerObtained(bool bIsObtained);
        void BP_JustDropPickUp(const CoreUObject::FTransform& InTransform, const BasicTypes::FString& InContext);
        bool BP_IsPickableContainer();
        void BP_ClientOnGround(float InDeltaTime);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/M1.M1DropContainer");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
