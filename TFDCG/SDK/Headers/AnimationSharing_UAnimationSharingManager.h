#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USkeleton; };
namespace CG::AnimationSharing { class UAnimSharingInstance; };
namespace CG::Engine { class AActor; };
namespace CG::AnimationSharing { class UAnimationSharingManager; };
namespace CG::AnimationSharing { class UAnimationSharingSetup; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AnimationSharing
{
    /**
     * Class /Script/AnimationSharing.AnimationSharingManager
     * Size -> 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
     */
    class UAnimationSharingManager : public CoreUObject::UObject
    {
    public:
        BasicTypes::TArray<Engine::USkeleton*>                       Skeletons;                                               //  ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        BasicTypes::TArray<AnimationSharing::UAnimSharingInstance*>  PerSkeletonData;                                         //  Edit, ZeroConstructor, Transient, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x48];                                  //  MISSED OFFSET (PADDING)

    public:
        void RegisterActorWithSkeletonBP(Engine::AActor* InActor, Engine::USkeleton* SharingSkeleton);
        AnimationSharing::UAnimationSharingManager* STATIC_GetAnimationSharingManager(CoreUObject::UObject* WorldContextObject);
        bool STATIC_CreateAnimationSharingManager(CoreUObject::UObject* WorldContextObject, AnimationSharing::UAnimationSharingSetup* Setup);
        bool STATIC_AnimationSharingEnabled();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AnimationSharing.AnimationSharingManager");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
