#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "M1Data_ENUMS.h"
#include "M1Data_FM1MonsterAIDataLink.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "M1Data_FM1MonsterUIData.h"
#include "M1Data_FM1CharacterData.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Data
{
    /**
     * ScriptStruct /Script/M1Data.M1MonsterData
     * Size -> 0x00A8 (FullSize[0x0180] - InheritedSize[0x00D8])
     */
    struct FM1MonsterData : public M1Data::FM1CharacterData
    {
    public:
        M1Data::EM1MonsterCategory                                   MonsterCategory;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1LegionCategory                                    LegionCategory;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        M1Data::FM1MonsterAIDataLink                                 AI;                                                      //  Edit, NativeAccessSpecifierPublic
        BasicTypes::FString                                          ActionGroupId;                                           //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          PartsGroupId;                                            //  Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UseControllerRotationYaw;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         DisableInstantDropItem;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        AttackAccuracyRate;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int64_t                                                      SpawnMonsterId;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FName>                        Tags;                                                    //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        M1Data::FM1MonsterUIData                                     UIData;                                                  //  Edit, NativeAccessSpecifierPublic
        bool                                                         ShowMapIcon;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        GrantEliteWeight;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        M1Data::EM1MonsterSpecialty                                  Specialty;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
