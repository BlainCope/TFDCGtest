#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_FSoftObjectPath.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.PluginBlueprintLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UPluginBlueprintLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        bool STATIC_IsPluginMounted(const BasicTypes::FString& PluginName);
        bool STATIC_GetPluginVersionName(const BasicTypes::FString& PluginName, BasicTypes::FString* OutVersionName);
        bool STATIC_GetPluginVersion(const BasicTypes::FString& PluginName, int32_t* OutVersion);
        bool STATIC_GetPluginNameForObjectPath(const CoreUObject::FSoftObjectPath& ObjectPath, BasicTypes::FString* OutPluginName);
        bool STATIC_GetPluginMountedAssetPath(const BasicTypes::FString& PluginName, BasicTypes::FString* OutAssetPath);
        bool STATIC_GetPluginEditorCustomVirtualPath(const BasicTypes::FString& PluginName, BasicTypes::FString* OutVirtualPath);
        bool STATIC_GetPluginDescriptorFilePath(const BasicTypes::FString& PluginName, BasicTypes::FString* OutFilePath);
        bool STATIC_GetPluginDescription(const BasicTypes::FString& PluginName, BasicTypes::FString* OutDescription);
        bool STATIC_GetPluginContentDir(const BasicTypes::FString& PluginName, BasicTypes::FString* OutContentDir);
        bool STATIC_GetPluginBaseDir(const BasicTypes::FString& PluginName, BasicTypes::FString* OutBaseDir);
        BasicTypes::TArray<BasicTypes::FString> STATIC_GetEnabledPluginNames();
        BasicTypes::TArray<BasicTypes::FString> STATIC_GetAdditionalProjectPluginSearchPaths();
        BasicTypes::TArray<BasicTypes::FString> STATIC_GetAdditionalPluginSearchPaths();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.PluginBlueprintLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
