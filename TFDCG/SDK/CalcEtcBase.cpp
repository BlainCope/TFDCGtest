/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/CalcEtcBase_PARAMS.h"
#include "Headers/CalcEtcBase_UCalcEtcBase_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::CalcEtcBase
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.ApplySkillATK
     *         Flags  -> (Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
     * Parameters:
     *         M1::FM1AbilityOpCalcParam                          Param                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
     *         M1::FM1CalcDamageInfo                              DamageInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
     *         M1Data::EM1ElementalDamageChannel                  ElementalChannel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         M1Data::EM1SkillArcheType                          ArcheType                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         M1Data::FM1ScaledInteger                           AddPower                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
     *         M1Data::FM1ScaledInteger                           AddAttack                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
     *         bool                                               IsHittingPC                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UCalcEtcBase_C::ApplySkillATK(M1::FM1AbilityOpCalcParam* Param, M1::FM1CalcDamageInfo* DamageInfo, M1Data::EM1ElementalDamageChannel ElementalChannel, M1Data::EM1SkillArcheType ArcheType, const M1Data::FM1ScaledInteger& AddPower, const M1Data::FM1ScaledInteger& AddAttack, bool IsHittingPC)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.ApplySkillATK");
        
        UCalcEtcBase_C_ApplySkillATK_Params params {};
        params.ElementalChannel = ElementalChannel;
        params.ArcheType = ArcheType;
        params.AddPower = AddPower;
        params.AddAttack = AddAttack;
        params.IsHittingPC = IsHittingPC;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Param != nullptr)
            *Param = params.Param;
        if (DamageInfo != nullptr)
            *DamageInfo = params.DamageInfo;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.ApplySkillCost
     *         Flags  -> (Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
     * Parameters:
     *         M1::FM1AbilityOpCalcParam                          Param                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
     *         M1::FM1CalcDamageInfo                              DamageInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
     *         bool                                               IsRatio                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         double                                             Value                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         M1Data::EM1StatType                                MaxStat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               bIgnoreCoefficient                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UCalcEtcBase_C::ApplySkillCost(M1::FM1AbilityOpCalcParam* Param, M1::FM1CalcDamageInfo* DamageInfo, bool IsRatio, double Value, M1Data::EM1StatType MaxStat, bool bIgnoreCoefficient)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.ApplySkillCost");
        
        UCalcEtcBase_C_ApplySkillCost_Params params {};
        params.IsRatio = IsRatio;
        params.Value = Value;
        params.MaxStat = MaxStat;
        params.bIgnoreCoefficient = bIgnoreCoefficient;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Param != nullptr)
            *Param = params.Param;
        if (DamageInfo != nullptr)
            *DamageInfo = params.DamageInfo;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.DoCalculation
     *         Flags  -> (Protected, HasOutParms, BlueprintCallable, BlueprintEvent, Const)
     * Parameters:
     *         M1::FM1AbilityOpCalcParam                          Param                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
     *         M1::FM1CalcDamageInfo                              DamageInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
     *         M1::FM1AbilityOpExecCalcOutput                     Output                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
     *         void                                               ReturnValue
     */
    void UCalcEtcBase_C::DoCalculation(M1::FM1AbilityOpCalcParam* Param, M1::FM1CalcDamageInfo* DamageInfo, M1::FM1AbilityOpExecCalcOutput* Output)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.DoCalculation");
        
        UCalcEtcBase_C_DoCalculation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Param != nullptr)
            *Param = params.Param;
        if (DamageInfo != nullptr)
            *DamageInfo = params.DamageInfo;
        if (Output != nullptr)
            *Output = params.Output;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.Execute
     *         Flags  -> (Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
     * Parameters:
     *         M1::FM1AbilityOpCalcParam                          Param                                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
     *         M1::FM1AbilityOpExecCalcOutput                     Output                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
     *         void                                               ReturnValue
     */
    void UCalcEtcBase_C::Execute(const M1::FM1AbilityOpCalcParam& Param, M1::FM1AbilityOpExecCalcOutput* Output)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/Gameplay/Common/Calculation/Special/CalcEtcBase.CalcEtcBase_C.Execute");
        
        UCalcEtcBase_C_Execute_Params params {};
        params.Param = Param;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Output != nullptr)
            *Output = params.Output;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
