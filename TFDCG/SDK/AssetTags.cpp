/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AssetTags_ENUMS.h"
#include "Headers/AssetTags_PARAMS.h"
#include "Headers/AssetTags_UAssetTagsSubsystem.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AssetTags
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x0295E9A0
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.K2_GetCollectionsContainingAsset
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       AssetPath                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UAssetTagsSubsystem::K2_GetCollectionsContainingAsset(const CoreUObject::FSoftObjectPath& AssetPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.K2_GetCollectionsContainingAsset");
        
        UAssetTagsSubsystem_K2_GetCollectionsContainingAsset_Params params {};
        params.AssetPath = AssetPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0295E350
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.GetCollectionsContainingAssetPtr
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              AssetPtr                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UAssetTagsSubsystem::GetCollectionsContainingAssetPtr(CoreUObject::UObject* AssetPtr)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.GetCollectionsContainingAssetPtr");
        
        UAssetTagsSubsystem_GetCollectionsContainingAssetPtr_Params params {};
        params.AssetPtr = AssetPtr;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0295E500
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.GetCollectionsContainingAssetData
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FAssetData                            AssetData                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UAssetTagsSubsystem::GetCollectionsContainingAssetData(const CoreUObject::FAssetData& AssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.GetCollectionsContainingAssetData");
        
        UAssetTagsSubsystem_GetCollectionsContainingAssetData_Params params {};
        params.AssetData = AssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0295E810
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.GetCollectionsContainingAsset
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  AssetPathName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UAssetTagsSubsystem::GetCollectionsContainingAsset(const BasicTypes::FName& AssetPathName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.GetCollectionsContainingAsset");
        
        UAssetTagsSubsystem_GetCollectionsContainingAsset_Params params {};
        params.AssetPathName = AssetPathName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0295EBF0
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.GetCollections
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UAssetTagsSubsystem::GetCollections()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.GetCollections");
        
        UAssetTagsSubsystem_GetCollections_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0295EAF0
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.GetAssetsInCollection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  Name                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FAssetData> UAssetTagsSubsystem::GetAssetsInCollection(const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.GetAssetsInCollection");
        
        UAssetTagsSubsystem_GetAssetsInCollection_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0295ED20
     *         Name   -> Function /Script/AssetTags.AssetTagsSubsystem.CollectionExists
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  Name                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAssetTagsSubsystem::CollectionExists(const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetTags.AssetTagsSubsystem.CollectionExists");
        
        UAssetTagsSubsystem_CollectionExists_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
