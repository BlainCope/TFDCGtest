/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/SequencerScripting_ENUMS.h"
#include "Headers/SequencerScripting_PARAMS.h"
#include "Headers/SequencerScripting_UMovieSceneEventTrackExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneFolderExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneMaterialTrackExtensions.h"
#include "Headers/SequencerScripting_UMovieScenePrimitiveMaterialTrackExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingByteChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingDoubleKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingDoubleChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingEventKey.h"
#include "Headers/SequencerScripting_UMovieScenePropertyTrackExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneSectionExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneSequenceExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneTrackExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingActorReferenceKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingEventChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingActorReferenceChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingBoolKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingBoolChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingByteKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingFloatKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingActualFloatKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingDoubleAsFloatKey.h"
#include "Headers/SequencerScripting_UMovieSceneFloatVectorTrackExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingFloatChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingIntegerKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingIntegerChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingObjectPathKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingObjectPathChannel.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingStringKey.h"
#include "Headers/SequencerScripting_UMovieSceneScriptingStringChannel.h"
#include "Headers/SequencerScripting_UMovieSceneBindingExtensions.h"
#include "Headers/SequencerScripting_UMovieSceneDoubleVectorTrackExtensions.h"
#include "Headers/SequencerScripting_USequencerScriptingRangeExtensions.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SequencerScripting
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x014C3870
     *         Name   -> Function /Script/SequencerScripting.MovieSceneEventTrackExtensions.GetBoundObjectPropertyClass
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::FMovieSceneEvent                 EventKey                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UMovieSceneEventTrackExtensions::STATIC_GetBoundObjectPropertyClass(const MovieSceneTracks::FMovieSceneEvent& EventKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneEventTrackExtensions.GetBoundObjectPropertyClass");
        
        UMovieSceneEventTrackExtensions_GetBoundObjectPropertyClass_Params params {};
        params.EventKey = EventKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C3980
     *         Name   -> Function /Script/SequencerScripting.MovieSceneEventTrackExtensions.AddEventTriggerSection
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneEventTrack*           InTrack                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::UMovieSceneEventTriggerSection*  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::UMovieSceneEventTriggerSection* UMovieSceneEventTrackExtensions::STATIC_AddEventTriggerSection(MovieSceneTracks::UMovieSceneEventTrack* InTrack)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneEventTrackExtensions.AddEventTriggerSection");
        
        UMovieSceneEventTrackExtensions_AddEventTriggerSection_Params params {};
        params.InTrack = InTrack;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C3AB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneEventTrackExtensions.AddEventRepeaterSection
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneEventTrack*           InTrack                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::UMovieSceneEventRepeaterSection* ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::UMovieSceneEventRepeaterSection* UMovieSceneEventTrackExtensions::STATIC_AddEventRepeaterSection(MovieSceneTracks::UMovieSceneEventTrack* InTrack)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneEventTrackExtensions.AddEventRepeaterSection");
        
        UMovieSceneEventTrackExtensions_AddEventRepeaterSection_Params params {};
        params.InTrack = InTrack;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C54B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.SetFolderName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InFolderName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_SetFolderName(MovieScene::UMovieSceneFolder* Folder, const BasicTypes::FName& InFolderName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.SetFolderName");
        
        UMovieSceneFolderExtensions_SetFolderName_Params params {};
        params.Folder = Folder;
        params.InFolderName = InFolderName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C5220
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.SetFolderColor
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FColor                                InFolderColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_SetFolderColor(MovieScene::UMovieSceneFolder* Folder, const CoreUObject::FColor& InFolderColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.SetFolderColor");
        
        UMovieSceneFolderExtensions_SetFolderColor_Params params {};
        params.Folder = Folder;
        params.InFolderColor = InFolderColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4490
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      InTrack                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_RemoveChildTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildTrack");
        
        UMovieSceneFolderExtensions_RemoveChildTrack_Params params {};
        params.Folder = Folder;
        params.InTrack = InTrack;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C3E20
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildObjectBinding
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                InObjectBinding                                            (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_RemoveChildObjectBinding(MovieScene::UMovieSceneFolder* Folder, const MovieScene::FMovieSceneBindingProxy& InObjectBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildObjectBinding");
        
        UMovieSceneFolderExtensions_RemoveChildObjectBinding_Params params {};
        params.Folder = Folder;
        params.InObjectBinding = InObjectBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4490
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildMasterTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      InTrack                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_RemoveChildMasterTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildMasterTrack");
        
        UMovieSceneFolderExtensions_RemoveChildMasterTrack_Params params {};
        params.Folder = Folder;
        params.InTrack = InTrack;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4C10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildFolder
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     TargetFolder                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneFolder*                     FolderToRemove                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_RemoveChildFolder(MovieScene::UMovieSceneFolder* TargetFolder, MovieScene::UMovieSceneFolder* FolderToRemove)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.RemoveChildFolder");
        
        UMovieSceneFolderExtensions_RemoveChildFolder_Params params {};
        params.TargetFolder = TargetFolder;
        params.FolderToRemove = FolderToRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C5670
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetFolderName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UMovieSceneFolderExtensions::STATIC_GetFolderName(MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetFolderName");
        
        UMovieSceneFolderExtensions_GetFolderName_Params params {};
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C53C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetFolderColor
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FColor                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FColor UMovieSceneFolderExtensions::STATIC_GetFolderColor(MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetFolderColor");
        
        UMovieSceneFolderExtensions_GetFolderColor_Params params {};
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4A90
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildTracks
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneFolderExtensions::STATIC_GetChildTracks(MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildTracks");
        
        UMovieSceneFolderExtensions_GetChildTracks_Params params {};
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4220
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildObjectBindings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> UMovieSceneFolderExtensions::STATIC_GetChildObjectBindings(MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildObjectBindings");
        
        UMovieSceneFolderExtensions_GetChildObjectBindings_Params params {};
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4910
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildMasterTracks
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneFolderExtensions::STATIC_GetChildMasterTracks(MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildMasterTracks");
        
        UMovieSceneFolderExtensions_GetChildMasterTracks_Params params {};
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C5090
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildFolders
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneFolder*> ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneFolder*> UMovieSceneFolderExtensions::STATIC_GetChildFolders(MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.GetChildFolders");
        
        UMovieSceneFolderExtensions_GetChildFolders_Params params {};
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4720
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      InTrack                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_AddChildTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildTrack");
        
        UMovieSceneFolderExtensions_AddChildTrack_Params params {};
        params.Folder = Folder;
        params.InTrack = InTrack;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4020
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildObjectBinding
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                InObjectBinding                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_AddChildObjectBinding(MovieScene::UMovieSceneFolder* Folder, const MovieScene::FMovieSceneBindingProxy& InObjectBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildObjectBinding");
        
        UMovieSceneFolderExtensions_AddChildObjectBinding_Params params {};
        params.Folder = Folder;
        params.InObjectBinding = InObjectBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4720
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildMasterTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      InTrack                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_AddChildMasterTrack(MovieScene::UMovieSceneFolder* Folder, MovieScene::UMovieSceneTrack* InTrack)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildMasterTrack");
        
        UMovieSceneFolderExtensions_AddChildMasterTrack_Params params {};
        params.Folder = Folder;
        params.InTrack = InTrack;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C4EA0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildFolder
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneFolder*                     TargetFolder                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneFolder*                     FolderToAdd                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneFolderExtensions::STATIC_AddChildFolder(MovieScene::UMovieSceneFolder* TargetFolder, MovieScene::UMovieSceneFolder* FolderToAdd)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFolderExtensions.AddChildFolder");
        
        UMovieSceneFolderExtensions_AddChildFolder_Params params {};
        params.TargetFolder = TargetFolder;
        params.FolderToAdd = FolderToAdd;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C5DD0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneMaterialTrackExtensions.SetMaterialIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneComponentMaterialTrack* Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MaterialIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneMaterialTrackExtensions::STATIC_SetMaterialIndex(MovieSceneTracks::UMovieSceneComponentMaterialTrack* Track, int32_t MaterialIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneMaterialTrackExtensions.SetMaterialIndex");
        
        UMovieSceneMaterialTrackExtensions_SetMaterialIndex_Params params {};
        params.Track = Track;
        params.MaterialIndex = MaterialIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C5CC0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneMaterialTrackExtensions.GetMaterialIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneComponentMaterialTrack* Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneMaterialTrackExtensions::STATIC_GetMaterialIndex(MovieSceneTracks::UMovieSceneComponentMaterialTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneMaterialTrackExtensions.GetMaterialIndex");
        
        UMovieSceneMaterialTrackExtensions_GetMaterialIndex_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C61F0
     *         Name   -> Function /Script/SequencerScripting.MovieScenePrimitiveMaterialTrackExtensions.SetMaterialIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieScenePrimitiveMaterialTrack* Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            MaterialIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieScenePrimitiveMaterialTrackExtensions::STATIC_SetMaterialIndex(MovieSceneTracks::UMovieScenePrimitiveMaterialTrack* Track, int32_t MaterialIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePrimitiveMaterialTrackExtensions.SetMaterialIndex");
        
        UMovieScenePrimitiveMaterialTrackExtensions_SetMaterialIndex_Params params {};
        params.Track = Track;
        params.MaterialIndex = MaterialIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C60E0
     *         Name   -> Function /Script/SequencerScripting.MovieScenePrimitiveMaterialTrackExtensions.GetMaterialIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieScenePrimitiveMaterialTrack* Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieScenePrimitiveMaterialTrackExtensions::STATIC_GetMaterialIndex(MovieSceneTracks::UMovieScenePrimitiveMaterialTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePrimitiveMaterialTrackExtensions.GetMaterialIndex");
        
        UMovieScenePrimitiveMaterialTrackExtensions_GetMaterialIndex_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B1F50
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         uint8_t                                            InDefaultValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingByteChannel::SetDefault(uint8_t InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.SetDefault");
        
        UMovieSceneScriptingByteChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingByteChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.RemoveKey");
        
        UMovieSceneScriptingByteChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0E00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingByteChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.RemoveDefault");
        
        UMovieSceneScriptingByteChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0D40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingByteChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.HasDefault");
        
        UMovieSceneScriptingByteChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingByteChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.GetKeys");
        
        UMovieSceneScriptingByteChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0EA0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UMovieSceneScriptingByteChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.GetDefault");
        
        UMovieSceneScriptingByteChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B20B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EMovieSceneKeyInterpolation            InInterpolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingByteKey*   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingByteKey* UMovieSceneScriptingByteChannel::AddKey(const CoreUObject::FFrameNumber& InTime, uint8_t NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit, MovieScene::EMovieSceneKeyInterpolation InInterpolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteChannel.AddKey");
        
        UMovieSceneScriptingByteChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        params.InInterpolation = InInterpolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B39B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         double                                             InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetValue(double InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetValue");
        
        UMovieSceneScriptingDoubleKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetTime");
        
        UMovieSceneScriptingDoubleKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3170
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetTangentWeightMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveTangentWeightMode                InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetTangentWeightMode(Engine::ERichCurveTangentWeightMode InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetTangentWeightMode");
        
        UMovieSceneScriptingDoubleKey_SetTangentWeightMode_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3670
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetTangentMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveTangentMode                      InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetTangentMode(Engine::ERichCurveTangentMode InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetTangentMode");
        
        UMovieSceneScriptingDoubleKey_SetTangentMode_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B2E10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetLeaveTangentWeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetLeaveTangentWeight(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetLeaveTangentWeight");
        
        UMovieSceneScriptingDoubleKey_SetLeaveTangentWeight_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3310
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetLeaveTangent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetLeaveTangent(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetLeaveTangent");
        
        UMovieSceneScriptingDoubleKey_SetLeaveTangent_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3810
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetInterpolationMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveInterpMode                       InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetInterpolationMode(Engine::ERichCurveInterpMode InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetInterpolationMode");
        
        UMovieSceneScriptingDoubleKey_SetInterpolationMode_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B2FC0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetArriveTangentWeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetArriveTangentWeight(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetArriveTangentWeight");
        
        UMovieSceneScriptingDoubleKey_SetArriveTangentWeight_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B34C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetArriveTangent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleKey::SetArriveTangent(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.SetArriveTangent");
        
        UMovieSceneScriptingDoubleKey_SetArriveTangent_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3B00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         double                                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    double UMovieSceneScriptingDoubleKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetValue");
        
        UMovieSceneScriptingDoubleKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingDoubleKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetTime");
        
        UMovieSceneScriptingDoubleKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B32B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetTangentWeightMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveTangentWeightMode                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveTangentWeightMode UMovieSceneScriptingDoubleKey::GetTangentWeightMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetTangentWeightMode");
        
        UMovieSceneScriptingDoubleKey_GetTangentWeightMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B37B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetTangentMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveTangentMode                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveTangentMode UMovieSceneScriptingDoubleKey::GetTangentMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetTangentMode");
        
        UMovieSceneScriptingDoubleKey_GetTangentMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B2F60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetLeaveTangentWeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingDoubleKey::GetLeaveTangentWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetLeaveTangentWeight");
        
        UMovieSceneScriptingDoubleKey_GetLeaveTangentWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3460
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetLeaveTangent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingDoubleKey::GetLeaveTangent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetLeaveTangent");
        
        UMovieSceneScriptingDoubleKey_GetLeaveTangent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3950
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetInterpolationMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveInterpMode                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveInterpMode UMovieSceneScriptingDoubleKey::GetInterpolationMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetInterpolationMode");
        
        UMovieSceneScriptingDoubleKey_GetInterpolationMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3110
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetArriveTangentWeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingDoubleKey::GetArriveTangentWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetArriveTangentWeight");
        
        UMovieSceneScriptingDoubleKey_GetArriveTangentWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B3610
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetArriveTangent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingDoubleKey::GetArriveTangent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleKey.GetArriveTangent");
        
        UMovieSceneScriptingDoubleKey_GetArriveTangent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B44F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.SetPreInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    InExtrapolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleChannel::SetPreInfinityExtrapolation(Engine::ERichCurveExtrapolation InExtrapolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.SetPreInfinityExtrapolation");
        
        UMovieSceneScriptingDoubleChannel_SetPreInfinityExtrapolation_Params params {};
        params.InExtrapolation = InExtrapolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4390
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.SetPostInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    InExtrapolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleChannel::SetPostInfinityExtrapolation(Engine::ERichCurveExtrapolation InExtrapolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.SetPostInfinityExtrapolation");
        
        UMovieSceneScriptingDoubleChannel_SetPostInfinityExtrapolation_Params params {};
        params.InExtrapolation = InExtrapolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4220
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         double                                             InDefaultValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleChannel::SetDefault(double InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.SetDefault");
        
        UMovieSceneScriptingDoubleChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.RemoveKey");
        
        UMovieSceneScriptingDoubleChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B40F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingDoubleChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.RemoveDefault");
        
        UMovieSceneScriptingDoubleChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4070
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingDoubleChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.HasDefault");
        
        UMovieSceneScriptingDoubleChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4600
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetPreInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveExtrapolation UMovieSceneScriptingDoubleChannel::GetPreInfinityExtrapolation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetPreInfinityExtrapolation");
        
        UMovieSceneScriptingDoubleChannel_GetPreInfinityExtrapolation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B44A0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetPostInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveExtrapolation UMovieSceneScriptingDoubleChannel::GetPostInfinityExtrapolation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetPostInfinityExtrapolation");
        
        UMovieSceneScriptingDoubleChannel_GetPostInfinityExtrapolation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B48D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetNumKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneScriptingDoubleChannel::GetNumKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetNumKeys");
        
        UMovieSceneScriptingDoubleChannel_GetNumKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingDoubleChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetKeys");
        
        UMovieSceneScriptingDoubleChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4190
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         double                                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    double UMovieSceneScriptingDoubleChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.GetDefault");
        
        UMovieSceneScriptingDoubleChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4690
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.EvaluateKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            FrameRate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<double>                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<double> UMovieSceneScriptingDoubleChannel::EvaluateKeys(const SequencerScripting::FSequencerScriptingRange& Range, const CoreUObject::FFrameRate& FrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.EvaluateKeys");
        
        UMovieSceneScriptingDoubleChannel_EvaluateKeys_Params params {};
        params.Range = Range;
        params.FrameRate = FrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4650
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.ComputeEffectiveRange
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    SequencerScripting::FSequencerScriptingRange UMovieSceneScriptingDoubleChannel::ComputeEffectiveRange()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.ComputeEffectiveRange");
        
        UMovieSceneScriptingDoubleChannel_ComputeEffectiveRange_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B4930
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         double                                             NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EMovieSceneKeyInterpolation            InInterpolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingDoubleKey* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingDoubleKey* UMovieSceneScriptingDoubleChannel::AddKey(const CoreUObject::FFrameNumber& InTime, double NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit, MovieScene::EMovieSceneKeyInterpolation InInterpolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingDoubleChannel.AddKey");
        
        UMovieSceneScriptingDoubleChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        params.InInterpolation = InInterpolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B53D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventKey.SetValue
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::FMovieSceneEvent                 InNewValue                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingEventKey::SetValue(const MovieSceneTracks::FMovieSceneEvent& InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventKey.SetValue");
        
        UMovieSceneScriptingEventKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingEventKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventKey.SetTime");
        
        UMovieSceneScriptingEventKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B5560
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieSceneTracks::FMovieSceneEvent                 ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::FMovieSceneEvent UMovieSceneScriptingEventKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventKey.GetValue");
        
        UMovieSceneScriptingEventKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingEventKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventKey.GetTime");
        
        UMovieSceneScriptingEventKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C6DE0
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.SetPropertyNameAndPath
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieScenePropertyTrack*        Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InPropertyName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InPropertyPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieScenePropertyTrackExtensions::STATIC_SetPropertyNameAndPath(MovieSceneTracks::UMovieScenePropertyTrack* Track, const BasicTypes::FName& InPropertyName, const BasicTypes::FString& InPropertyPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.SetPropertyNameAndPath");
        
        UMovieScenePropertyTrackExtensions_SetPropertyNameAndPath_Params params {};
        params.Track = Track;
        params.InPropertyName = InPropertyName;
        params.InPropertyPath = InPropertyPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C68C0
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.SetObjectPropertyClass
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneObjectPropertyTrack*  Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              PropertyClass                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieScenePropertyTrackExtensions::STATIC_SetObjectPropertyClass(MovieSceneTracks::UMovieSceneObjectPropertyTrack* Track, CoreUObject::UObject* PropertyClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.SetObjectPropertyClass");
        
        UMovieScenePropertyTrackExtensions_SetObjectPropertyClass_Params params {};
        params.Track = Track;
        params.PropertyClass = PropertyClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C6610
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.SetByteTrackEnum
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneByteTrack*            Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UEnum*                                InEnum                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieScenePropertyTrackExtensions::STATIC_SetByteTrackEnum(MovieSceneTracks::UMovieSceneByteTrack* Track, CoreUObject::UEnum* InEnum)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.SetByteTrackEnum");
        
        UMovieScenePropertyTrackExtensions_SetByteTrackEnum_Params params {};
        params.Track = Track;
        params.InEnum = InEnum;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C6A60
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetUniqueTrackName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieScenePropertyTrack*        Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UMovieScenePropertyTrackExtensions::STATIC_GetUniqueTrackName(MovieSceneTracks::UMovieScenePropertyTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetUniqueTrackName");
        
        UMovieScenePropertyTrackExtensions_GetUniqueTrackName_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C6B60
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetPropertyPath
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieScenePropertyTrack*        Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieScenePropertyTrackExtensions::STATIC_GetPropertyPath(MovieSceneTracks::UMovieScenePropertyTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetPropertyPath");
        
        UMovieScenePropertyTrackExtensions_GetPropertyPath_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C6CD0
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetPropertyName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieScenePropertyTrack*        Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UMovieScenePropertyTrackExtensions::STATIC_GetPropertyName(MovieSceneTracks::UMovieScenePropertyTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetPropertyName");
        
        UMovieScenePropertyTrackExtensions_GetPropertyName_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C67B0
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetObjectPropertyClass
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneObjectPropertyTrack*  Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UMovieScenePropertyTrackExtensions::STATIC_GetObjectPropertyClass(MovieSceneTracks::UMovieSceneObjectPropertyTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetObjectPropertyClass");
        
        UMovieScenePropertyTrackExtensions_GetObjectPropertyClass_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C6500
     *         Name   -> Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetByteTrackEnum
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneByteTrack*            Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UEnum*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UEnum* UMovieScenePropertyTrackExtensions::STATIC_GetByteTrackEnum(MovieSceneTracks::UMovieSceneByteTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieScenePropertyTrackExtensions.GetByteTrackEnum");
        
        UMovieScenePropertyTrackExtensions_GetByteTrackEnum_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8A30
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetStartFrameSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetStartFrameSeconds(MovieScene::UMovieSceneSection* Section, float StartTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetStartFrameSeconds");
        
        UMovieSceneSectionExtensions_SetStartFrameSeconds_Params params {};
        params.Section = Section;
        params.StartTime = StartTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8860
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetStartFrameBounded
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsBounded                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetStartFrameBounded(MovieScene::UMovieSceneSection* Section, bool bIsBounded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetStartFrameBounded");
        
        UMovieSceneSectionExtensions_SetStartFrameBounded_Params params {};
        params.Section = Section;
        params.bIsBounded = bIsBounded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8C90
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetStartFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            StartFrame                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetStartFrame(MovieScene::UMovieSceneSection* Section, int32_t StartFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetStartFrame");
        
        UMovieSceneSectionExtensions_SetStartFrame_Params params {};
        params.Section = Section;
        params.StartFrame = StartFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8E70
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetRangeSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EndTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetRangeSeconds(MovieScene::UMovieSceneSection* Section, float StartTime, float EndTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetRangeSeconds");
        
        UMovieSceneSectionExtensions_SetRangeSeconds_Params params {};
        params.Section = Section;
        params.StartTime = StartTime;
        params.EndTime = EndTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9290
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetRange
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            StartFrame                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EndFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetRange(MovieScene::UMovieSceneSection* Section, int32_t StartFrame, int32_t EndFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetRange");
        
        UMovieSceneSectionExtensions_SetRange_Params params {};
        params.Section = Section;
        params.StartFrame = StartFrame;
        params.EndFrame = EndFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8420
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetEndFrameSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EndTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetEndFrameSeconds(MovieScene::UMovieSceneSection* Section, float EndTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetEndFrameSeconds");
        
        UMovieSceneSectionExtensions_SetEndFrameSeconds_Params params {};
        params.Section = Section;
        params.EndTime = EndTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8250
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetEndFrameBounded
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIsBounded                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetEndFrameBounded(MovieScene::UMovieSceneSection* Section, bool bIsBounded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetEndFrameBounded");
        
        UMovieSceneSectionExtensions_SetEndFrameBounded_Params params {};
        params.Section = Section;
        params.bIsBounded = bIsBounded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetEndFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EndFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSectionExtensions::STATIC_SetEndFrame(MovieScene::UMovieSceneSection* Section, int32_t EndFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.SetEndFrame");
        
        UMovieSceneSectionExtensions_SetEndFrame_Params params {};
        params.Section = Section;
        params.EndFrame = EndFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014CA6E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.HasStartFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSectionExtensions::STATIC_HasStartFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.HasStartFrame");
        
        UMovieSceneSectionExtensions_HasStartFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CA270
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.HasEndFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSectionExtensions::STATIC_HasEndFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.HasEndFrame");
        
        UMovieSceneSectionExtensions_HasEndFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CA380
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetStartFrameSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSectionExtensions::STATIC_GetStartFrameSeconds(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetStartFrameSeconds");
        
        UMovieSceneSectionExtensions_GetStartFrameSeconds_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CA560
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetStartFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSectionExtensions::STATIC_GetStartFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetStartFrame");
        
        UMovieSceneSectionExtensions_GetStartFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C73A0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetParentSequenceFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSubSection*                 Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InFrame                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSequence*                   ParentSequence                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSectionExtensions::STATIC_GetParentSequenceFrame(MovieScene::UMovieSceneSubSection* Section, int32_t InFrame, MovieScene::UMovieSceneSequence* ParentSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetParentSequenceFrame");
        
        UMovieSceneSectionExtensions_GetParentSequenceFrame_Params params {};
        params.Section = Section;
        params.InFrame = InFrame;
        params.ParentSequence = ParentSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9F10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetEndFrameSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSectionExtensions::STATIC_GetEndFrameSeconds(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetEndFrameSeconds");
        
        UMovieSceneSectionExtensions_GetEndFrameSeconds_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CA0F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetEndFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSectionExtensions::STATIC_GetEndFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetEndFrame");
        
        UMovieSceneSectionExtensions_GetEndFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C78E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetChannelsByType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingChannel*   ChannelType                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> UMovieSceneSectionExtensions::STATIC_GetChannelsByType(MovieScene::UMovieSceneSection* Section, SequencerScripting::UMovieSceneScriptingChannel* ChannelType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetChannelsByType");
        
        UMovieSceneSectionExtensions_GetChannelsByType_Params params {};
        params.Section = Section;
        params.ChannelType = ChannelType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C8020
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetChannels
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> UMovieSceneSectionExtensions::STATIC_GetChannels(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetChannels");
        
        UMovieSceneSectionExtensions_GetChannels_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9A40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeStartFrameSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSectionExtensions::STATIC_GetAutoSizeStartFrameSeconds(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeStartFrameSeconds");
        
        UMovieSceneSectionExtensions_GetAutoSizeStartFrameSeconds_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9C50
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeStartFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSectionExtensions::STATIC_GetAutoSizeStartFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeStartFrame");
        
        UMovieSceneSectionExtensions_GetAutoSizeStartFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9DE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeHasStartFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSectionExtensions::STATIC_GetAutoSizeHasStartFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeHasStartFrame");
        
        UMovieSceneSectionExtensions_GetAutoSizeHasStartFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9910
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeHasEndFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSectionExtensions::STATIC_GetAutoSizeHasEndFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeHasEndFrame");
        
        UMovieSceneSectionExtensions_GetAutoSizeHasEndFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9570
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeEndFrameSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSectionExtensions::STATIC_GetAutoSizeEndFrameSeconds(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeEndFrameSeconds");
        
        UMovieSceneSectionExtensions_GetAutoSizeEndFrameSeconds_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C9780
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeEndFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSectionExtensions::STATIC_GetAutoSizeEndFrame(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAutoSizeEndFrame");
        
        UMovieSceneSectionExtensions_GetAutoSizeEndFrame_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C7DF0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAllChannels
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> UMovieSceneSectionExtensions::STATIC_GetAllChannels(MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.GetAllChannels");
        
        UMovieSceneSectionExtensions_GetAllChannels_Params params {};
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C78E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSectionExtensions.FindChannelsByType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingChannel*   ChannelType                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingChannel*> UMovieSceneSectionExtensions::STATIC_FindChannelsByType(MovieScene::UMovieSceneSection* Section, SequencerScripting::UMovieSceneScriptingChannel* ChannelType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSectionExtensions.FindChannelsByType");
        
        UMovieSceneSectionExtensions_FindChannelsByType_Params params {};
        params.Section = Section;
        params.ChannelType = ChannelType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CF210
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SortMarkedFrames
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SortMarkedFrames(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SortMarkedFrames");
        
        UMovieSceneSequenceExtensions_SortMarkedFrames_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3220
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetWorkRangeStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTimeInSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetWorkRangeStart(MovieScene::UMovieSceneSequence* InSequence, float StartTimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetWorkRangeStart");
        
        UMovieSceneSequenceExtensions_SetWorkRangeStart_Params params {};
        params.InSequence = InSequence;
        params.StartTimeInSeconds = StartTimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2F70
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetWorkRangeEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EndTimeInSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetWorkRangeEnd(MovieScene::UMovieSceneSequence* InSequence, float EndTimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetWorkRangeEnd");
        
        UMovieSceneSequenceExtensions_SetWorkRangeEnd_Params params {};
        params.InSequence = InSequence;
        params.EndTimeInSeconds = EndTimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3780
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetViewRangeStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTimeInSeconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetViewRangeStart(MovieScene::UMovieSceneSequence* InSequence, float StartTimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetViewRangeStart");
        
        UMovieSceneSequenceExtensions_SetViewRangeStart_Params params {};
        params.InSequence = InSequence;
        params.StartTimeInSeconds = StartTimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D34D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetViewRangeEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EndTimeInSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetViewRangeEnd(MovieScene::UMovieSceneSequence* InSequence, float EndTimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetViewRangeEnd");
        
        UMovieSceneSequenceExtensions_SetViewRangeEnd_Params params {};
        params.InSequence = InSequence;
        params.EndTimeInSeconds = EndTimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5620
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetTickResolutionDirectly
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            TickResolution                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetTickResolutionDirectly(MovieScene::UMovieSceneSequence* Sequence, const CoreUObject::FFrameRate& TickResolution)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetTickResolutionDirectly");
        
        UMovieSceneSequenceExtensions_SetTickResolutionDirectly_Params params {};
        params.Sequence = Sequence;
        params.TickResolution = TickResolution;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D57D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetTickResolution
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            TickResolution                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetTickResolution(MovieScene::UMovieSceneSequence* Sequence, const CoreUObject::FFrameRate& TickResolution)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetTickResolution");
        
        UMovieSceneSequenceExtensions_SetTickResolution_Params params {};
        params.Sequence = Sequence;
        params.TickResolution = TickResolution;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014CE9D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetReadOnly
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bInReadOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetReadOnly(MovieScene::UMovieSceneSequence* Sequence, bool bInReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetReadOnly");
        
        UMovieSceneSequenceExtensions_SetReadOnly_Params params {};
        params.Sequence = Sequence;
        params.bInReadOnly = bInReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3F00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackStartSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetPlaybackStartSeconds(MovieScene::UMovieSceneSequence* Sequence, float StartTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackStartSeconds");
        
        UMovieSceneSequenceExtensions_SetPlaybackStartSeconds_Params params {};
        params.Sequence = Sequence;
        params.StartTime = StartTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D4220
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            StartFrame                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetPlaybackStart(MovieScene::UMovieSceneSequence* Sequence, int32_t StartFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackStart");
        
        UMovieSceneSequenceExtensions_SetPlaybackStart_Params params {};
        params.Sequence = Sequence;
        params.StartFrame = StartFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3920
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackEndSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EndTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetPlaybackEndSeconds(MovieScene::UMovieSceneSequence* Sequence, float EndTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackEndSeconds");
        
        UMovieSceneSequenceExtensions_SetPlaybackEndSeconds_Params params {};
        params.Sequence = Sequence;
        params.EndTime = EndTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3C40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EndFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetPlaybackEnd(MovieScene::UMovieSceneSequence* Sequence, int32_t EndFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetPlaybackEnd");
        
        UMovieSceneSequenceExtensions_SetPlaybackEnd_Params params {};
        params.Sequence = Sequence;
        params.EndFrame = EndFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014CF630
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetMarkedFrame
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InMarkIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InFrameNumber                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetMarkedFrame(MovieScene::UMovieSceneSequence* Sequence, int32_t InMarkIndex, const CoreUObject::FFrameNumber& InFrameNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetMarkedFrame");
        
        UMovieSceneSequenceExtensions_SetMarkedFrame_Params params {};
        params.Sequence = Sequence;
        params.InMarkIndex = InMarkIndex;
        params.InFrameNumber = InFrameNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2CA0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetEvaluationType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EMovieSceneEvaluationType              InEvaluationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetEvaluationType(MovieScene::UMovieSceneSequence* InSequence, MovieScene::EMovieSceneEvaluationType InEvaluationType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetEvaluationType");
        
        UMovieSceneSequenceExtensions_SetEvaluationType_Params params {};
        params.InSequence = InSequence;
        params.InEvaluationType = InEvaluationType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5AB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetDisplayRate
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            DisplayRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetDisplayRate(MovieScene::UMovieSceneSequence* Sequence, const CoreUObject::FFrameRate& DisplayRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetDisplayRate");
        
        UMovieSceneSequenceExtensions_SetDisplayRate_Params params {};
        params.Sequence = Sequence;
        params.DisplayRate = DisplayRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D29A0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetClockSource
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EUpdateClockSource                     InClockSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_SetClockSource(MovieScene::UMovieSceneSequence* InSequence, MovieScene::EUpdateClockSource InClockSource)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.SetClockSource");
        
        UMovieSceneSequenceExtensions_SetClockSource_Params params {};
        params.InSequence = InSequence;
        params.InClockSource = InClockSource;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D0240
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.ResolveBindingID
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   RootSequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             InObjectBindingID                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneSequenceExtensions::STATIC_ResolveBindingID(MovieScene::UMovieSceneSequence* RootSequence, const MovieScene::FMovieSceneObjectBindingID& InObjectBindingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.ResolveBindingID");
        
        UMovieSceneSequenceExtensions_ResolveBindingID_Params params {};
        params.RootSequence = RootSequence;
        params.InObjectBindingID = InObjectBindingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5D80
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.RemoveTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequenceExtensions::STATIC_RemoveTrack(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.RemoveTrack");
        
        UMovieSceneSequenceExtensions_RemoveTrack_Params params {};
        params.Sequence = Sequence;
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CFCB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.RemoveRootFolderFromSequence
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneFolder*                     Folder                                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_RemoveRootFolderFromSequence(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneFolder* Folder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.RemoveRootFolderFromSequence");
        
        UMovieSceneSequenceExtensions_RemoveRootFolderFromSequence_Params params {};
        params.Sequence = Sequence;
        params.Folder = Folder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5D80
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.RemoveMasterTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequenceExtensions::STATIC_RemoveMasterTrack(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.RemoveMasterTrack");
        
        UMovieSceneSequenceExtensions_RemoveMasterTrack_Params params {};
        params.Sequence = Sequence;
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D4F50
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.MakeRangeSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::FSequencerScriptingRange       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    SequencerScripting::FSequencerScriptingRange UMovieSceneSequenceExtensions::STATIC_MakeRangeSeconds(MovieScene::UMovieSceneSequence* Sequence, float StartTime, float Duration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.MakeRangeSeconds");
        
        UMovieSceneSequenceExtensions_MakeRangeSeconds_Params params {};
        params.Sequence = Sequence;
        params.StartTime = StartTime;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5360
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.MakeRange
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            StartFrame                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::FSequencerScriptingRange       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    SequencerScripting::FSequencerScriptingRange UMovieSceneSequenceExtensions::STATIC_MakeRange(MovieScene::UMovieSceneSequence* Sequence, int32_t StartFrame, int32_t Duration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.MakeRange");
        
        UMovieSceneSequenceExtensions_MakeRange_Params params {};
        params.Sequence = Sequence;
        params.StartFrame = StartFrame;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D0D10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.MakeBindingID
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EMovieSceneObjectBindingSpace          Space                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneSequenceExtensions::STATIC_MakeBindingID(MovieScene::UMovieSceneSequence* Sequence, const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::EMovieSceneObjectBindingSpace Space)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.MakeBindingID");
        
        UMovieSceneSequenceExtensions_MakeBindingID_Params params {};
        params.Sequence = Sequence;
        params.InBinding = InBinding;
        params.Space = Space;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D1370
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.LocateBoundObjects
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Context                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::UObject*>          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::UObject*> UMovieSceneSequenceExtensions::STATIC_LocateBoundObjects(MovieScene::UMovieSceneSequence* Sequence, const MovieScene::FMovieSceneBindingProxy& InBinding, CoreUObject::UObject* Context)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.LocateBoundObjects");
        
        UMovieSceneSequenceExtensions_LocateBoundObjects_Params params {};
        params.Sequence = Sequence;
        params.InBinding = InBinding;
        params.Context = Context;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CE8E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.IsReadOnly
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneSequenceExtensions::STATIC_IsReadOnly(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.IsReadOnly");
        
        UMovieSceneSequenceExtensions_IsReadOnly_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3110
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetWorkRangeStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequenceExtensions::STATIC_GetWorkRangeStart(MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetWorkRangeStart");
        
        UMovieSceneSequenceExtensions_GetWorkRangeStart_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2E60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetWorkRangeEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequenceExtensions::STATIC_GetWorkRangeEnd(MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetWorkRangeEnd");
        
        UMovieSceneSequenceExtensions_GetWorkRangeEnd_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D3670
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetViewRangeStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequenceExtensions::STATIC_GetViewRangeStart(MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetViewRangeStart");
        
        UMovieSceneSequenceExtensions_GetViewRangeStart_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D33C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetViewRangeEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequenceExtensions::STATIC_GetViewRangeEnd(MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetViewRangeEnd");
        
        UMovieSceneSequenceExtensions_GetViewRangeEnd_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D7260
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetTracks
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneSequenceExtensions::STATIC_GetTracks(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetTracks");
        
        UMovieSceneSequenceExtensions_GetTracks_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2770
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetTimecodeSource
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimecode                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTimecode UMovieSceneSequenceExtensions::STATIC_GetTimecodeSource(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetTimecodeSource");
        
        UMovieSceneSequenceExtensions_GetTimecodeSource_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5990
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetTickResolution
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameRate UMovieSceneSequenceExtensions::STATIC_GetTickResolution(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetTickResolution");
        
        UMovieSceneSequenceExtensions_GetTickResolution_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D1E90
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetSpawnables
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> UMovieSceneSequenceExtensions::STATIC_GetSpawnables(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetSpawnables");
        
        UMovieSceneSequenceExtensions_GetSpawnables_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D0130
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetRootFoldersInSequence
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneFolder*> ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneFolder*> UMovieSceneSequenceExtensions::STATIC_GetRootFoldersInSequence(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetRootFoldersInSequence");
        
        UMovieSceneSequenceExtensions_GetRootFoldersInSequence_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D1C40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPossessables
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> UMovieSceneSequenceExtensions::STATIC_GetPossessables(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPossessables");
        
        UMovieSceneSequenceExtensions_GetPossessables_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D0490
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPortableBindingID
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   RootSequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSequence*                   DestinationSequence                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneSequenceExtensions::STATIC_GetPortableBindingID(MovieScene::UMovieSceneSequence* RootSequence, MovieScene::UMovieSceneSequence* DestinationSequence, const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPortableBindingID");
        
        UMovieSceneSequenceExtensions_GetPortableBindingID_Params params {};
        params.RootSequence = RootSequence;
        params.DestinationSequence = DestinationSequence;
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D4940
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackStartSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequenceExtensions::STATIC_GetPlaybackStartSeconds(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackStartSeconds");
        
        UMovieSceneSequenceExtensions_GetPlaybackStartSeconds_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D4BA0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequenceExtensions::STATIC_GetPlaybackStart(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackStart");
        
        UMovieSceneSequenceExtensions_GetPlaybackStart_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D4DA0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackRange
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::FSequencerScriptingRange       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    SequencerScripting::FSequencerScriptingRange UMovieSceneSequenceExtensions::STATIC_GetPlaybackRange(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackRange");
        
        UMovieSceneSequenceExtensions_GetPlaybackRange_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D44E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackEndSeconds
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneSequenceExtensions::STATIC_GetPlaybackEndSeconds(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackEndSeconds");
        
        UMovieSceneSequenceExtensions_GetPlaybackEndSeconds_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D4740
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequenceExtensions::STATIC_GetPlaybackEnd(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetPlaybackEnd");
        
        UMovieSceneSequenceExtensions_GetPlaybackEnd_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D7460
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetMovieScene
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieScene*                           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieScene* UMovieSceneSequenceExtensions::STATIC_GetMovieScene(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetMovieScene");
        
        UMovieSceneSequenceExtensions_GetMovieScene_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D7050
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetMasterTracks
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneSequenceExtensions::STATIC_GetMasterTracks(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetMasterTracks");
        
        UMovieSceneSequenceExtensions_GetMasterTracks_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CFA70
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetMarkedFrames
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneMarkedFrame> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneMarkedFrame> UMovieSceneSequenceExtensions::STATIC_GetMarkedFrames(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetMarkedFrames");
        
        UMovieSceneSequenceExtensions_GetMarkedFrames_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2B80
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetEvaluationType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EMovieSceneEvaluationType              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::EMovieSceneEvaluationType UMovieSceneSequenceExtensions::STATIC_GetEvaluationType(MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetEvaluationType");
        
        UMovieSceneSequenceExtensions_GetEvaluationType_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5C60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetDisplayRate
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameRate UMovieSceneSequenceExtensions::STATIC_GetDisplayRate(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetDisplayRate");
        
        UMovieSceneSequenceExtensions_GetDisplayRate_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2880
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetClockSource
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EUpdateClockSource                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::EUpdateClockSource UMovieSceneSequenceExtensions::STATIC_GetClockSource(MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetClockSource");
        
        UMovieSceneSequenceExtensions_GetClockSource_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D20E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetBindings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> UMovieSceneSequenceExtensions::STATIC_GetBindings(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetBindings");
        
        UMovieSceneSequenceExtensions_GetBindings_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D0C00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetBindingID
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneSequenceExtensions::STATIC_GetBindingID(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.GetBindingID");
        
        UMovieSceneSequenceExtensions_GetBindingID_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D6C90
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindTracksByType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneSequenceExtensions::STATIC_FindTracksByType(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindTracksByType");
        
        UMovieSceneSequenceExtensions_FindTracksByType_Params params {};
        params.Sequence = Sequence;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D6560
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindTracksByExactType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneSequenceExtensions::STATIC_FindTracksByExactType(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindTracksByExactType");
        
        UMovieSceneSequenceExtensions_FindTracksByExactType_Params params {};
        params.Sequence = Sequence;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CEB60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindNextMarkedFrame
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InFrameNumber                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bForward                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequenceExtensions::STATIC_FindNextMarkedFrame(MovieScene::UMovieSceneSequence* Sequence, const CoreUObject::FFrameNumber& InFrameNumber, bool bForward)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindNextMarkedFrame");
        
        UMovieSceneSequenceExtensions_FindNextMarkedFrame_Params params {};
        params.Sequence = Sequence;
        params.InFrameNumber = InFrameNumber;
        params.bForward = bForward;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D68E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMasterTracksByType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneSequenceExtensions::STATIC_FindMasterTracksByType(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMasterTracksByType");
        
        UMovieSceneSequenceExtensions_FindMasterTracksByType_Params params {};
        params.Sequence = Sequence;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D61F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMasterTracksByExactType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneSequenceExtensions::STATIC_FindMasterTracksByExactType(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMasterTracksByExactType");
        
        UMovieSceneSequenceExtensions_FindMasterTracksByExactType_Params params {};
        params.Sequence = Sequence;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CF030
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMarkedFrameByLabel
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InLabel                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequenceExtensions::STATIC_FindMarkedFrameByLabel(MovieScene::UMovieSceneSequence* Sequence, const BasicTypes::FString& InLabel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMarkedFrameByLabel");
        
        UMovieSceneSequenceExtensions_FindMarkedFrameByLabel_Params params {};
        params.Sequence = Sequence;
        params.InLabel = InLabel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CEE50
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMarkedFrameByFrameNumber
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InFrameNumber                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequenceExtensions::STATIC_FindMarkedFrameByFrameNumber(MovieScene::UMovieSceneSequence* Sequence, const CoreUObject::FFrameNumber& InFrameNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindMarkedFrameByFrameNumber");
        
        UMovieSceneSequenceExtensions_FindMarkedFrameByFrameNumber_Params params {};
        params.Sequence = Sequence;
        params.InFrameNumber = InFrameNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D2530
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindBindingByName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneSequenceExtensions::STATIC_FindBindingByName(MovieScene::UMovieSceneSequence* Sequence, const BasicTypes::FString& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindBindingByName");
        
        UMovieSceneSequenceExtensions_FindBindingByName_Params params {};
        params.Sequence = Sequence;
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D22E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindBindingById
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FGuid                                 BindingId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneSequenceExtensions::STATIC_FindBindingById(MovieScene::UMovieSceneSequence* Sequence, const CoreUObject::FGuid& BindingId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.FindBindingById");
        
        UMovieSceneSequenceExtensions_FindBindingById_Params params {};
        params.Sequence = Sequence;
        params.BindingId = BindingId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CF330
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.DeleteMarkedFrames
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_DeleteMarkedFrames(MovieScene::UMovieSceneSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.DeleteMarkedFrames");
        
        UMovieSceneSequenceExtensions_DeleteMarkedFrames_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014CF430
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.DeleteMarkedFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            DeleteIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneSequenceExtensions::STATIC_DeleteMarkedFrame(MovieScene::UMovieSceneSequence* Sequence, int32_t DeleteIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.DeleteMarkedFrame");
        
        UMovieSceneSequenceExtensions_DeleteMarkedFrame_Params params {};
        params.Sequence = Sequence;
        params.DeleteIndex = DeleteIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5F70
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneTrack* UMovieSceneSequenceExtensions::STATIC_AddTrack(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddTrack");
        
        UMovieSceneSequenceExtensions_AddTrack_Params params {};
        params.Sequence = Sequence;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D1880
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddSpawnableFromInstance
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ObjectToSpawn                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneSequenceExtensions::STATIC_AddSpawnableFromInstance(MovieScene::UMovieSceneSequence* Sequence, CoreUObject::UObject* ObjectToSpawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddSpawnableFromInstance");
        
        UMovieSceneSequenceExtensions_AddSpawnableFromInstance_Params params {};
        params.Sequence = Sequence;
        params.ObjectToSpawn = ObjectToSpawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D1690
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddSpawnableFromClass
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ClassToSpawn                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneSequenceExtensions::STATIC_AddSpawnableFromClass(MovieScene::UMovieSceneSequence* Sequence, CoreUObject::UObject* ClassToSpawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddSpawnableFromClass");
        
        UMovieSceneSequenceExtensions_AddSpawnableFromClass_Params params {};
        params.Sequence = Sequence;
        params.ClassToSpawn = ClassToSpawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CFF30
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddRootFolderToSequence
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                NewFolderName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneFolder*                     ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneFolder* UMovieSceneSequenceExtensions::STATIC_AddRootFolderToSequence(MovieScene::UMovieSceneSequence* Sequence, const BasicTypes::FString& NewFolderName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddRootFolderToSequence");
        
        UMovieSceneSequenceExtensions_AddRootFolderToSequence_Params params {};
        params.Sequence = Sequence;
        params.NewFolderName = NewFolderName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D1A70
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddPossessable
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ObjectToPossess                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneSequenceExtensions::STATIC_AddPossessable(MovieScene::UMovieSceneSequence* Sequence, CoreUObject::UObject* ObjectToPossess)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddPossessable");
        
        UMovieSceneSequenceExtensions_AddPossessable_Params params {};
        params.Sequence = Sequence;
        params.ObjectToPossess = ObjectToPossess;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D5F70
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddMasterTrack
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneTrack* UMovieSceneSequenceExtensions::STATIC_AddMasterTrack(MovieScene::UMovieSceneSequence* Sequence, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddMasterTrack");
        
        UMovieSceneSequenceExtensions_AddMasterTrack_Params params {};
        params.Sequence = Sequence;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014CF890
     *         Name   -> Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddMarkedFrame
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequence*                   Sequence                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneMarkedFrame                 InMarkedFrame                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneSequenceExtensions::STATIC_AddMarkedFrame(MovieScene::UMovieSceneSequence* Sequence, const MovieScene::FMovieSceneMarkedFrame& InMarkedFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneSequenceExtensions.AddMarkedFrame");
        
        UMovieSceneSequenceExtensions_AddMarkedFrame_Params params {};
        params.Sequence = Sequence;
        params.InMarkedFrame = InMarkedFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9250
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetTrackRowDisplayName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  InName                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            RowIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneTrackExtensions::STATIC_SetTrackRowDisplayName(MovieScene::UMovieSceneTrack* Track, const BasicTypes::FText& InName, int32_t RowIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetTrackRowDisplayName");
        
        UMovieSceneTrackExtensions_SetTrackRowDisplayName_Params params {};
        params.Track = Track;
        params.InName = InName;
        params.RowIndex = RowIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8980
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetSortingOrder
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SortingOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneTrackExtensions::STATIC_SetSortingOrder(MovieScene::UMovieSceneTrack* Track, int32_t SortingOrder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetSortingOrder");
        
        UMovieSceneTrackExtensions_SetSortingOrder_Params params {};
        params.Track = Track;
        params.SortingOrder = SortingOrder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8450
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetSectionToKey
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneTrackExtensions::STATIC_SetSectionToKey(MovieScene::UMovieSceneTrack* Track, MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetSectionToKey");
        
        UMovieSceneTrackExtensions_SetSectionToKey_Params params {};
        params.Track = Track;
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9600
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetDisplayName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  InName                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneTrackExtensions::STATIC_SetDisplayName(MovieScene::UMovieSceneTrack* Track, const BasicTypes::FText& InName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetDisplayName");
        
        UMovieSceneTrackExtensions_SetDisplayName_Params params {};
        params.Track = Track;
        params.InName = InName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8700
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetColorTint
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FColor                                ColorTint                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneTrackExtensions::STATIC_SetColorTint(MovieScene::UMovieSceneTrack* Track, const CoreUObject::FColor& ColorTint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.SetColorTint");
        
        UMovieSceneTrackExtensions_SetColorTint_Params params {};
        params.Track = Track;
        params.ColorTint = ColorTint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8C10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.RemoveSection
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSection*                    Section                                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneTrackExtensions::STATIC_RemoveSection(MovieScene::UMovieSceneTrack* Track, MovieScene::UMovieSceneSection* Section)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.RemoveSection");
        
        UMovieSceneTrackExtensions_RemoveSection_Params params {};
        params.Track = Track;
        params.Section = Section;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9070
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetTrackRowDisplayName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            RowIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMovieSceneTrackExtensions::STATIC_GetTrackRowDisplayName(MovieScene::UMovieSceneTrack* Track, int32_t RowIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetTrackRowDisplayName");
        
        UMovieSceneTrackExtensions_GetTrackRowDisplayName_Params params {};
        params.Track = Track;
        params.RowIndex = RowIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8B10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetSortingOrder
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneTrackExtensions::STATIC_GetSortingOrder(MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetSortingOrder");
        
        UMovieSceneTrackExtensions_GetSortingOrder_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D85F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetSectionToKey
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSection*                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneSection* UMovieSceneTrackExtensions::STATIC_GetSectionToKey(MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetSectionToKey");
        
        UMovieSceneTrackExtensions_GetSectionToKey_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8DC0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetSections
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneSection*> ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneSection*> UMovieSceneTrackExtensions::STATIC_GetSections(MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetSections");
        
        UMovieSceneTrackExtensions_GetSections_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D94C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetDisplayName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMovieSceneTrackExtensions::STATIC_GetDisplayName(MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetDisplayName");
        
        UMovieSceneTrackExtensions_GetDisplayName_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8890
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetColorTint
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FColor                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FColor UMovieSceneTrackExtensions::STATIC_GetColorTint(MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.GetColorTint");
        
        UMovieSceneTrackExtensions_GetColorTint_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D8F40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneTrackExtensions.AddSection
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneTrack*                      Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSection*                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneSection* UMovieSceneTrackExtensions::STATIC_AddSection(MovieScene::UMovieSceneTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneTrackExtensions.AddSection");
        
        UMovieSceneTrackExtensions_AddSection_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF3E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.SetValue
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             InNewValue                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingActorReferenceKey::SetValue(const MovieScene::FMovieSceneObjectBindingID& InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.SetValue");
        
        UMovieSceneScriptingActorReferenceKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingActorReferenceKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.SetTime");
        
        UMovieSceneScriptingActorReferenceKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF550
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneScriptingActorReferenceKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.GetValue");
        
        UMovieSceneScriptingActorReferenceKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingActorReferenceKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceKey.GetTime");
        
        UMovieSceneScriptingActorReferenceKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingEventChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventChannel.RemoveKey");
        
        UMovieSceneScriptingEventChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingEventChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventChannel.GetKeys");
        
        UMovieSceneScriptingEventChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B5900
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingEventChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::FMovieSceneEvent                 NewValue                                                   (Parm, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingEventKey*  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingEventKey* UMovieSceneScriptingEventChannel::AddKey(const CoreUObject::FFrameNumber& InTime, const MovieSceneTracks::FMovieSceneEvent& NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingEventChannel.AddKey");
        
        UMovieSceneScriptingEventChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFDB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             InDefaultValue                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingActorReferenceChannel::SetDefault(const MovieScene::FMovieSceneObjectBindingID& InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.SetDefault");
        
        UMovieSceneScriptingActorReferenceChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingActorReferenceChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.RemoveKey");
        
        UMovieSceneScriptingActorReferenceChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFCC0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingActorReferenceChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.RemoveDefault");
        
        UMovieSceneScriptingActorReferenceChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFBE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingActorReferenceChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.HasDefault");
        
        UMovieSceneScriptingActorReferenceChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingActorReferenceChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.GetKeys");
        
        UMovieSceneScriptingActorReferenceChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFD10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneScriptingActorReferenceChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.GetDefault");
        
        UMovieSceneScriptingActorReferenceChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B00D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             NewValue                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingActorReferenceKey* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingActorReferenceKey* UMovieSceneScriptingActorReferenceChannel::AddKey(const CoreUObject::FFrameNumber& InTime, const MovieScene::FMovieSceneObjectBindingID& NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingActorReferenceChannel.AddKey");
        
        UMovieSceneScriptingActorReferenceChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B09E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingBoolKey::SetValue(bool InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.SetValue");
        
        UMovieSceneScriptingBoolKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingBoolKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.SetTime");
        
        UMovieSceneScriptingBoolKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0B00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingBoolKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.GetValue");
        
        UMovieSceneScriptingBoolKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingBoolKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolKey.GetTime");
        
        UMovieSceneScriptingBoolKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0F80
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InDefaultValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingBoolChannel::SetDefault(bool InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.SetDefault");
        
        UMovieSceneScriptingBoolChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingBoolChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.RemoveKey");
        
        UMovieSceneScriptingBoolChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0E00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingBoolChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.RemoveDefault");
        
        UMovieSceneScriptingBoolChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0D40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingBoolChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.HasDefault");
        
        UMovieSceneScriptingBoolChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B1350
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.GetNumKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneScriptingBoolChannel::GetNumKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.GetNumKeys");
        
        UMovieSceneScriptingBoolChannel_GetNumKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingBoolChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.GetKeys");
        
        UMovieSceneScriptingBoolChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B0EA0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingBoolChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.GetDefault");
        
        UMovieSceneScriptingBoolChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B1120
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.EvaluateKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            FrameRate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<bool>                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<bool> UMovieSceneScriptingBoolChannel::EvaluateKeys(const SequencerScripting::FSequencerScriptingRange& Range, const CoreUObject::FFrameRate& FrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.EvaluateKeys");
        
        UMovieSceneScriptingBoolChannel_EvaluateKeys_Params params {};
        params.Range = Range;
        params.FrameRate = FrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B10E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.ComputeEffectiveRange
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    SequencerScripting::FSequencerScriptingRange UMovieSceneScriptingBoolChannel::ComputeEffectiveRange()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.ComputeEffectiveRange");
        
        UMovieSceneScriptingBoolChannel_ComputeEffectiveRange_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B13B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingBoolKey*   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingBoolKey* UMovieSceneScriptingBoolChannel::AddKey(const CoreUObject::FFrameNumber& InTime, bool NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingBoolChannel.AddKey");
        
        UMovieSceneScriptingBoolChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014B1BF0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteKey.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         uint8_t                                            InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingByteKey::SetValue(uint8_t InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteKey.SetValue");
        
        UMovieSceneScriptingByteKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingByteKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteKey.SetTime");
        
        UMovieSceneScriptingByteKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B1D10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UMovieSceneScriptingByteKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteKey.GetValue");
        
        UMovieSceneScriptingByteKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingByteKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingByteKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingByteKey.GetTime");
        
        UMovieSceneScriptingByteKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB500
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetValue
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetValue(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetValue");
        
        UMovieSceneScriptingFloatKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB630
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetTime
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetTime");
        
        UMovieSceneScriptingFloatKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BAF40
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetTangentWeightMode
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveTangentWeightMode                InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetTangentWeightMode(Engine::ERichCurveTangentWeightMode InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetTangentWeightMode");
        
        UMovieSceneScriptingFloatKey_SetTangentWeightMode_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB2C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetTangentMode
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveTangentMode                      InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetTangentMode(Engine::ERichCurveTangentMode InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetTangentMode");
        
        UMovieSceneScriptingFloatKey_SetTangentMode_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BACE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetLeaveTangentWeight
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetLeaveTangentWeight(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetLeaveTangentWeight");
        
        UMovieSceneScriptingFloatKey_SetLeaveTangentWeight_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB060
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetLeaveTangent
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetLeaveTangent(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetLeaveTangent");
        
        UMovieSceneScriptingFloatKey_SetLeaveTangent_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB3E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetInterpolationMode
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveInterpMode                       InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetInterpolationMode(Engine::ERichCurveInterpMode InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetInterpolationMode");
        
        UMovieSceneScriptingFloatKey_SetInterpolationMode_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BAE10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetArriveTangentWeight
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetArriveTangentWeight(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetArriveTangentWeight");
        
        UMovieSceneScriptingFloatKey_SetArriveTangentWeight_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB190
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetArriveTangent
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatKey::SetArriveTangent(float InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.SetArriveTangent");
        
        UMovieSceneScriptingFloatKey_SetArriveTangent_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB5F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetValue
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingFloatKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetValue");
        
        UMovieSceneScriptingFloatKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingFloatKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetTime");
        
        UMovieSceneScriptingFloatKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB030
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetTangentWeightMode
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveTangentWeightMode                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveTangentWeightMode UMovieSceneScriptingFloatKey::GetTangentWeightMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetTangentWeightMode");
        
        UMovieSceneScriptingFloatKey_GetTangentWeightMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB3B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetTangentMode
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveTangentMode                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveTangentMode UMovieSceneScriptingFloatKey::GetTangentMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetTangentMode");
        
        UMovieSceneScriptingFloatKey_GetTangentMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BADD0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetLeaveTangentWeight
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingFloatKey::GetLeaveTangentWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetLeaveTangentWeight");
        
        UMovieSceneScriptingFloatKey_GetLeaveTangentWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB150
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetLeaveTangent
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingFloatKey::GetLeaveTangent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetLeaveTangent");
        
        UMovieSceneScriptingFloatKey_GetLeaveTangent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB4D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetInterpolationMode
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveInterpMode                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveInterpMode UMovieSceneScriptingFloatKey::GetInterpolationMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetInterpolationMode");
        
        UMovieSceneScriptingFloatKey_GetInterpolationMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BAF00
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetArriveTangentWeight
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingFloatKey::GetArriveTangentWeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetArriveTangentWeight");
        
        UMovieSceneScriptingFloatKey_GetArriveTangentWeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB280
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetArriveTangent
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingFloatKey::GetArriveTangent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatKey.GetArriveTangent");
        
        UMovieSceneScriptingFloatKey_GetArriveTangent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9E60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFloatVectorTrackExtensions.SetNumChannelsUsed
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneFloatVectorTrack*     Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InNumChannelsUsed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneFloatVectorTrackExtensions::STATIC_SetNumChannelsUsed(MovieSceneTracks::UMovieSceneFloatVectorTrack* Track, int32_t InNumChannelsUsed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFloatVectorTrackExtensions.SetNumChannelsUsed");
        
        UMovieSceneFloatVectorTrackExtensions_SetNumChannelsUsed_Params params {};
        params.Track = Track;
        params.InNumChannelsUsed = InNumChannelsUsed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9D50
     *         Name   -> Function /Script/SequencerScripting.MovieSceneFloatVectorTrackExtensions.GetNumChannelsUsed
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneFloatVectorTrack*     Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneFloatVectorTrackExtensions::STATIC_GetNumChannelsUsed(MovieSceneTracks::UMovieSceneFloatVectorTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneFloatVectorTrackExtensions.GetNumChannelsUsed");
        
        UMovieSceneFloatVectorTrackExtensions_GetNumChannelsUsed_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC430
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.SetPreInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    InExtrapolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatChannel::SetPreInfinityExtrapolation(Engine::ERichCurveExtrapolation InExtrapolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.SetPreInfinityExtrapolation");
        
        UMovieSceneScriptingFloatChannel_SetPreInfinityExtrapolation_Params params {};
        params.InExtrapolation = InExtrapolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC2A0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.SetPostInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    InExtrapolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatChannel::SetPostInfinityExtrapolation(Engine::ERichCurveExtrapolation InExtrapolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.SetPostInfinityExtrapolation");
        
        UMovieSceneScriptingFloatChannel_SetPostInfinityExtrapolation_Params params {};
        params.InExtrapolation = InExtrapolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC1B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InDefaultValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatChannel::SetDefault(float InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.SetDefault");
        
        UMovieSceneScriptingFloatChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.RemoveKey");
        
        UMovieSceneScriptingFloatChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC090
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingFloatChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.RemoveDefault");
        
        UMovieSceneScriptingFloatChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BBFB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingFloatChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.HasDefault");
        
        UMovieSceneScriptingFloatChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC550
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetPreInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveExtrapolation UMovieSceneScriptingFloatChannel::GetPreInfinityExtrapolation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetPreInfinityExtrapolation");
        
        UMovieSceneScriptingFloatChannel_GetPreInfinityExtrapolation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC3C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetPostInfinityExtrapolation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ERichCurveExtrapolation                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ERichCurveExtrapolation UMovieSceneScriptingFloatChannel::GetPostInfinityExtrapolation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetPostInfinityExtrapolation");
        
        UMovieSceneScriptingFloatChannel_GetPostInfinityExtrapolation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC920
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetNumKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneScriptingFloatChannel::GetNumKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetNumKeys");
        
        UMovieSceneScriptingFloatChannel_GetNumKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingFloatChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetKeys");
        
        UMovieSceneScriptingFloatChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC0B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneScriptingFloatChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.GetDefault");
        
        UMovieSceneScriptingFloatChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC600
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.EvaluateKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            FrameRate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<float>                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<float> UMovieSceneScriptingFloatChannel::EvaluateKeys(const SequencerScripting::FSequencerScriptingRange& Range, const CoreUObject::FFrameRate& FrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.EvaluateKeys");
        
        UMovieSceneScriptingFloatChannel_EvaluateKeys_Params params {};
        params.Range = Range;
        params.FrameRate = FrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC5C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.ComputeEffectiveRange
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    SequencerScripting::FSequencerScriptingRange UMovieSceneScriptingFloatChannel::ComputeEffectiveRange()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.ComputeEffectiveRange");
        
        UMovieSceneScriptingFloatChannel_ComputeEffectiveRange_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BC9B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::EMovieSceneKeyInterpolation            InInterpolation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingFloatKey*  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingFloatKey* UMovieSceneScriptingFloatChannel::AddKey(const CoreUObject::FFrameNumber& InTime, float NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit, MovieScene::EMovieSceneKeyInterpolation InInterpolation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingFloatChannel.AddKey");
        
        UMovieSceneScriptingFloatChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        params.InInterpolation = InInterpolation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BD4B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InNewValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingIntegerKey::SetValue(int32_t InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.SetValue");
        
        UMovieSceneScriptingIntegerKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingIntegerKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.SetTime");
        
        UMovieSceneScriptingIntegerKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BD5D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneScriptingIntegerKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.GetValue");
        
        UMovieSceneScriptingIntegerKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingIntegerKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerKey.GetTime");
        
        UMovieSceneScriptingIntegerKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BD9B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InDefaultValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingIntegerChannel::SetDefault(int32_t InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.SetDefault");
        
        UMovieSceneScriptingIntegerChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingIntegerChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.RemoveKey");
        
        UMovieSceneScriptingIntegerChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BD880
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingIntegerChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.RemoveDefault");
        
        UMovieSceneScriptingIntegerChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BD800
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingIntegerChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.HasDefault");
        
        UMovieSceneScriptingIntegerChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingIntegerChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.GetKeys");
        
        UMovieSceneScriptingIntegerChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BD920
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneScriptingIntegerChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.GetDefault");
        
        UMovieSceneScriptingIntegerChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BDB10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingIntegerKey* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingIntegerKey* UMovieSceneScriptingIntegerChannel::AddKey(const CoreUObject::FFrameNumber& InTime, int32_t NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingIntegerChannel.AddKey");
        
        UMovieSceneScriptingIntegerChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BE4E0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              InNewValue                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingObjectPathKey::SetValue(CoreUObject::UObject* InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.SetValue");
        
        UMovieSceneScriptingObjectPathKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingObjectPathKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.SetTime");
        
        UMovieSceneScriptingObjectPathKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BE6D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UMovieSceneScriptingObjectPathKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.GetValue");
        
        UMovieSceneScriptingObjectPathKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingObjectPathKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathKey.GetTime");
        
        UMovieSceneScriptingObjectPathKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BE8A0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              InDefaultValue                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingObjectPathChannel::SetDefault(CoreUObject::UObject* InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.SetDefault");
        
        UMovieSceneScriptingObjectPathChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingObjectPathChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.RemoveKey");
        
        UMovieSceneScriptingObjectPathChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFCC0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingObjectPathChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.RemoveDefault");
        
        UMovieSceneScriptingObjectPathChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BE830
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingObjectPathChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.HasDefault");
        
        UMovieSceneScriptingObjectPathChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingObjectPathChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.GetKeys");
        
        UMovieSceneScriptingObjectPathChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BE870
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UMovieSceneScriptingObjectPathChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.GetDefault");
        
        UMovieSceneScriptingObjectPathChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BEA10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              NewValue                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingObjectPathKey* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingObjectPathKey* UMovieSceneScriptingObjectPathChannel::AddKey(const CoreUObject::FFrameNumber& InTime, CoreUObject::UObject* NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingObjectPathChannel.AddKey");
        
        UMovieSceneScriptingObjectPathChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BF200
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringKey.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InNewValue                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingStringKey::SetValue(const BasicTypes::FString& InNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringKey.SetValue");
        
        UMovieSceneScriptingStringKey_SetValue_Params params {};
        params.InNewValue = InNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF680
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringKey.SetTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          NewFrameNumber                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingStringKey::SetTime(const CoreUObject::FFrameNumber& NewFrameNumber, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringKey.SetTime");
        
        UMovieSceneScriptingStringKey_SetTime_Params params {};
        params.NewFrameNumber = NewFrameNumber;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BF390
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringKey.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieSceneScriptingStringKey::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringKey.GetValue");
        
        UMovieSceneScriptingStringKey_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AF8C0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringKey.GetTime
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UMovieSceneScriptingStringKey::GetTime(SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringKey.GetTime");
        
        UMovieSceneScriptingStringKey_GetTime_Params params {};
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BF870
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.SetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InDefaultValue                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingStringChannel::SetDefault(const BasicTypes::FString& InDefaultValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.SetDefault");
        
        UMovieSceneScriptingStringChannel_SetDefault_Params params {};
        params.InDefaultValue = InDefaultValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.RemoveKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::UMovieSceneScriptingKey*       Key                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingStringChannel::RemoveKey(SequencerScripting::UMovieSceneScriptingKey* Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.RemoveKey");
        
        UMovieSceneScriptingStringChannel_RemoveKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014B40F0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.RemoveDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMovieSceneScriptingStringChannel::RemoveDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.RemoveDefault");
        
        UMovieSceneScriptingStringChannel_RemoveDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014BF620
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.HasDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneScriptingStringChannel::HasDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.HasDefault");
        
        UMovieSceneScriptingStringChannel_HasDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFF60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.GetKeys
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<SequencerScripting::UMovieSceneScriptingKey*> UMovieSceneScriptingStringChannel::GetKeys()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.GetKeys");
        
        UMovieSceneScriptingStringChannel_GetKeys_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BF6D0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.GetDefault
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieSceneScriptingStringChannel::GetDefault()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.GetDefault");
        
        UMovieSceneScriptingStringChannel_GetDefault_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BFA60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.AddKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InTime                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                NewValue                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SubFrame                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::ESequenceTimeUnit              TimeUnit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SequencerScripting::UMovieSceneScriptingStringKey* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SequencerScripting::UMovieSceneScriptingStringKey* UMovieSceneScriptingStringChannel::AddKey(const CoreUObject::FFrameNumber& InTime, const BasicTypes::FString& NewValue, float SubFrame, SequencerScripting::ESequenceTimeUnit TimeUnit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneScriptingStringChannel.AddKey");
        
        UMovieSceneScriptingStringChannel_AddKey_Params params {};
        params.InTime = InTime;
        params.NewValue = NewValue;
        params.SubFrame = SubFrame;
        params.TimeUnit = TimeUnit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0410
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetSpawnableBindingID
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneObjectBindingID             SpawnableBindingID                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_SetSpawnableBindingID(const MovieScene::FMovieSceneBindingProxy& InBinding, const MovieScene::FMovieSceneObjectBindingID& SpawnableBindingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetSpawnableBindingID");
        
        UMovieSceneBindingExtensions_SetSpawnableBindingID_Params params {};
        params.InBinding = InBinding;
        params.SpawnableBindingID = SpawnableBindingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1970
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetSortingOrder
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            SortingOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_SetSortingOrder(const MovieScene::FMovieSceneBindingProxy& InBinding, int32_t SortingOrder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetSortingOrder");
        
        UMovieSceneBindingExtensions_SetSortingOrder_Params params {};
        params.InBinding = InBinding;
        params.SortingOrder = SortingOrder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0860
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetParent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                InParentBinding                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_SetParent(const MovieScene::FMovieSceneBindingProxy& InBinding, const MovieScene::FMovieSceneBindingProxy& InParentBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetParent");
        
        UMovieSceneBindingExtensions_SetParent_Params params {};
        params.InBinding = InBinding;
        params.InParentBinding = InParentBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1BE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InName                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_SetName(const MovieScene::FMovieSceneBindingProxy& InBinding, const BasicTypes::FString& InName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetName");
        
        UMovieSceneBindingExtensions_SetName_Params params {};
        params.InBinding = InBinding;
        params.InName = InName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C2090
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetDisplayName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  InDisplayName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_SetDisplayName(const MovieScene::FMovieSceneBindingProxy& InBinding, const BasicTypes::FText& InDisplayName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.SetDisplayName");
        
        UMovieSceneBindingExtensions_SetDisplayName_Params params {};
        params.InBinding = InBinding;
        params.InDisplayName = InDisplayName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C11A0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.RemoveTrack
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackToRemove                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_RemoveTrack(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackToRemove)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.RemoveTrack");
        
        UMovieSceneBindingExtensions_RemoveTrack_Params params {};
        params.InBinding = InBinding;
        params.TrackToRemove = TrackToRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C10B0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.Remove
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_Remove(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.Remove");
        
        UMovieSceneBindingExtensions_Remove_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0620
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.MoveBindingContents
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                SourceBindingId                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                DestinationBindingId                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneBindingExtensions::STATIC_MoveBindingContents(const MovieScene::FMovieSceneBindingProxy& SourceBindingId, const MovieScene::FMovieSceneBindingProxy& DestinationBindingId)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.MoveBindingContents");
        
        UMovieSceneBindingExtensions_MoveBindingContents_Params params {};
        params.SourceBindingId = SourceBindingId;
        params.DestinationBindingId = DestinationBindingId;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014C2500
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.IsValid
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneBindingExtensions::STATIC_IsValid(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.IsValid");
        
        UMovieSceneBindingExtensions_IsValid_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1760
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetTracks
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneBindingExtensions::STATIC_GetTracks(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetTracks");
        
        UMovieSceneBindingExtensions_GetTracks_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1AF0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetSortingOrder
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneBindingExtensions::STATIC_GetSortingOrder(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetSortingOrder");
        
        UMovieSceneBindingExtensions_GetSortingOrder_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0BB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetPossessedObjectClass
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UMovieSceneBindingExtensions::STATIC_GetPossessedObjectClass(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetPossessedObjectClass");
        
        UMovieSceneBindingExtensions_GetPossessedObjectClass_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0A60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetParent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::FMovieSceneBindingProxy                ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneBindingProxy UMovieSceneBindingExtensions::STATIC_GetParent(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetParent");
        
        UMovieSceneBindingExtensions_GetParent_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0CB0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetObjectTemplate
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UMovieSceneBindingExtensions::STATIC_GetObjectTemplate(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetObjectTemplate");
        
        UMovieSceneBindingExtensions_GetObjectTemplate_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1E90
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieSceneBindingExtensions::STATIC_GetName(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetName");
        
        UMovieSceneBindingExtensions_GetName_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C2410
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetId
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FGuid                                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FGuid UMovieSceneBindingExtensions::STATIC_GetId(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetId");
        
        UMovieSceneBindingExtensions_GetId_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C2280
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetDisplayName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMovieSceneBindingExtensions::STATIC_GetDisplayName(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetDisplayName");
        
        UMovieSceneBindingExtensions_GetDisplayName_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0DE0
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetChildPossessables
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::FMovieSceneBindingProxy> UMovieSceneBindingExtensions::STATIC_GetChildPossessables(const MovieScene::FMovieSceneBindingProxy& InBinding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.GetChildPossessables");
        
        UMovieSceneBindingExtensions_GetChildPossessables_Params params {};
        params.InBinding = InBinding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1560
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.FindTracksByType
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneBindingExtensions::STATIC_FindTracksByType(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.FindTracksByType");
        
        UMovieSceneBindingExtensions_FindTracksByType_Params params {};
        params.InBinding = InBinding;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C1360
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.FindTracksByExactType
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieScene::UMovieSceneTrack*>  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieScene::UMovieSceneTrack*> UMovieSceneBindingExtensions::STATIC_FindTracksByExactType(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.FindTracksByExactType");
        
        UMovieSceneBindingExtensions_FindTracksByExactType_Params params {};
        params.InBinding = InBinding;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014C0F10
     *         Name   -> Function /Script/SequencerScripting.MovieSceneBindingExtensions.AddTrack
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneBindingProxy                InBinding                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      TrackType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneTrack*                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneTrack* UMovieSceneBindingExtensions::STATIC_AddTrack(const MovieScene::FMovieSceneBindingProxy& InBinding, MovieScene::UMovieSceneTrack* TrackType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneBindingExtensions.AddTrack");
        
        UMovieSceneBindingExtensions_AddTrack_Params params {};
        params.InBinding = InBinding;
        params.TrackType = TrackType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9E60
     *         Name   -> Function /Script/SequencerScripting.MovieSceneDoubleVectorTrackExtensions.SetNumChannelsUsed
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneDoubleVectorTrack*    Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InNumChannelsUsed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneDoubleVectorTrackExtensions::STATIC_SetNumChannelsUsed(MovieSceneTracks::UMovieSceneDoubleVectorTrack* Track, int32_t InNumChannelsUsed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneDoubleVectorTrackExtensions.SetNumChannelsUsed");
        
        UMovieSceneDoubleVectorTrackExtensions_SetNumChannelsUsed_Params params {};
        params.Track = Track;
        params.InNumChannelsUsed = InNumChannelsUsed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x014D9D50
     *         Name   -> Function /Script/SequencerScripting.MovieSceneDoubleVectorTrackExtensions.GetNumChannelsUsed
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::UMovieSceneDoubleVectorTrack*    Track                                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneDoubleVectorTrackExtensions::STATIC_GetNumChannelsUsed(MovieSceneTracks::UMovieSceneDoubleVectorTrack* Track)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.MovieSceneDoubleVectorTrackExtensions.GetNumChannelsUsed");
        
        UMovieSceneDoubleVectorTrackExtensions_GetNumChannelsUsed_Params params {};
        params.Track = Track;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014DA970
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetStartSeconds
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USequencerScriptingRangeExtensions::STATIC_SetStartSeconds(SequencerScripting::FSequencerScriptingRange* Range, float Start)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetStartSeconds");
        
        USequencerScriptingRangeExtensions_SetStartSeconds_Params params {};
        params.Start = Start;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Range != nullptr)
            *Range = params.Range;
    }

    /**
     * Function:
     *         RVA    -> 0x014DA3C0
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetStartFrame
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USequencerScriptingRangeExtensions::STATIC_SetStartFrame(SequencerScripting::FSequencerScriptingRange* Range, int32_t Start)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetStartFrame");
        
        USequencerScriptingRangeExtensions_SetStartFrame_Params params {};
        params.Start = Start;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Range != nullptr)
            *Range = params.Range;
    }

    /**
     * Function:
     *         RVA    -> 0x014DA730
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetEndSeconds
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              End                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USequencerScriptingRangeExtensions::STATIC_SetEndSeconds(SequencerScripting::FSequencerScriptingRange* Range, float End)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetEndSeconds");
        
        USequencerScriptingRangeExtensions_SetEndSeconds_Params params {};
        params.End = End;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Range != nullptr)
            *Range = params.Range;
    }

    /**
     * Function:
     *         RVA    -> 0x014DA230
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetEndFrame
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            End                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USequencerScriptingRangeExtensions::STATIC_SetEndFrame(SequencerScripting::FSequencerScriptingRange* Range, int32_t End)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.SetEndFrame");
        
        USequencerScriptingRangeExtensions_SetEndFrame_Params params {};
        params.End = End;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Range != nullptr)
            *Range = params.Range;
    }

    /**
     * Function:
     *         RVA    -> 0x014DAF00
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.RemoveStart
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USequencerScriptingRangeExtensions::STATIC_RemoveStart(SequencerScripting::FSequencerScriptingRange* Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.RemoveStart");
        
        USequencerScriptingRangeExtensions_RemoveStart_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Range != nullptr)
            *Range = params.Range;
    }

    /**
     * Function:
     *         RVA    -> 0x014DAE10
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.RemoveEnd
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USequencerScriptingRangeExtensions::STATIC_RemoveEnd(SequencerScripting::FSequencerScriptingRange* Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.RemoveEnd");
        
        USequencerScriptingRangeExtensions_RemoveEnd_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Range != nullptr)
            *Range = params.Range;
    }

    /**
     * Function:
     *         RVA    -> 0x014DB0F0
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.HasStart
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USequencerScriptingRangeExtensions::STATIC_HasStart(const SequencerScripting::FSequencerScriptingRange& Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.HasStart");
        
        USequencerScriptingRangeExtensions_HasStart_Params params {};
        params.Range = Range;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014DAFF0
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.HasEnd
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USequencerScriptingRangeExtensions::STATIC_HasEnd(const SequencerScripting::FSequencerScriptingRange& Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.HasEnd");
        
        USequencerScriptingRangeExtensions_HasEnd_Params params {};
        params.Range = Range;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014DACC0
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetStartSeconds
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USequencerScriptingRangeExtensions::STATIC_GetStartSeconds(const SequencerScripting::FSequencerScriptingRange& Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetStartSeconds");
        
        USequencerScriptingRangeExtensions_GetStartSeconds_Params params {};
        params.Range = Range;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014DA640
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetStartFrame
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t USequencerScriptingRangeExtensions::STATIC_GetStartFrame(const SequencerScripting::FSequencerScriptingRange& Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetStartFrame");
        
        USequencerScriptingRangeExtensions_GetStartFrame_Params params {};
        params.Range = Range;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014DAB70
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetEndSeconds
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USequencerScriptingRangeExtensions::STATIC_GetEndSeconds(const SequencerScripting::FSequencerScriptingRange& Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetEndSeconds");
        
        USequencerScriptingRangeExtensions_GetEndSeconds_Params params {};
        params.Range = Range;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014DA550
     *         Name   -> Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetEndFrame
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SequencerScripting::FSequencerScriptingRange       Range                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t USequencerScriptingRangeExtensions::STATIC_GetEndFrame(const SequencerScripting::FSequencerScriptingRange& Range)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/SequencerScripting.SequencerScriptingRangeExtensions.GetEndFrame");
        
        USequencerScriptingRangeExtensions_GetEndFrame_Params params {};
        params.Range = Range;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
