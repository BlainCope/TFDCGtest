/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/LiveLink_ENUMS.h"
#include "Headers/LiveLink_PARAMS.h"
#include "Headers/LiveLink_ULiveLinkAnimationRoleToTransform.h"
#include "Headers/LiveLink_ULiveLinkBlueprintVirtualSubject.h"
#include "Headers/LiveLink_ULiveLinkAnimationVirtualSubject.h"
#include "Headers/LiveLink_ULiveLinkBlueprintLibrary.h"
#include "Headers/LiveLink_ULiveLinkComponent.h"
#include "Headers/LiveLink_ULiveLinkDrivenComponent.h"
#include "Headers/LiveLink_ULiveLinkMessageBusFinder.h"
#include "Headers/LiveLink_ULiveLinkMessageBusSourceFactory.h"
#include "Headers/LiveLink_ULiveLinkBasicFrameInterpolationProcessor.h"
#include "Headers/LiveLink_ULiveLinkAnimationFrameInterpolationProcessor.h"
#include "Headers/LiveLink_ULiveLinkMessageBusSourceSettings.h"
#include "Headers/LiveLink_ULiveLinkTimecodeProvider.h"
#include "Headers/LiveLink_ULiveLinkPreset.h"
#include "Headers/LiveLink_ULiveLinkUserSettings.h"
#include "Headers/LiveLink_ULiveLinkSettings.h"
#include "Headers/LiveLink_ULiveLinkTimeSynchronizationSource.h"
#include "Headers/LiveLink_ULiveLinkVirtualSubjectSourceSettings.h"
#include "Headers/LiveLink_ULiveLinkTransformAxisSwitchPreProcessor.h"
#include "Headers/LiveLink_ULiveLinkAnimationAxisSwitchPreProcessor.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::LiveLink
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x0146C0C0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.UpdateVirtualSubjectStaticData_Internal
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkBaseStaticData         InStruct                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintVirtualSubject::UpdateVirtualSubjectStaticData_Internal(const LiveLinkInterface::FLiveLinkBaseStaticData& InStruct)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.UpdateVirtualSubjectStaticData_Internal");
        
        ULiveLinkBlueprintVirtualSubject_UpdateVirtualSubjectStaticData_Internal_Params params {};
        params.InStruct = InStruct;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0146C210
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.UpdateVirtualSubjectFrameData_Internal
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkBaseFrameData          InStruct                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bInShouldStampCurrentTime                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintVirtualSubject::UpdateVirtualSubjectFrameData_Internal(const LiveLinkInterface::FLiveLinkBaseFrameData& InStruct, bool bInShouldStampCurrentTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.UpdateVirtualSubjectFrameData_Internal");
        
        ULiveLinkBlueprintVirtualSubject_UpdateVirtualSubjectFrameData_Internal_Params params {};
        params.InStruct = InStruct;
        params.bInShouldStampCurrentTime = bInShouldStampCurrentTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.OnUpdate
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintVirtualSubject::OnUpdate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.OnUpdate");
        
        ULiveLinkBlueprintVirtualSubject_OnUpdate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.OnInitialize
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintVirtualSubject::OnInitialize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintVirtualSubject.OnInitialize");
        
        ULiveLinkBlueprintVirtualSubject_OnInitialize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01441AB0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.TransformNames
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              TransformNames                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_TransformNames(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, BasicTypes::TArray<BasicTypes::FName>* TransformNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.TransformNames");
        
        ULiveLinkBlueprintLibrary_TransformNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (TransformNames != nullptr)
            *TransformNames = params.TransformNames;
    }

    /**
     * Function:
     *         RVA    -> 0x01440440
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.TransformName
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Name                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_TransformName(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, BasicTypes::FName* Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.TransformName");
        
        ULiveLinkBlueprintLibrary_TransformName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        if (Name != nullptr)
            *Name = params.Name;
    }

    /**
     * Function:
     *         RVA    -> 0x0143E300
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.SetLiveLinkSubjectEnabled
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectKey             SubjectKey                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_SetLiveLinkSubjectEnabled(const LiveLinkInterface::FLiveLinkSubjectKey& SubjectKey, bool bEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.SetLiveLinkSubjectEnabled");
        
        ULiveLinkBlueprintLibrary_SetLiveLinkSubjectEnabled_Params params {};
        params.SubjectKey = SubjectKey;
        params.bEnabled = bEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0143F4A0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.RemoveSource
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSourceHandle           SourceHandle                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_RemoveSource(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.RemoveSource");
        
        ULiveLinkBlueprintLibrary_RemoveSource_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SourceHandle != nullptr)
            *SourceHandle = params.SourceHandle;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014401B0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.ParentBoneSpaceTransform
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            Transform                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_ParentBoneSpaceTransform(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, CoreUObject::FTransform* Transform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.ParentBoneSpaceTransform");
        
        ULiveLinkBlueprintLibrary_ParentBoneSpaceTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        if (Transform != nullptr)
            *Transform = params.Transform;
    }

    /**
     * Function:
     *         RVA    -> 0x01441CC0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.NumberOfTransforms
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t ULiveLinkBlueprintLibrary::STATIC_NumberOfTransforms(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.NumberOfTransforms");
        
        ULiveLinkBlueprintLibrary_NumberOfTransforms_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143E640
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.IsSpecificLiveLinkSubjectEnabled
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectKey             SubjectKey                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bForThisFrame                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_IsSpecificLiveLinkSubjectEnabled(const LiveLinkInterface::FLiveLinkSubjectKey& SubjectKey, bool bForThisFrame)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.IsSpecificLiveLinkSubjectEnabled");
        
        ULiveLinkBlueprintLibrary_IsSpecificLiveLinkSubjectEnabled_Params params {};
        params.SubjectKey = SubjectKey;
        params.bForThisFrame = bForThisFrame;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143F660
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.IsSourceStillValid
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSourceHandle           SourceHandle                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_IsSourceStillValid(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.IsSourceStillValid");
        
        ULiveLinkBlueprintLibrary_IsSourceStillValid_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SourceHandle != nullptr)
            *SourceHandle = params.SourceHandle;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143E500
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.IsLiveLinkSubjectEnabled
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectName            SubjectName                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_IsLiveLinkSubjectEnabled(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.IsLiveLinkSubjectEnabled");
        
        ULiveLinkBlueprintLibrary_IsLiveLinkSubjectEnabled_Params params {};
        params.SubjectName = SubjectName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143FE00
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.HasParent
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_HasParent(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.HasParent");
        
        ULiveLinkBlueprintLibrary_HasParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01441220
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetTransformByName
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  TransformName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetTransformByName(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, const BasicTypes::FName& TransformName, LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetTransformByName");
        
        ULiveLinkBlueprintLibrary_GetTransformByName_Params params {};
        params.TransformName = TransformName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
    }

    /**
     * Function:
     *         RVA    -> 0x01441530
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetTransformByIndex
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            TransformIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetTransformByIndex(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, int32_t TransformIndex, LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetTransformByIndex");
        
        ULiveLinkBlueprintLibrary_GetTransformByIndex_Params params {};
        params.TransformIndex = TransformIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
    }

    /**
     * Function:
     *         RVA    -> 0x0143E190
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSpecificLiveLinkSubjectRole
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectKey             SubjectKey                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::ULiveLinkRole*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    LiveLinkInterface::ULiveLinkRole* ULiveLinkBlueprintLibrary::STATIC_GetSpecificLiveLinkSubjectRole(const LiveLinkInterface::FLiveLinkSubjectKey& SubjectKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSpecificLiveLinkSubjectRole");
        
        ULiveLinkBlueprintLibrary_GetSpecificLiveLinkSubjectRole_Params params {};
        params.SubjectKey = SubjectKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143ECB0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceTypeFromGuid
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FGuid                                 SourceGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText ULiveLinkBlueprintLibrary::STATIC_GetSourceTypeFromGuid(const CoreUObject::FGuid& SourceGuid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceTypeFromGuid");
        
        ULiveLinkBlueprintLibrary_GetSourceTypeFromGuid_Params params {};
        params.SourceGuid = SourceGuid;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143F120
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceType
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSourceHandle           SourceHandle                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText ULiveLinkBlueprintLibrary::STATIC_GetSourceType(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceType");
        
        ULiveLinkBlueprintLibrary_GetSourceType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SourceHandle != nullptr)
            *SourceHandle = params.SourceHandle;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143F2E0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceStatus
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSourceHandle           SourceHandle                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText ULiveLinkBlueprintLibrary::STATIC_GetSourceStatus(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceStatus");
        
        ULiveLinkBlueprintLibrary_GetSourceStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SourceHandle != nullptr)
            *SourceHandle = params.SourceHandle;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143EE80
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceMachineName
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSourceHandle           SourceHandle                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText ULiveLinkBlueprintLibrary::STATIC_GetSourceMachineName(LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetSourceMachineName");
        
        ULiveLinkBlueprintLibrary_GetSourceMachineName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SourceHandle != nullptr)
            *SourceHandle = params.SourceHandle;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01441820
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetRootTransform
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetRootTransform(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetRootTransform");
        
        ULiveLinkBlueprintLibrary_GetRootTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
    }

    /**
     * Function:
     *         RVA    -> 0x014420B0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetPropertyValue
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkBasicBlueprintData     BasicData                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  PropertyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_GetPropertyValue(LiveLinkInterface::FLiveLinkBasicBlueprintData* BasicData, const BasicTypes::FName& PropertyName, float* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetPropertyValue");
        
        ULiveLinkBlueprintLibrary_GetPropertyValue_Params params {};
        params.PropertyName = PropertyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (BasicData != nullptr)
            *BasicData = params.BasicData;
        if (Value != nullptr)
            *Value = params.Value;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143FB80
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetParent
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkTransform              Parent                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetParent(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, LiveLinkInterface::FLiveLinkTransform* Parent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetParent");
        
        ULiveLinkBlueprintLibrary_GetParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        if (Parent != nullptr)
            *Parent = params.Parent;
    }

    /**
     * Function:
     *         RVA    -> 0x01440FB0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetMetadata
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FSubjectMetadata                MetaData                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetMetadata(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FSubjectMetadata* MetaData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetMetadata");
        
        ULiveLinkBlueprintLibrary_GetMetadata_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (MetaData != nullptr)
            *MetaData = params.MetaData;
    }

    /**
     * Function:
     *         RVA    -> 0x0143E840
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetLiveLinkSubjects
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIncludeDisabledSubject                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeVirtualSubject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<LiveLinkInterface::FLiveLinkSubjectKey> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<LiveLinkInterface::FLiveLinkSubjectKey> ULiveLinkBlueprintLibrary::STATIC_GetLiveLinkSubjects(bool bIncludeDisabledSubject, bool bIncludeVirtualSubject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetLiveLinkSubjects");
        
        ULiveLinkBlueprintLibrary_GetLiveLinkSubjects_Params params {};
        params.bIncludeDisabledSubject = bIncludeDisabledSubject;
        params.bIncludeVirtualSubject = bIncludeVirtualSubject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143E040
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetLiveLinkSubjectRole
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectName            SubjectName                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::ULiveLinkRole*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    LiveLinkInterface::ULiveLinkRole* ULiveLinkBlueprintLibrary::STATIC_GetLiveLinkSubjectRole(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetLiveLinkSubjectRole");
        
        ULiveLinkBlueprintLibrary_GetLiveLinkSubjectRole_Params params {};
        params.SubjectName = SubjectName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143EA70
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetLiveLinkEnabledSubjectNames
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIncludeVirtualSubject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<LiveLinkInterface::FLiveLinkSubjectName> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<LiveLinkInterface::FLiveLinkSubjectName> ULiveLinkBlueprintLibrary::STATIC_GetLiveLinkEnabledSubjectNames(bool bIncludeVirtualSubject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetLiveLinkEnabledSubjectNames");
        
        ULiveLinkBlueprintLibrary_GetLiveLinkEnabledSubjectNames_Params params {};
        params.bIncludeVirtualSubject = bIncludeVirtualSubject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01441E00
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetCurves
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TMap<BasicTypes::FName, float>         Curves                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetCurves(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, BasicTypes::TMap<BasicTypes::FName, float>* Curves)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetCurves");
        
        ULiveLinkBlueprintLibrary_GetCurves_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (Curves != nullptr)
            *Curves = params.Curves;
    }

    /**
     * Function:
     *         RVA    -> 0x0143F7A0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetChildren
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<LiveLinkInterface::FLiveLinkTransform> Children                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetChildren(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, BasicTypes::TArray<LiveLinkInterface::FLiveLinkTransform>* Children)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetChildren");
        
        ULiveLinkBlueprintLibrary_GetChildren_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        if (Children != nullptr)
            *Children = params.Children;
    }

    /**
     * Function:
     *         RVA    -> 0x01440C10
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetBasicData
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkBasicBlueprintData     BasicBlueprintData                                         (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_GetBasicData(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkBasicBlueprintData* BasicBlueprintData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetBasicData");
        
        ULiveLinkBlueprintLibrary_GetBasicData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (BasicBlueprintData != nullptr)
            *BasicBlueprintData = params.BasicBlueprintData;
    }

    /**
     * Function:
     *         RVA    -> 0x014409A0
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetAnimationStaticData
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkSkeletonStaticData     AnimationStaticData                                        (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_GetAnimationStaticData(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkSkeletonStaticData* AnimationStaticData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetAnimationStaticData");
        
        ULiveLinkBlueprintLibrary_GetAnimationStaticData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (AnimationStaticData != nullptr)
            *AnimationStaticData = params.AnimationStaticData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01440640
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetAnimationFrameData
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkAnimationFrameData     AnimationFrameData                                         (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_GetAnimationFrameData(LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle, LiveLinkInterface::FLiveLinkAnimationFrameData* AnimationFrameData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.GetAnimationFrameData");
        
        ULiveLinkBlueprintLibrary_GetAnimationFrameData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
        if (AnimationFrameData != nullptr)
            *AnimationFrameData = params.AnimationFrameData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01443590
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrameWithSpecificRole
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectName            SubjectName                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::ULiveLinkRole*                  Role                                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkBaseBlueprintData      OutBlueprintData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_EvaluateLiveLinkFrameWithSpecificRole(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName, LiveLinkInterface::ULiveLinkRole* Role, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrameWithSpecificRole");
        
        ULiveLinkBlueprintLibrary_EvaluateLiveLinkFrameWithSpecificRole_Params params {};
        params.SubjectName = SubjectName;
        params.Role = Role;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBlueprintData != nullptr)
            *OutBlueprintData = params.OutBlueprintData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01443840
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrameAtWorldTimeOffset
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectName            SubjectName                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::ULiveLinkRole*                  Role                                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              WorldTimeOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkBaseBlueprintData      OutBlueprintData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_EvaluateLiveLinkFrameAtWorldTimeOffset(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName, LiveLinkInterface::ULiveLinkRole* Role, float WorldTimeOffset, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrameAtWorldTimeOffset");
        
        ULiveLinkBlueprintLibrary_EvaluateLiveLinkFrameAtWorldTimeOffset_Params params {};
        params.SubjectName = SubjectName;
        params.Role = Role;
        params.WorldTimeOffset = WorldTimeOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBlueprintData != nullptr)
            *OutBlueprintData = params.OutBlueprintData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01443B80
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrameAtSceneTime
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectName            SubjectName                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::ULiveLinkRole*                  Role                                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimecode                             SceneTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkBaseBlueprintData      OutBlueprintData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_EvaluateLiveLinkFrameAtSceneTime(const LiveLinkInterface::FLiveLinkSubjectName& SubjectName, LiveLinkInterface::ULiveLinkRole* Role, const CoreUObject::FTimecode& SceneTime, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrameAtSceneTime");
        
        ULiveLinkBlueprintLibrary_EvaluateLiveLinkFrameAtSceneTime_Params params {};
        params.SubjectName = SubjectName;
        params.Role = Role;
        params.SceneTime = SceneTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBlueprintData != nullptr)
            *OutBlueprintData = params.OutBlueprintData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01443380
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrame
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkSubjectRepresentation  SubjectRepresentation                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkBaseBlueprintData      OutBlueprintData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkBlueprintLibrary::STATIC_EvaluateLiveLinkFrame(const LiveLinkInterface::FLiveLinkSubjectRepresentation& SubjectRepresentation, LiveLinkInterface::FLiveLinkBaseBlueprintData* OutBlueprintData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.EvaluateLiveLinkFrame");
        
        ULiveLinkBlueprintLibrary_EvaluateLiveLinkFrame_Params params {};
        params.SubjectRepresentation = SubjectRepresentation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutBlueprintData != nullptr)
            *OutBlueprintData = params.OutBlueprintData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0143FF70
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.ComponentSpaceTransform
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            Transform                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkBlueprintLibrary::STATIC_ComponentSpaceTransform(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform, CoreUObject::FTransform* Transform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.ComponentSpaceTransform");
        
        ULiveLinkBlueprintLibrary_ComponentSpaceTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        if (Transform != nullptr)
            *Transform = params.Transform;
    }

    /**
     * Function:
     *         RVA    -> 0x0143FA00
     *         Name   -> Function /Script/LiveLink.LiveLinkBlueprintLibrary.ChildCount
     *         Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         LiveLinkInterface::FLiveLinkTransform              LiveLinkTransform                                          (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t ULiveLinkBlueprintLibrary::STATIC_ChildCount(LiveLinkInterface::FLiveLinkTransform* LiveLinkTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkBlueprintLibrary.ChildCount");
        
        ULiveLinkBlueprintLibrary_ChildCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LiveLinkTransform != nullptr)
            *LiveLinkTransform = params.LiveLinkTransform;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0144F5A0
     *         Name   -> Function /Script/LiveLink.LiveLinkComponent.GetSubjectDataAtWorldTime
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  SubjectName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              WorldTime                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSuccess                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkComponent::GetSubjectDataAtWorldTime(const BasicTypes::FName& SubjectName, float WorldTime, bool* bSuccess, LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkComponent.GetSubjectDataAtWorldTime");
        
        ULiveLinkComponent_GetSubjectDataAtWorldTime_Params params {};
        params.SubjectName = SubjectName;
        params.WorldTime = WorldTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bSuccess != nullptr)
            *bSuccess = params.bSuccess;
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0144F250
     *         Name   -> Function /Script/LiveLink.LiveLinkComponent.GetSubjectDataAtSceneTime
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  SubjectName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimecode                             SceneTime                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSuccess                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkComponent::GetSubjectDataAtSceneTime(const BasicTypes::FName& SubjectName, const CoreUObject::FTimecode& SceneTime, bool* bSuccess, LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkComponent.GetSubjectDataAtSceneTime");
        
        ULiveLinkComponent_GetSubjectDataAtSceneTime_Params params {};
        params.SubjectName = SubjectName;
        params.SceneTime = SceneTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bSuccess != nullptr)
            *bSuccess = params.bSuccess;
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0144F8D0
     *         Name   -> Function /Script/LiveLink.LiveLinkComponent.GetSubjectData
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  SubjectName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSuccess                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FSubjectFrameHandle             SubjectFrameHandle                                         (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkComponent::GetSubjectData(const BasicTypes::FName& SubjectName, bool* bSuccess, LiveLinkInterface::FSubjectFrameHandle* SubjectFrameHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkComponent.GetSubjectData");
        
        ULiveLinkComponent_GetSubjectData_Params params {};
        params.SubjectName = SubjectName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bSuccess != nullptr)
            *bSuccess = params.bSuccess;
        if (SubjectFrameHandle != nullptr)
            *SubjectFrameHandle = params.SubjectFrameHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0144FB60
     *         Name   -> Function /Script/LiveLink.LiveLinkComponent.GetAvailableSubjectNames
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              SubjectNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkComponent::GetAvailableSubjectNames(BasicTypes::TArray<BasicTypes::FName>* SubjectNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkComponent.GetAvailableSubjectNames");
        
        ULiveLinkComponent_GetAvailableSubjectNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SubjectNames != nullptr)
            *SubjectNames = params.SubjectNames;
    }

    /**
     * Function:
     *         RVA    -> 0x01455D70
     *         Name   -> Function /Script/LiveLink.LiveLinkMessageBusFinder.GetAvailableProviders
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<LiveLink::FProviderPollResult>  AvailableProviders                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkMessageBusFinder::GetAvailableProviders(CoreUObject::UObject* WorldContextObject, const Engine::FLatentActionInfo& LatentInfo, float Duration, BasicTypes::TArray<LiveLink::FProviderPollResult>* AvailableProviders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkMessageBusFinder.GetAvailableProviders");
        
        ULiveLinkMessageBusFinder_GetAvailableProviders_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LatentInfo = LatentInfo;
        params.Duration = Duration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AvailableProviders != nullptr)
            *AvailableProviders = params.AvailableProviders;
    }

    /**
     * Function:
     *         RVA    -> 0x01455A40
     *         Name   -> Function /Script/LiveLink.LiveLinkMessageBusFinder.ConstructMessageBusFinder
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         LiveLink::ULiveLinkMessageBusFinder*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    LiveLink::ULiveLinkMessageBusFinder* ULiveLinkMessageBusFinder::STATIC_ConstructMessageBusFinder()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkMessageBusFinder.ConstructMessageBusFinder");
        
        ULiveLinkMessageBusFinder_ConstructMessageBusFinder_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01455B20
     *         Name   -> Function /Script/LiveLink.LiveLinkMessageBusFinder.ConnectToProvider
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LiveLink::FProviderPollResult                      Provider                                                   (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         LiveLinkInterface::FLiveLinkSourceHandle           SourceHandle                                               (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkMessageBusFinder::STATIC_ConnectToProvider(LiveLink::FProviderPollResult* Provider, LiveLinkInterface::FLiveLinkSourceHandle* SourceHandle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkMessageBusFinder.ConnectToProvider");
        
        ULiveLinkMessageBusFinder_ConnectToProvider_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Provider != nullptr)
            *Provider = params.Provider;
        if (SourceHandle != nullptr)
            *SourceHandle = params.SourceHandle;
    }

    /**
     * Function:
     *         RVA    -> 0x0145B410
     *         Name   -> Function /Script/LiveLink.LiveLinkPreset.BuildFromClient
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ULiveLinkPreset::BuildFromClient()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkPreset.BuildFromClient");
        
        ULiveLinkPreset_BuildFromClient_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0145B520
     *         Name   -> Function /Script/LiveLink.LiveLinkPreset.ApplyToClientLatent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULiveLinkPreset::ApplyToClientLatent(CoreUObject::UObject* WorldContextObject, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkPreset.ApplyToClientLatent");
        
        ULiveLinkPreset_ApplyToClientLatent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0145B7E0
     *         Name   -> Function /Script/LiveLink.LiveLinkPreset.ApplyToClient
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkPreset::ApplyToClient()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkPreset.ApplyToClient");
        
        ULiveLinkPreset_ApplyToClient_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0145B430
     *         Name   -> Function /Script/LiveLink.LiveLinkPreset.AddToClient
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         bool                                               bRecreatePresets                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULiveLinkPreset::AddToClient(bool bRecreatePresets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/LiveLink.LiveLinkPreset.AddToClient");
        
        ULiveLinkPreset_AddToClient_Params params {};
        params.bRecreatePresets = bRecreatePresets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
