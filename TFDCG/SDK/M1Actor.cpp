/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/M1Actor_ENUMS.h"
#include "Headers/M1Actor_PARAMS.h"
#include "Headers/M1Actor_UM1SkeletalMeshComponentBudgeted.h"
#include "Headers/M1Actor_UM1StaticMeshComponent.h"
#include "Headers/M1Actor_AM1StaticMeshActor.h"
#include "Headers/M1Actor_UM1WindDirectionalSourceComponent.h"
#include "Headers/M1Actor_AM1WorldSettings.h"
#include "Headers/M1Actor_UM1NavModifierSmallerMaxZComponent.h"
#include "Headers/M1Actor_AM1SkeletalMeshActor.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::M1Actor
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x01EE09A0
     *         Name   -> Function /Script/M1Actor.M1WindDirectionalSourceComponent.SetWindChannels
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         M1Actor::FM1WindChannels                           InWindChannels                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UM1WindDirectionalSourceComponent::SetWindChannels(const M1Actor::FM1WindChannels& InWindChannels)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/M1Actor.M1WindDirectionalSourceComponent.SetWindChannels");
        
        UM1WindDirectionalSourceComponent_SetWindChannels_Params params {};
        params.InWindChannels = InWindChannels;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE08A0
     *         Name   -> Function /Script/M1Actor.M1WindDirectionalSourceComponent.SetEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InEnabled                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UM1WindDirectionalSourceComponent::SetEnabled(bool InEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/M1Actor.M1WindDirectionalSourceComponent.SetEnabled");
        
        UM1WindDirectionalSourceComponent_SetEnabled_Params params {};
        params.InEnabled = InEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE0A90
     *         Name   -> Function /Script/M1Actor.M1WindDirectionalSourceComponent.IsWindChannelsValid
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         M1Actor::FM1WindChannels                           InWindChannels                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UM1WindDirectionalSourceComponent::IsWindChannelsValid(const M1Actor::FM1WindChannels& InWindChannels)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/M1Actor.M1WindDirectionalSourceComponent.IsWindChannelsValid");
        
        UM1WindDirectionalSourceComponent_IsWindChannelsValid_Params params {};
        params.InWindChannels = InWindChannels;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE0330
     *         Name   -> Function /Script/M1Actor.M1WindDirectionalSourceComponent.GustForce
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              GustStrength                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              GustPreDuration                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              GustApexDuration                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              GustPostDuration                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UM1WindDirectionalSourceComponent::GustForce(float GustStrength, float GustPreDuration, float GustApexDuration, float GustPostDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/M1Actor.M1WindDirectionalSourceComponent.GustForce");
        
        UM1WindDirectionalSourceComponent_GustForce_Params params {};
        params.GustStrength = GustStrength;
        params.GustPreDuration = GustPreDuration;
        params.GustApexDuration = GustApexDuration;
        params.GustPostDuration = GustPostDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE0670
     *         Name   -> Function /Script/M1Actor.M1WindDirectionalSourceComponent.GetWindStrengthCombinedGust
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               Position                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutDirection                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutSpeed                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UM1WindDirectionalSourceComponent::GetWindStrengthCombinedGust(const CoreUObject::FVector& Position, CoreUObject::FVector* OutDirection, float* OutSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/M1Actor.M1WindDirectionalSourceComponent.GetWindStrengthCombinedGust");
        
        UM1WindDirectionalSourceComponent_GetWindStrengthCombinedGust_Params params {};
        params.Position = Position;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutDirection != nullptr)
            *OutDirection = params.OutDirection;
        if (OutSpeed != nullptr)
            *OutSpeed = params.OutSpeed;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
