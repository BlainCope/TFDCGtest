/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/CalcShieldBaseDamage_PARAMS.h"
#include "Headers/CalcShieldBaseDamage_UCalcShieldBaseDamage_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::CalcShieldBaseDamage
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/Blueprints/Gameplay/Common/Calculation/Damage/CalcShieldBaseDamage.CalcShieldBaseDamage_C.GetDamageRatio
     *         Flags  -> (Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         M1::FM1AbilityOpCalcParam                          Param                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
     *         double                                             Ratio                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UCalcShieldBaseDamage_C::GetDamageRatio(M1::FM1AbilityOpCalcParam* Param, double* Ratio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/Gameplay/Common/Calculation/Damage/CalcShieldBaseDamage.CalcShieldBaseDamage_C.GetDamageRatio");
        
        UCalcShieldBaseDamage_C_GetDamageRatio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Param != nullptr)
            *Param = params.Param;
        if (Ratio != nullptr)
            *Ratio = params.Ratio;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/Blueprints/Gameplay/Common/Calculation/Damage/CalcShieldBaseDamage.CalcShieldBaseDamage_C.DoCalculation
     *         Flags  -> (Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
     * Parameters:
     *         M1::FM1AbilityOpCalcParam                          Param                                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
     *         M1::FM1CalcDamageInfo                              DamageInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
     *         void                                               ReturnValue
     */
    void UCalcShieldBaseDamage_C::DoCalculation(M1::FM1AbilityOpCalcParam* Param, M1::FM1CalcDamageInfo* DamageInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/Gameplay/Common/Calculation/Damage/CalcShieldBaseDamage.CalcShieldBaseDamage_C.DoCalculation");
        
        UCalcShieldBaseDamage_C_DoCalculation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Param != nullptr)
            *Param = params.Param;
        if (DamageInfo != nullptr)
            *DamageInfo = params.DamageInfo;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
