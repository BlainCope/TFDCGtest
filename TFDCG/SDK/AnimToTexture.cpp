/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AnimToTexture_ENUMS.h"
#include "Headers/AnimToTexture_PARAMS.h"
#include "Headers/AnimToTexture_UAnimToTextureDataAsset.h"
#include "Headers/AnimToTexture_UAnimToTextureInstancePlaybackLibrary.h"
#include "Headers/AnimToTexture_UEvaluateSequenceAnimInstance.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AnimToTexture
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x01EE4AA0
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.ResetInfo
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAnimToTextureDataAsset::ResetInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.ResetInfo");
        
        UAnimToTextureDataAsset_ResetInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE4B80
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.GetIndexFromAnimSequence
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UAnimSequence*                             Sequence                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAnimToTextureDataAsset::GetIndexFromAnimSequence(Engine::UAnimSequence* Sequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.GetIndexFromAnimSequence");
        
        UAnimToTextureDataAsset_GetIndexFromAnimSequence_Params params {};
        params.Sequence = Sequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE4A00
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetStaticMesh
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::UStaticMesh*                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UStaticMesh* UAnimToTextureDataAsset::BP_GetStaticMesh()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetStaticMesh");
        
        UAnimToTextureDataAsset_BP_GetStaticMesh_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE4960
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetSkeletalMesh
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::USkeletalMesh*                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::USkeletalMesh* UAnimToTextureDataAsset::BP_GetSkeletalMesh()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetSkeletalMesh");
        
        UAnimToTextureDataAsset_BP_GetSkeletalMesh_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE48A0
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetBoneWeightTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::UTexture2D*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture2D* UAnimToTextureDataAsset::BP_GetBoneWeightTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetBoneWeightTexture");
        
        UAnimToTextureDataAsset_BP_GetBoneWeightTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE48E0
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetBoneRotationTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::UTexture2D*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture2D* UAnimToTextureDataAsset::BP_GetBoneRotationTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetBoneRotationTexture");
        
        UAnimToTextureDataAsset_BP_GetBoneRotationTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE4920
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetBonePositionTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::UTexture2D*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture2D* UAnimToTextureDataAsset::BP_GetBonePositionTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureDataAsset.BP_GetBonePositionTexture");
        
        UAnimToTextureDataAsset_BP_GetBonePositionTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE5E30
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.UpdateInstanceData
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AnimToTexture::FAnimToTextureInstanceData          InstanceData                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            InstanceIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AnimToTexture::FAnimToTextureInstancePlaybackData  PlaybackData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            Transform                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAnimToTextureInstancePlaybackLibrary::STATIC_UpdateInstanceData(AnimToTexture::FAnimToTextureInstanceData* InstanceData, int32_t InstanceIndex, const AnimToTexture::FAnimToTextureInstancePlaybackData& PlaybackData, const CoreUObject::FTransform& Transform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.UpdateInstanceData");
        
        UAnimToTextureInstancePlaybackLibrary_UpdateInstanceData_Params params {};
        params.InstanceIndex = InstanceIndex;
        params.PlaybackData = PlaybackData;
        params.Transform = Transform;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InstanceData != nullptr)
            *InstanceData = params.InstanceData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE6700
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.SetupInstancedMeshComponent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::UInstancedStaticMeshComponent*             InstancedMeshComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AnimToTexture::FAnimToTextureInstanceData          InstanceData                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            NumInstances                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAnimToTextureInstancePlaybackLibrary::STATIC_SetupInstancedMeshComponent(Engine::UInstancedStaticMeshComponent* InstancedMeshComponent, AnimToTexture::FAnimToTextureInstanceData* InstanceData, int32_t NumInstances)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.SetupInstancedMeshComponent");
        
        UAnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent_Params params {};
        params.InstancedMeshComponent = InstancedMeshComponent;
        params.NumInstances = NumInstances;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InstanceData != nullptr)
            *InstanceData = params.InstanceData;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE5910
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetInstanceTransform
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AnimToTexture::FAnimToTextureInstanceData          InstanceData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            InstanceIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            InstanceTransform                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAnimToTextureInstancePlaybackLibrary::STATIC_GetInstanceTransform(const AnimToTexture::FAnimToTextureInstanceData& InstanceData, int32_t InstanceIndex, CoreUObject::FTransform* InstanceTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetInstanceTransform");
        
        UAnimToTextureInstancePlaybackLibrary_GetInstanceTransform_Params params {};
        params.InstanceData = InstanceData;
        params.InstanceIndex = InstanceIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InstanceTransform != nullptr)
            *InstanceTransform = params.InstanceTransform;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE5BC0
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetInstancePlaybackData
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AnimToTexture::FAnimToTextureInstanceData          InstanceData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            InstanceIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AnimToTexture::FAnimToTextureInstancePlaybackData  InstancePlaybackData                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAnimToTextureInstancePlaybackLibrary::STATIC_GetInstancePlaybackData(const AnimToTexture::FAnimToTextureInstanceData& InstanceData, int32_t InstanceIndex, AnimToTexture::FAnimToTextureInstancePlaybackData* InstancePlaybackData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetInstancePlaybackData");
        
        UAnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData_Params params {};
        params.InstanceData = InstanceData;
        params.InstanceIndex = InstanceIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InstancePlaybackData != nullptr)
            *InstancePlaybackData = params.InstancePlaybackData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE64F0
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.BatchUpdateInstancedMeshComponent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::UInstancedStaticMeshComponent*             InstancedMeshComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AnimToTexture::FAnimToTextureInstanceData          InstanceData                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAnimToTextureInstancePlaybackLibrary::STATIC_BatchUpdateInstancedMeshComponent(Engine::UInstancedStaticMeshComponent* InstancedMeshComponent, AnimToTexture::FAnimToTextureInstanceData* InstanceData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.BatchUpdateInstancedMeshComponent");
        
        UAnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent_Params params {};
        params.InstancedMeshComponent = InstancedMeshComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InstanceData != nullptr)
            *InstanceData = params.InstanceData;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE5650
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.AnimStateFromDataAsset
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AnimToTexture::UAnimToTextureDataAsset*            DataAsset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            StateIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AnimToTexture::FAnimToTextureAnimState             AnimState                                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAnimToTextureInstancePlaybackLibrary::STATIC_AnimStateFromDataAsset(AnimToTexture::UAnimToTextureDataAsset* DataAsset, int32_t StateIndex, AnimToTexture::FAnimToTextureAnimState* AnimState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.AnimStateFromDataAsset");
        
        UAnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset_Params params {};
        params.DataAsset = DataAsset;
        params.StateIndex = StateIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AnimState != nullptr)
            *AnimState = params.AnimState;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01EE6280
     *         Name   -> Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.AllocateInstanceData
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AnimToTexture::FAnimToTextureInstanceData          InstanceData                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAnimToTextureInstancePlaybackLibrary::STATIC_AllocateInstanceData(AnimToTexture::FAnimToTextureInstanceData* InstanceData, int32_t Count)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AnimToTexture.AnimToTextureInstancePlaybackLibrary.AllocateInstanceData");
        
        UAnimToTextureInstancePlaybackLibrary_AllocateInstanceData_Params params {};
        params.Count = Count;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InstanceData != nullptr)
            *InstanceData = params.InstanceData;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
