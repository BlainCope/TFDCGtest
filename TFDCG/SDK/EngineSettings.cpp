/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/EngineSettings_ENUMS.h"
#include "Headers/EngineSettings_PARAMS.h"
#include "Headers/EngineSettings_UConsoleSettings.h"
#include "Headers/EngineSettings_UGameMapsSettings.h"
#include "Headers/EngineSettings_UGameNetworkManagerSettings.h"
#include "Headers/EngineSettings_UGameSessionSettings.h"
#include "Headers/EngineSettings_UGeneralEngineSettings.h"
#include "Headers/EngineSettings_UGeneralProjectSettings.h"
#include "Headers/EngineSettings_UHudSettings.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::EngineSettings
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x04A71B70
     *         Name   -> Function /Script/EngineSettings.GameMapsSettings.SetSkipAssigningGamepadToPlayer1
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bSkipFirstPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGameMapsSettings::SetSkipAssigningGamepadToPlayer1(bool bSkipFirstPlayer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EngineSettings.GameMapsSettings.SetSkipAssigningGamepadToPlayer1");
        
        UGameMapsSettings_SetSkipAssigningGamepadToPlayer1_Params params {};
        params.bSkipFirstPlayer = bSkipFirstPlayer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04A71B50
     *         Name   -> Function /Script/EngineSettings.GameMapsSettings.GetSkipAssigningGamepadToPlayer1
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UGameMapsSettings::GetSkipAssigningGamepadToPlayer1()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EngineSettings.GameMapsSettings.GetSkipAssigningGamepadToPlayer1");
        
        UGameMapsSettings_GetSkipAssigningGamepadToPlayer1_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04A71C60
     *         Name   -> Function /Script/EngineSettings.GameMapsSettings.GetGameMapsSettings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         EngineSettings::UGameMapsSettings*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    EngineSettings::UGameMapsSettings* UGameMapsSettings::STATIC_GetGameMapsSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EngineSettings.GameMapsSettings.GetGameMapsSettings");
        
        UGameMapsSettings_GetGameMapsSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
