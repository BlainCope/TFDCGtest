/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/MovieSceneCapture_ENUMS.h"
#include "Headers/MovieSceneCapture_PARAMS.h"
#include "Headers/MovieSceneCapture_UMovieSceneImageCaptureProtocolBase.h"
#include "Headers/MovieSceneCapture_UCompositionGraphCaptureProtocol.h"
#include "Headers/MovieSceneCapture_IMovieSceneCaptureInterface.h"
#include "Headers/MovieSceneCapture_UFrameGrabberProtocol.h"
#include "Headers/MovieSceneCapture_UImageSequenceProtocol.h"
#include "Headers/MovieSceneCapture_UCompressedImageSequenceProtocol.h"
#include "Headers/MovieSceneCapture_UImageSequenceProtocol_BMP.h"
#include "Headers/MovieSceneCapture_UImageSequenceProtocol_PNG.h"
#include "Headers/MovieSceneCapture_UImageSequenceProtocol_JPG.h"
#include "Headers/MovieSceneCapture_UImageSequenceProtocol_EXR.h"
#include "Headers/MovieSceneCapture_UMovieSceneCapture.h"
#include "Headers/MovieSceneCapture_ULevelCapture.h"
#include "Headers/MovieSceneCapture_UMovieSceneCaptureEnvironment.h"
#include "Headers/MovieSceneCapture_UUserDefinedCaptureProtocol.h"
#include "Headers/MovieSceneCapture_UUserDefinedImageCaptureProtocol.h"
#include "Headers/MovieSceneCapture_UVideoCaptureProtocol.h"
#include "Headers/MovieSceneCapture_UMovieSceneCaptureProtocolBase.h"
#include "Headers/MovieSceneCapture_UMovieSceneAudioCaptureProtocolBase.h"
#include "Headers/MovieSceneCapture_UNullAudioCaptureProtocol.h"
#include "Headers/MovieSceneCapture_UMasterAudioSubmixCaptureProtocol.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieSceneCapture
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x055D6B60
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCapture.SetImageCaptureProtocolType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::UMovieSceneCaptureProtocolBase* ProtocolType                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneCapture::SetImageCaptureProtocolType(MovieSceneCapture::UMovieSceneCaptureProtocolBase* ProtocolType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCapture.SetImageCaptureProtocolType");
        
        UMovieSceneCapture_SetImageCaptureProtocolType_Params params {};
        params.ProtocolType = ProtocolType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x055D6A70
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCapture.SetAudioCaptureProtocolType
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::UMovieSceneCaptureProtocolBase* ProtocolType                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneCapture::SetAudioCaptureProtocolType(MovieSceneCapture::UMovieSceneCaptureProtocolBase* ProtocolType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCapture.SetAudioCaptureProtocolType");
        
        UMovieSceneCapture_SetAudioCaptureProtocolType_Params params {};
        params.ProtocolType = ProtocolType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01FADD90
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCapture.GetImageCaptureProtocol
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::UMovieSceneCaptureProtocolBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneCapture::UMovieSceneCaptureProtocolBase* UMovieSceneCapture::GetImageCaptureProtocol()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCapture.GetImageCaptureProtocol");
        
        UMovieSceneCapture_GetImageCaptureProtocol_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D42470
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCapture.GetAudioCaptureProtocol
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::UMovieSceneCaptureProtocolBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneCapture::UMovieSceneCaptureProtocolBase* UMovieSceneCapture::GetAudioCaptureProtocol()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCapture.GetAudioCaptureProtocol");
        
        UMovieSceneCapture_GetAudioCaptureProtocol_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DB6F0
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.IsCaptureInProgress
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneCaptureEnvironment::STATIC_IsCaptureInProgress()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.IsCaptureInProgress");
        
        UMovieSceneCaptureEnvironment_IsCaptureInProgress_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DB790
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.GetCaptureFrameNumber
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMovieSceneCaptureEnvironment::STATIC_GetCaptureFrameNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.GetCaptureFrameNumber");
        
        UMovieSceneCaptureEnvironment_GetCaptureFrameNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DB730
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.GetCaptureElapsedTime
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMovieSceneCaptureEnvironment::STATIC_GetCaptureElapsedTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.GetCaptureElapsedTime");
        
        UMovieSceneCaptureEnvironment_GetCaptureElapsedTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DB6C0
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.FindImageCaptureProtocol
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::UMovieSceneImageCaptureProtocolBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneCapture::UMovieSceneImageCaptureProtocolBase* UMovieSceneCaptureEnvironment::STATIC_FindImageCaptureProtocol()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.FindImageCaptureProtocol");
        
        UMovieSceneCaptureEnvironment_FindImageCaptureProtocol_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DB630
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.FindAudioCaptureProtocol
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::UMovieSceneAudioCaptureProtocolBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneCapture::UMovieSceneAudioCaptureProtocolBase* UMovieSceneCaptureEnvironment::STATIC_FindAudioCaptureProtocol()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureEnvironment.FindAudioCaptureProtocol");
        
        UMovieSceneCaptureEnvironment_FindAudioCaptureProtocol_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DE460
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.StopCapturingFinalPixels
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::StopCapturingFinalPixels()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.StopCapturingFinalPixels");
        
        UUserDefinedCaptureProtocol_StopCapturingFinalPixels_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x055DE4A0
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.StartCapturingFinalPixels
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::FCapturedPixelsID               StreamID                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::StartCapturingFinalPixels(const MovieSceneCapture::FCapturedPixelsID& StreamID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.StartCapturingFinalPixels");
        
        UUserDefinedCaptureProtocol_StartCapturingFinalPixels_Params params {};
        params.StreamID = StreamID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x055DE620
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.ResolveBuffer
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture*                                  Buffer                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneCapture::FCapturedPixelsID               BufferID                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::ResolveBuffer(Engine::UTexture* Buffer, const MovieSceneCapture::FCapturedPixelsID& BufferID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.ResolveBuffer");
        
        UUserDefinedCaptureProtocol_ResolveBuffer_Params params {};
        params.Buffer = Buffer;
        params.BufferID = BufferID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnWarmUp
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnWarmUp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnWarmUp");
        
        UUserDefinedCaptureProtocol_OnWarmUp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnTick
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnTick()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnTick");
        
        UUserDefinedCaptureProtocol_OnTick_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnStartCapture
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnStartCapture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnStartCapture");
        
        UUserDefinedCaptureProtocol_OnStartCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02D43B80
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnSetup
     *         Flags  -> (Native, Event, Protected, BlueprintEvent)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserDefinedCaptureProtocol::OnSetup()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnSetup");
        
        UUserDefinedCaptureProtocol_OnSetup_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnPreTick
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnPreTick()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnPreTick");
        
        UUserDefinedCaptureProtocol_OnPreTick_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnPixelsReceived
     *         Flags  -> (Event, Protected, HasOutParms, BlueprintEvent)
     * Parameters:
     *         MovieSceneCapture::FCapturedPixels                 Pixels                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         MovieSceneCapture::FCapturedPixelsID               ID                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         MovieSceneCapture::FFrameMetrics                   FrameMetrics                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnPixelsReceived(const MovieSceneCapture::FCapturedPixels& Pixels, const MovieSceneCapture::FCapturedPixelsID& ID, const MovieSceneCapture::FFrameMetrics& FrameMetrics)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnPixelsReceived");
        
        UUserDefinedCaptureProtocol_OnPixelsReceived_Params params {};
        params.Pixels = Pixels;
        params.ID = ID;
        params.FrameMetrics = FrameMetrics;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnPauseCapture
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnPauseCapture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnPauseCapture");
        
        UUserDefinedCaptureProtocol_OnPauseCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnFinalize
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnFinalize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnFinalize");
        
        UUserDefinedCaptureProtocol_OnFinalize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnCaptureFrame
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnCaptureFrame()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnCaptureFrame");
        
        UUserDefinedCaptureProtocol_OnCaptureFrame_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FFE20
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnCanFinalize
     *         Flags  -> (Native, Event, Protected, BlueprintEvent, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserDefinedCaptureProtocol::OnCanFinalize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnCanFinalize");
        
        UUserDefinedCaptureProtocol_OnCanFinalize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnBeginFinalize
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserDefinedCaptureProtocol::OnBeginFinalize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.OnBeginFinalize");
        
        UUserDefinedCaptureProtocol_OnBeginFinalize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x055DE2F0
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.GetCurrentFrameMetrics
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieSceneCapture::FFrameMetrics                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    MovieSceneCapture::FFrameMetrics UUserDefinedCaptureProtocol::GetCurrentFrameMetrics()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.GetCurrentFrameMetrics");
        
        UUserDefinedCaptureProtocol_GetCurrentFrameMetrics_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DE310
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.GenerateFilename
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieSceneCapture::FFrameMetrics                   InFrameMetrics                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UUserDefinedCaptureProtocol::GenerateFilename(const MovieSceneCapture::FFrameMetrics& InFrameMetrics)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedCaptureProtocol.GenerateFilename");
        
        UUserDefinedCaptureProtocol_GenerateFilename_Params params {};
        params.InFrameMetrics = InFrameMetrics;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DECB0
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedImageCaptureProtocol.WriteImageToDisk
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieSceneCapture::FCapturedPixels                 PixelData                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         MovieSceneCapture::FCapturedPixelsID               StreamID                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         MovieSceneCapture::FFrameMetrics                   FrameMetrics                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               bCopyImageData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserDefinedImageCaptureProtocol::WriteImageToDisk(const MovieSceneCapture::FCapturedPixels& PixelData, const MovieSceneCapture::FCapturedPixelsID& StreamID, const MovieSceneCapture::FFrameMetrics& FrameMetrics, bool bCopyImageData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedImageCaptureProtocol.WriteImageToDisk");
        
        UUserDefinedImageCaptureProtocol_WriteImageToDisk_Params params {};
        params.PixelData = PixelData;
        params.StreamID = StreamID;
        params.FrameMetrics = FrameMetrics;
        params.bCopyImageData = bCopyImageData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x055DF040
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedImageCaptureProtocol.GenerateFilenameForCurrentFrame
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UUserDefinedImageCaptureProtocol::GenerateFilenameForCurrentFrame()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedImageCaptureProtocol.GenerateFilenameForCurrentFrame");
        
        UUserDefinedImageCaptureProtocol_GenerateFilenameForCurrentFrame_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DF0D0
     *         Name   -> Function /Script/MovieSceneCapture.UserDefinedImageCaptureProtocol.GenerateFilenameForBuffer
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture*                                  Buffer                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneCapture::FCapturedPixelsID               StreamID                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UUserDefinedImageCaptureProtocol::GenerateFilenameForBuffer(Engine::UTexture* Buffer, const MovieSceneCapture::FCapturedPixelsID& StreamID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.UserDefinedImageCaptureProtocol.GenerateFilenameForBuffer");
        
        UUserDefinedImageCaptureProtocol_GenerateFilenameForBuffer_Params params {};
        params.Buffer = Buffer;
        params.StreamID = StreamID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x055DCFE0
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureProtocolBase.IsCapturing
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneCaptureProtocolBase::IsCapturing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureProtocolBase.IsCapturing");
        
        UMovieSceneCaptureProtocolBase_IsCapturing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4A50
     *         Name   -> Function /Script/MovieSceneCapture.MovieSceneCaptureProtocolBase.GetState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieSceneCapture::EMovieSceneCaptureProtocolState ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneCapture::EMovieSceneCaptureProtocolState UMovieSceneCaptureProtocolBase::GetState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneCapture.MovieSceneCaptureProtocolBase.GetState");
        
        UMovieSceneCaptureProtocolBase_GetState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
