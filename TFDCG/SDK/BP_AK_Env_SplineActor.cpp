/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/BP_AK_Env_SplineActor_PARAMS.h"
#include "Headers/BP_AK_Env_SplineActor_ABP_AK_Env_SplineActor_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BP_AK_Env_SplineActor
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetDistanceToPlayerFromClosestSplinePoint
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         double                                             DistanceToPlayerFromClosestSplinePoint                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::GetDistanceToPlayerFromClosestSplinePoint(double* DistanceToPlayerFromClosestSplinePoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetDistanceToPlayerFromClosestSplinePoint");
        
        ABP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DistanceToPlayerFromClosestSplinePoint != nullptr)
            *DistanceToPlayerFromClosestSplinePoint = params.DistanceToPlayerFromClosestSplinePoint;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetIsInsideSpline
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         bool                                               IsInsideSpline                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               IsInsideSplineChanged                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               isDownside                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::GetIsInsideSpline(bool* IsInsideSpline, bool* IsInsideSplineChanged, bool* isDownside)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetIsInsideSpline");
        
        ABP_AK_Env_SplineActor_C_GetIsInsideSpline_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (IsInsideSpline != nullptr)
            *IsInsideSpline = params.IsInsideSpline;
        if (IsInsideSplineChanged != nullptr)
            *IsInsideSplineChanged = params.IsInsideSplineChanged;
        if (isDownside != nullptr)
            *isDownside = params.isDownside;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetPlayerControllerCameraRotation
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         CoreUObject::FRotator                              PlayerControllerCameraRotation                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::GetPlayerControllerCameraRotation(CoreUObject::FRotator* PlayerControllerCameraRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetPlayerControllerCameraRotation");
        
        ABP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PlayerControllerCameraRotation != nullptr)
            *PlayerControllerCameraRotation = params.PlayerControllerCameraRotation;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetControlledPawnLocation
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         Engine::APawn*                                     ControlledPawnReference                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::FVector                               ControlledPawnLocation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::GetControlledPawnLocation(Engine::APawn** ControlledPawnReference, CoreUObject::FVector* ControlledPawnLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetControlledPawnLocation");
        
        ABP_AK_Env_SplineActor_C_GetControlledPawnLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ControlledPawnReference != nullptr)
            *ControlledPawnReference = params.ControlledPawnReference;
        if (ControlledPawnLocation != nullptr)
            *ControlledPawnLocation = params.ControlledPawnLocation;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.UserConstructionScript
     *         Flags  -> (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::UserConstructionScript()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.UserConstructionScript");
        
        ABP_AK_Env_SplineActor_C_UserConstructionScript_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ReceiveBeginPlay
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::ReceiveBeginPlay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ReceiveBeginPlay");
        
        ABP_AK_Env_SplineActor_C_ReceiveBeginPlay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.UpdateEmitterLocationProxy
     *         Flags  -> (BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::UpdateEmitterLocationProxy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.UpdateEmitterLocationProxy");
        
        ABP_AK_Env_SplineActor_C_UpdateEmitterLocationProxy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.Update Emitter Slowly
     *         Flags  -> (BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::UpdateEmitterSlowly()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.Update Emitter Slowly");
        
        ABP_AK_Env_SplineActor_C_UpdateEmitterSlowly_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ReceiveTick
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         float                                              DeltaSeconds                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::ReceiveTick(float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ReceiveTick");
        
        ABP_AK_Env_SplineActor_C_ReceiveTick_Params params {};
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ExecuteUbergraph_BP_AK_Env_SplineActor
     *         Flags  -> (Final, HasDefaults)
     * Parameters:
     *         int32_t                                            EntryPoint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_AK_Env_SplineActor_C::ExecuteUbergraph_BP_AK_Env_SplineActor(int32_t EntryPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/WwiseAudio/AKAudioComponent/LevelActor/BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ExecuteUbergraph_BP_AK_Env_SplineActor");
        
        ABP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor_Params params {};
        params.EntryPoint = EntryPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
