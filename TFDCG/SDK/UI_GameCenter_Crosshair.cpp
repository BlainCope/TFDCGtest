/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/UI_GameCenter_Crosshair_PARAMS.h"
#include "Headers/UI_GameCenter_Crosshair_UUI_GameCenter_Crosshair_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UI_GameCenter_Crosshair
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CalcHitGuideWidgetClampedPos
     *         Flags  -> (Private, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector2D                             InPos                                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               bClamp                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::FVector2D                             OutPos                                                     (ConstParm, Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::CalcHitGuideWidgetClampedPos(const CoreUObject::FVector2D& InPos, bool bClamp, const CoreUObject::FVector2D& OutPos)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CalcHitGuideWidgetClampedPos");
        
        UUI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos_Params params {};
        params.InPos = InPos;
        params.bClamp = bClamp;
        params.OutPos = OutPos;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ResetHitGuide
     *         Flags  -> (Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::ResetHitGuide()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ResetHitGuide");
        
        UUI_GameCenter_Crosshair_C_ResetHitGuide_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairOpacity
     *         Flags  -> (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::UpdateCrosshairOpacity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairOpacity");
        
        UUI_GameCenter_Crosshair_C_UpdateCrosshairOpacity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairSpread
     *         Flags  -> (Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::UpdateCrosshairSpread()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairSpread");
        
        UUI_GameCenter_Crosshair_C_UpdateCrosshairSpread_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.AttachHitGuideWidget
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         UMG::UUserWidget*                                  WidgetClass                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  WidgetReference                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  AttachedHitGuideWidget                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::AttachHitGuideWidget(UMG::UUserWidget* WidgetClass, UMG::UUserWidget** WidgetReference, UMG::UUserWidget** AttachedHitGuideWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.AttachHitGuideWidget");
        
        UUI_GameCenter_Crosshair_C_AttachHitGuideWidget_Params params {};
        params.WidgetClass = WidgetClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (WidgetReference != nullptr)
            *WidgetReference = params.WidgetReference;
        if (AttachedHitGuideWidget != nullptr)
            *AttachedHitGuideWidget = params.AttachedHitGuideWidget;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ApplyZoomState
     *         Flags  -> (Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         bool                                               InZoomed                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::ApplyZoomState(bool InZoomed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ApplyZoomState");
        
        UUI_GameCenter_Crosshair_C_ApplyZoomState_Params params {};
        params.InZoomed = InZoomed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CreateCrosshairWidget
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         UMG::UUserWidget*                                  CrosshairClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  CurrentWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
     *         UMG::UPanelWidget*                                 ParentWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  OutWidget                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::CreateCrosshairWidget(UMG::UUserWidget* CrosshairClass, UMG::UUserWidget* CurrentWidget, UMG::UPanelWidget* ParentWidget, UMG::UUserWidget** OutWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CreateCrosshairWidget");
        
        UUI_GameCenter_Crosshair_C_CreateCrosshairWidget_Params params {};
        params.CrosshairClass = CrosshairClass;
        params.CurrentWidget = CurrentWidget;
        params.ParentWidget = ParentWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutWidget != nullptr)
            *OutWidget = params.OutWidget;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ChangeCrosshair
     *         Flags  -> (Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         UMG::UUserWidget*                                  CrosshairClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  ZoomCrosshairClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::ChangeCrosshair(UMG::UUserWidget* CrosshairClass, UMG::UUserWidget* ZoomCrosshairClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ChangeCrosshair");
        
        UUI_GameCenter_Crosshair_C_ChangeCrosshair_Params params {};
        params.CrosshairClass = CrosshairClass;
        params.ZoomCrosshairClass = ZoomCrosshairClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeapon
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         UMG::UUserWidget*                                  InCrosshairClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  InZoomCrosshairClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_ChangedWeapon(UMG::UUserWidget* InCrosshairClass, UMG::UUserWidget* InZoomCrosshairClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeapon");
        
        UUI_GameCenter_Crosshair_C_BP_ChangedWeapon_Params params {};
        params.InCrosshairClass = InCrosshairClass;
        params.InZoomCrosshairClass = InZoomCrosshairClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponZoom
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         bool                                               bZoomed                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               bIsScopeZoomed                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_ChangedWeaponZoom(bool bZoomed, bool bIsScopeZoomed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponZoom");
        
        UUI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom_Params params {};
        params.bZoomed = bZoomed;
        params.bIsScopeZoomed = bIsScopeZoomed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponSpread
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         float                                              Spread                                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_ChangedWeaponSpread(float Spread)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponSpread");
        
        UUI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread_Params params {};
        params.Spread = Spread;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_WeaponFireBursted
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_WeaponFireBursted()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_WeaponFireBursted");
        
        UUI_GameCenter_Crosshair_C_BP_WeaponFireBursted_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_EnemyInWeaponRange
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         bool                                               bEnemyInWeaponRange                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::FColor                                InAimingNoticeCrosshairColor                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_EnemyInWeaponRange(bool bEnemyInWeaponRange, const CoreUObject::FColor& InAimingNoticeCrosshairColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_EnemyInWeaponRange");
        
        UUI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange_Params params {};
        params.bEnemyInWeaponRange = bEnemyInWeaponRange;
        params.InAimingNoticeCrosshairColor = InAimingNoticeCrosshairColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ResizedViewport
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_ResizedViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ResizedViewport");
        
        UUI_GameCenter_Crosshair_C_BP_ResizedViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateWireGuide
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         CoreUObject::FVector2D                             ScreenPos                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_UpdateWireGuide(const CoreUObject::FVector2D& ScreenPos)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateWireGuide");
        
        UUI_GameCenter_Crosshair_C_BP_UpdateWireGuide_Params params {};
        params.ScreenPos = ScreenPos;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedCameraFOV
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_ChangedCameraFOV()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedCameraFOV");
        
        UUI_GameCenter_Crosshair_C_BP_ChangedCameraFOV_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponHighReady
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         bool                                               bHighReady                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_ChangedWeaponHighReady(bool bHighReady)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponHighReady");
        
        UUI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady_Params params {};
        params.bHighReady = bHighReady;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateInstantHitGuide
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         bool                                               bShow                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  WidgetClass                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
     *         UMG::UUserWidget*                                  ZoomWidgetClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
     *         CoreUObject::FVector2D                             ScreenPos                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::BP_UpdateInstantHitGuide(bool bShow, UMG::UUserWidget* WidgetClass, UMG::UUserWidget* ZoomWidgetClass, const CoreUObject::FVector2D& ScreenPos)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateInstantHitGuide");
        
        UUI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide_Params params {};
        params.bShow = bShow;
        params.WidgetClass = WidgetClass;
        params.ZoomWidgetClass = ZoomWidgetClass;
        params.ScreenPos = ScreenPos;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ExecuteUbergraph_UI_GameCenter_Crosshair
     *         Flags  -> (Final)
     * Parameters:
     *         int32_t                                            EntryPoint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UUI_GameCenter_Crosshair_C::ExecuteUbergraph_UI_GameCenter_Crosshair(int32_t EntryPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/UI/Game/Widgets/UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ExecuteUbergraph_UI_GameCenter_Crosshair");
        
        UUI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair_Params params {};
        params.EntryPoint = EntryPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
