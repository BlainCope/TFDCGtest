/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AugmentedReality_ENUMS.h"
#include "Headers/AugmentedReality_PARAMS.h"
#include "Headers/AugmentedReality_UARTexture.h"
#include "Headers/AugmentedReality_UARTextureCameraImage.h"
#include "Headers/AugmentedReality_UARTextureCameraDepth.h"
#include "Headers/AugmentedReality_UAREnvironmentCaptureProbeTexture.h"
#include "Headers/AugmentedReality_UARTrackedGeometry.h"
#include "Headers/AugmentedReality_UAREnvironmentCaptureProbe.h"
#include "Headers/AugmentedReality_UARGeoTrackingSupport.h"
#include "Headers/AugmentedReality_UARMeshGeometry.h"
#include "Headers/AugmentedReality_UARPin.h"
#include "Headers/AugmentedReality_UARSessionConfig.h"
#include "Headers/AugmentedReality_AARSharedWorldGameMode.h"
#include "Headers/AugmentedReality_AARSharedWorldGameState.h"
#include "Headers/AugmentedReality_AARSharedWorldPlayerController.h"
#include "Headers/AugmentedReality_AARSkyLight.h"
#include "Headers/AugmentedReality_UARTraceResultDummy.h"
#include "Headers/AugmentedReality_UARPlaneGeometry.h"
#include "Headers/AugmentedReality_UARTrackedPoint.h"
#include "Headers/AugmentedReality_UARTrackedImage.h"
#include "Headers/AugmentedReality_UARTrackedQRCode.h"
#include "Headers/AugmentedReality_UARFaceGeometry.h"
#include "Headers/AugmentedReality_UARTrackedObject.h"
#include "Headers/AugmentedReality_UARTrackedPose.h"
#include "Headers/AugmentedReality_UARGeoAnchor.h"
#include "Headers/AugmentedReality_UARTrackableNotifyComponent.h"
#include "Headers/AugmentedReality_UARTypesDummyClass.h"
#include "Headers/AugmentedReality_UARCandidateImage.h"
#include "Headers/AugmentedReality_UARCandidateObject.h"
#include "Headers/AugmentedReality_AARActor.h"
#include "Headers/AugmentedReality_UARBlueprintLibrary.h"
#include "Headers/AugmentedReality_UARTraceResultLibrary.h"
#include "Headers/AugmentedReality_UARBaseAsyncTaskBlueprintProxy.h"
#include "Headers/AugmentedReality_UARSaveWorldAsyncTaskBlueprintProxy.h"
#include "Headers/AugmentedReality_UARGetCandidateObjectAsyncTaskBlueprintProxy.h"
#include "Headers/AugmentedReality_UARComponent.h"
#include "Headers/AugmentedReality_UARPlaneComponent.h"
#include "Headers/AugmentedReality_UARPointComponent.h"
#include "Headers/AugmentedReality_UARFaceComponent.h"
#include "Headers/AugmentedReality_UARImageComponent.h"
#include "Headers/AugmentedReality_UARQRCodeComponent.h"
#include "Headers/AugmentedReality_UARPoseComponent.h"
#include "Headers/AugmentedReality_UAREnvironmentProbeComponent.h"
#include "Headers/AugmentedReality_UARObjectComponent.h"
#include "Headers/AugmentedReality_UARMeshComponent.h"
#include "Headers/AugmentedReality_UARGeoAnchorComponent.h"
#include "Headers/AugmentedReality_UARDependencyHandler.h"
#include "Headers/AugmentedReality_UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.h"
#include "Headers/AugmentedReality_UGetGeoLocationAsyncTaskBlueprintProxy.h"
#include "Headers/AugmentedReality_UARLifeCycleComponent.h"
#include "Headers/AugmentedReality_UARLightEstimate.h"
#include "Headers/AugmentedReality_UARBasicLightEstimate.h"
#include "Headers/AugmentedReality_AAROriginActor.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AugmentedReality
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x04B9E4F0
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.IsTracked
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARTrackedGeometry::IsTracked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.IsTracked");
        
        UARTrackedGeometry_IsTracked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E360
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.HasSpatialMeshUsageFlag
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARSpatialMeshUsageFlags         InFlag                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARTrackedGeometry::HasSpatialMeshUsageFlag(AugmentedReality::EARSpatialMeshUsageFlags InFlag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.HasSpatialMeshUsageFlag");
        
        UARTrackedGeometry_HasSpatialMeshUsageFlag_Params params {};
        params.InFlag = InFlag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3D20
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetUnderlyingMesh
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MRMesh::UMRMeshComponent*                          ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MRMesh::UMRMeshComponent* UARTrackedGeometry::GetUnderlyingMesh()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetUnderlyingMesh");
        
        UARTrackedGeometry_GetUnderlyingMesh_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02DEB950
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetTrackingState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARTrackingState                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARTrackingState UARTrackedGeometry::GetTrackingState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetTrackingState");
        
        UARTrackedGeometry_GetTrackingState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1D20
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetObjectClassification
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARObjectClassification          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARObjectClassification UARTrackedGeometry::GetObjectClassification()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetObjectClassification");
        
        UARTrackedGeometry_GetObjectClassification_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E4A0
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UARTrackedGeometry::GetName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetName");
        
        UARTrackedGeometry_GetName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E520
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetLocalToWorldTransform
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARTrackedGeometry::GetLocalToWorldTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetLocalToWorldTransform");
        
        UARTrackedGeometry_GetLocalToWorldTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B97BE0
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetLocalToTrackingTransform
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARTrackedGeometry::GetLocalToTrackingTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetLocalToTrackingTransform");
        
        UARTrackedGeometry_GetLocalToTrackingTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E450
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetLastUpdateTimestamp
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARTrackedGeometry::GetLastUpdateTimestamp()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetLastUpdateTimestamp");
        
        UARTrackedGeometry_GetLastUpdateTimestamp_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E480
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetLastUpdateFrameNumber
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UARTrackedGeometry::GetLastUpdateFrameNumber()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetLastUpdateFrameNumber");
        
        UARTrackedGeometry_GetLastUpdateFrameNumber_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E4D0
     *         Name   -> Function /Script/AugmentedReality.ARTrackedGeometry.GetDebugName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UARTrackedGeometry::GetDebugName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedGeometry.GetDebugName");
        
        UARTrackedGeometry_GetDebugName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9FAF0
     *         Name   -> Function /Script/AugmentedReality.AREnvironmentCaptureProbe.GetExtent
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UAREnvironmentCaptureProbe::GetExtent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.AREnvironmentCaptureProbe.GetExtent");
        
        UAREnvironmentCaptureProbe_GetExtent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1530
     *         Name   -> Function /Script/AugmentedReality.AREnvironmentCaptureProbe.GetEnvironmentCaptureTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::UAREnvironmentCaptureProbeTexture* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UAREnvironmentCaptureProbeTexture* UAREnvironmentCaptureProbe::GetEnvironmentCaptureTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.AREnvironmentCaptureProbe.GetEnvironmentCaptureTexture");
        
        UAREnvironmentCaptureProbe_GetEnvironmentCaptureTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B95510
     *         Name   -> Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingSupport
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARGeoTrackingSupport*           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARGeoTrackingSupport* UARGeoTrackingSupport::STATIC_GetGeoTrackingSupport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingSupport");
        
        UARGeoTrackingSupport_GetGeoTrackingSupport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB4D0
     *         Name   -> Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingStateReason
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARGeoTrackingStateReason        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARGeoTrackingStateReason UARGeoTrackingSupport::GetGeoTrackingStateReason()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingStateReason");
        
        UARGeoTrackingSupport_GetGeoTrackingStateReason_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EDBB0
     *         Name   -> Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingState
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARGeoTrackingState              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARGeoTrackingState UARGeoTrackingSupport::GetGeoTrackingState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingState");
        
        UARGeoTrackingSupport_GetGeoTrackingState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAD50
     *         Name   -> Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingAccuracy
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARGeoTrackingAccuracy           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARGeoTrackingAccuracy UARGeoTrackingSupport::GetGeoTrackingAccuracy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoTrackingSupport.GetGeoTrackingAccuracy");
        
        UARGeoTrackingSupport_GetGeoTrackingAccuracy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B94FA0
     *         Name   -> Function /Script/AugmentedReality.ARGeoTrackingSupport.AddGeoAnchorAtLocationWithAltitude
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Longitude                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Latitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AltitudeMeters                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OptionalAnchorName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARGeoTrackingSupport::AddGeoAnchorAtLocationWithAltitude(float Longitude, float Latitude, float AltitudeMeters, const BasicTypes::FString& OptionalAnchorName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoTrackingSupport.AddGeoAnchorAtLocationWithAltitude");
        
        UARGeoTrackingSupport_AddGeoAnchorAtLocationWithAltitude_Params params {};
        params.Longitude = Longitude;
        params.Latitude = Latitude;
        params.AltitudeMeters = AltitudeMeters;
        params.OptionalAnchorName = OptionalAnchorName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B95290
     *         Name   -> Function /Script/AugmentedReality.ARGeoTrackingSupport.AddGeoAnchorAtLocation
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Longitude                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Latitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OptionalAnchorName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARGeoTrackingSupport::AddGeoAnchorAtLocation(float Longitude, float Latitude, const BasicTypes::FString& OptionalAnchorName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoTrackingSupport.AddGeoAnchorAtLocation");
        
        UARGeoTrackingSupport_AddGeoAnchorAtLocation_Params params {};
        params.Longitude = Longitude;
        params.Latitude = Latitude;
        params.OptionalAnchorName = OptionalAnchorName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9FF90
     *         Name   -> Function /Script/AugmentedReality.ARMeshGeometry.GetObjectClassificationAtLocation
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               InWorldLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARObjectClassification          OutClassification                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutClassificationLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxLocationDiff                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARMeshGeometry::GetObjectClassificationAtLocation(const CoreUObject::FVector& InWorldLocation, AugmentedReality::EARObjectClassification* OutClassification, CoreUObject::FVector* OutClassificationLocation, float MaxLocationDiff)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARMeshGeometry.GetObjectClassificationAtLocation");
        
        UARMeshGeometry_GetObjectClassificationAtLocation_Params params {};
        params.InWorldLocation = InWorldLocation;
        params.MaxLocationDiff = MaxLocationDiff;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutClassification != nullptr)
            *OutClassification = params.OutClassification;
        if (OutClassificationLocation != nullptr)
            *OutClassificationLocation = params.OutClassificationLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02DEB950
     *         Name   -> Function /Script/AugmentedReality.ARPin.GetTrackingState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARTrackingState                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARTrackingState UARPin::GetTrackingState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.GetTrackingState");
        
        UARPin_GetTrackingState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02B92B70
     *         Name   -> Function /Script/AugmentedReality.ARPin.GetTrackedGeometry
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::UARTrackedGeometry*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTrackedGeometry* UARPin::GetTrackedGeometry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.GetTrackedGeometry");
        
        UARPin_GetTrackedGeometry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3B10
     *         Name   -> Function /Script/AugmentedReality.ARPin.GetPinnedComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::USceneComponent*                           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::USceneComponent* UARPin::GetPinnedComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.GetPinnedComponent");
        
        UARPin_GetPinnedComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B97B80
     *         Name   -> Function /Script/AugmentedReality.ARPin.GetLocalToWorldTransform
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARPin::GetLocalToWorldTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.GetLocalToWorldTransform");
        
        UARPin_GetLocalToWorldTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B97BE0
     *         Name   -> Function /Script/AugmentedReality.ARPin.GetLocalToTrackingTransform
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARPin::GetLocalToTrackingTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.GetLocalToTrackingTransform");
        
        UARPin_GetLocalToTrackingTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B978A0
     *         Name   -> Function /Script/AugmentedReality.ARPin.GetDebugName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UARPin::GetDebugName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.GetDebugName");
        
        UARPin_GetDebugName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B978C0
     *         Name   -> Function /Script/AugmentedReality.ARPin.DebugDraw
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, Const)
     * Parameters:
     *         Engine::UWorld*                                    World                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Color                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PersistForSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPin::DebugDraw(Engine::UWorld* World, const CoreUObject::FLinearColor& Color, float Scale, float PersistForSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPin.DebugDraw");
        
        UARPin_DebugDraw_Params params {};
        params.World = World;
        params.Color = Color;
        params.Scale = Scale;
        params.PersistForSeconds = PersistForSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A330
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.ShouldResetTrackedObjects
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARSessionConfig::ShouldResetTrackedObjects()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.ShouldResetTrackedObjects");
        
        UARSessionConfig_ShouldResetTrackedObjects_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D497D0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.ShouldResetCameraTracking
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARSessionConfig::ShouldResetCameraTracking()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.ShouldResetCameraTracking");
        
        UARSessionConfig_ShouldResetCameraTracking_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A570
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.ShouldRenderCameraOverlay
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARSessionConfig::ShouldRenderCameraOverlay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.ShouldRenderCameraOverlay");
        
        UARSessionConfig_ShouldRenderCameraOverlay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A550
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.ShouldEnableCameraTracking
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARSessionConfig::ShouldEnableCameraTracking()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.ShouldEnableCameraTracking");
        
        UARSessionConfig_ShouldEnableCameraTracking_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A530
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.ShouldEnableAutoFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARSessionConfig::ShouldEnableAutoFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.ShouldEnableAutoFocus");
        
        UARSessionConfig_ShouldEnableAutoFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99F30
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetWorldMapData
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        WorldMapData                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetWorldMapData(BasicTypes::TArray<uint8_t> WorldMapData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetWorldMapData");
        
        UARSessionConfig_SetWorldMapData_Params params {};
        params.WorldMapData = WorldMapData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B997D0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetSessionTrackingFeatureToEnable
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EARSessionTrackingFeature        InSessionTrackingFeature                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetSessionTrackingFeatureToEnable(AugmentedReality::EARSessionTrackingFeature InSessionTrackingFeature)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetSessionTrackingFeatureToEnable");
        
        UARSessionConfig_SetSessionTrackingFeatureToEnable_Params params {};
        params.InSessionTrackingFeature = InSessionTrackingFeature;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B996E0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetSceneReconstructionMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EARSceneReconstruction           InSceneReconstructionMethod                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetSceneReconstructionMethod(AugmentedReality::EARSceneReconstruction InSceneReconstructionMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetSceneReconstructionMethod");
        
        UARSessionConfig_SetSceneReconstructionMethod_Params params {};
        params.InSceneReconstructionMethod = InSceneReconstructionMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A240
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetResetTrackedObjects
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetResetTrackedObjects(bool bNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetResetTrackedObjects");
        
        UARSessionConfig_SetResetTrackedObjects_Params params {};
        params.bNewValue = bNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A350
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetResetCameraTracking
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetResetCameraTracking(bool bNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetResetCameraTracking");
        
        UARSessionConfig_SetResetCameraTracking_Params params {};
        params.bNewValue = bNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99900
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetFaceTrackingUpdate
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EARFaceTrackingUpdate            InUpdate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetFaceTrackingUpdate(AugmentedReality::EARFaceTrackingUpdate InUpdate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetFaceTrackingUpdate");
        
        UARSessionConfig_SetFaceTrackingUpdate_Params params {};
        params.InUpdate = InUpdate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99A10
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetFaceTrackingDirection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EARFaceTrackingDirection         InDirection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetFaceTrackingDirection(AugmentedReality::EARFaceTrackingDirection InDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetFaceTrackingDirection");
        
        UARSessionConfig_SetFaceTrackingDirection_Params params {};
        params.InDirection = InDirection;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A440
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetEnableAutoFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetEnableAutoFocus(bool bNewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetEnableAutoFocus");
        
        UARSessionConfig_SetEnableAutoFocus_Params params {};
        params.bNewValue = bNewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99B20
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetDesiredVideoFormat
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::FARVideoFormat                   NewFormat                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetDesiredVideoFormat(const AugmentedReality::FARVideoFormat& NewFormat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetDesiredVideoFormat");
        
        UARSessionConfig_SetDesiredVideoFormat_Params params {};
        params.NewFormat = NewFormat;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99D60
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.SetCandidateObjectList
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARCandidateObject*> InCandidateObjects                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::SetCandidateObjectList(BasicTypes::TArray<AugmentedReality::UARCandidateObject*> InCandidateObjects)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.SetCandidateObjectList");
        
        UARSessionConfig_SetCandidateObjectList_Params params {};
        params.InCandidateObjects = InCandidateObjects;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A070
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetWorldMapData
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<uint8_t> UARSessionConfig::GetWorldMapData()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetWorldMapData");
        
        UARSessionConfig_GetWorldMapData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D65D80
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetWorldAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARWorldAlignment                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARWorldAlignment UARSessionConfig::GetWorldAlignment()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetWorldAlignment");
        
        UARSessionConfig_GetWorldAlignment_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A5E0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetSessionType
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARSessionType                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARSessionType UARSessionConfig::GetSessionType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetSessionType");
        
        UARSessionConfig_GetSessionType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B998C0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetSceneReconstructionMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARSceneReconstruction           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARSceneReconstruction UARSessionConfig::GetSceneReconstructionMethod()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetSceneReconstructionMethod");
        
        UARSessionConfig_GetSceneReconstructionMethod_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A5B0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetPlaneDetectionMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARPlaneDetectionMode            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARPlaneDetectionMode UARSessionConfig::GetPlaneDetectionMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetPlaneDetectionMode");
        
        UARSessionConfig_GetPlaneDetectionMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D4B760
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetMaxNumSimultaneousImagesTracked
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UARSessionConfig::GetMaxNumSimultaneousImagesTracked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetMaxNumSimultaneousImagesTracked");
        
        UARSessionConfig_GetMaxNumSimultaneousImagesTracked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D51C70
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetLightEstimationMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARLightEstimationMode           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARLightEstimationMode UARSessionConfig::GetLightEstimationMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetLightEstimationMode");
        
        UARSessionConfig_GetLightEstimationMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A590
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetFrameSyncMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARFrameSyncMode                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARFrameSyncMode UARSessionConfig::GetFrameSyncMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetFrameSyncMode");
        
        UARSessionConfig_GetFrameSyncMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B999F0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetFaceTrackingUpdate
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARFaceTrackingUpdate            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARFaceTrackingUpdate UARSessionConfig::GetFaceTrackingUpdate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetFaceTrackingUpdate");
        
        UARSessionConfig_GetFaceTrackingUpdate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99B00
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetFaceTrackingDirection
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARFaceTrackingDirection         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARFaceTrackingDirection UARSessionConfig::GetFaceTrackingDirection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetFaceTrackingDirection");
        
        UARSessionConfig_GetFaceTrackingDirection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04A71B50
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetEnvironmentCaptureProbeType
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EAREnvironmentCaptureProbeType   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EAREnvironmentCaptureProbeType UARSessionConfig::GetEnvironmentCaptureProbeType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetEnvironmentCaptureProbeType");
        
        UARSessionConfig_GetEnvironmentCaptureProbeType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B998E0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetEnabledSessionTrackingFeature
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARSessionTrackingFeature        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARSessionTrackingFeature UARSessionConfig::GetEnabledSessionTrackingFeature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetEnabledSessionTrackingFeature");
        
        UARSessionConfig_GetEnabledSessionTrackingFeature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99C20
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetDesiredVideoFormat
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::FARVideoFormat                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    AugmentedReality::FARVideoFormat UARSessionConfig::GetDesiredVideoFormat()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetDesiredVideoFormat");
        
        UARSessionConfig_GetDesiredVideoFormat_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99EA0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetCandidateObjectList
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARCandidateObject*> ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARCandidateObject*> UARSessionConfig::GetCandidateObjectList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetCandidateObjectList");
        
        UARSessionConfig_GetCandidateObjectList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A1B0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.GetCandidateImageList
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARCandidateImage*> ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARCandidateImage*> UARSessionConfig::GetCandidateImageList()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.GetCandidateImageList");
        
        UARSessionConfig_GetCandidateImageList_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B99C50
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.AddCandidateObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARCandidateObject*              CandidateObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::AddCandidateObject(AugmentedReality::UARCandidateObject* CandidateObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.AddCandidateObject");
        
        UARSessionConfig_AddCandidateObject_Params params {};
        params.CandidateObject = CandidateObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9A0A0
     *         Name   -> Function /Script/AugmentedReality.ARSessionConfig.AddCandidateImage
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARCandidateImage*               NewCandidateImage                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARSessionConfig::AddCandidateImage(AugmentedReality::UARCandidateImage* NewCandidateImage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSessionConfig.AddCandidateImage");
        
        UARSessionConfig_AddCandidateImage_Params params {};
        params.NewCandidateImage = NewCandidateImage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9B460
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldGameMode.SetPreviewImageData
     *         Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        ImageData                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AARSharedWorldGameMode::SetPreviewImageData(BasicTypes::TArray<uint8_t> ImageData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldGameMode.SetPreviewImageData");
        
        AARSharedWorldGameMode_SetPreviewImageData_Params params {};
        params.ImageData = ImageData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9B2E0
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldGameMode.SetARWorldSharingIsReady
     *         Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AARSharedWorldGameMode::SetARWorldSharingIsReady()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldGameMode.SetARWorldSharingIsReady");
        
        AARSharedWorldGameMode_SetARWorldSharingIsReady_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9B310
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldGameMode.SetARSharedWorldData
     *         Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        ARWorldData                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AARSharedWorldGameMode::SetARSharedWorldData(BasicTypes::TArray<uint8_t> ARWorldData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldGameMode.SetARSharedWorldData");
        
        AARSharedWorldGameMode_SetARSharedWorldData_Params params {};
        params.ARWorldData = ARWorldData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9B2C0
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldGameMode.GetARSharedWorldGameState
     *         Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::AARSharedWorldGameState*         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::AARSharedWorldGameState* AARSharedWorldGameMode::GetARSharedWorldGameState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldGameMode.GetARSharedWorldGameState");
        
        AARSharedWorldGameMode_GetARSharedWorldGameState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldGameState.K2_OnARWorldMapIsReady
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AARSharedWorldGameState::K2_OnARWorldMapIsReady()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldGameState.K2_OnARWorldMapIsReady");
        
        AARSharedWorldGameState_K2_OnARWorldMapIsReady_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9C5D0
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldPlayerController.ServerMarkReadyForReceiving
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AARSharedWorldPlayerController::ServerMarkReadyForReceiving()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldPlayerController.ServerMarkReadyForReceiving");
        
        AARSharedWorldPlayerController_ServerMarkReadyForReceiving_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9C230
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldPlayerController.ClientUpdatePreviewImageData
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
     * Parameters:
     *         int32_t                                            Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<uint8_t>                        Buffer                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AARSharedWorldPlayerController::ClientUpdatePreviewImageData(int32_t Offset, BasicTypes::TArray<uint8_t> Buffer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldPlayerController.ClientUpdatePreviewImageData");
        
        AARSharedWorldPlayerController_ClientUpdatePreviewImageData_Params params {};
        params.Offset = Offset;
        params.Buffer = Buffer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9C050
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldPlayerController.ClientUpdateARWorldData
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
     * Parameters:
     *         int32_t                                            Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<uint8_t>                        Buffer                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AARSharedWorldPlayerController::ClientUpdateARWorldData(int32_t Offset, BasicTypes::TArray<uint8_t> Buffer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldPlayerController.ClientUpdateARWorldData");
        
        AARSharedWorldPlayerController_ClientUpdateARWorldData_Params params {};
        params.Offset = Offset;
        params.Buffer = Buffer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9C410
     *         Name   -> Function /Script/AugmentedReality.ARSharedWorldPlayerController.ClientInitSharedWorld
     *         Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
     * Parameters:
     *         int32_t                                            PreviewImageSize                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ARWorldDataSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AARSharedWorldPlayerController::ClientInitSharedWorld(int32_t PreviewImageSize, int32_t ARWorldDataSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSharedWorldPlayerController.ClientInitSharedWorld");
        
        AARSharedWorldPlayerController_ClientInitSharedWorld_Params params {};
        params.PreviewImageSize = PreviewImageSize;
        params.ARWorldDataSize = ARWorldDataSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9CBD0
     *         Name   -> Function /Script/AugmentedReality.ARSkyLight.SetEnvironmentCaptureProbe
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UAREnvironmentCaptureProbe*      InCaptureProbe                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AARSkyLight::SetEnvironmentCaptureProbe(AugmentedReality::UAREnvironmentCaptureProbe* InCaptureProbe)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSkyLight.SetEnvironmentCaptureProbe");
        
        AARSkyLight_SetEnvironmentCaptureProbe_Params params {};
        params.InCaptureProbe = InCaptureProbe;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015F97A0
     *         Name   -> Function /Script/AugmentedReality.ARPlaneGeometry.GetSubsumedBy
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::UARPlaneGeometry*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARPlaneGeometry* UARPlaneGeometry::GetSubsumedBy()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneGeometry.GetSubsumedBy");
        
        UARPlaneGeometry_GetSubsumedBy_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E930
     *         Name   -> Function /Script/AugmentedReality.ARPlaneGeometry.GetOrientation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARPlaneOrientation              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARPlaneOrientation UARPlaneGeometry::GetOrientation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneGeometry.GetOrientation");
        
        UARPlaneGeometry_GetOrientation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E9E0
     *         Name   -> Function /Script/AugmentedReality.ARPlaneGeometry.GetExtent
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UARPlaneGeometry::GetExtent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneGeometry.GetExtent");
        
        UARPlaneGeometry_GetExtent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9EA10
     *         Name   -> Function /Script/AugmentedReality.ARPlaneGeometry.GetCenter
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UARPlaneGeometry::GetCenter()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneGeometry.GetCenter");
        
        UARPlaneGeometry_GetCenter_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E950
     *         Name   -> Function /Script/AugmentedReality.ARPlaneGeometry.GetBoundaryPolygonInLocalSpace
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> UARPlaneGeometry::GetBoundaryPolygonInLocalSpace()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneGeometry.GetBoundaryPolygonInLocalSpace");
        
        UARPlaneGeometry_GetBoundaryPolygonInLocalSpace_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9ED70
     *         Name   -> Function /Script/AugmentedReality.ARTrackedImage.GetEstimateSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UARTrackedImage::GetEstimateSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedImage.GetEstimateSize");
        
        UARTrackedImage_GetEstimateSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9ED90
     *         Name   -> Function /Script/AugmentedReality.ARTrackedImage.GetDetectedImage
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::UARCandidateImage*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARCandidateImage* UARTrackedImage::GetDetectedImage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedImage.GetDetectedImage");
        
        UARTrackedImage_GetDetectedImage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9F3E0
     *         Name   -> Function /Script/AugmentedReality.ARFaceGeometry.GetWorldSpaceEyeTransform
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EAREye                           Eye                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARFaceGeometry::GetWorldSpaceEyeTransform(AugmentedReality::EAREye Eye)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceGeometry.GetWorldSpaceEyeTransform");
        
        UARFaceGeometry_GetWorldSpaceEyeTransform_Params params {};
        params.Eye = Eye;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9F500
     *         Name   -> Function /Script/AugmentedReality.ARFaceGeometry.GetLocalSpaceEyeTransform
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EAREye                           Eye                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARFaceGeometry::GetLocalSpaceEyeTransform(AugmentedReality::EAREye Eye)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceGeometry.GetLocalSpaceEyeTransform");
        
        UARFaceGeometry_GetLocalSpaceEyeTransform_Params params {};
        params.Eye = Eye;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9F710
     *         Name   -> Function /Script/AugmentedReality.ARFaceGeometry.GetBlendShapeValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARFaceBlendShape                BlendShape                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARFaceGeometry::GetBlendShapeValue(AugmentedReality::EARFaceBlendShape BlendShape)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceGeometry.GetBlendShapeValue");
        
        UARFaceGeometry_GetBlendShapeValue_Params params {};
        params.BlendShape = BlendShape;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9F610
     *         Name   -> Function /Script/AugmentedReality.ARFaceGeometry.GetBlendShapes
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TMap<AugmentedReality::EARFaceBlendShape, float> ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TMap<AugmentedReality::EARFaceBlendShape, float> UARFaceGeometry::GetBlendShapes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceGeometry.GetBlendShapes");
        
        UARFaceGeometry_GetBlendShapes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9ED90
     *         Name   -> Function /Script/AugmentedReality.ARTrackedObject.GetDetectedObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::UARCandidateObject*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARCandidateObject* UARTrackedObject::GetDetectedObject()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedObject.GetDetectedObject");
        
        UARTrackedObject_GetDetectedObject_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9FD50
     *         Name   -> Function /Script/AugmentedReality.ARTrackedPose.GetTrackedPoseData
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::FARPose3D                        ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    AugmentedReality::FARPose3D UARTrackedPose::GetTrackedPoseData()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTrackedPose.GetTrackedPoseData");
        
        UARTrackedPose_GetTrackedPoseData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA0360
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchor.GetLongitude
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARGeoAnchor::GetLongitude()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchor.GetLongitude");
        
        UARGeoAnchor_GetLongitude_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA0340
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchor.GetLatitude
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARGeoAnchor::GetLatitude()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchor.GetLatitude");
        
        UARGeoAnchor_GetLatitude_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1770
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchor.GetAltitudeSource
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARAltitudeSource                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARAltitudeSource UARGeoAnchor::GetAltitudeSource()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchor.GetAltitudeSource");
        
        UARGeoAnchor_GetAltitudeSource_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA0320
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchor.GetAltitudeMeters
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARGeoAnchor::GetAltitudeMeters()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchor.GetAltitudeMeters");
        
        UARGeoAnchor_GetAltitudeMeters_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01648CF0
     *         Name   -> Function /Script/AugmentedReality.ARCandidateImage.GetPhysicalWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARCandidateImage::GetPhysicalWidth()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateImage.GetPhysicalWidth");
        
        UARCandidateImage_GetPhysicalWidth_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D42BA0
     *         Name   -> Function /Script/AugmentedReality.ARCandidateImage.GetPhysicalHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARCandidateImage::GetPhysicalHeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateImage.GetPhysicalHeight");
        
        UARCandidateImage_GetPhysicalHeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4A50
     *         Name   -> Function /Script/AugmentedReality.ARCandidateImage.GetOrientation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AugmentedReality::EARCandidateImageOrientation     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARCandidateImageOrientation UARCandidateImage::GetOrientation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateImage.GetOrientation");
        
        UARCandidateImage_GetOrientation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4A70
     *         Name   -> Function /Script/AugmentedReality.ARCandidateImage.GetFriendlyName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UARCandidateImage::GetFriendlyName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateImage.GetFriendlyName");
        
        UARCandidateImage_GetFriendlyName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3B10
     *         Name   -> Function /Script/AugmentedReality.ARCandidateImage.GetCandidateTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTexture2D*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture2D* UARCandidateImage::GetCandidateTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateImage.GetCandidateTexture");
        
        UARCandidateImage_GetCandidateTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4E00
     *         Name   -> Function /Script/AugmentedReality.ARCandidateObject.SetFriendlyName
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                NewName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARCandidateObject::SetFriendlyName(const BasicTypes::FString& NewName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateObject.SetFriendlyName");
        
        UARCandidateObject_SetFriendlyName_Params params {};
        params.NewName = NewName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4F80
     *         Name   -> Function /Script/AugmentedReality.ARCandidateObject.SetCandidateObjectData
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        InCandidateObject                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARCandidateObject::SetCandidateObjectData(BasicTypes::TArray<uint8_t> InCandidateObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateObject.SetCandidateObjectData");
        
        UARCandidateObject_SetCandidateObjectData_Params params {};
        params.InCandidateObject = InCandidateObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4CE0
     *         Name   -> Function /Script/AugmentedReality.ARCandidateObject.SetBoundingBox
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FBox                                  InBoundingBox                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARCandidateObject::SetBoundingBox(const CoreUObject::FBox& InBoundingBox)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateObject.SetBoundingBox");
        
        UARCandidateObject_SetBoundingBox_Params params {};
        params.InBoundingBox = InBoundingBox;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4F50
     *         Name   -> Function /Script/AugmentedReality.ARCandidateObject.GetFriendlyName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UARCandidateObject::GetFriendlyName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateObject.GetFriendlyName");
        
        UARCandidateObject_GetFriendlyName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA5080
     *         Name   -> Function /Script/AugmentedReality.ARCandidateObject.GetCandidateObjectData
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<uint8_t>                        ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<uint8_t> UARCandidateObject::GetCandidateObjectData()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateObject.GetCandidateObjectData");
        
        UARCandidateObject_GetCandidateObjectData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA4DD0
     *         Name   -> Function /Script/AugmentedReality.ARCandidateObject.GetBoundingBox
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FBox                                  ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FBox UARCandidateObject::GetBoundingBox()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARCandidateObject.GetBoundingBox");
        
        UARCandidateObject_GetBoundingBox_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B77690
     *         Name   -> Function /Script/AugmentedReality.ARActor.AddARComponent
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARComponent*                    InComponentClass                                           (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FGuid                                 NativeID                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARComponent*                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARComponent* AARActor::AddARComponent(AugmentedReality::UARComponent* InComponentClass, const CoreUObject::FGuid& NativeID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARActor.AddARComponent");
        
        AARActor_AddARComponent_Params params {};
        params.InComponentClass = InComponentClass;
        params.NativeID = NativeID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B5E0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.UnpinComponent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           ComponentToUnpin                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_UnpinComponent(Engine::USceneComponent* ComponentToUnpin)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.UnpinComponent");
        
        UARBlueprintLibrary_UnpinComponent_Params params {};
        params.ComponentToUnpin = ComponentToUnpin;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7D920
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.ToggleARCapture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bOnOff                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARCaptureType                   CaptureType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_ToggleARCapture(bool bOnOff, AugmentedReality::EARCaptureType CaptureType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.ToggleARCapture");
        
        UARBlueprintLibrary_ToggleARCapture_Params params {};
        params.bOnOff = bOnOff;
        params.CaptureType = CaptureType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7DC50
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.StopARSession
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_StopARSession()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.StopARSession");
        
        UARBlueprintLibrary_StopARSession_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7DD60
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.StartARSession
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARSessionConfig*                SessionConfig                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_StartARSession(AugmentedReality::UARSessionConfig* SessionConfig)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.StartARSession");
        
        UARBlueprintLibrary_StartARSession_Params params {};
        params.SessionConfig = SessionConfig;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7D840
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.SetEnabledXRCamera
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bOnOff                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_SetEnabledXRCamera(bool bOnOff)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.SetEnabledXRCamera");
        
        UARBlueprintLibrary_SetEnabledXRCamera_Params params {};
        params.bOnOff = bOnOff;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B798A0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.SetARWorldScale
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InWorldScale                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_SetARWorldScale(float InWorldScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.SetARWorldScale");
        
        UARBlueprintLibrary_SetARWorldScale_Params params {};
        params.InWorldScale = InWorldScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79980
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.SetARWorldOriginLocationAndRotation
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               OriginLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              OriginRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               bIsTransformInWorldSpace                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMaintainUpDirection                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_SetARWorldOriginLocationAndRotation(const CoreUObject::FVector& OriginLocation, const CoreUObject::FRotator& OriginRotation, bool bIsTransformInWorldSpace, bool bMaintainUpDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.SetARWorldOriginLocationAndRotation");
        
        UARBlueprintLibrary_SetARWorldOriginLocationAndRotation_Params params {};
        params.OriginLocation = OriginLocation;
        params.OriginRotation = OriginRotation;
        params.bIsTransformInWorldSpace = bIsTransformInWorldSpace;
        params.bMaintainUpDirection = bMaintainUpDirection;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7D630
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.SetAlignmentTransform
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FTransform                            InAlignmentTransform                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_SetAlignmentTransform(const CoreUObject::FTransform& InAlignmentTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.SetAlignmentTransform");
        
        UARBlueprintLibrary_SetAlignmentTransform_Params params {};
        params.InAlignmentTransform = InAlignmentTransform;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B120
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.SaveARPinToLocalStore
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InSaveName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARPin*                          InPin                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_SaveARPinToLocalStore(const BasicTypes::FName& InSaveName, AugmentedReality::UARPin* InPin)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.SaveARPinToLocalStore");
        
        UARBlueprintLibrary_SaveARPinToLocalStore_Params params {};
        params.InSaveName = InSaveName;
        params.InPin = InPin;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7D750
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.ResizeXRCamera
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FIntPoint                             InSize                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FIntPoint                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FIntPoint UARBlueprintLibrary::STATIC_ResizeXRCamera(const CoreUObject::FIntPoint& InSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.ResizeXRCamera");
        
        UARBlueprintLibrary_ResizeXRCamera_Params params {};
        params.InSize = InSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B450
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.RemovePin
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARPin*                          PinToRemove                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_RemovePin(AugmentedReality::UARPin* PinToRemove)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.RemovePin");
        
        UARBlueprintLibrary_RemovePin_Params params {};
        params.PinToRemove = PinToRemove;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AF80
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.RemoveARPinFromLocalStore
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InSaveName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_RemoveARPinFromLocalStore(const BasicTypes::FName& InSaveName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.RemoveARPinFromLocalStore");
        
        UARBlueprintLibrary_RemoveARPinFromLocalStore_Params params {};
        params.InSaveName = InSaveName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AE90
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.RemoveAllARPinsFromLocalStore
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_RemoveAllARPinsFromLocalStore()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.RemoveAllARPinsFromLocalStore");
        
        UARBlueprintLibrary_RemoveAllARPinsFromLocalStore_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B830
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.PinComponentToTraceResult
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           ComponentToPin                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DebugName                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARPin*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARPin* UARBlueprintLibrary::STATIC_PinComponentToTraceResult(Engine::USceneComponent* ComponentToPin, const AugmentedReality::FARTraceResult& TraceResult, const BasicTypes::FName& DebugName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.PinComponentToTraceResult");
        
        UARBlueprintLibrary_PinComponentToTraceResult_Params params {};
        params.ComponentToPin = ComponentToPin;
        params.TraceResult = TraceResult;
        params.DebugName = DebugName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B6B0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.PinComponentToARPin
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           ComponentToPin                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARPin*                          Pin                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_PinComponentToARPin(Engine::USceneComponent* ComponentToPin, AugmentedReality::UARPin* Pin)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.PinComponentToARPin");
        
        UARBlueprintLibrary_PinComponentToARPin_Params params {};
        params.ComponentToPin = ComponentToPin;
        params.Pin = Pin;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7BB20
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.PinComponent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           ComponentToPin                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            PinToWorldTransform                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARTrackedGeometry*              TrackedGeometry                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  DebugName                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARPin*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARPin* UARBlueprintLibrary::STATIC_PinComponent(Engine::USceneComponent* ComponentToPin, const CoreUObject::FTransform& PinToWorldTransform, AugmentedReality::UARTrackedGeometry* TrackedGeometry, const BasicTypes::FName& DebugName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.PinComponent");
        
        UARBlueprintLibrary_PinComponent_Params params {};
        params.ComponentToPin = ComponentToPin;
        params.PinToWorldTransform = PinToWorldTransform;
        params.TrackedGeometry = TrackedGeometry;
        params.DebugName = DebugName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7DD40
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.PauseARSession
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_PauseARSession()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.PauseARSession");
        
        UARBlueprintLibrary_PauseARSession_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B2A0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.LoadARPinsFromLocalStore
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TMap<BasicTypes::FName, AugmentedReality::UARPin*> ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TMap<BasicTypes::FName, AugmentedReality::UARPin*> UARBlueprintLibrary::STATIC_LoadARPinsFromLocalStore()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.LoadARPinsFromLocalStore");
        
        UARBlueprintLibrary_LoadARPinsFromLocalStore_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7CEA0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.LineTraceTrackedObjects3D
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               Start                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               End                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestFeaturePoints                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestGroundPlane                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestPlaneExtents                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestPlaneBoundaryPolygon                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AugmentedReality::FARTraceResult> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::FARTraceResult> UARBlueprintLibrary::STATIC_LineTraceTrackedObjects3D(const CoreUObject::FVector& Start, const CoreUObject::FVector& End, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.LineTraceTrackedObjects3D");
        
        UARBlueprintLibrary_LineTraceTrackedObjects3D_Params params {};
        params.Start = Start;
        params.End = End;
        params.bTestFeaturePoints = bTestFeaturePoints;
        params.bTestGroundPlane = bTestGroundPlane;
        params.bTestPlaneExtents = bTestPlaneExtents;
        params.bTestPlaneBoundaryPolygon = bTestPlaneBoundaryPolygon;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7D2B0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.LineTraceTrackedObjects
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             ScreenCoord                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestFeaturePoints                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestGroundPlane                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestPlaneExtents                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTestPlaneBoundaryPolygon                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AugmentedReality::FARTraceResult> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::FARTraceResult> UARBlueprintLibrary::STATIC_LineTraceTrackedObjects(const CoreUObject::FVector2D& ScreenCoord, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.LineTraceTrackedObjects");
        
        UARBlueprintLibrary_LineTraceTrackedObjects_Params params {};
        params.ScreenCoord = ScreenCoord;
        params.bTestFeaturePoints = bTestFeaturePoints;
        params.bTestGroundPlane = bTestGroundPlane;
        params.bTestPlaneExtents = bTestPlaneExtents;
        params.bTestPlaneBoundaryPolygon = bTestPlaneBoundaryPolygon;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7C660
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.IsSessionTypeSupported
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::EARSessionType                   SessionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_IsSessionTypeSupported(AugmentedReality::EARSessionType SessionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.IsSessionTypeSupported");
        
        UARBlueprintLibrary_IsSessionTypeSupported_Params params {};
        params.SessionType = SessionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A380
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.IsSessionTrackingFeatureSupported
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::EARSessionType                   SessionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARSessionTrackingFeature        SessionTrackingFeature                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_IsSessionTrackingFeatureSupported(AugmentedReality::EARSessionType SessionType, AugmentedReality::EARSessionTrackingFeature SessionTrackingFeature)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.IsSessionTrackingFeatureSupported");
        
        UARBlueprintLibrary_IsSessionTrackingFeatureSupported_Params params {};
        params.SessionType = SessionType;
        params.SessionTrackingFeature = SessionTrackingFeature;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A200
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.IsSceneReconstructionSupported
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::EARSessionType                   SessionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARSceneReconstruction           SceneReconstructionMethod                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_IsSceneReconstructionSupported(AugmentedReality::EARSessionType SessionType, AugmentedReality::EARSceneReconstruction SceneReconstructionMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.IsSceneReconstructionSupported");
        
        UARBlueprintLibrary_IsSceneReconstructionSupported_Params params {};
        params.SessionType = SessionType;
        params.SceneReconstructionMethod = SceneReconstructionMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7DF10
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.IsARSupported
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_IsARSupported()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.IsARSupported");
        
        UARBlueprintLibrary_IsARSupported_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B3A0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.IsARPinLocalStoreSupported
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_IsARPinLocalStoreSupported()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.IsARPinLocalStoreSupported");
        
        UARBlueprintLibrary_IsARPinLocalStoreSupported_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B370
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.IsARPinLocalStoreReady
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_IsARPinLocalStoreReady()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.IsARPinLocalStoreReady");
        
        UARBlueprintLibrary_IsARPinLocalStoreReady_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A9A0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetWorldMappingStatus
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::EARWorldMappingState             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARWorldMappingState UARBlueprintLibrary::STATIC_GetWorldMappingStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetWorldMappingStatus");
        
        UARBlueprintLibrary_GetWorldMappingStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7CC20
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetTrackingQualityReason
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::EARTrackingQualityReason         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARTrackingQualityReason UARBlueprintLibrary::STATIC_GetTrackingQualityReason()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetTrackingQualityReason");
        
        UARBlueprintLibrary_GetTrackingQualityReason_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7CD60
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetTrackingQuality
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::EARTrackingQuality               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARTrackingQuality UARBlueprintLibrary::STATIC_GetTrackingQuality()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetTrackingQuality");
        
        UARBlueprintLibrary_GetTrackingQuality_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A800
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetSupportedVideoFormats
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EARSessionType                   SessionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AugmentedReality::FARVideoFormat> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::FARVideoFormat> UARBlueprintLibrary::STATIC_GetSupportedVideoFormats(AugmentedReality::EARSessionType SessionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetSupportedVideoFormats");
        
        UARBlueprintLibrary_GetSupportedVideoFormats_Params params {};
        params.SessionType = SessionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7DAA0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetSessionConfig
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::UARSessionConfig*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARSessionConfig* UARBlueprintLibrary::STATIC_GetSessionConfig()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetSessionConfig");
        
        UARBlueprintLibrary_GetSessionConfig_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A920
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetPointCloud
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> UARBlueprintLibrary::STATIC_GetPointCloud()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetPointCloud");
        
        UARBlueprintLibrary_GetPointCloud_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A010
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetPersonSegmentationImage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARTexture*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTexture* UARBlueprintLibrary::STATIC_GetPersonSegmentationImage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetPersonSegmentationImage");
        
        UARBlueprintLibrary_GetPersonSegmentationImage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79FE0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetPersonSegmentationDepthImage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARTexture*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTexture* UARBlueprintLibrary::STATIC_GetPersonSegmentationDepthImage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetPersonSegmentationDepthImage");
        
        UARBlueprintLibrary_GetPersonSegmentationDepthImage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79C60
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetObjectClassificationAtLocation
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               InWorldLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARObjectClassification          OutClassification                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutClassificationLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxLocationDiff                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_GetObjectClassificationAtLocation(const CoreUObject::FVector& InWorldLocation, AugmentedReality::EARObjectClassification* OutClassification, CoreUObject::FVector* OutClassificationLocation, float MaxLocationDiff)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetObjectClassificationAtLocation");
        
        UARBlueprintLibrary_GetObjectClassificationAtLocation_Params params {};
        params.InWorldLocation = InWorldLocation;
        params.MaxLocationDiff = MaxLocationDiff;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutClassification != nullptr)
            *OutClassification = params.OutClassification;
        if (OutClassificationLocation != nullptr)
            *OutClassificationLocation = params.OutClassificationLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B78DE0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetNumberOfTrackedFacesSupported
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UARBlueprintLibrary::STATIC_GetNumberOfTrackedFacesSupported()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetNumberOfTrackedFacesSupported");
        
        UARBlueprintLibrary_GetNumberOfTrackedFacesSupported_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7BE10
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetCurrentLightEstimate
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::UARLightEstimate*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARLightEstimate* UARBlueprintLibrary::STATIC_GetCurrentLightEstimate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetCurrentLightEstimate");
        
        UARBlueprintLibrary_GetCurrentLightEstimate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B78CE0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetCameraIntrinsics
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::FARCameraIntrinsics              OutCameraIntrinsics                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_GetCameraIntrinsics(AugmentedReality::FARCameraIntrinsics* OutCameraIntrinsics)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetCameraIntrinsics");
        
        UARBlueprintLibrary_GetCameraIntrinsics_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutCameraIntrinsics != nullptr)
            *OutCameraIntrinsics = params.OutCameraIntrinsics;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7C8A0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetCameraImage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARTextureCameraImage*           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTextureCameraImage* UARBlueprintLibrary::STATIC_GetCameraImage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetCameraImage");
        
        UARBlueprintLibrary_GetCameraImage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7C820
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetCameraDepth
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARTextureCameraDepth*           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTextureCameraDepth* UARBlueprintLibrary::STATIC_GetCameraDepth()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetCameraDepth");
        
        UARBlueprintLibrary_GetCameraDepth_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79860
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetARWorldScale
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARBlueprintLibrary::STATIC_GetARWorldScale()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetARWorldScale");
        
        UARBlueprintLibrary_GetARWorldScale_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7C740
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetARTexture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EARTextureType                   TextureType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARTexture*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTexture* UARBlueprintLibrary::STATIC_GetARTexture(AugmentedReality::EARTextureType TextureType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetARTexture");
        
        UARBlueprintLibrary_GetARTexture_Params params {};
        params.TextureType = TextureType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7DBC0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetARSessionStatus
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARSessionStatus                 ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    AugmentedReality::FARSessionStatus UARBlueprintLibrary::STATIC_GetARSessionStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetARSessionStatus");
        
        UARBlueprintLibrary_GetARSessionStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A040
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedPoses
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARTrackedPose*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARTrackedPose*> UARBlueprintLibrary::STATIC_GetAllTrackedPoses()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedPoses");
        
        UARBlueprintLibrary_GetAllTrackedPoses_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AD90
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedPoints
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARTrackedPoint*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARTrackedPoint*> UARBlueprintLibrary::STATIC_GetAllTrackedPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedPoints");
        
        UARBlueprintLibrary_GetAllTrackedPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AE10
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedPlanes
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARPlaneGeometry*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARPlaneGeometry*> UARBlueprintLibrary::STATIC_GetAllTrackedPlanes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedPlanes");
        
        UARBlueprintLibrary_GetAllTrackedPlanes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AD10
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedImages
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARTrackedImage*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARTrackedImage*> UARBlueprintLibrary::STATIC_GetAllTrackedImages()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedImages");
        
        UARBlueprintLibrary_GetAllTrackedImages_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AC90
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedEnvironmentCaptureProbes
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UAREnvironmentCaptureProbe*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UAREnvironmentCaptureProbe*> UARBlueprintLibrary::STATIC_GetAllTrackedEnvironmentCaptureProbes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTrackedEnvironmentCaptureProbes");
        
        UARBlueprintLibrary_GetAllTrackedEnvironmentCaptureProbes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A0C0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTracked2DPoses
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::FARPose2D>    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::FARPose2D> UARBlueprintLibrary::STATIC_GetAllTracked2DPoses()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllTracked2DPoses");
        
        UARBlueprintLibrary_GetAllTracked2DPoses_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7B3D0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllPins
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARPin*>      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARPin*> UARBlueprintLibrary::STATIC_GetAllPins()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllPins");
        
        UARBlueprintLibrary_GetAllPins_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7C920
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllGeometriesByClass
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARTrackedGeometry*              GeometryClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AugmentedReality::UARTrackedGeometry*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARTrackedGeometry*> UARBlueprintLibrary::STATIC_GetAllGeometriesByClass(AugmentedReality::UARTrackedGeometry* GeometryClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllGeometriesByClass");
        
        UARBlueprintLibrary_GetAllGeometriesByClass_Params params {};
        params.GeometryClass = GeometryClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7CBA0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllGeometries
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AugmentedReality::UARTrackedGeometry*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARTrackedGeometry*> UARBlueprintLibrary::STATIC_GetAllGeometries()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAllGeometries");
        
        UARBlueprintLibrary_GetAllGeometries_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79810
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.GetAlignmentTransform
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARBlueprintLibrary::STATIC_GetAlignmentTransform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.GetAlignmentTransform");
        
        UARBlueprintLibrary_GetAlignmentTransform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79420
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.FindTrackedPointsByName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                PointName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AugmentedReality::UARTrackedPoint*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AugmentedReality::UARTrackedPoint*> UARBlueprintLibrary::STATIC_FindTrackedPointsByName(const BasicTypes::FString& PointName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.FindTrackedPointsByName");
        
        UARBlueprintLibrary_FindTrackedPointsByName_Params params {};
        params.PointName = PointName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7C2C0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.DebugDrawTrackedGeometry
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARTrackedGeometry*              TrackedGeometry                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              OutlineThickness                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PersistForSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_DebugDrawTrackedGeometry(AugmentedReality::UARTrackedGeometry* TrackedGeometry, CoreUObject::UObject* WorldContextObject, const CoreUObject::FLinearColor& Color, float OutlineThickness, float PersistForSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.DebugDrawTrackedGeometry");
        
        UARBlueprintLibrary_DebugDrawTrackedGeometry_Params params {};
        params.TrackedGeometry = TrackedGeometry;
        params.WorldContextObject = WorldContextObject;
        params.Color = Color;
        params.OutlineThickness = OutlineThickness;
        params.PersistForSeconds = PersistForSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7BF20
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.DebugDrawPin
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARPin*                          ARPin                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PersistForSeconds                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_DebugDrawPin(AugmentedReality::UARPin* ARPin, CoreUObject::UObject* WorldContextObject, const CoreUObject::FLinearColor& Color, float Scale, float PersistForSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.DebugDrawPin");
        
        UARBlueprintLibrary_DebugDrawPin_Params params {};
        params.ARPin = ARPin;
        params.WorldContextObject = WorldContextObject;
        params.Color = Color;
        params.Scale = Scale;
        params.PersistForSeconds = PersistForSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B791B0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.CalculateClosestIntersection
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           StartPoints                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           EndPoints                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ClosestIntersection                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_CalculateClosestIntersection(BasicTypes::TArray<CoreUObject::FVector> StartPoints, BasicTypes::TArray<CoreUObject::FVector> EndPoints, CoreUObject::FVector* ClosestIntersection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.CalculateClosestIntersection");
        
        UARBlueprintLibrary_CalculateClosestIntersection_Params params {};
        params.StartPoints = StartPoints;
        params.EndPoints = EndPoints;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ClosestIntersection != nullptr)
            *ClosestIntersection = params.ClosestIntersection;
    }

    /**
     * Function:
     *         RVA    -> 0x04B78EE0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.CalculateAlignmentTransform
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FTransform                            TransformInFirstCoordinateSystem                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            TransformInSecondCoordinateSystem                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            AlignmentTransform                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARBlueprintLibrary::STATIC_CalculateAlignmentTransform(const CoreUObject::FTransform& TransformInFirstCoordinateSystem, const CoreUObject::FTransform& TransformInSecondCoordinateSystem, CoreUObject::FTransform* AlignmentTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.CalculateAlignmentTransform");
        
        UARBlueprintLibrary_CalculateAlignmentTransform_Params params {};
        params.TransformInFirstCoordinateSystem = TransformInFirstCoordinateSystem;
        params.TransformInSecondCoordinateSystem = TransformInSecondCoordinateSystem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AlignmentTransform != nullptr)
            *AlignmentTransform = params.AlignmentTransform;
    }

    /**
     * Function:
     *         RVA    -> 0x04B79560
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.AddTrackedPointWithName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FTransform                            WorldTransform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                PointName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bDeletePointsWithSameName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_AddTrackedPointWithName(const CoreUObject::FTransform& WorldTransform, const BasicTypes::FString& PointName, bool bDeletePointsWithSameName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.AddTrackedPointWithName");
        
        UARBlueprintLibrary_AddTrackedPointWithName_Params params {};
        params.WorldTransform = WorldTransform;
        params.PointName = PointName;
        params.bDeletePointsWithSameName = bDeletePointsWithSameName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7A500
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.AddRuntimeCandidateImage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARSessionConfig*                SessionConfig                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UTexture2D*                                CandidateTexture                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                FriendlyName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PhysicalWidth                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARCandidateImage*               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARCandidateImage* UARBlueprintLibrary::STATIC_AddRuntimeCandidateImage(AugmentedReality::UARSessionConfig* SessionConfig, Engine::UTexture2D* CandidateTexture, const BasicTypes::FString& FriendlyName, float PhysicalWidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.AddRuntimeCandidateImage");
        
        UARBlueprintLibrary_AddRuntimeCandidateImage_Params params {};
        params.SessionConfig = SessionConfig;
        params.CandidateTexture = CandidateTexture;
        params.FriendlyName = FriendlyName;
        params.PhysicalWidth = PhysicalWidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7AAE0
     *         Name   -> Function /Script/AugmentedReality.ARBlueprintLibrary.AddManualEnvironmentCaptureProbe
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Extent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UARBlueprintLibrary::STATIC_AddManualEnvironmentCaptureProbe(const CoreUObject::FVector& Location, const CoreUObject::FVector& Extent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBlueprintLibrary.AddManualEnvironmentCaptureProbe");
        
        UARBlueprintLibrary_AddManualEnvironmentCaptureProbe_Params params {};
        params.Location = Location;
        params.Extent = Extent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7EEF0
     *         Name   -> Function /Script/AugmentedReality.ARTraceResultLibrary.GetTrackedGeometry
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARTrackedGeometry*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARTrackedGeometry* UARTraceResultLibrary::STATIC_GetTrackedGeometry(const AugmentedReality::FARTraceResult& TraceResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTraceResultLibrary.GetTrackedGeometry");
        
        UARTraceResultLibrary_GetTrackedGeometry_Params params {};
        params.TraceResult = TraceResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7ED60
     *         Name   -> Function /Script/AugmentedReality.ARTraceResultLibrary.GetTraceChannel
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARLineTraceChannels             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::EARLineTraceChannels UARTraceResultLibrary::STATIC_GetTraceChannel(const AugmentedReality::FARTraceResult& TraceResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTraceResultLibrary.GetTraceChannel");
        
        UARTraceResultLibrary_GetTraceChannel_Params params {};
        params.TraceResult = TraceResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7F080
     *         Name   -> Function /Script/AugmentedReality.ARTraceResultLibrary.GetLocalTransform
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARTraceResultLibrary::STATIC_GetLocalTransform(const AugmentedReality::FARTraceResult& TraceResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTraceResultLibrary.GetLocalTransform");
        
        UARTraceResultLibrary_GetLocalTransform_Params params {};
        params.TraceResult = TraceResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7F220
     *         Name   -> Function /Script/AugmentedReality.ARTraceResultLibrary.GetLocalToWorldTransform
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARTraceResultLibrary::STATIC_GetLocalToWorldTransform(const AugmentedReality::FARTraceResult& TraceResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTraceResultLibrary.GetLocalToWorldTransform");
        
        UARTraceResultLibrary_GetLocalToWorldTransform_Params params {};
        params.TraceResult = TraceResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7F3E0
     *         Name   -> Function /Script/AugmentedReality.ARTraceResultLibrary.GetLocalToTrackingTransform
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform UARTraceResultLibrary::STATIC_GetLocalToTrackingTransform(const AugmentedReality::FARTraceResult& TraceResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTraceResultLibrary.GetLocalToTrackingTransform");
        
        UARTraceResultLibrary_GetLocalToTrackingTransform_Params params {};
        params.TraceResult = TraceResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B7F5A0
     *         Name   -> Function /Script/AugmentedReality.ARTraceResultLibrary.GetDistanceFromCamera
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AugmentedReality::FARTraceResult                   TraceResult                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARTraceResultLibrary::STATIC_GetDistanceFromCamera(const AugmentedReality::FARTraceResult& TraceResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARTraceResultLibrary.GetDistanceFromCamera");
        
        UARTraceResultLibrary_GetDistanceFromCamera_Params params {};
        params.TraceResult = TraceResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B84F30
     *         Name   -> Function /Script/AugmentedReality.ARSaveWorldAsyncTaskBlueprintProxy.ARSaveWorld
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARSaveWorldAsyncTaskBlueprintProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARSaveWorldAsyncTaskBlueprintProxy* UARSaveWorldAsyncTaskBlueprintProxy::STATIC_ARSaveWorld(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARSaveWorldAsyncTaskBlueprintProxy.ARSaveWorld");
        
        UARSaveWorldAsyncTaskBlueprintProxy_ARSaveWorld_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B852D0
     *         Name   -> Function /Script/AugmentedReality.ARGetCandidateObjectAsyncTaskBlueprintProxy.ARGetCandidateObject
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Extent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARGetCandidateObjectAsyncTaskBlueprintProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARGetCandidateObjectAsyncTaskBlueprintProxy* UARGetCandidateObjectAsyncTaskBlueprintProxy::STATIC_ARGetCandidateObject(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Location, const CoreUObject::FVector& Extent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGetCandidateObjectAsyncTaskBlueprintProxy.ARGetCandidateObject");
        
        UARGetCandidateObjectAsyncTaskBlueprintProxy_ARGetCandidateObject_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Location = Location;
        params.Extent = Extent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D0B870
     *         Name   -> Function /Script/AugmentedReality.ARComponent.UpdateVisualization
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UARComponent::UpdateVisualization()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARComponent.UpdateVisualization");
        
        UARComponent_UpdateVisualization_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B87280
     *         Name   -> Function /Script/AugmentedReality.ARComponent.SetNativeID
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FGuid                                 NativeID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARComponent::SetNativeID(const CoreUObject::FGuid& NativeID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARComponent.SetNativeID");
        
        UARComponent_SetNativeID_Params params {};
        params.NativeID = NativeID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARComponent.ReceiveRemove
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UARComponent::ReceiveRemove()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARComponent.ReceiveRemove");
        
        UARComponent_ReceiveRemove_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02D0B850
     *         Name   -> Function /Script/AugmentedReality.ARComponent.OnRep_Payload
     *         Flags  -> (Native, Protected)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UARComponent::OnRep_Payload()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARComponent.OnRep_Payload");
        
        UARComponent_OnRep_Payload_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01F451C0
     *         Name   -> Function /Script/AugmentedReality.ARComponent.GetMRMesh
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MRMesh::UMRMeshComponent*                          ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MRMesh::UMRMeshComponent* UARComponent::GetMRMesh()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARComponent.GetMRMesh");
        
        UARComponent_GetMRMesh_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B87CE0
     *         Name   -> Function /Script/AugmentedReality.ARPlaneComponent.SetPlaneComponentDebugMode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EPlaneComponentDebugMode         NewDebugMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPlaneComponent::STATIC_SetPlaneComponentDebugMode(AugmentedReality::EPlaneComponentDebugMode NewDebugMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneComponent.SetPlaneComponentDebugMode");
        
        UARPlaneComponent_SetPlaneComponentDebugMode_Params params {};
        params.NewDebugMode = NewDebugMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B87B40
     *         Name   -> Function /Script/AugmentedReality.ARPlaneComponent.SetObjectClassificationDebugColors
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TMap<AugmentedReality::EARObjectClassification, CoreUObject::FLinearColor> InColors                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPlaneComponent::STATIC_SetObjectClassificationDebugColors(BasicTypes::TMap<AugmentedReality::EARObjectClassification, CoreUObject::FLinearColor> InColors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneComponent.SetObjectClassificationDebugColors");
        
        UARPlaneComponent_SetObjectClassificationDebugColors_Params params {};
        params.InColors = InColors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B87960
     *         Name   -> Function /Script/AugmentedReality.ARPlaneComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARPlaneUpdatePayload            NewPayload                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPlaneComponent::ServerUpdatePayload(const AugmentedReality::FARPlaneUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneComponent.ServerUpdatePayload");
        
        UARPlaneComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARPlaneComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARPlaneUpdatePayload            Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPlaneComponent::ReceiveUpdate(const AugmentedReality::FARPlaneUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneComponent.ReceiveUpdate");
        
        UARPlaneComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARPlaneComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARPlaneUpdatePayload            Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPlaneComponent::ReceiveAdd(const AugmentedReality::FARPlaneUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneComponent.ReceiveAdd");
        
        UARPlaneComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B87B10
     *         Name   -> Function /Script/AugmentedReality.ARPlaneComponent.GetObjectClassificationDebugColors
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         BasicTypes::TMap<AugmentedReality::EARObjectClassification, CoreUObject::FLinearColor> ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TMap<AugmentedReality::EARObjectClassification, CoreUObject::FLinearColor> UARPlaneComponent::STATIC_GetObjectClassificationDebugColors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPlaneComponent.GetObjectClassificationDebugColors");
        
        UARPlaneComponent_GetObjectClassificationDebugColors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B88460
     *         Name   -> Function /Script/AugmentedReality.ARPointComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARPointUpdatePayload            NewPayload                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPointComponent::ServerUpdatePayload(const AugmentedReality::FARPointUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPointComponent.ServerUpdatePayload");
        
        UARPointComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARPointComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARPointUpdatePayload            Payload                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPointComponent::ReceiveUpdate(const AugmentedReality::FARPointUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPointComponent.ReceiveUpdate");
        
        UARPointComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARPointComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARPointUpdatePayload            Payload                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPointComponent::ReceiveAdd(const AugmentedReality::FARPointUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPointComponent.ReceiveAdd");
        
        UARPointComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B88D70
     *         Name   -> Function /Script/AugmentedReality.ARFaceComponent.SetFaceComponentDebugMode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EFaceComponentDebugMode          NewDebugMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARFaceComponent::STATIC_SetFaceComponentDebugMode(AugmentedReality::EFaceComponentDebugMode NewDebugMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceComponent.SetFaceComponentDebugMode");
        
        UARFaceComponent_SetFaceComponentDebugMode_Params params {};
        params.NewDebugMode = NewDebugMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B88C40
     *         Name   -> Function /Script/AugmentedReality.ARFaceComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARFaceUpdatePayload             NewPayload                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARFaceComponent::ServerUpdatePayload(const AugmentedReality::FARFaceUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceComponent.ServerUpdatePayload");
        
        UARFaceComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARFaceComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARFaceUpdatePayload             Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARFaceComponent::ReceiveUpdate(const AugmentedReality::FARFaceUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceComponent.ReceiveUpdate");
        
        UARFaceComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARFaceComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARFaceUpdatePayload             Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARFaceComponent::ReceiveAdd(const AugmentedReality::FARFaceUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARFaceComponent.ReceiveAdd");
        
        UARFaceComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B89630
     *         Name   -> Function /Script/AugmentedReality.ARImageComponent.SetImageComponentDebugMode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EImageComponentDebugMode         NewDebugMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARImageComponent::STATIC_SetImageComponentDebugMode(AugmentedReality::EImageComponentDebugMode NewDebugMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARImageComponent.SetImageComponentDebugMode");
        
        UARImageComponent_SetImageComponentDebugMode_Params params {};
        params.NewDebugMode = NewDebugMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B894B0
     *         Name   -> Function /Script/AugmentedReality.ARImageComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARImageUpdatePayload            NewPayload                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARImageComponent::ServerUpdatePayload(const AugmentedReality::FARImageUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARImageComponent.ServerUpdatePayload");
        
        UARImageComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARImageComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARImageUpdatePayload            Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARImageComponent::ReceiveUpdate(const AugmentedReality::FARImageUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARImageComponent.ReceiveUpdate");
        
        UARImageComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARImageComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARImageUpdatePayload            Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARImageComponent::ReceiveAdd(const AugmentedReality::FARImageUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARImageComponent.ReceiveAdd");
        
        UARImageComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B89F00
     *         Name   -> Function /Script/AugmentedReality.ARQRCodeComponent.SetQRCodeComponentDebugMode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EQRCodeComponentDebugMode        NewDebugMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARQRCodeComponent::STATIC_SetQRCodeComponentDebugMode(AugmentedReality::EQRCodeComponentDebugMode NewDebugMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARQRCodeComponent.SetQRCodeComponentDebugMode");
        
        UARQRCodeComponent_SetQRCodeComponentDebugMode_Params params {};
        params.NewDebugMode = NewDebugMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B89D70
     *         Name   -> Function /Script/AugmentedReality.ARQRCodeComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARQRCodeUpdatePayload           NewPayload                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARQRCodeComponent::ServerUpdatePayload(const AugmentedReality::FARQRCodeUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARQRCodeComponent.ServerUpdatePayload");
        
        UARQRCodeComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARQRCodeComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARQRCodeUpdatePayload           Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARQRCodeComponent::ReceiveUpdate(const AugmentedReality::FARQRCodeUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARQRCodeComponent.ReceiveUpdate");
        
        UARQRCodeComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARQRCodeComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARQRCodeUpdatePayload           Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARQRCodeComponent::ReceiveAdd(const AugmentedReality::FARQRCodeUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARQRCodeComponent.ReceiveAdd");
        
        UARQRCodeComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8A810
     *         Name   -> Function /Script/AugmentedReality.ARPoseComponent.SetPoseComponentDebugMode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EPoseComponentDebugMode          NewDebugMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPoseComponent::STATIC_SetPoseComponentDebugMode(AugmentedReality::EPoseComponentDebugMode NewDebugMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPoseComponent.SetPoseComponentDebugMode");
        
        UARPoseComponent_SetPoseComponentDebugMode_Params params {};
        params.NewDebugMode = NewDebugMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8A6B0
     *         Name   -> Function /Script/AugmentedReality.ARPoseComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARPoseUpdatePayload             NewPayload                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPoseComponent::ServerUpdatePayload(const AugmentedReality::FARPoseUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPoseComponent.ServerUpdatePayload");
        
        UARPoseComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARPoseComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARPoseUpdatePayload             Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPoseComponent::ReceiveUpdate(const AugmentedReality::FARPoseUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPoseComponent.ReceiveUpdate");
        
        UARPoseComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARPoseComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARPoseUpdatePayload             Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARPoseComponent::ReceiveAdd(const AugmentedReality::FARPoseUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARPoseComponent.ReceiveAdd");
        
        UARPoseComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8AE60
     *         Name   -> Function /Script/AugmentedReality.AREnvironmentProbeComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FAREnvironmentProbeUpdatePayload NewPayload                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAREnvironmentProbeComponent::ServerUpdatePayload(const AugmentedReality::FAREnvironmentProbeUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.AREnvironmentProbeComponent.ServerUpdatePayload");
        
        UAREnvironmentProbeComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.AREnvironmentProbeComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FAREnvironmentProbeUpdatePayload Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAREnvironmentProbeComponent::ReceiveUpdate(const AugmentedReality::FAREnvironmentProbeUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.AREnvironmentProbeComponent.ReceiveUpdate");
        
        UAREnvironmentProbeComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.AREnvironmentProbeComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FAREnvironmentProbeUpdatePayload Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAREnvironmentProbeComponent::ReceiveAdd(const AugmentedReality::FAREnvironmentProbeUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.AREnvironmentProbeComponent.ReceiveAdd");
        
        UAREnvironmentProbeComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8AE60
     *         Name   -> Function /Script/AugmentedReality.ARObjectComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARObjectUpdatePayload           NewPayload                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARObjectComponent::ServerUpdatePayload(const AugmentedReality::FARObjectUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARObjectComponent.ServerUpdatePayload");
        
        UARObjectComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARObjectComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARObjectUpdatePayload           Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARObjectComponent::ReceiveUpdate(const AugmentedReality::FARObjectUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARObjectComponent.ReceiveUpdate");
        
        UARObjectComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARObjectComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARObjectUpdatePayload           Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARObjectComponent::ReceiveAdd(const AugmentedReality::FARObjectUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARObjectComponent.ReceiveAdd");
        
        UARObjectComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8B890
     *         Name   -> Function /Script/AugmentedReality.ARMeshComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARMeshUpdatePayload             NewPayload                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARMeshComponent::ServerUpdatePayload(const AugmentedReality::FARMeshUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARMeshComponent.ServerUpdatePayload");
        
        UARMeshComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARMeshComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARMeshUpdatePayload             Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARMeshComponent::ReceiveUpdate(const AugmentedReality::FARMeshUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARMeshComponent.ReceiveUpdate");
        
        UARMeshComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARMeshComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARMeshUpdatePayload             Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARMeshComponent::ReceiveAdd(const AugmentedReality::FARMeshUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARMeshComponent.ReceiveAdd");
        
        UARMeshComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8C0E0
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchorComponent.SetGeoAnchorComponentDebugMode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::EGeoAnchorComponentDebugMode     NewDebugMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARGeoAnchorComponent::STATIC_SetGeoAnchorComponentDebugMode(AugmentedReality::EGeoAnchorComponentDebugMode NewDebugMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchorComponent.SetGeoAnchorComponentDebugMode");
        
        UARGeoAnchorComponent_SetGeoAnchorComponentDebugMode_Params params {};
        params.NewDebugMode = NewDebugMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B8BF50
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchorComponent.ServerUpdatePayload
     *         Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::FARGeoAnchorUpdatePayload        NewPayload                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARGeoAnchorComponent::ServerUpdatePayload(const AugmentedReality::FARGeoAnchorUpdatePayload& NewPayload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchorComponent.ServerUpdatePayload");
        
        UARGeoAnchorComponent_ServerUpdatePayload_Params params {};
        params.NewPayload = NewPayload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchorComponent.ReceiveUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARGeoAnchorUpdatePayload        Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARGeoAnchorComponent::ReceiveUpdate(const AugmentedReality::FARGeoAnchorUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchorComponent.ReceiveUpdate");
        
        UARGeoAnchorComponent_ReceiveUpdate_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AugmentedReality.ARGeoAnchorComponent.ReceiveAdd
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         AugmentedReality::FARGeoAnchorUpdatePayload        Payload                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARGeoAnchorComponent::ReceiveAdd(const AugmentedReality::FARGeoAnchorUpdatePayload& Payload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARGeoAnchorComponent.ReceiveAdd");
        
        UARGeoAnchorComponent_ReceiveAdd_Params params {};
        params.Payload = Payload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B93EA0
     *         Name   -> Function /Script/AugmentedReality.ARDependencyHandler.StartARSessionLatent
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARSessionConfig*                SessionConfig                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARDependencyHandler::StartARSessionLatent(CoreUObject::UObject* WorldContextObject, AugmentedReality::UARSessionConfig* SessionConfig, const Engine::FLatentActionInfo& LatentInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARDependencyHandler.StartARSessionLatent");
        
        UARDependencyHandler_StartARSessionLatent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SessionConfig = SessionConfig;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B94100
     *         Name   -> Function /Script/AugmentedReality.ARDependencyHandler.RequestARSessionPermission
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UARSessionConfig*                SessionConfig                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARServicePermissionRequestResult OutPermissionResult                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARDependencyHandler::RequestARSessionPermission(CoreUObject::UObject* WorldContextObject, AugmentedReality::UARSessionConfig* SessionConfig, const Engine::FLatentActionInfo& LatentInfo, AugmentedReality::EARServicePermissionRequestResult* OutPermissionResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARDependencyHandler.RequestARSessionPermission");
        
        UARDependencyHandler_RequestARSessionPermission_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SessionConfig = SessionConfig;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPermissionResult != nullptr)
            *OutPermissionResult = params.OutPermissionResult;
    }

    /**
     * Function:
     *         RVA    -> 0x04B943D0
     *         Name   -> Function /Script/AugmentedReality.ARDependencyHandler.InstallARService
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARServiceInstallRequestResult   OutInstallResult                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARDependencyHandler::InstallARService(CoreUObject::UObject* WorldContextObject, const Engine::FLatentActionInfo& LatentInfo, AugmentedReality::EARServiceInstallRequestResult* OutInstallResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARDependencyHandler.InstallARService");
        
        UARDependencyHandler_InstallARService_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutInstallResult != nullptr)
            *OutInstallResult = params.OutInstallResult;
    }

    /**
     * Function:
     *         RVA    -> 0x04B94890
     *         Name   -> Function /Script/AugmentedReality.ARDependencyHandler.GetARDependencyHandler
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AugmentedReality::UARDependencyHandler*            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UARDependencyHandler* UARDependencyHandler::STATIC_GetARDependencyHandler()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARDependencyHandler.GetARDependencyHandler");
        
        UARDependencyHandler_GetARDependencyHandler_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B94630
     *         Name   -> Function /Script/AugmentedReality.ARDependencyHandler.CheckARServiceAvailability
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FLatentActionInfo                          LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         AugmentedReality::EARServiceAvailability           OutAvailability                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARDependencyHandler::CheckARServiceAvailability(CoreUObject::UObject* WorldContextObject, const Engine::FLatentActionInfo& LatentInfo, AugmentedReality::EARServiceAvailability* OutAvailability)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARDependencyHandler.CheckARServiceAvailability");
        
        UARDependencyHandler_CheckARServiceAvailability_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.LatentInfo = LatentInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAvailability != nullptr)
            *OutAvailability = params.OutAvailability;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.GeoTrackingAvailabilityDelegate__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         bool                                               bIsAvailable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Error                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy::GeoTrackingAvailabilityDelegate__DelegateSignature(bool bIsAvailable, const BasicTypes::FString& Error)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.GeoTrackingAvailabilityDelegate__DelegateSignature");
        
        UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_GeoTrackingAvailabilityDelegate__DelegateSignature_Params params {};
        params.bIsAvailable = bIsAvailable;
        params.Error = Error;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B95760
     *         Name   -> Function /Script/AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.CheckGeoTrackingAvailabilityAtLocation
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Longitude                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Latitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy::STATIC_CheckGeoTrackingAvailabilityAtLocation(CoreUObject::UObject* WorldContextObject, float Longitude, float Latitude)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.CheckGeoTrackingAvailabilityAtLocation");
        
        UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_CheckGeoTrackingAvailabilityAtLocation_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Longitude = Longitude;
        params.Latitude = Latitude;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B959D0
     *         Name   -> Function /Script/AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.CheckGeoTrackingAvailability
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy::STATIC_CheckGeoTrackingAvailability(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy.CheckGeoTrackingAvailability");
        
        UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy_CheckGeoTrackingAvailability_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AugmentedReality.GetGeoLocationAsyncTaskBlueprintProxy.GetGeoLocationDelegate__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         float                                              Longitude                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Latitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Altitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Error                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGetGeoLocationAsyncTaskBlueprintProxy::GetGeoLocationDelegate__DelegateSignature(float Longitude, float Latitude, float Altitude, const BasicTypes::FString& Error)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AugmentedReality.GetGeoLocationAsyncTaskBlueprintProxy.GetGeoLocationDelegate__DelegateSignature");
        
        UGetGeoLocationAsyncTaskBlueprintProxy_GetGeoLocationDelegate__DelegateSignature_Params params {};
        params.Longitude = Longitude;
        params.Latitude = Latitude;
        params.Altitude = Altitude;
        params.Error = Error;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B95D20
     *         Name   -> Function /Script/AugmentedReality.GetGeoLocationAsyncTaskBlueprintProxy.GetGeoLocationAtWorldPosition
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldPosition                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::UGetGeoLocationAsyncTaskBlueprintProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AugmentedReality::UGetGeoLocationAsyncTaskBlueprintProxy* UGetGeoLocationAsyncTaskBlueprintProxy::STATIC_GetGeoLocationAtWorldPosition(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& WorldPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.GetGeoLocationAsyncTaskBlueprintProxy.GetGeoLocationAtWorldPosition");
        
        UGetGeoLocationAsyncTaskBlueprintProxy_GetGeoLocationAtWorldPosition_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.WorldPosition = WorldPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B969E0
     *         Name   -> Function /Script/AugmentedReality.ARLifeCycleComponent.ServerSpawnARActor
     *         Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
     * Parameters:
     *         CoreUObject::UObject*                              ComponentClass                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FGuid                                 NativeID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARLifeCycleComponent::ServerSpawnARActor(CoreUObject::UObject* ComponentClass, const CoreUObject::FGuid& NativeID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARLifeCycleComponent.ServerSpawnARActor");
        
        UARLifeCycleComponent_ServerSpawnARActor_Params params {};
        params.ComponentClass = ComponentClass;
        params.NativeID = NativeID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B968C0
     *         Name   -> Function /Script/AugmentedReality.ARLifeCycleComponent.ServerDestroyARActor
     *         Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
     * Parameters:
     *         AugmentedReality::AARActor*                        Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARLifeCycleComponent::ServerDestroyARActor(AugmentedReality::AARActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARLifeCycleComponent.ServerDestroyARActor");
        
        UARLifeCycleComponent_ServerDestroyARActor_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AugmentedReality.ARLifeCycleComponent.InstanceARActorToBeDestroyedDelegate__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         AugmentedReality::AARActor*                        Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARLifeCycleComponent::InstanceARActorToBeDestroyedDelegate__DelegateSignature(AugmentedReality::AARActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AugmentedReality.ARLifeCycleComponent.InstanceARActorToBeDestroyedDelegate__DelegateSignature");
        
        UARLifeCycleComponent_InstanceARActorToBeDestroyedDelegate__DelegateSignature_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AugmentedReality.ARLifeCycleComponent.InstanceARActorSpawnedDelegate__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasDefaults)
     * Parameters:
     *         CoreUObject::UObject*                              ComponentClass                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FGuid                                 NativeID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AugmentedReality::AARActor*                        SpawnedActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UARLifeCycleComponent::InstanceARActorSpawnedDelegate__DelegateSignature(CoreUObject::UObject* ComponentClass, const CoreUObject::FGuid& NativeID, AugmentedReality::AARActor* SpawnedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AugmentedReality.ARLifeCycleComponent.InstanceARActorSpawnedDelegate__DelegateSignature");
        
        UARLifeCycleComponent_InstanceARActorSpawnedDelegate__DelegateSignature_Params params {};
        params.ComponentClass = ComponentClass;
        params.NativeID = NativeID;
        params.SpawnedActor = SpawnedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B97420
     *         Name   -> Function /Script/AugmentedReality.ARBasicLightEstimate.GetAmbientIntensityLumens
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARBasicLightEstimate::GetAmbientIntensityLumens()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBasicLightEstimate.GetAmbientIntensityLumens");
        
        UARBasicLightEstimate_GetAmbientIntensityLumens_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B97400
     *         Name   -> Function /Script/AugmentedReality.ARBasicLightEstimate.GetAmbientColorTemperatureKelvin
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UARBasicLightEstimate::GetAmbientColorTemperatureKelvin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBasicLightEstimate.GetAmbientColorTemperatureKelvin");
        
        UARBasicLightEstimate_GetAmbientColorTemperatureKelvin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x04B973E0
     *         Name   -> Function /Script/AugmentedReality.ARBasicLightEstimate.GetAmbientColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FLinearColor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FLinearColor UARBasicLightEstimate::GetAmbientColor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AugmentedReality.ARBasicLightEstimate.GetAmbientColor");
        
        UARBasicLightEstimate_GetAmbientColor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
