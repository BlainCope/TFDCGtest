/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/MovieRenderPipelineCore_ENUMS.h"
#include "Headers/MovieRenderPipelineCore_PARAMS.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineSetting_BlueprintBase.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineViewFamilySetting.h"
#include "Headers/MovieRenderPipelineCore_AMoviePipelineGameMode.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineHighResSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineInProcessExecutorSettings.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineOutputBase.h"
#include "Headers/MovieRenderPipelineCore_UMovieRenderDebugWidget.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipeline.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineDebugSettings.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineExecutorBase.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineCameraSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineFCPXMLExporter.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineGameOverrideSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineLinearExecutorBase.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineInProcessExecutor.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineOutputSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelinePrimaryConfig.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelinePythonHostExecutor.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineExecutorShot.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineExecutorJob.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineQueue.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineQueueEngineSubsystem.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineRenderPass.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineShotConfig.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineVideoOutputBase.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineCustomTimeStep.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineAntiAliasingSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineBlueprintLibrary.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineColorSetting.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineCommandLineEncoder.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineCommandLineEncoderSettings.h"
#include "Headers/MovieRenderPipelineCore_UMoviePipelineConfigBase.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieRenderPipelineCore
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveTeardownForPipelineImpl
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InPipeline                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineSetting_BlueprintBase::ReceiveTeardownForPipelineImpl(MovieRenderPipelineCore::UMoviePipeline* InPipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveTeardownForPipelineImpl");
        
        UMoviePipelineSetting_BlueprintBase_ReceiveTeardownForPipelineImpl_Params params {};
        params.InPipeline = InPipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveSetupForPipelineImpl
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InPipeline                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineSetting_BlueprintBase::ReceiveSetupForPipelineImpl(MovieRenderPipelineCore::UMoviePipeline* InPipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveSetupForPipelineImpl");
        
        UMoviePipelineSetting_BlueprintBase_ReceiveSetupForPipelineImpl_Params params {};
        params.InPipeline = InPipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015D2000
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveGetFormatArguments
     *         Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         MovieRenderPipelineCore::FMoviePipelineFormatArgs  InOutFormatArgs                                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::FMoviePipelineFormatArgs  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::FMoviePipelineFormatArgs UMoviePipelineSetting_BlueprintBase::ReceiveGetFormatArguments(MovieRenderPipelineCore::FMoviePipelineFormatArgs* InOutFormatArgs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.ReceiveGetFormatArguments");
        
        UMoviePipelineSetting_BlueprintBase_ReceiveGetFormatArguments_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InOutFormatArgs != nullptr)
            *InOutFormatArgs = params.InOutFormatArgs;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.OnEngineTickBeginFrame
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineSetting_BlueprintBase::OnEngineTickBeginFrame()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting_BlueprintBase.OnEngineTickBeginFrame");
        
        UMoviePipelineSetting_BlueprintBase_OnEngineTickBeginFrame_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieRenderPipelineCore.MovieRenderDebugWidget.OnInitializedForPipeline
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           ForPipeline                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieRenderDebugWidget::OnInitializedForPipeline(MovieRenderPipelineCore::UMoviePipeline* ForPipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MovieRenderDebugWidget.OnInitializedForPipeline");
        
        UMovieRenderDebugWidget_OnInitializedForPipeline_Params params {};
        params.ForPipeline = ForPipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3670
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.Shutdown
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bError                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipeline::Shutdown(bool bError)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.Shutdown");
        
        UMoviePipeline_Shutdown_Params params {};
        params.bError = bError;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3550
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.SetInitializationTime
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FDateTime                             InDateTime                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipeline::SetInitializationTime(const CoreUObject::FDateTime& InDateTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.SetInitializationTime");
        
        UMoviePipeline_SetInitializationTime_Params params {};
        params.InDateTime = InDateTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3760
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.RequestShutdown
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsError                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipeline::RequestShutdown(bool bIsError)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.RequestShutdown");
        
        UMoviePipeline_RequestShutdown_Params params {};
        params.bIsError = bIsError;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD6A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.OnMoviePipelineFinishedImpl
     *         Flags  -> (Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipeline::OnMoviePipelineFinishedImpl()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.OnMoviePipelineFinishedImpl");
        
        UMoviePipeline_OnMoviePipelineFinishedImpl_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3640
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.IsShutdownRequested
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipeline::IsShutdownRequested()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.IsShutdownRequested");
        
        UMoviePipeline_IsShutdownRequested_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3860
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.Initialize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipeline::Initialize(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.Initialize");
        
        UMoviePipeline_Initialize_Params params {};
        params.InJob = InJob;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9090
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.GetPreviewTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTexture*                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture* UMoviePipeline::GetPreviewTexture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.GetPreviewTexture");
        
        UMoviePipeline_GetPreviewTexture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3520
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.GetPipelinePrimaryConfig
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* UMoviePipeline::GetPipelinePrimaryConfig()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.GetPipelinePrimaryConfig");
        
        UMoviePipeline_GetPipelinePrimaryConfig_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3520
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.GetPipelineMasterConfig
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* UMoviePipeline::GetPipelineMasterConfig()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.GetPipelineMasterConfig");
        
        UMoviePipeline_GetPipelineMasterConfig_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3D20
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.GetInitializationTime
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FDateTime                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FDateTime UMoviePipeline::GetInitializationTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.GetInitializationTime");
        
        UMoviePipeline_GetInitializationTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015D3500
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipeline.GetCurrentJob
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorJob* UMoviePipeline::GetCurrentJob()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipeline.GetCurrentJob");
        
        UMoviePipeline_GetCurrentJob_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED920
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusProgress
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         float                                              InProgress                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::SetStatusProgress(float InProgress)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusProgress");
        
        UMoviePipelineExecutorBase_SetStatusProgress_Params params {};
        params.InProgress = InProgress;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015EDA90
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusMessage
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::FString                                InStatus                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::SetStatusMessage(const BasicTypes::FString& InStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SetStatusMessage");
        
        UMoviePipelineExecutorBase_SetStatusMessage_Params params {};
        params.InStatus = InStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED7F0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SetMoviePipelineClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              InPipelineClass                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::SetMoviePipelineClass(CoreUObject::UObject* InPipelineClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SetMoviePipelineClass");
        
        UMoviePipelineExecutorBase_SetMoviePipelineClass_Params params {};
        params.InPipelineClass = InPipelineClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED0E0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SendSocketMessage
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InMessage                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorBase::SendSocketMessage(const BasicTypes::FString& InMessage)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SendSocketMessage");
        
        UMoviePipelineExecutorBase_SendSocketMessage_Params params {};
        params.InMessage = InMessage;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015ECD40
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SendHTTPRequest
     *         Flags  -> (Final, Native, Protected, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InURL                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InVerb                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InMessage                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TMap<BasicTypes::FString, BasicTypes::FString> InHeaders                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMoviePipelineExecutorBase::SendHTTPRequest(const BasicTypes::FString& InURL, const BasicTypes::FString& InVerb, const BasicTypes::FString& InMessage, BasicTypes::TMap<BasicTypes::FString, BasicTypes::FString> InHeaders)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.SendHTTPRequest");
        
        UMoviePipelineExecutorBase_SendHTTPRequest_Params params {};
        params.InURL = InURL;
        params.InVerb = InVerb;
        params.InMessage = InMessage;
        params.InHeaders = InHeaders;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD6A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.OnExecutorFinishedImpl
     *         Flags  -> (Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::OnExecutorFinishedImpl()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.OnExecutorFinishedImpl");
        
        UMoviePipelineExecutorBase_OnExecutorFinishedImpl_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED530
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.OnExecutorErroredImpl
     *         Flags  -> (Native, Protected, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           ErroredPipeline                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bFatal                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ErrorReason                                                (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::OnExecutorErroredImpl(MovieRenderPipelineCore::UMoviePipeline* ErroredPipeline, bool bFatal, const BasicTypes::FText& ErrorReason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.OnExecutorErroredImpl");
        
        UMoviePipelineExecutorBase_OnExecutorErroredImpl_Params params {};
        params.ErroredPipeline = ErroredPipeline;
        params.bFatal = bFatal;
        params.ErrorReason = ErrorReason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015EDB90
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.OnBeginFrame
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::OnBeginFrame()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.OnBeginFrame");
        
        UMoviePipelineExecutorBase_OnBeginFrame_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED090
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.IsSocketConnected
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorBase::IsSocketConnected()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.IsSocketConnected");
        
        UMoviePipelineExecutorBase_IsSocketConnected_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EDBB0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.IsRendering
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorBase::IsRendering()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.IsRendering");
        
        UMoviePipelineExecutorBase_IsRendering_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014BB280
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusProgress
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineExecutorBase::GetStatusProgress()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusProgress");
        
        UMoviePipelineExecutorBase_GetStatusProgress_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EDA10
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusMessage
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMoviePipelineExecutorBase::GetStatusMessage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.GetStatusMessage");
        
        UMoviePipelineExecutorBase_GetStatusMessage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EDBE0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.Execute
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      InPipelineQueue                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::Execute(MovieRenderPipelineCore::UMoviePipelineQueue* InPipelineQueue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.Execute");
        
        UMoviePipelineExecutorBase_Execute_Params params {};
        params.InPipelineQueue = InPipelineQueue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED330
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.DisconnectSocket
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::DisconnectSocket()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.DisconnectSocket");
        
        UMoviePipelineExecutorBase_DisconnectSocket_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED370
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.ConnectSocket
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InHostName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InPort                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorBase::ConnectSocket(const BasicTypes::FString& InHostName, int32_t InPort)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.ConnectSocket");
        
        UMoviePipelineExecutorBase_ConnectSocket_Params params {};
        params.InHostName = InHostName;
        params.InPort = InPort;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED900
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.CancelCurrentJob
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::CancelCurrentJob()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.CancelCurrentJob");
        
        UMoviePipelineExecutorBase_CancelCurrentJob_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015ED8E0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.CancelAllJobs
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorBase::CancelAllJobs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorBase.CancelAllJobs");
        
        UMoviePipelineExecutorBase_CancelAllJobs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FFD30
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.SetIsEnabled
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineSetting::SetIsEnabled(bool bInEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.SetIsEnabled");
        
        UMoviePipelineSetting_SetIsEnabled_Params params {};
        params.bInEnabled = bInEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FFE20
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.IsEnabled
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineSetting::IsEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.IsEnabled");
        
        UMoviePipelineSetting_IsEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FFE50
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLineArgs
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            InOutUnrealURLParams                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            InOutCommandLineArgs                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            InOutDeviceProfileCvars                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            InOutExecCmds                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineSetting::BuildNewProcessCommandLineArgs(BasicTypes::TArray<BasicTypes::FString>* InOutUnrealURLParams, BasicTypes::TArray<BasicTypes::FString>* InOutCommandLineArgs, BasicTypes::TArray<BasicTypes::FString>* InOutDeviceProfileCvars, BasicTypes::TArray<BasicTypes::FString>* InOutExecCmds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLineArgs");
        
        UMoviePipelineSetting_BuildNewProcessCommandLineArgs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InOutUnrealURLParams != nullptr)
            *InOutUnrealURLParams = params.InOutUnrealURLParams;
        if (InOutCommandLineArgs != nullptr)
            *InOutCommandLineArgs = params.InOutCommandLineArgs;
        if (InOutDeviceProfileCvars != nullptr)
            *InOutDeviceProfileCvars = params.InOutDeviceProfileCvars;
        if (InOutExecCmds != nullptr)
            *InOutExecCmds = params.InOutExecCmds;
    }

    /**
     * Function:
     *         RVA    -> 0x01600240
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLine
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                InOutUnrealURLParams                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                InOutCommandLineArgs                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineSetting::BuildNewProcessCommandLine(BasicTypes::FString* InOutUnrealURLParams, BasicTypes::FString* InOutCommandLineArgs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineSetting.BuildNewProcessCommandLine");
        
        UMoviePipelineSetting_BuildNewProcessCommandLine_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (InOutUnrealURLParams != nullptr)
            *InOutUnrealURLParams = params.InOutUnrealURLParams;
        if (InOutCommandLineArgs != nullptr)
            *InOutCommandLineArgs = params.InOutCommandLineArgs;
    }

    /**
     * Function:
     *         RVA    -> 0x015F7D90
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.InitializeTransientSettings
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelinePrimaryConfig::InitializeTransientSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.InitializeTransientSettings");
        
        UMoviePipelinePrimaryConfig_InitializeTransientSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015F7CD0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetTransientSettings
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> UMoviePipelinePrimaryConfig::GetTransientSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetTransientSettings");
        
        UMoviePipelinePrimaryConfig_GetTransientSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F79A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetEffectiveFrameRate
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         LevelSequence::ULevelSequence*                     InSequence                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameRate UMoviePipelinePrimaryConfig::GetEffectiveFrameRate(LevelSequence::ULevelSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetEffectiveFrameRate");
        
        UMoviePipelinePrimaryConfig_GetEffectiveFrameRate_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F7AD0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetAllSettings
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               bIncludeDisabledSettings                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeTransientSettings                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> UMoviePipelinePrimaryConfig::GetAllSettings(bool bIncludeDisabledSettings, bool bIncludeTransientSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePrimaryConfig.GetAllSettings");
        
        UMoviePipelinePrimaryConfig_GetAllSettings_Params params {};
        params.bIncludeDisabledSettings = bIncludeDisabledSettings;
        params.bIncludeTransientSettings = bIncludeTransientSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F97C0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.OnMapLoad
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelinePythonHostExecutor::OnMapLoad(Engine::UWorld* InWorld)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.OnMapLoad");
        
        UMoviePipelinePythonHostExecutor_OnMapLoad_Params params {};
        params.InWorld = InWorld;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015F97A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.GetLastLoadedWorld
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UWorld*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UWorld* UMoviePipelinePythonHostExecutor::GetLastLoadedWorld()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.GetLastLoadedWorld");
        
        UMoviePipelinePythonHostExecutor_GetLastLoadedWorld_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F98B0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.ExecuteDelayed
     *         Flags  -> (Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      InPipelineQueue                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelinePythonHostExecutor::ExecuteDelayed(MovieRenderPipelineCore::UMoviePipelineQueue* InPipelineQueue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelinePythonHostExecutor.ExecuteDelayed");
        
        UMoviePipelinePythonHostExecutor_ExecuteDelayed_Params params {};
        params.InPipelineQueue = InPipelineQueue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BD800
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.ShouldRender
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorShot::ShouldRender()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.ShouldRender");
        
        UMoviePipelineExecutorShot_ShouldRender_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA340
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusProgress
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         float                                              InProgress                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorShot::SetStatusProgress(float InProgress)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusProgress");
        
        UMoviePipelineExecutorShot_SetStatusProgress_Params params {};
        params.InProgress = InProgress;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA430
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusMessage
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::FString                                InStatus                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorShot::SetStatusMessage(const BasicTypes::FString& InStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetStatusMessage");
        
        UMoviePipelineExecutorShot_SetStatusMessage_Params params {};
        params.InStatus = InStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015F9F20
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverridePresetOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineShotConfig* InPreset                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorShot::SetShotOverridePresetOrigin(MovieRenderPipelineCore::UMoviePipelineShotConfig* InPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverridePresetOrigin");
        
        UMoviePipelineExecutorShot_SetShotOverridePresetOrigin_Params params {};
        params.InPreset = InPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA0E0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverrideConfiguration
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineShotConfig* InPreset                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorShot::SetShotOverrideConfiguration(MovieRenderPipelineCore::UMoviePipelineShotConfig* InPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.SetShotOverrideConfiguration");
        
        UMoviePipelineExecutorShot_SetShotOverrideConfiguration_Params params {};
        params.InPreset = InPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA300
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusProgress
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineExecutorShot::GetStatusProgress()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusProgress");
        
        UMoviePipelineExecutorShot_GetStatusProgress_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EC130
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusMessage
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMoviePipelineExecutorShot::GetStatusMessage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetStatusMessage");
        
        UMoviePipelineExecutorShot_GetStatusMessage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F9EC0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverridePresetOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineShotConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineShotConfig* UMoviePipelineExecutorShot::GetShotOverridePresetOrigin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverridePresetOrigin");
        
        UMoviePipelineExecutorShot_GetShotOverridePresetOrigin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F9F00
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverrideConfiguration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineShotConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineShotConfig* UMoviePipelineExecutorShot::GetShotOverrideConfiguration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetShotOverrideConfiguration");
        
        UMoviePipelineExecutorShot_GetShotOverrideConfiguration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015F9D20
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetCameraName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            InCameraIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMoviePipelineExecutorShot::GetCameraName(int32_t InCameraIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.GetCameraName");
        
        UMoviePipelineExecutorShot_GetCameraName_Params params {};
        params.InCameraIndex = InCameraIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA210
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.AllocateNewShotOverrideConfig
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineShotConfig* InConfigType                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineShotConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineShotConfig* UMoviePipelineExecutorShot::AllocateNewShotOverrideConfig(MovieRenderPipelineCore::UMoviePipelineShotConfig* InConfigType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorShot.AllocateNewShotOverrideConfig");
        
        UMoviePipelineExecutorShot_AllocateNewShotOverrideConfig_Params params {};
        params.InConfigType = InConfigType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA340
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusProgress
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         float                                              InProgress                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetStatusProgress(float InProgress)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusProgress");
        
        UMoviePipelineExecutorJob_SetStatusProgress_Params params {};
        params.InProgress = InProgress;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA430
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusMessage
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::FString                                InStatus                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetStatusMessage(const BasicTypes::FString& InStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetStatusMessage");
        
        UMoviePipelineExecutorJob_SetStatusMessage_Params params {};
        params.InStatus = InStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA7B0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetSequence
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       InSequence                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetSequence(const CoreUObject::FSoftObjectPath& InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetSequence");
        
        UMoviePipelineExecutorJob_SetSequence_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAAC0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetPresetOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPreset                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetPresetOrigin(MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetPresetOrigin");
        
        UMoviePipelineExecutorJob_SetPresetOrigin_Params params {};
        params.InPreset = InPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAC60
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetIsEnabled
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         bool                                               bInEnabled                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetIsEnabled(bool bInEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetIsEnabled");
        
        UMoviePipelineExecutorJob_SetIsEnabled_Params params {};
        params.bInEnabled = bInEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAD80
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConsumed
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         bool                                               bInConsumed                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetConsumed(bool bInConsumed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConsumed");
        
        UMoviePipelineExecutorJob_SetConsumed_Params params {};
        params.bInConsumed = bInConsumed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FA910
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConfiguration
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPreset                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::SetConfiguration(MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.SetConfiguration");
        
        UMoviePipelineExecutorJob_SetConfiguration_Params params {};
        params.InPreset = InPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAC10
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.OnDuplicated
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineExecutorJob::OnDuplicated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.OnDuplicated");
        
        UMoviePipelineExecutorJob_OnDuplicated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAC30
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.IsEnabled
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorJob::IsEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.IsEnabled");
        
        UMoviePipelineExecutorJob_IsEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAD50
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.IsConsumed
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineExecutorJob::IsConsumed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.IsConsumed");
        
        UMoviePipelineExecutorJob_IsConsumed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAE70
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusProgress
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineExecutorJob::GetStatusProgress()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusProgress");
        
        UMoviePipelineExecutorJob_GetStatusProgress_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAEB0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusMessage
     *         Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMoviePipelineExecutorJob::GetStatusMessage()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetStatusMessage");
        
        UMoviePipelineExecutorJob_GetStatusMessage_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAA40
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetPresetOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* UMoviePipelineExecutorJob::GetPresetOrigin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetPresetOrigin");
        
        UMoviePipelineExecutorJob_GetPresetOrigin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAA20
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetConfiguration
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* UMoviePipelineExecutorJob::GetConfiguration()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineExecutorJob.GetConfiguration");
        
        UMoviePipelineExecutorJob_GetConfiguration_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FB790
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.SetQueueOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      InConfig                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueue::SetQueueOrigin(MovieRenderPipelineCore::UMoviePipelineQueue* InConfig)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.SetQueueOrigin");
        
        UMoviePipelineQueue_SetQueueOrigin_Params params {};
        params.InConfig = InConfig;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FB380
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.SetJobIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueue::SetJobIndex(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob, int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.SetJobIndex");
        
        UMoviePipelineQueue_SetJobIndex_Params params {};
        params.InJob = InJob;
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FB880
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.GetQueueOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineQueue* UMoviePipelineQueue::GetQueueOrigin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.GetQueueOrigin");
        
        UMoviePipelineQueue_GetQueueOrigin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FB900
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.GetJobs
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineExecutorJob*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineExecutorJob*> UMoviePipelineQueue::GetJobs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.GetJobs");
        
        UMoviePipelineQueue_GetJobs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FB9C0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.DuplicateJob
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorJob* UMoviePipelineQueue::DuplicateJob(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.DuplicateJob");
        
        UMoviePipelineQueue_DuplicateJob_Params params {};
        params.InJob = InJob;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FBBD0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.DeleteJob
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueue::DeleteJob(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.DeleteJob");
        
        UMoviePipelineQueue_DeleteJob_Params params {};
        params.InJob = InJob;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FBB90
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.DeleteAllJobs
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueue::DeleteAllJobs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.DeleteAllJobs");
        
        UMoviePipelineQueue_DeleteAllJobs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FB5F0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.CopyFrom
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      InQueue                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueue::CopyFrom(MovieRenderPipelineCore::UMoviePipelineQueue* InQueue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.CopyFrom");
        
        UMoviePipelineQueue_CopyFrom_Params params {};
        params.InQueue = InQueue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FBCD0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.AllocateNewJob
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJobType                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorJob* UMoviePipelineQueue::AllocateNewJob(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJobType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueue.AllocateNewJob");
        
        UMoviePipelineQueue_AllocateNewJob_Params params {};
        params.InJobType = InJobType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FCC30
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.SetConfiguration
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMovieRenderDebugWidget*  InProgressWidgetClass                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRenderPlayerViewport                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueueEngineSubsystem::SetConfiguration(MovieRenderPipelineCore::UMovieRenderDebugWidget* InProgressWidgetClass, bool bRenderPlayerViewport)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.SetConfiguration");
        
        UMoviePipelineQueueEngineSubsystem_SetConfiguration_Params params {};
        params.InProgressWidgetClass = InProgressWidgetClass;
        params.bRenderPlayerViewport = bRenderPlayerViewport;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FCDF0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutorInstance
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorBase* InExecutor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueueEngineSubsystem::RenderQueueWithExecutorInstance(MovieRenderPipelineCore::UMoviePipelineExecutorBase* InExecutor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutorInstance");
        
        UMoviePipelineQueueEngineSubsystem_RenderQueueWithExecutorInstance_Params params {};
        params.InExecutor = InExecutor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FCF90
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorBase* InExecutorType                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorBase* UMoviePipelineQueueEngineSubsystem::RenderQueueWithExecutor(MovieRenderPipelineCore::UMoviePipelineExecutorBase* InExecutorType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderQueueWithExecutor");
        
        UMoviePipelineQueueEngineSubsystem_RenderQueueWithExecutor_Params params {};
        params.InExecutorType = InExecutorType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FC870
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderJob
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineQueueEngineSubsystem::RenderJob(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.RenderJob");
        
        UMoviePipelineQueueEngineSubsystem_RenderJob_Params params {};
        params.InJob = InJob;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FCDC0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.IsRendering
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineQueueEngineSubsystem::IsRendering()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.IsRendering");
        
        UMoviePipelineQueueEngineSubsystem_IsRendering_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FD130
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetQueue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineQueue* UMoviePipelineQueueEngineSubsystem::GetQueue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetQueue");
        
        UMoviePipelineQueueEngineSubsystem_GetQueue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FD110
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetActiveExecutor
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorBase* UMoviePipelineQueueEngineSubsystem::GetActiveExecutor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.GetActiveExecutor");
        
        UMoviePipelineQueueEngineSubsystem_GetActiveExecutor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015FC960
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.AllocateJob
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         LevelSequence::ULevelSequence*                     InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorJob* UMoviePipelineQueueEngineSubsystem::AllocateJob(LevelSequence::ULevelSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineQueueEngineSubsystem.AllocateJob");
        
        UMoviePipelineQueueEngineSubsystem_AllocateJob_Params params {};
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DD870
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.UpdateJobShotListFromSequence
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         LevelSequence::ULevelSequence*                     InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bShotsChanged                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineBlueprintLibrary::STATIC_UpdateJobShotListFromSequence(LevelSequence::ULevelSequence* InSequence, MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob, bool* bShotsChanged)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.UpdateJobShotListFromSequence");
        
        UMoviePipelineBlueprintLibrary_UpdateJobShotListFromSequence_Params params {};
        params.InSequence = InSequence;
        params.InJob = InJob;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (bShotsChanged != nullptr)
            *bShotsChanged = params.bShotsChanged;
    }

    /**
     * Function:
     *         RVA    -> 0x015DD580
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveVersionNumber
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::FMoviePipelineFilenameResolveParams InParams                                                   (Parm, NativeAccessSpecifierPublic)
     *         bool                                               bGetNextVersion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UMoviePipelineBlueprintLibrary::STATIC_ResolveVersionNumber(const MovieRenderPipelineCore::FMoviePipelineFilenameResolveParams& InParams, bool bGetNextVersion)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveVersionNumber");
        
        UMoviePipelineBlueprintLibrary_ResolveVersionNumber_Params params {};
        params.InParams = InParams;
        params.bGetNextVersion = bGetNextVersion;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DFC70
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveFilenameFormatArguments
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InFormatString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::FMoviePipelineFilenameResolveParams InParams                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutFinalPath                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::FMoviePipelineFormatArgs  OutMergedFormatArgs                                        (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineBlueprintLibrary::STATIC_ResolveFilenameFormatArguments(const BasicTypes::FString& InFormatString, const MovieRenderPipelineCore::FMoviePipelineFilenameResolveParams& InParams, BasicTypes::FString* OutFinalPath, MovieRenderPipelineCore::FMoviePipelineFormatArgs* OutMergedFormatArgs)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.ResolveFilenameFormatArguments");
        
        UMoviePipelineBlueprintLibrary_ResolveFilenameFormatArguments_Params params {};
        params.InFormatString = InFormatString;
        params.InParams = InParams;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFinalPath != nullptr)
            *OutFinalPath = params.OutFinalPath;
        if (OutMergedFormatArgs != nullptr)
            *OutMergedFormatArgs = params.OutMergedFormatArgs;
    }

    /**
     * Function:
     *         RVA    -> 0x015DDA80
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.LoadManifestFileFromString
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InManifestFilePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineQueue*      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineQueue* UMoviePipelineBlueprintLibrary::STATIC_LoadManifestFileFromString(const BasicTypes::FString& InManifestFilePath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.LoadManifestFileFromString");
        
        UMoviePipelineBlueprintLibrary_LoadManifestFileFromString_Params params {};
        params.InManifestFilePath = InManifestFilePath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE640
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootTimecode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimecode                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTimecode UMoviePipelineBlueprintLibrary::STATIC_GetRootTimecode(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootTimecode");
        
        UMoviePipelineBlueprintLibrary_GetRootTimecode_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE3A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootFrameNumber
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UMoviePipelineBlueprintLibrary::STATIC_GetRootFrameNumber(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetRootFrameNumber");
        
        UMoviePipelineBlueprintLibrary_GetRootFrameNumber_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DF830
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetPipelineState
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InPipeline                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::EMovieRenderPipelineState ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::EMovieRenderPipelineState UMoviePipelineBlueprintLibrary::STATIC_GetPipelineState(MovieRenderPipelineCore::UMoviePipeline* InPipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetPipelineState");
        
        UMoviePipelineBlueprintLibrary_GetPipelineState_Params params {};
        params.InPipeline = InPipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DEAA0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallSegmentCounts
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutCurrentIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutTotalCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineBlueprintLibrary::STATIC_GetOverallSegmentCounts(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline, int32_t* OutCurrentIndex, int32_t* OutTotalCount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallSegmentCounts");
        
        UMoviePipelineBlueprintLibrary_GetOverallSegmentCounts_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutCurrentIndex != nullptr)
            *OutCurrentIndex = params.OutCurrentIndex;
        if (OutTotalCount != nullptr)
            *OutTotalCount = params.OutTotalCount;
    }

    /**
     * Function:
     *         RVA    -> 0x015DF0D0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallOutputFrames
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutCurrentIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            OutTotalCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineBlueprintLibrary::STATIC_GetOverallOutputFrames(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline, int32_t* OutCurrentIndex, int32_t* OutTotalCount)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetOverallOutputFrames");
        
        UMoviePipelineBlueprintLibrary_GetOverallOutputFrames_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutCurrentIndex != nullptr)
            *OutCurrentIndex = params.OutCurrentIndex;
        if (OutTotalCount != nullptr)
            *OutTotalCount = params.OutTotalCount;
    }

    /**
     * Function:
     *         RVA    -> 0x015DC770
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMoviePipelineEngineChangelistLabel
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMoviePipelineBlueprintLibrary::STATIC_GetMoviePipelineEngineChangelistLabel(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMoviePipelineEngineChangelistLabel");
        
        UMoviePipelineBlueprintLibrary_GetMoviePipelineEngineChangelistLabel_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE540
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterTimecode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimecode                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTimecode UMoviePipelineBlueprintLibrary::STATIC_GetMasterTimecode(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterTimecode");
        
        UMoviePipelineBlueprintLibrary_GetMasterTimecode_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE3A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterFrameNumber
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UMoviePipelineBlueprintLibrary::STATIC_GetMasterFrameNumber(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMasterFrameNumber");
        
        UMoviePipelineBlueprintLibrary_GetMasterFrameNumber_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DDB80
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMapPackageName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMoviePipelineBlueprintLibrary::STATIC_GetMapPackageName(MovieRenderPipelineCore::UMoviePipelineExecutorJob* InJob)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetMapPackageName");
        
        UMoviePipelineBlueprintLibrary_GetMapPackageName_Params params {};
        params.InJob = InJob;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DF5A0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobName
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMoviePipelineBlueprintLibrary::STATIC_GetJobName(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobName");
        
        UMoviePipelineBlueprintLibrary_GetJobName_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DF930
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobInitializationTime
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FDateTime                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FDateTime UMoviePipelineBlueprintLibrary::STATIC_GetJobInitializationTime(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobInitializationTime");
        
        UMoviePipelineBlueprintLibrary_GetJobInitializationTime_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DF340
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobAuthor
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMoviePipelineBlueprintLibrary::STATIC_GetJobAuthor(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetJobAuthor");
        
        UMoviePipelineBlueprintLibrary_GetJobAuthor_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DFA30
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEstimatedTimeRemaining
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InPipeline                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimespan                             OutEstimate                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMoviePipelineBlueprintLibrary::STATIC_GetEstimatedTimeRemaining(MovieRenderPipelineCore::UMoviePipeline* InPipeline, CoreUObject::FTimespan* OutEstimate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEstimatedTimeRemaining");
        
        UMoviePipelineBlueprintLibrary_GetEstimatedTimeRemaining_Params params {};
        params.InPipeline = InPipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutEstimate != nullptr)
            *OutEstimate = params.OutEstimate;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DD010
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEffectiveOutputResolution
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPrimaryConfig                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorShot* InPipelineExecutorShot                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FIntPoint                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FIntPoint UMoviePipelineBlueprintLibrary::STATIC_GetEffectiveOutputResolution(MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPrimaryConfig, MovieRenderPipelineCore::UMoviePipelineExecutorShot* InPipelineExecutorShot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetEffectiveOutputResolution");
        
        UMoviePipelineBlueprintLibrary_GetEffectiveOutputResolution_Params params {};
        params.InPrimaryConfig = InPrimaryConfig;
        params.InPipelineExecutorShot = InPipelineExecutorShot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE290
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotTimecode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTimecode                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTimecode UMoviePipelineBlueprintLibrary::STATIC_GetCurrentShotTimecode(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotTimecode");
        
        UMoviePipelineBlueprintLibrary_GetCurrentShotTimecode_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE110
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotFrameNumber
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UMoviePipelineBlueprintLibrary::STATIC_GetCurrentShotFrameNumber(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentShotFrameNumber");
        
        UMoviePipelineBlueprintLibrary_GetCurrentShotFrameNumber_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DC9C0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSequence
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         LevelSequence::ULevelSequence*                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    LevelSequence::ULevelSequence* UMoviePipelineBlueprintLibrary::STATIC_GetCurrentSequence(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSequence");
        
        UMoviePipelineBlueprintLibrary_GetCurrentSequence_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE8B0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentWorkMetrics
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::FMoviePipelineSegmentWorkMetrics ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::FMoviePipelineSegmentWorkMetrics UMoviePipelineBlueprintLibrary::STATIC_GetCurrentSegmentWorkMetrics(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentWorkMetrics");
        
        UMoviePipelineBlueprintLibrary_GetCurrentSegmentWorkMetrics_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DF710
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentState
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::EMovieRenderShotState     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::EMovieRenderShotState UMoviePipelineBlueprintLibrary::STATIC_GetCurrentSegmentState(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentState");
        
        UMoviePipelineBlueprintLibrary_GetCurrentSegmentState_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DECD0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  OutOuterName                                               (Parm, OutParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  OutInnerName                                               (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineBlueprintLibrary::STATIC_GetCurrentSegmentName(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline, BasicTypes::FText* OutOuterName, BasicTypes::FText* OutInnerName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentSegmentName");
        
        UMoviePipelineBlueprintLibrary_GetCurrentSegmentName_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutOuterName != nullptr)
            *OutOuterName = params.OutOuterName;
        if (OutInnerName != nullptr)
            *OutInnerName = params.OutInnerName;
    }

    /**
     * Function:
     *         RVA    -> 0x015DDFA0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocusDistance
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineBlueprintLibrary::STATIC_GetCurrentFocusDistance(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocusDistance");
        
        UMoviePipelineBlueprintLibrary_GetCurrentFocusDistance_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DDE30
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocalLength
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineBlueprintLibrary::STATIC_GetCurrentFocalLength(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentFocalLength");
        
        UMoviePipelineBlueprintLibrary_GetCurrentFocalLength_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DC8B0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentExecutorShot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorShot* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineExecutorShot* UMoviePipelineBlueprintLibrary::STATIC_GetCurrentExecutorShot(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentExecutorShot");
        
        UMoviePipelineBlueprintLibrary_GetCurrentExecutorShot_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DDCC0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentAperture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InMoviePipeline                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineBlueprintLibrary::STATIC_GetCurrentAperture(MovieRenderPipelineCore::UMoviePipeline* InMoviePipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCurrentAperture");
        
        UMoviePipelineBlueprintLibrary_GetCurrentAperture_Params params {};
        params.InMoviePipeline = InMoviePipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DE750
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCompletionPercentage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipeline*           InPipeline                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UMoviePipelineBlueprintLibrary::STATIC_GetCompletionPercentage(MovieRenderPipelineCore::UMoviePipeline* InPipeline)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.GetCompletionPercentage");
        
        UMoviePipelineBlueprintLibrary_GetCompletionPercentage_Params params {};
        params.InPipeline = InPipeline;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015DCAC0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.FindOrGetDefaultSettingForShot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    InSettingType                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPrimaryConfig                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineExecutorShot* InShot                                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineSetting* UMoviePipelineBlueprintLibrary::STATIC_FindOrGetDefaultSettingForShot(MovieRenderPipelineCore::UMoviePipelineSetting* InSettingType, MovieRenderPipelineCore::UMoviePipelinePrimaryConfig* InPrimaryConfig, MovieRenderPipelineCore::UMoviePipelineExecutorShot* InShot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.FindOrGetDefaultSettingForShot");
        
        UMoviePipelineBlueprintLibrary_FindOrGetDefaultSettingForShot_Params params {};
        params.InSettingType = InSettingType;
        params.InPrimaryConfig = InPrimaryConfig;
        params.InShot = InShot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015E0130
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.DuplicateSequence
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Outer                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSequence*                   InSequence                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieScene::UMovieSceneSequence*                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::UMovieSceneSequence* UMoviePipelineBlueprintLibrary::STATIC_DuplicateSequence(CoreUObject::UObject* Outer, MovieScene::UMovieSceneSequence* InSequence)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineBlueprintLibrary.DuplicateSequence");
        
        UMoviePipelineBlueprintLibrary_DuplicateSequence_Params params {};
        params.Outer = Outer;
        params.InSequence = InSequence;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EBFC0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.SetConfigOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineConfigBase* InConfig                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineConfigBase::SetConfigOrigin(MovieRenderPipelineCore::UMoviePipelineConfigBase* InConfig)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.SetConfigOrigin");
        
        UMoviePipelineConfigBase_SetConfigOrigin_Params params {};
        params.InConfig = InConfig;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015EC1B0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.RemoveSetting
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    InSetting                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineConfigBase::RemoveSetting(MovieRenderPipelineCore::UMoviePipelineSetting* InSetting)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.RemoveSetting");
        
        UMoviePipelineConfigBase_RemoveSetting_Params params {};
        params.InSetting = InSetting;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015EC130
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.GetUserSettings
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> UMoviePipelineConfigBase::GetUserSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.GetUserSettings");
        
        UMoviePipelineConfigBase_GetUserSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EC0B0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.GetConfigOrigin
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineConfigBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineConfigBase* UMoviePipelineConfigBase::GetConfigOrigin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.GetConfigOrigin");
        
        UMoviePipelineConfigBase_GetConfigOrigin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EBC30
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingsByClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    InClass                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeDisabledSettings                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<MovieRenderPipelineCore::UMoviePipelineSetting*> UMoviePipelineConfigBase::FindSettingsByClass(MovieRenderPipelineCore::UMoviePipelineSetting* InClass, bool bIncludeDisabledSettings, bool bExactMatch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingsByClass");
        
        UMoviePipelineConfigBase_FindSettingsByClass_Params params {};
        params.InClass = InClass;
        params.bIncludeDisabledSettings = bIncludeDisabledSettings;
        params.bExactMatch = bExactMatch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EB850
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingByClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    InClass                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeDisabledSettings                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineSetting* UMoviePipelineConfigBase::FindSettingByClass(MovieRenderPipelineCore::UMoviePipelineSetting* InClass, bool bIncludeDisabledSettings, bool bExactMatch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.FindSettingByClass");
        
        UMoviePipelineConfigBase_FindSettingByClass_Params params {};
        params.InClass = InClass;
        params.bIncludeDisabledSettings = bIncludeDisabledSettings;
        params.bExactMatch = bExactMatch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x015EB630
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.FindOrAddSettingByClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    InClass                                                    (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeDisabledSettings                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExactMatch                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieRenderPipelineCore::UMoviePipelineSetting*    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieRenderPipelineCore::UMoviePipelineSetting* UMoviePipelineConfigBase::FindOrAddSettingByClass(MovieRenderPipelineCore::UMoviePipelineSetting* InClass, bool bIncludeDisabledSettings, bool bExactMatch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.FindOrAddSettingByClass");
        
        UMoviePipelineConfigBase_FindOrAddSettingByClass_Params params {};
        params.InClass = InClass;
        params.bIncludeDisabledSettings = bIncludeDisabledSettings;
        params.bExactMatch = bExactMatch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x014AFFE0
     *         Name   -> Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.CopyFrom
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieRenderPipelineCore::UMoviePipelineConfigBase* InConfig                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMoviePipelineConfigBase::CopyFrom(MovieRenderPipelineCore::UMoviePipelineConfigBase* InConfig)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieRenderPipelineCore.MoviePipelineConfigBase.CopyFrom");
        
        UMoviePipelineConfigBase_CopyFrom_Params params {};
        params.InConfig = InConfig;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
