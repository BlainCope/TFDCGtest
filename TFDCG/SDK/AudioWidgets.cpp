/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AudioWidgets_ENUMS.h"
#include "Headers/AudioWidgets_PARAMS.h"
#include "Headers/AudioWidgets_UAudioRadialSlider.h"
#include "Headers/AudioWidgets_UAudioVolumeRadialSlider.h"
#include "Headers/AudioWidgets_UAudioFrequencyRadialSlider.h"
#include "Headers/AudioWidgets_UAudioSliderBase.h"
#include "Headers/AudioWidgets_UAudioSlider.h"
#include "Headers/AudioWidgets_UAudioVolumeSlider.h"
#include "Headers/AudioWidgets_UAudioFrequencySlider.h"
#include "Headers/AudioWidgets_UAudioMeter.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioWidgets
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x02685E50
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetWidgetLayout
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AudioWidgets::EAudioRadialSliderLayout             InLayout                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetWidgetLayout(AudioWidgets::EAudioRadialSliderLayout InLayout)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetWidgetLayout");
        
        UAudioRadialSlider_SetWidgetLayout_Params params {};
        params.InLayout = InLayout;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685540
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetValueTextReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsReadOnly                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetValueTextReadOnly(bool bIsReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetValueTextReadOnly");
        
        UAudioRadialSlider_SetValueTextReadOnly_Params params {};
        params.bIsReadOnly = bIsReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685660
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetUnitsTextReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsReadOnly                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetUnitsTextReadOnly(bool bIsReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetUnitsTextReadOnly");
        
        UAudioRadialSlider_SetUnitsTextReadOnly_Params params {};
        params.bIsReadOnly = bIsReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685760
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetUnitsText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  Units                                                      (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetUnitsText(const BasicTypes::FText& Units)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetUnitsText");
        
        UAudioRadialSlider_SetUnitsText_Params params {};
        params.Units = Units;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026858C0
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetTextLabelBackgroundColor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateColor                             InColor                                                    (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetTextLabelBackgroundColor(const SlateCore::FSlateColor& InColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetTextLabelBackgroundColor");
        
        UAudioRadialSlider_SetTextLabelBackgroundColor_Params params {};
        params.InColor = InColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685230
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetSliderThickness
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InThickness                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetSliderThickness(float InThickness)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetSliderThickness");
        
        UAudioRadialSlider_SetSliderThickness_Params params {};
        params.InThickness = InThickness;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685C30
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetSliderProgressColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetSliderProgressColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetSliderProgressColor");
        
        UAudioRadialSlider_SetSliderProgressColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685B20
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetSliderBarColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetSliderBarColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetSliderBarColor");
        
        UAudioRadialSlider_SetSliderBarColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685340
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetShowUnitsText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bShowUnitsText                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetShowUnitsText(bool bShowUnitsText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetShowUnitsText");
        
        UAudioRadialSlider_SetShowUnitsText_Params params {};
        params.bShowUnitsText = bShowUnitsText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685440
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetShowLabelOnlyOnHover
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bShowLabelOnlyOnHover                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetShowLabelOnlyOnHover(bool bShowLabelOnlyOnHover)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetShowLabelOnlyOnHover");
        
        UAudioRadialSlider_SetShowLabelOnlyOnHover_Params params {};
        params.bShowLabelOnlyOnHover = bShowLabelOnlyOnHover;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685140
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetOutputRange
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InOutputRange                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetOutputRange(const CoreUObject::FVector2D& InOutputRange)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetOutputRange");
        
        UAudioRadialSlider_SetOutputRange_Params params {};
        params.InOutputRange = InOutputRange;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685A30
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetHandStartEndRatio
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InHandStartEndRatio                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetHandStartEndRatio(const CoreUObject::FVector2D& InHandStartEndRatio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetHandStartEndRatio");
        
        UAudioRadialSlider_SetHandStartEndRatio_Params params {};
        params.InHandStartEndRatio = InHandStartEndRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685D40
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.SetCenterBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioRadialSlider::SetCenterBackgroundColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.SetCenterBackgroundColor");
        
        UAudioRadialSlider_SetCenterBackgroundColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02685F50
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.GetSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              OutputValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAudioRadialSlider::GetSliderValue(float OutputValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.GetSliderValue");
        
        UAudioRadialSlider_GetSliderValue_Params params {};
        params.OutputValue = OutputValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02686050
     *         Name   -> Function /Script/AudioWidgets.AudioRadialSlider.GetOutputValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InSliderValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAudioRadialSlider::GetOutputValue(float InSliderValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioRadialSlider.GetOutputValue");
        
        UAudioRadialSlider_GetOutputValue_Params params {};
        params.InSliderValue = InSliderValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02688B80
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetWidgetBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetWidgetBackgroundColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetWidgetBackgroundColor");
        
        UAudioSliderBase_SetWidgetBackgroundColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026891C0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetValueTextReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsReadOnly                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetValueTextReadOnly(bool bIsReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetValueTextReadOnly");
        
        UAudioSliderBase_SetValueTextReadOnly_Params params {};
        params.bIsReadOnly = bIsReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026892E0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetUnitsTextReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsReadOnly                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetUnitsTextReadOnly(bool bIsReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetUnitsTextReadOnly");
        
        UAudioSliderBase_SetUnitsTextReadOnly_Params params {};
        params.bIsReadOnly = bIsReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026893E0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetUnitsText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  Units                                                      (ConstParm, Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetUnitsText(const BasicTypes::FText& Units)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetUnitsText");
        
        UAudioSliderBase_SetUnitsText_Params params {};
        params.Units = Units;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02689540
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetTextLabelBackgroundColor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateColor                             InColor                                                    (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetTextLabelBackgroundColor(const SlateCore::FSlateColor& InColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetTextLabelBackgroundColor");
        
        UAudioSliderBase_SetTextLabelBackgroundColor_Params params {};
        params.InColor = InColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02688C90
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetSliderThumbColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetSliderThumbColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetSliderThumbColor");
        
        UAudioSliderBase_SetSliderThumbColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02688DA0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetSliderBarColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetSliderBarColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetSliderBarColor");
        
        UAudioSliderBase_SetSliderBarColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02688EB0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetSliderBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetSliderBackgroundColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetSliderBackgroundColor");
        
        UAudioSliderBase_SetSliderBackgroundColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02688FC0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetShowUnitsText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bShowUnitsText                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetShowUnitsText(bool bShowUnitsText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetShowUnitsText");
        
        UAudioSliderBase_SetShowUnitsText_Params params {};
        params.bShowUnitsText = bShowUnitsText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026890C0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.SetShowLabelOnlyOnHover
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bShowLabelOnlyOnHover                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioSliderBase::SetShowLabelOnlyOnHover(bool bShowLabelOnlyOnHover)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.SetShowLabelOnlyOnHover");
        
        UAudioSliderBase_SetShowLabelOnlyOnHover_Params params {};
        params.bShowLabelOnlyOnHover = bShowLabelOnlyOnHover;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026896B0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.GetSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              OutputValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAudioSliderBase::GetSliderValue(float OutputValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.GetSliderValue");
        
        UAudioSliderBase_GetSliderValue_Params params {};
        params.OutputValue = OutputValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x026897B0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.GetOutputValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InSliderValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAudioSliderBase::GetOutputValue(float InSliderValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.GetOutputValue");
        
        UAudioSliderBase_GetOutputValue_Params params {};
        params.InSliderValue = InSliderValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x026896B0
     *         Name   -> Function /Script/AudioWidgets.AudioSliderBase.GetLinValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              OutputValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAudioSliderBase::GetLinValue(float OutputValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioSliderBase.GetLinValue");
        
        UAudioSliderBase_GetLinValue_Params params {};
        params.OutputValue = OutputValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x026833C0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterValueColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterValueColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterValueColor");
        
        UAudioMeter_SetMeterValueColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02682F80
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterScaleLabelColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterScaleLabelColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterScaleLabelColor");
        
        UAudioMeter_SetMeterScaleLabelColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02683090
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterScaleColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterScaleColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterScaleColor");
        
        UAudioMeter_SetMeterScaleColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026832B0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterPeakColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterPeakColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterPeakColor");
        
        UAudioMeter_SetMeterPeakColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026831A0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterClippingColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterClippingColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterClippingColor");
        
        UAudioMeter_SetMeterClippingColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026836F0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterChannelInfo
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> InMeterChannelInfo                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterChannelInfo(BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> InMeterChannelInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterChannelInfo");
        
        UAudioMeter_SetMeterChannelInfo_Params params {};
        params.InMeterChannelInfo = InMeterChannelInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026834D0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetMeterBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetMeterBackgroundColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetMeterBackgroundColor");
        
        UAudioMeter_SetMeterBackgroundColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x026835E0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.SetBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMeter::SetBackgroundColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.SetBackgroundColor");
        
        UAudioMeter_SetBackgroundColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AudioWidgets.AudioMeter.GetMeterChannelInfo__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> UAudioMeter::GetMeterChannelInfo__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AudioWidgets.AudioMeter.GetMeterChannelInfo__DelegateSignature");
        
        UAudioMeter_GetMeterChannelInfo__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x026837F0
     *         Name   -> Function /Script/AudioWidgets.AudioMeter.GetMeterChannelInfo
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<AudioWidgets::FMeterChannelInfo> UAudioMeter::GetMeterChannelInfo()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioWidgets.AudioMeter.GetMeterChannelInfo");
        
        UAudioMeter_GetMeterChannelInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
