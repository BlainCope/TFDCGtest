/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AssetRegistry_PARAMS.h"
#include "Headers/AssetRegistry_UAssetRegistryHelpers.h"
#include "Headers/AssetRegistry_IAssetRegistry.h"
#include "Headers/AssetRegistry_UAssetRegistryImpl.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AssetRegistry
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x05456460
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.ToSoftObjectPath
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FSoftObjectPath                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FSoftObjectPath UAssetRegistryHelpers::STATIC_ToSoftObjectPath(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.ToSoftObjectPath");
        
        UAssetRegistryHelpers_ToSoftObjectPath_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05454FB0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.SetFilterTagsAndValues
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FARFilter                             InFilter                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<AssetRegistry::FTagAndValue>    InTagsAndValues                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FARFilter                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    CoreUObject::FARFilter UAssetRegistryHelpers::STATIC_SetFilterTagsAndValues(const CoreUObject::FARFilter& InFilter, BasicTypes::TArray<AssetRegistry::FTagAndValue> InTagsAndValues)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.SetFilterTagsAndValues");
        
        UAssetRegistryHelpers_SetFilterTagsAndValues_Params params {};
        params.InFilter = InFilter;
        params.InTagsAndValues = InTagsAndValues;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05456FE0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.IsValid
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAssetRegistryHelpers::STATIC_IsValid(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.IsValid");
        
        UAssetRegistryHelpers_IsValid_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05456D40
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.IsUAsset
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAssetRegistryHelpers::STATIC_IsUAsset(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.IsUAsset");
        
        UAssetRegistryHelpers_IsUAsset_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05456AA0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.IsRedirector
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAssetRegistryHelpers::STATIC_IsRedirector(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.IsRedirector");
        
        UAssetRegistryHelpers_IsRedirector_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05455B90
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.IsAssetLoaded
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAssetRegistryHelpers::STATIC_IsAssetLoaded(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.IsAssetLoaded");
        
        UAssetRegistryHelpers_IsAssetLoaded_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054554A0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetTagValue
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InTagName                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutTagValue                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAssetRegistryHelpers::STATIC_GetTagValue(const CoreUObject::FAssetData& InAssetData, const BasicTypes::FName& InTagName, BasicTypes::FString* OutTagValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetTagValue");
        
        UAssetRegistryHelpers_GetTagValue_Params params {};
        params.InAssetData = InAssetData;
        params.InTagName = InTagName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutTagValue != nullptr)
            *OutTagValue = params.OutTagValue;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05456730
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetFullName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAssetRegistryHelpers::STATIC_GetFullName(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetFullName");
        
        UAssetRegistryHelpers_GetFullName_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054558B0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetExportTextName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAssetRegistryHelpers::STATIC_GetExportTextName(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetExportTextName");
        
        UAssetRegistryHelpers_GetExportTextName_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054561C0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetClass
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UAssetRegistryHelpers::STATIC_GetClass(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetClass");
        
        UAssetRegistryHelpers_GetClass_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05454D60
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetBlueprintAssets
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FARFilter                             InFilter                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAssetRegistryHelpers::STATIC_GetBlueprintAssets(const CoreUObject::FARFilter& InFilter, BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetBlueprintAssets");
        
        UAssetRegistryHelpers_GetBlueprintAssets_Params params {};
        params.InFilter = InFilter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
    }

    /**
     * Function:
     *         RVA    -> 0x05457A30
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetAssetRegistry
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         BasicTypes::TScriptInterface<AssetRegistry::IAssetRegistry> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::TScriptInterface<AssetRegistry::IAssetRegistry> UAssetRegistryHelpers::STATIC_GetAssetRegistry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetAssetRegistry");
        
        UAssetRegistryHelpers_GetAssetRegistry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05455E60
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.GetAsset
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            InAssetData                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UAssetRegistryHelpers::STATIC_GetAsset(const CoreUObject::FAssetData& InAssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.GetAsset");
        
        UAssetRegistryHelpers_GetAsset_Params params {};
        params.InAssetData = InAssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054549B0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.FindAssetNativeClass
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FAssetData                            AssetData                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UAssetRegistryHelpers::STATIC_FindAssetNativeClass(const CoreUObject::FAssetData& AssetData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.FindAssetNativeClass");
        
        UAssetRegistryHelpers_FindAssetNativeClass_Params params {};
        params.AssetData = AssetData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05457280
     *         Name   -> Function /Script/AssetRegistry.AssetRegistryHelpers.CreateAssetData
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              InAsset                                                    (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllowBlueprintClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FAssetData                            ReturnValue                                                (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FAssetData UAssetRegistryHelpers::STATIC_CreateAssetData(CoreUObject::UObject* InAsset, bool bAllowBlueprintClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistryHelpers.CreateAssetData");
        
        UAssetRegistryHelpers_CreateAssetData_Params params {};
        params.InAsset = InAsset;
        params.bAllowBlueprintClass = bAllowBlueprintClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0546EDC0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.WaitForPackage
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                PackageName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::WaitForPackage(const BasicTypes::FString& PackageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.WaitForPackage");
        
        IAssetRegistry_WaitForPackage_Params params {};
        params.PackageName = PackageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0546EEC0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.WaitForCompletion
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void IAssetRegistry::WaitForCompletion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.WaitForCompletion");
        
        IAssetRegistry_WaitForCompletion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0546F490
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.UseFilterToExcludeAssets
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FAssetData>        AssetDataList                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FARFilter                             Filter                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::UseFilterToExcludeAssets(BasicTypes::TArray<CoreUObject::FAssetData>* AssetDataList, const CoreUObject::FARFilter& Filter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.UseFilterToExcludeAssets");
        
        IAssetRegistry_UseFilterToExcludeAssets_Params params {};
        params.Filter = Filter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AssetDataList != nullptr)
            *AssetDataList = params.AssetDataList;
    }

    /**
     * Function:
     *         RVA    -> 0x0546EF40
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.SearchAllAssets
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bSynchronousSearch                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::SearchAllAssets(bool bSynchronousSearch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.SearchAllAssets");
        
        IAssetRegistry_SearchAllAssets_Params params {};
        params.bSynchronousSearch = bSynchronousSearch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0546F210
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.ScanPathsSynchronous
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            InPaths                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bForceRescan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIgnoreDenyListScanFilters                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::ScanPathsSynchronous(BasicTypes::TArray<BasicTypes::FString> InPaths, bool bForceRescan, bool bIgnoreDenyListScanFilters)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.ScanPathsSynchronous");
        
        IAssetRegistry_ScanPathsSynchronous_Params params {};
        params.InPaths = InPaths;
        params.bForceRescan = bForceRescan;
        params.bIgnoreDenyListScanFilters = bIgnoreDenyListScanFilters;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0546EB90
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.ScanModifiedAssetFiles
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            InFilePaths                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::ScanModifiedAssetFiles(BasicTypes::TArray<BasicTypes::FString> InFilePaths)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.ScanModifiedAssetFiles");
        
        IAssetRegistry_ScanModifiedAssetFiles_Params params {};
        params.InFilePaths = InFilePaths;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0546F030
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.ScanFilesSynchronous
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            InFilePaths                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bForceRescan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::ScanFilesSynchronous(BasicTypes::TArray<BasicTypes::FString> InFilePaths, bool bForceRescan)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.ScanFilesSynchronous");
        
        IAssetRegistry_ScanFilesSynchronous_Params params {};
        params.InFilePaths = InFilePaths;
        params.bForceRescan = bForceRescan;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0546F6F0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.RunAssetsThroughFilter
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FAssetData>        AssetDataList                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FARFilter                             Filter                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::RunAssetsThroughFilter(BasicTypes::TArray<CoreUObject::FAssetData>* AssetDataList, const CoreUObject::FARFilter& Filter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.RunAssetsThroughFilter");
        
        IAssetRegistry_RunAssetsThroughFilter_Params params {};
        params.Filter = Filter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AssetDataList != nullptr)
            *AssetDataList = params.AssetDataList;
    }

    /**
     * Function:
     *         RVA    -> 0x0546ECC0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.PrioritizeSearchPath
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                PathToPrioritize                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::PrioritizeSearchPath(const BasicTypes::FString& PathToPrioritize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.PrioritizeSearchPath");
        
        IAssetRegistry_PrioritizeSearchPath_Params params {};
        params.PathToPrioritize = PathToPrioritize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05470290
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.K2_GetReferencers
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FName                                  PackageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AssetRegistry::FAssetRegistryDependencyOptions     ReferenceOptions                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              OutReferencers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::K2_GetReferencers(const BasicTypes::FName& PackageName, const AssetRegistry::FAssetRegistryDependencyOptions& ReferenceOptions, BasicTypes::TArray<BasicTypes::FName>* OutReferencers)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.K2_GetReferencers");
        
        IAssetRegistry_K2_GetReferencers_Params params {};
        params.PackageName = PackageName;
        params.ReferenceOptions = ReferenceOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutReferencers != nullptr)
            *OutReferencers = params.OutReferencers;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054704F0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.K2_GetDependencies
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FName                                  PackageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AssetRegistry::FAssetRegistryDependencyOptions     DependencyOptions                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              OutDependencies                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::K2_GetDependencies(const BasicTypes::FName& PackageName, const AssetRegistry::FAssetRegistryDependencyOptions& DependencyOptions, BasicTypes::TArray<BasicTypes::FName>* OutDependencies)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.K2_GetDependencies");
        
        IAssetRegistry_K2_GetDependencies_Params params {};
        params.PackageName = PackageName;
        params.DependencyOptions = DependencyOptions;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutDependencies != nullptr)
            *OutDependencies = params.OutDependencies;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05470980
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.K2_GetAssetByObjectPath
     *         Flags  -> (RequiredAPI, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::FSoftObjectPath                       ObjectPath                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeOnlyOnDiskAssets                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSkipARFilteredAssets                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FAssetData                            ReturnValue                                                (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FAssetData IAssetRegistry::K2_GetAssetByObjectPath(const CoreUObject::FSoftObjectPath& ObjectPath, bool bIncludeOnlyOnDiskAssets, bool bSkipARFilteredAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.K2_GetAssetByObjectPath");
        
        IAssetRegistry_K2_GetAssetByObjectPath_Params params {};
        params.ObjectPath = ObjectPath;
        params.bIncludeOnlyOnDiskAssets = bIncludeOnlyOnDiskAssets;
        params.bSkipARFilteredAssets = bSkipARFilteredAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0546EEE0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.IsSearchAsync
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::IsSearchAsync()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.IsSearchAsync");
        
        IAssetRegistry_IsSearchAsync_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0546EF10
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.IsSearchAllAssets
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::IsSearchAllAssets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.IsSearchAllAssets");
        
        IAssetRegistry_IsSearchAllAssets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D43B80
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.IsLoadingAssets
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::IsLoadingAssets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.IsLoadingAssets");
        
        IAssetRegistry_IsLoadingAssets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05471ED0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.HasAssets
     *         Flags  -> (Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FName                                  PackagePath                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRecursive                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::HasAssets(const BasicTypes::FName& PackagePath, bool bRecursive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.HasAssets");
        
        IAssetRegistry_HasAssets_Params params {};
        params.PackagePath = PackagePath;
        params.bRecursive = bRecursive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0546F950
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetSubPaths
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FString                                InBasePath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutPathList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bInRecurse                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::GetSubPaths(const BasicTypes::FString& InBasePath, BasicTypes::TArray<BasicTypes::FString>* OutPathList, bool bInRecurse)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetSubPaths");
        
        IAssetRegistry_GetSubPaths_Params params {};
        params.InBasePath = InBasePath;
        params.bInRecurse = bInRecurse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPathList != nullptr)
            *OutPathList = params.OutPathList;
    }

    /**
     * Function:
     *         RVA    -> 0x0546FD10
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetDerivedClassNames
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FTopLevelAssetPath> ClassNames                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TSet<CoreUObject::FTopLevelAssetPath>  ExcludedClassNames                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TSet<CoreUObject::FTopLevelAssetPath>  OutDerivedClassNames                                       (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::GetDerivedClassNames(BasicTypes::TArray<CoreUObject::FTopLevelAssetPath> ClassNames, BasicTypes::TSet<CoreUObject::FTopLevelAssetPath> ExcludedClassNames, BasicTypes::TSet<CoreUObject::FTopLevelAssetPath>* OutDerivedClassNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetDerivedClassNames");
        
        IAssetRegistry_GetDerivedClassNames_Params params {};
        params.ClassNames = ClassNames;
        params.ExcludedClassNames = ExcludedClassNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutDerivedClassNames != nullptr)
            *OutDerivedClassNames = params.OutDerivedClassNames;
    }

    /**
     * Function:
     *         RVA    -> 0x05471460
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAssetsByPaths
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              PackagePaths                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bRecursive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeOnlyOnDiskAssets                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAssetsByPaths(BasicTypes::TArray<BasicTypes::FName> PackagePaths, BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData, bool bRecursive, bool bIncludeOnlyOnDiskAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAssetsByPaths");
        
        IAssetRegistry_GetAssetsByPaths_Params params {};
        params.PackagePaths = PackagePaths;
        params.bRecursive = bRecursive;
        params.bIncludeOnlyOnDiskAssets = bIncludeOnlyOnDiskAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054717D0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAssetsByPath
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FName                                  PackagePath                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bRecursive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeOnlyOnDiskAssets                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAssetsByPath(const BasicTypes::FName& PackagePath, BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData, bool bRecursive, bool bIncludeOnlyOnDiskAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAssetsByPath");
        
        IAssetRegistry_GetAssetsByPath_Params params {};
        params.PackagePath = PackagePath;
        params.bRecursive = bRecursive;
        params.bIncludeOnlyOnDiskAssets = bIncludeOnlyOnDiskAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05471B50
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAssetsByPackageName
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FName                                  PackageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeOnlyOnDiskAssets                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSkipARFilteredAssets                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAssetsByPackageName(const BasicTypes::FName& PackageName, BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData, bool bIncludeOnlyOnDiskAssets, bool bSkipARFilteredAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAssetsByPackageName");
        
        IAssetRegistry_GetAssetsByPackageName_Params params {};
        params.PackageName = PackageName;
        params.bIncludeOnlyOnDiskAssets = bIncludeOnlyOnDiskAssets;
        params.bSkipARFilteredAssets = bSkipARFilteredAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05471180
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAssetsByClass
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::FTopLevelAssetPath                    ClassPathName                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bSearchSubClasses                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAssetsByClass(const CoreUObject::FTopLevelAssetPath& ClassPathName, BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData, bool bSearchSubClasses)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAssetsByClass");
        
        IAssetRegistry_GetAssetsByClass_Params params {};
        params.ClassPathName = ClassPathName;
        params.bSearchSubClasses = bSearchSubClasses;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05470E80
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAssets
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::FARFilter                             Filter                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bSkipARFilteredAssets                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAssets(const CoreUObject::FARFilter& Filter, BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData, bool bSkipARFilteredAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAssets");
        
        IAssetRegistry_GetAssets_Params params {};
        params.Filter = Filter;
        params.bSkipARFilteredAssets = bSkipARFilteredAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05470C70
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAssetByObjectPath
     *         Flags  -> (Native, Public, HasDefaults, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::FName                                  ObjectPath                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeOnlyOnDiskAssets                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FAssetData                            ReturnValue                                                (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FAssetData IAssetRegistry::GetAssetByObjectPath(const BasicTypes::FName& ObjectPath, bool bIncludeOnlyOnDiskAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAssetByObjectPath");
        
        IAssetRegistry_GetAssetByObjectPath_Params params {};
        params.ObjectPath = ObjectPath;
        params.bIncludeOnlyOnDiskAssets = bIncludeOnlyOnDiskAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x054700C0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAncestorClassNames
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::FTopLevelAssetPath                    ClassPathName                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FTopLevelAssetPath> OutAncestorClassNames                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAncestorClassNames(const CoreUObject::FTopLevelAssetPath& ClassPathName, BasicTypes::TArray<CoreUObject::FTopLevelAssetPath>* OutAncestorClassNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAncestorClassNames");
        
        IAssetRegistry_GetAncestorClassNames_Params params {};
        params.ClassPathName = ClassPathName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAncestorClassNames != nullptr)
            *OutAncestorClassNames = params.OutAncestorClassNames;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0546FBE0
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAllCachedPaths
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            OutPathList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IAssetRegistry::GetAllCachedPaths(BasicTypes::TArray<BasicTypes::FString>* OutPathList)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAllCachedPaths");
        
        IAssetRegistry_GetAllCachedPaths_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutPathList != nullptr)
            *OutPathList = params.OutPathList;
    }

    /**
     * Function:
     *         RVA    -> 0x05470750
     *         Name   -> Function /Script/AssetRegistry.AssetRegistry.GetAllAssets
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FAssetData>        OutAssetData                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               bIncludeOnlyOnDiskAssets                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool IAssetRegistry::GetAllAssets(BasicTypes::TArray<CoreUObject::FAssetData>* OutAssetData, bool bIncludeOnlyOnDiskAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AssetRegistry.AssetRegistry.GetAllAssets");
        
        IAssetRegistry_GetAllAssets_Params params {};
        params.bIncludeOnlyOnDiskAssets = bIncludeOnlyOnDiskAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutAssetData != nullptr)
            *OutAssetData = params.OutAssetData;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
