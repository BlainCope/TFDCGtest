/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/CameraCalibrationCore_ENUMS.h"
#include "Headers/CameraCalibrationCore_PARAMS.h"
#include "Headers/CameraCalibrationCore_UCalibrationPointComponent.h"
#include "Headers/CameraCalibrationCore_ACameraCalibrationCheckerboard.h"
#include "Headers/CameraCalibrationCore_UCameraCalibrationSettings.h"
#include "Headers/CameraCalibrationCore_UCameraCalibrationEditorSettings.h"
#include "Headers/CameraCalibrationCore_UCameraCalibrationStep.h"
#include "Headers/CameraCalibrationCore_UCameraLensDistortionAlgo.h"
#include "Headers/CameraCalibrationCore_UCameraNodalOffsetAlgo.h"
#include "Headers/CameraCalibrationCore_ULensDistortionModelHandlerBase.h"
#include "Headers/CameraCalibrationCore_UCameraCalibrationSubsystem.h"
#include "Headers/CameraCalibrationCore_UCameraImageCenterAlgo.h"
#include "Headers/CameraCalibrationCore_UAnamorphicLensDistortionModelHandler.h"
#include "Headers/CameraCalibrationCore_ULensModel.h"
#include "Headers/CameraCalibrationCore_ULensComponent.h"
#include "Headers/CameraCalibrationCore_ULensFile.h"
#include "Headers/CameraCalibrationCore_USphericalLensDistortionModelHandler.h"
#include "Headers/CameraCalibrationCore_USphericalLensModel.h"
#include "Headers/CameraCalibrationCore_UAnamorphicLensModel.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::CameraCalibrationCore
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x013EBEB0
     *         Name   -> Function /Script/CameraCalibrationCore.CalibrationPointComponent.RebuildVertices
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UCalibrationPointComponent::RebuildVertices()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CalibrationPointComponent.RebuildVertices");
        
        UCalibrationPointComponent_RebuildVertices_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013EC010
     *         Name   -> Function /Script/CameraCalibrationCore.CalibrationPointComponent.NamespacedSubpointName
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                InSubpointName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OutNamespacedName                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCalibrationPointComponent::NamespacedSubpointName(const BasicTypes::FString& InSubpointName, BasicTypes::FString* OutNamespacedName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CalibrationPointComponent.NamespacedSubpointName");
        
        UCalibrationPointComponent_NamespacedSubpointName_Params params {};
        params.InSubpointName = InSubpointName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutNamespacedName != nullptr)
            *OutNamespacedName = params.OutNamespacedName;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EC1E0
     *         Name   -> Function /Script/CameraCalibrationCore.CalibrationPointComponent.GetWorldLocation
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                InPointName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               OutLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCalibrationPointComponent::GetWorldLocation(const BasicTypes::FString& InPointName, CoreUObject::FVector* OutLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CalibrationPointComponent.GetWorldLocation");
        
        UCalibrationPointComponent_GetWorldLocation_Params params {};
        params.InPointName = InPointName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutLocation != nullptr)
            *OutLocation = params.OutLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EBEE0
     *         Name   -> Function /Script/CameraCalibrationCore.CalibrationPointComponent.GetNamespacedPointNames
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            OutNamespacedNames                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCalibrationPointComponent::GetNamespacedPointNames(BasicTypes::TArray<BasicTypes::FString>* OutNamespacedNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CalibrationPointComponent.GetNamespacedPointNames");
        
        UCalibrationPointComponent_GetNamespacedPointNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutNamespacedNames != nullptr)
            *OutNamespacedNames = params.OutNamespacedNames;
    }

    /**
     * Function:
     *         RVA    -> 0x013EC6F0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationCheckerboard.Rebuild
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ACameraCalibrationCheckerboard::Rebuild()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationCheckerboard.Rebuild");
        
        ACameraCalibrationCheckerboard_Rebuild_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F90B0
     *         Name   -> Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.SetDistortionState
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::FLensDistortionState        InNewState                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensDistortionModelHandlerBase::SetDistortionState(const CameraCalibrationCore::FLensDistortionState& InNewState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.SetDistortionState");
        
        ULensDistortionModelHandlerBase_SetDistortionState_Params params {};
        params.InNewState = InNewState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F91C0
     *         Name   -> Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.IsModelSupported
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::ULensModel*                 ModelToSupport                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensDistortionModelHandlerBase::IsModelSupported(CameraCalibrationCore::ULensModel* ModelToSupport)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.IsModelSupported");
        
        ULensDistortionModelHandlerBase_IsModelSupported_Params params {};
        params.ModelToSupport = ModelToSupport;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9090
     *         Name   -> Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.GetUndistortionDisplacementMap
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* ULensDistortionModelHandlerBase::GetUndistortionDisplacementMap()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.GetUndistortionDisplacementMap");
        
        ULensDistortionModelHandlerBase_GetUndistortionDisplacementMap_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9070
     *         Name   -> Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.GetDistortionDisplacementMap
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* ULensDistortionModelHandlerBase::GetDistortionDisplacementMap()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensDistortionModelHandlerBase.GetDistortionDisplacementMap");
        
        ULensDistortionModelHandlerBase_GetDistortionDisplacementMap_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE4E0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.UnregisterDistortionModelHandler
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CinematicCamera::UCineCameraComponent*             Component                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensDistortionModelHandlerBase* Handler                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCameraCalibrationSubsystem::UnregisterDistortionModelHandler(CinematicCamera::UCineCameraComponent* Component, CameraCalibrationCore::ULensDistortionModelHandlerBase* Handler)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.UnregisterDistortionModelHandler");
        
        UCameraCalibrationSubsystem_UnregisterDistortionModelHandler_Params params {};
        params.Component = Component;
        params.Handler = Handler;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013EEEE0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.SetDefaultLensFile
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::ULensFile*                  NewDefaultLensFile                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCameraCalibrationSubsystem::SetDefaultLensFile(CameraCalibrationCore::ULensFile* NewDefaultLensFile)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.SetDefaultLensFile");
        
        UCameraCalibrationSubsystem_SetDefaultLensFile_Params params {};
        params.NewDefaultLensFile = NewDefaultLensFile;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE330
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetRegisteredLensModel
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  ModelName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensModel*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensModel* UCameraCalibrationSubsystem::GetRegisteredLensModel(const BasicTypes::FName& ModelName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetRegisteredLensModel");
        
        UCameraCalibrationSubsystem_GetRegisteredLensModel_Params params {};
        params.ModelName = ModelName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EDD10
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetOverlayMaterialNames
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UCameraCalibrationSubsystem::GetOverlayMaterialNames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetOverlayMaterialNames");
        
        UCameraCalibrationSubsystem_GetOverlayMaterialNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EDD90
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetOverlayMaterial
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  OverlayName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UMaterialInterface*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInterface* UCameraCalibrationSubsystem::GetOverlayMaterial(const BasicTypes::FName& OverlayName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetOverlayMaterial");
        
        UCameraCalibrationSubsystem_GetOverlayMaterial_Params params {};
        params.OverlayName = OverlayName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EEDD0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetLensFile
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::FLensFilePicker             Picker                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensFile*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensFile* UCameraCalibrationSubsystem::GetLensFile(const CameraCalibrationCore::FLensFilePicker& Picker)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetLensFile");
        
        UCameraCalibrationSubsystem_GetLensFile_Params params {};
        params.Picker = Picker;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EEB40
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetDistortionModelHandlers
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CinematicCamera::UCineCameraComponent*             Component                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CameraCalibrationCore::ULensDistortionModelHandlerBase*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CameraCalibrationCore::ULensDistortionModelHandlerBase*> UCameraCalibrationSubsystem::GetDistortionModelHandlers(CinematicCamera::UCineCameraComponent* Component)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetDistortionModelHandlers");
        
        UCameraCalibrationSubsystem_GetDistortionModelHandlers_Params params {};
        params.Component = Component;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013C3B10
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetDefaultLensFile
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::ULensFile*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensFile* UCameraCalibrationSubsystem::GetDefaultLensFile()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetDefaultLensFile");
        
        UCameraCalibrationSubsystem_GetDefaultLensFile_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE0E0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraNodalOffsetAlgos
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UCameraCalibrationSubsystem::GetCameraNodalOffsetAlgos()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraNodalOffsetAlgos");
        
        UCameraCalibrationSubsystem_GetCameraNodalOffsetAlgos_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE170
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraNodalOffsetAlgo
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::UCameraNodalOffsetAlgo*     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::UCameraNodalOffsetAlgo* UCameraCalibrationSubsystem::GetCameraNodalOffsetAlgo(const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraNodalOffsetAlgo");
        
        UCameraCalibrationSubsystem_GetCameraNodalOffsetAlgo_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EDE90
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraImageCenterAlgos
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UCameraCalibrationSubsystem::GetCameraImageCenterAlgos()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraImageCenterAlgos");
        
        UCameraCalibrationSubsystem_GetCameraImageCenterAlgos_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EDF20
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraImageCenterAlgo
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::UCameraImageCenterAlgo*     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::UCameraImageCenterAlgo* UCameraCalibrationSubsystem::GetCameraImageCenterAlgo(const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraImageCenterAlgo");
        
        UCameraCalibrationSubsystem_GetCameraImageCenterAlgo_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EDC80
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraCalibrationSteps
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UCameraCalibrationSubsystem::GetCameraCalibrationSteps()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraCalibrationSteps");
        
        UCameraCalibrationSubsystem_GetCameraCalibrationSteps_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EDAC0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraCalibrationStep
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::UCameraCalibrationStep*     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::UCameraCalibrationStep* UCameraCalibrationSubsystem::GetCameraCalibrationStep(const BasicTypes::FName& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.GetCameraCalibrationStep");
        
        UCameraCalibrationSubsystem_GetCameraCalibrationStep_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE640
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.FindOrCreateDistortionModelHandler
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::FDistortionHandlerPicker    DistortionHandlerPicker                                    (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensModel*                 LensModelClass                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensDistortionModelHandlerBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensDistortionModelHandlerBase* UCameraCalibrationSubsystem::FindOrCreateDistortionModelHandler(CameraCalibrationCore::FDistortionHandlerPicker* DistortionHandlerPicker, CameraCalibrationCore::ULensModel* LensModelClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.FindOrCreateDistortionModelHandler");
        
        UCameraCalibrationSubsystem_FindOrCreateDistortionModelHandler_Params params {};
        params.LensModelClass = LensModelClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DistortionHandlerPicker != nullptr)
            *DistortionHandlerPicker = params.DistortionHandlerPicker;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE8C0
     *         Name   -> Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.FindDistortionModelHandler
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::FDistortionHandlerPicker    DistortionHandlerPicker                                    (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               bUpdatePicker                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensDistortionModelHandlerBase* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensDistortionModelHandlerBase* UCameraCalibrationSubsystem::FindDistortionModelHandler(CameraCalibrationCore::FDistortionHandlerPicker* DistortionHandlerPicker, bool bUpdatePicker)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.CameraCalibrationSubsystem.FindDistortionModelHandler");
        
        UCameraCalibrationSubsystem_FindDistortionModelHandler_Params params {};
        params.bUpdatePicker = bUpdatePicker;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (DistortionHandlerPicker != nullptr)
            *DistortionHandlerPicker = params.DistortionHandlerPicker;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1180
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.WasNodalOffsetAppliedThisTick
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensComponent::WasNodalOffsetAppliedThisTick()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.WasNodalOffsetAppliedThisTick");
        
        ULensComponent_WasNodalOffsetAppliedThisTick_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1160
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.WasDistortionEvaluated
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensComponent::WasDistortionEvaluated()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.WasDistortionEvaluated");
        
        ULensComponent_WasDistortionEvaluated_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1880
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.ShouldApplyNodalOffsetOnTick
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensComponent::ShouldApplyNodalOffsetOnTick()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.ShouldApplyNodalOffsetOnTick");
        
        ULensComponent_ShouldApplyNodalOffsetOnTick_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1640
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.ShouldApplyDistortion
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensComponent::ShouldApplyDistortion()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.ShouldApplyDistortion");
        
        ULensComponent_ShouldApplyDistortion_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1B00
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetOverscanMultiplier
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Multiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetOverscanMultiplier(float Multiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetOverscanMultiplier");
        
        ULensComponent_SetOverscanMultiplier_Params params {};
        params.Multiplier = Multiplier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1440
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetLensModel
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::ULensModel*                 Model                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetLensModel(CameraCalibrationCore::ULensModel* Model)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetLensModel");
        
        ULensComponent_SetLensModel_Params params {};
        params.Model = Model;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1E50
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetLensFilePicker
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::FLensFilePicker             LensFile                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetLensFilePicker(const CameraCalibrationCore::FLensFilePicker& LensFile)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetLensFilePicker");
        
        ULensComponent_SetLensFilePicker_Params params {};
        params.LensFile = LensFile;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1D40
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetLensFile
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::ULensFile*                  LensFile                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetLensFile(CameraCalibrationCore::ULensFile* LensFile)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetLensFile");
        
        ULensComponent_SetLensFile_Params params {};
        params.LensFile = LensFile;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1C30
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetFIZEvaluationMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::EFIZEvaluationMode          Mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetFIZEvaluationMode(CameraCalibrationCore::EFIZEvaluationMode Mode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetFIZEvaluationMode");
        
        ULensComponent_SetFIZEvaluationMode_Params params {};
        params.Mode = Mode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F19F0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetFilmbackOverrideSetting
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::EFilmbackOverrideSource     Setting                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetFilmbackOverrideSetting(CameraCalibrationCore::EFilmbackOverrideSource Setting)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetFilmbackOverrideSetting");
        
        ULensComponent_SetFilmbackOverrideSetting_Params params {};
        params.Setting = Setting;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1220
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetDistortionState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::FLensDistortionState        State                                                      (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetDistortionState(const CameraCalibrationCore::FLensDistortionState& State)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetDistortionState");
        
        ULensComponent_SetDistortionState_Params params {};
        params.State = State;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1660
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetDistortionSource
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::EDistortionSource           Source                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetDistortionSource(CameraCalibrationCore::EDistortionSource Source)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetDistortionSource");
        
        ULensComponent_SetDistortionSource_Params params {};
        params.Source = Source;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F18A0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetCroppedFilmback
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CinematicCamera::FCameraFilmbackSettings           Filmback                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetCroppedFilmback(const CinematicCamera::FCameraFilmbackSettings& Filmback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetCroppedFilmback");
        
        ULensComponent_SetCroppedFilmback_Params params {};
        params.Filmback = Filmback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1790
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetApplyNodalOffsetOnTick
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bApplyNodalOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetApplyNodalOffsetOnTick(bool bApplyNodalOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetApplyNodalOffsetOnTick");
        
        ULensComponent_SetApplyNodalOffsetOnTick_Params params {};
        params.bApplyNodalOffset = bApplyNodalOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1550
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.SetApplyDistortion
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bApply                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::SetApplyDistortion(bool bApply)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.SetApplyDistortion");
        
        ULensComponent_SetApplyDistortion_Params params {};
        params.bApply = bApply;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1BF0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetOverscanMultiplier
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float ULensComponent::GetOverscanMultiplier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetOverscanMultiplier");
        
        ULensComponent_GetOverscanMultiplier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F11E0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetOriginalFocalLength
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float ULensComponent::GetOriginalFocalLength()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetOriginalFocalLength");
        
        ULensComponent_GetOriginalFocalLength_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1530
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetLensModel
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::ULensModel*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensModel* ULensComponent::GetLensModel()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetLensModel");
        
        ULensComponent_GetLensModel_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1F90
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetLensFilePicker
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::FLensFilePicker             ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::FLensFilePicker ULensComponent::GetLensFilePicker()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetLensFilePicker");
        
        ULensComponent_GetLensFilePicker_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F11A0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetLensFileEvaluationInputs
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::FLensFileEvaluationInputs   ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::FLensFileEvaluationInputs ULensComponent::GetLensFileEvaluationInputs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetLensFileEvaluationInputs");
        
        ULensComponent_GetLensFileEvaluationInputs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1F50
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetLensFile
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::ULensFile*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::ULensFile* ULensComponent::GetLensFile()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetLensFile");
        
        ULensComponent_GetLensFile_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1D20
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetFIZEvaluationMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::EFIZEvaluationMode          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::EFIZEvaluationMode ULensComponent::GetFIZEvaluationMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetFIZEvaluationMode");
        
        ULensComponent_GetFIZEvaluationMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1AE0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetFilmbackOverrideSetting
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::EFilmbackOverrideSource     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::EFilmbackOverrideSource ULensComponent::GetFilmbackOverrideSetting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetFilmbackOverrideSetting");
        
        ULensComponent_GetFilmbackOverrideSetting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1380
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetDistortionState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::FLensDistortionState        ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::FLensDistortionState ULensComponent::GetDistortionState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetDistortionState");
        
        ULensComponent_GetDistortionState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1770
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetDistortionSource
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::EDistortionSource           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CameraCalibrationCore::EDistortionSource ULensComponent::GetDistortionSource()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetDistortionSource");
        
        ULensComponent_GetDistortionSource_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F19C0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.GetCroppedFilmback
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CinematicCamera::FCameraFilmbackSettings           ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    CinematicCamera::FCameraFilmbackSettings ULensComponent::GetCroppedFilmback()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.GetCroppedFilmback");
        
        ULensComponent_GetCroppedFilmback_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F1200
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.ClearDistortionState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ULensComponent::ClearDistortionState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.ClearDistortionState");
        
        ULensComponent_ClearDistortionState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F0DB0
     *         Name   -> Function /Script/CameraCalibrationCore.LensComponent.ApplyNodalOffset
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           ComponentToOffset                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUseManualInputs                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ManualFocusInput                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ManualZoomInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensComponent::ApplyNodalOffset(Engine::USceneComponent* ComponentToOffset, bool bUseManualInputs, float ManualFocusInput, float ManualZoomInput)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensComponent.ApplyNodalOffset");
        
        ULensComponent_ApplyNodalOffset_Params params {};
        params.ComponentToOffset = ComponentToOffset;
        params.bUseManualInputs = bUseManualInputs;
        params.ManualFocusInput = ManualFocusInput;
        params.ManualZoomInput = ManualZoomInput;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9BC0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.RemoveZoomPoint
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::ELensDataCategory           InDataCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::RemoveZoomPoint(CameraCalibrationCore::ELensDataCategory InDataCategory, float InFocus, float InZoom)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.RemoveZoomPoint");
        
        ULensFile_RemoveZoomPoint_Params params {};
        params.InDataCategory = InDataCategory;
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9DE0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.RemoveFocusPoint
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::ELensDataCategory           InDataCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::RemoveFocusPoint(CameraCalibrationCore::ELensDataCategory InDataCategory, float InFocus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.RemoveFocusPoint");
        
        ULensFile_RemoveFocusPoint_Params params {};
        params.InDataCategory = InDataCategory;
        params.InFocus = InFocus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F98D0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.HasSamples
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::ELensDataCategory           InDataCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::HasSamples(CameraCalibrationCore::ELensDataCategory InDataCategory)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.HasSamples");
        
        ULensFile_HasSamples_Params params {};
        params.InDataCategory = InDataCategory;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC400
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.HasIrisEncoderMapping
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::HasIrisEncoderMapping()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.HasIrisEncoderMapping");
        
        ULensFile_HasIrisEncoderMapping_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC530
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.HasFocusEncoderMapping
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::HasFocusEncoderMapping()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.HasFocusEncoderMapping");
        
        ULensFile_HasFocusEncoderMapping_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F97E0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetTotalPointNum
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CameraCalibrationCore::ELensDataCategory           InDataCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t ULensFile::GetTotalPointNum(CameraCalibrationCore::ELensDataCategory InDataCategory)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetTotalPointNum");
        
        ULensFile_GetTotalPointNum_Params params {};
        params.InDataCategory = InDataCategory;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FBDE0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetSTMapPoints
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CameraCalibrationCore::FSTMapPointInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CameraCalibrationCore::FSTMapPointInfo> ULensFile::GetSTMapPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetSTMapPoints");
        
        ULensFile_GetSTMapPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FAD70
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetSTMapPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FSTMapInfo                  OutSTMapInfo                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::GetSTMapPoint(float InFocus, float InZoom, CameraCalibrationCore::FSTMapInfo* OutSTMapInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetSTMapPoint");
        
        ULensFile_GetSTMapPoint_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutSTMapInfo != nullptr)
            *OutSTMapInfo = params.OutSTMapInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FB910
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetNodalOffsetPoints
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CameraCalibrationCore::FNodalOffsetPointInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CameraCalibrationCore::FNodalOffsetPointInfo> ULensFile::GetNodalOffsetPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetNodalOffsetPoints");
        
        ULensFile_GetNodalOffsetPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FAFA0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetNodalOffsetPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FNodalPointOffset           OutNodalPointOffset                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::GetNodalOffsetPoint(float InFocus, float InZoom, CameraCalibrationCore::FNodalPointOffset* OutNodalPointOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetNodalOffsetPoint");
        
        ULensFile_GetNodalOffsetPoint_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutNodalPointOffset != nullptr)
            *OutNodalPointOffset = params.OutNodalPointOffset;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FBBE0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetImageCenterPoints
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CameraCalibrationCore::FImageCenterPointInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CameraCalibrationCore::FImageCenterPointInfo> ULensFile::GetImageCenterPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetImageCenterPoints");
        
        ULensFile_GetImageCenterPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FB210
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetImageCenterPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FImageCenterInfo            OutImageCenterInfo                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::GetImageCenterPoint(float InFocus, float InZoom, CameraCalibrationCore::FImageCenterInfo* OutImageCenterInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetImageCenterPoint");
        
        ULensFile_GetImageCenterPoint_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutImageCenterInfo != nullptr)
            *OutImageCenterInfo = params.OutImageCenterInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FBE60
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetFocalLengthPoints
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CameraCalibrationCore::FFocalLengthPointInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CameraCalibrationCore::FFocalLengthPointInfo> ULensFile::GetFocalLengthPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetFocalLengthPoints");
        
        ULensFile_GetFocalLengthPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FB450
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetFocalLengthPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FFocalLengthInfo            OutFocalLengthInfo                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::GetFocalLengthPoint(float InFocus, float InZoom, CameraCalibrationCore::FFocalLengthInfo* OutFocalLengthInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetFocalLengthPoint");
        
        ULensFile_GetFocalLengthPoint_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutFocalLengthInfo != nullptr)
            *OutFocalLengthInfo = params.OutFocalLengthInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC060
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetDistortionPoints
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CameraCalibrationCore::FDistortionPointInfo> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CameraCalibrationCore::FDistortionPointInfo> ULensFile::GetDistortionPoints()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetDistortionPoints");
        
        ULensFile_GetDistortionPoints_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FB6A0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.GetDistortionPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FDistortionInfo             OutDistortionInfo                                          (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::GetDistortionPoint(float InFocus, float InZoom, CameraCalibrationCore::FDistortionInfo* OutDistortionInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.GetDistortionPoint");
        
        ULensFile_GetDistortionPoint_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutDistortionInfo != nullptr)
            *OutDistortionInfo = params.OutDistortionInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC300
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateNormalizedIris
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InNormalizedValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float ULensFile::EvaluateNormalizedIris(float InNormalizedValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateNormalizedIris");
        
        ULensFile_EvaluateNormalizedIris_Params params {};
        params.InNormalizedValue = InNormalizedValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC430
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateNormalizedFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InNormalizedValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float ULensFile::EvaluateNormalizedFocus(float InNormalizedValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateNormalizedFocus");
        
        ULensFile_EvaluateNormalizedFocus_Params params {};
        params.InNormalizedValue = InNormalizedValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC560
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateNodalPointOffset
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FNodalPointOffset           OutEvaluatedValue                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::EvaluateNodalPointOffset(float InFocus, float InZoom, CameraCalibrationCore::FNodalPointOffset* OutEvaluatedValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateNodalPointOffset");
        
        ULensFile_EvaluateNodalPointOffset_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutEvaluatedValue != nullptr)
            *OutEvaluatedValue = params.OutEvaluatedValue;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FCB30
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateImageCenterParameters
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FImageCenterInfo            OutEvaluatedValue                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::EvaluateImageCenterParameters(float InFocus, float InZoom, CameraCalibrationCore::FImageCenterInfo* OutEvaluatedValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateImageCenterParameters");
        
        ULensFile_EvaluateImageCenterParameters_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutEvaluatedValue != nullptr)
            *OutEvaluatedValue = params.OutEvaluatedValue;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FCD60
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateFocalLength
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FFocalLengthInfo            OutEvaluatedValue                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::EvaluateFocalLength(float InFocus, float InZoom, CameraCalibrationCore::FFocalLengthInfo* OutEvaluatedValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateFocalLength");
        
        ULensFile_EvaluateFocalLength_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutEvaluatedValue != nullptr)
            *OutEvaluatedValue = params.OutEvaluatedValue;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FCFA0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateDistortionParameters
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FDistortionInfo             OutEvaluatedValue                                          (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::EvaluateDistortionParameters(float InFocus, float InZoom, CameraCalibrationCore::FDistortionInfo* OutEvaluatedValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateDistortionParameters");
        
        ULensFile_EvaluateDistortionParameters_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutEvaluatedValue != nullptr)
            *OutEvaluatedValue = params.OutEvaluatedValue;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013FC7C0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.EvaluateDistortionData
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              InFocus                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InZoom                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             InFilmback                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::ULensDistortionModelHandlerBase* InLensHandler                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ULensFile::EvaluateDistortionData(float InFocus, float InZoom, const CoreUObject::FVector2D& InFilmback, CameraCalibrationCore::ULensDistortionModelHandlerBase* InLensHandler)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.EvaluateDistortionData");
        
        ULensFile_EvaluateDistortionData_Params params {};
        params.InFocus = InFocus;
        params.InZoom = InZoom;
        params.InFilmback = InFilmback;
        params.InLensHandler = InLensHandler;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x013F99D0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.ClearData
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CameraCalibrationCore::ELensDataCategory           InDataCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::ClearData(CameraCalibrationCore::ELensDataCategory InDataCategory)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.ClearData");
        
        ULensFile_ClearData_Params params {};
        params.InDataCategory = InDataCategory;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9B40
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.ClearAll
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ULensFile::ClearAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.ClearAll");
        
        ULensFile_ClearAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013F9F60
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.AddSTMapPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         float                                              NewFocus                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewZoom                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FSTMapInfo                  NewPoint                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::AddSTMapPoint(float NewFocus, float NewZoom, const CameraCalibrationCore::FSTMapInfo& NewPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.AddSTMapPoint");
        
        ULensFile_AddSTMapPoint_Params params {};
        params.NewFocus = NewFocus;
        params.NewZoom = NewZoom;
        params.NewPoint = NewPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013FA1A0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.AddNodalOffsetPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         float                                              NewFocus                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewZoom                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FNodalPointOffset           NewPoint                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::AddNodalOffsetPoint(float NewFocus, float NewZoom, const CameraCalibrationCore::FNodalPointOffset& NewPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.AddNodalOffsetPoint");
        
        ULensFile_AddNodalOffsetPoint_Params params {};
        params.NewFocus = NewFocus;
        params.NewZoom = NewZoom;
        params.NewPoint = NewPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013FA4E0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.AddImageCenterPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         float                                              NewFocus                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewZoom                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FImageCenterInfo            NewPoint                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::AddImageCenterPoint(float NewFocus, float NewZoom, const CameraCalibrationCore::FImageCenterInfo& NewPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.AddImageCenterPoint");
        
        ULensFile_AddImageCenterPoint_Params params {};
        params.NewFocus = NewFocus;
        params.NewZoom = NewZoom;
        params.NewPoint = NewPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013FA7D0
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.AddFocalLengthPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         float                                              NewFocus                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewZoom                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FFocalLengthInfo            NewFocalLength                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::AddFocalLengthPoint(float NewFocus, float NewZoom, const CameraCalibrationCore::FFocalLengthInfo& NewFocalLength)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.AddFocalLengthPoint");
        
        ULensFile_AddFocalLengthPoint_Params params {};
        params.NewFocus = NewFocus;
        params.NewZoom = NewZoom;
        params.NewFocalLength = NewFocalLength;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013FAA10
     *         Name   -> Function /Script/CameraCalibrationCore.LensFile.AddDistortionPoint
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         float                                              NewFocus                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              NewZoom                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FDistortionInfo             NewPoint                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CameraCalibrationCore::FFocalLengthInfo            NewFocalLength                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ULensFile::AddDistortionPoint(float NewFocus, float NewZoom, const CameraCalibrationCore::FDistortionInfo& NewPoint, const CameraCalibrationCore::FFocalLengthInfo& NewFocalLength)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/CameraCalibrationCore.LensFile.AddDistortionPoint");
        
        ULensFile_AddDistortionPoint_Params params {};
        params.NewFocus = NewFocus;
        params.NewZoom = NewZoom;
        params.NewPoint = NewPoint;
        params.NewFocalLength = NewFocalLength;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
