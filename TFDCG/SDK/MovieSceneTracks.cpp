/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/MovieSceneTracks_ENUMS.h"
#include "Headers/MovieSceneTracks_PARAMS.h"
#include "Headers/MovieSceneTracks_UMovieScenePropertyTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneParameterSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeSourceTriggerTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneCinematicShotTrack.h"
#include "Headers/MovieSceneTracks_UDoublePerlinNoiseChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UFloatChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UFloatPerlinNoiseChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneColorTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneCVarTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneDataLayerTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoubleTrack.h"
#include "Headers/MovieSceneTracks_UIntegerChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieScene3DTransformPropertySystem.h"
#include "Headers/MovieSceneTracks_IMovieSceneTransformOrigin.h"
#include "Headers/MovieSceneTracks_IMovieSceneConsoleVariableTrackInterface.h"
#include "Headers/MovieSceneTracks_UMovieSceneBaseValueEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneBoolPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneBytePropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneColorPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneDecomposerTestObject.h"
#include "Headers/MovieSceneTracks_UMovieSceneTestSequence.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoublePerlinNoiseChannelContainer.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatPerlinNoiseChannelContainer.h"
#include "Headers/MovieSceneTracks_UMovieSceneInterrogatedPropertyInstantiatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeEvaluator.h"
#include "Headers/MovieSceneTracks_UMovieScene3DConstraintSection.h"
#include "Headers/MovieSceneTracks_UMovieScene3DAttachSection.h"
#include "Headers/MovieSceneTracks_UMovieScene3DPathSection.h"
#include "Headers/MovieSceneTracks_UMovieScene3DTransformSectionConstraints.h"
#include "Headers/MovieSceneTracks_UMovieScene3DTransformSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneActorReferenceSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneAudioSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneBaseCacheSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneEnumTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneEulerTransformTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneComponentAttachmentInvalidatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneComponentAttachmentSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneComponentMaterialSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneByteSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraCutSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeSourceShakeSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeSourceTriggerSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneCinematicShotSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneColorSection.h"
#include "Headers/MovieSceneTracks_IMovieSceneConstrainedSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneEventTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneCVarSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneDataLayerSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoubleSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneEnumSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneEventSectionBase.h"
#include "Headers/MovieSceneTracks_UMovieSceneFadeTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneIntegerTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneLevelVisibilityTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneMaterialTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneMaterialParameterCollectionTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneComponentMaterialTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneObjectPropertyTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneParticleParameterTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneParticleTrack.h"
#include "Headers/MovieSceneTracks_UMovieScenePrimitiveMaterialTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneSkeletalAnimationTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneSlomoTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneComponentMobilitySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneComponentTransformSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneStringTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneTransformTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatVectorTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoubleVectorTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneVisibilityTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneConstraintSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneDataLayerSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneEventRepeaterSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneEventSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneEventTriggerSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneFadeSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneIntegerSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneLevelVisibilitySection.h"
#include "Headers/MovieSceneTracks_UMovieSceneObjectPropertySection.h"
#include "Headers/MovieSceneTracks_IMovieSceneParameterSectionExtender.h"
#include "Headers/MovieSceneTracks_UMovieSceneDeferredComponentMovementSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoublePropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneEnumPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneEulerTransformPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneParticleSection.h"
#include "Headers/MovieSceneTracks_UMovieScenePrimitiveMaterialSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneSkeletalAnimationSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneSlomoSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneStringSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatVectorSection.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoubleVectorSection.h"
#include "Headers/MovieSceneTracks_UBoolChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneEventSystem.h"
#include "Headers/MovieSceneTracks_UByteChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePreSpawnEventSystem.h"
#include "Headers/MovieSceneTracks_UDoubleChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePostSpawnEventSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePostEvalEventSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneFadeSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneHierarchicalBiasSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneInitialValueSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneIntegerPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneLevelVisibilitySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneMaterialParameterCollectionSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneMaterialParameterSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneMotionVectorSimulationSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePiecewiseBoolBlenderSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePiecewiseByteBlenderSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePiecewiseDoubleBlenderSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePiecewiseEnumBlenderSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePiecewiseIntegerBlenderSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneAsyncAction_SequencePrediction.h"
#include "Headers/MovieSceneTracks_UMovieScenePredictionSystem.h"
#include "Headers/MovieSceneTracks_UMovieScenePropertyInstantiatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneQuaternionBlenderSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneQuaternionInterpolationRotationSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneSkeletalAnimationSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneTransformOriginInstantiatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneTransformOriginSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneFloatVectorPropertySystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneDoubleVectorPropertySystem.h"
#include "Headers/MovieSceneTracks_UObjectPathChannelEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneHierarchicalEasingInstantiatorSystem.h"
#include "Headers/MovieSceneTracks_UWeightAndEasingEvaluatorSystem.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraCutTrackInstance.h"
#include "Headers/MovieSceneTracks_UMovieSceneCVarTrackInstance.h"
#include "Headers/MovieSceneTracks_UMovieScene3DConstraintTrack.h"
#include "Headers/MovieSceneTracks_UMovieScene3DAttachTrack.h"
#include "Headers/MovieSceneTracks_UMovieScene3DPathTrack.h"
#include "Headers/MovieSceneTracks_UMovieScene3DTransformTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneActorReferenceTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneAudioTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneBoolTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneByteTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraCutTrack.h"
#include "Headers/MovieSceneTracks_UMovieSceneCameraShakeSourceShakeTrack.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieSceneTracks
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x051B26C0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveVectorParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneParameterSection::RemoveVectorParameter(const BasicTypes::FName& InParameterName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveVectorParameter");
        
        UMovieSceneParameterSection_RemoveVectorParameter_Params params {};
        params.InParameterName = InParameterName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2810
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveVector2DParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneParameterSection::RemoveVector2DParameter(const BasicTypes::FName& InParameterName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveVector2DParameter");
        
        UMovieSceneParameterSection_RemoveVector2DParameter_Params params {};
        params.InParameterName = InParameterName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2420
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveTransformParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneParameterSection::RemoveTransformParameter(const BasicTypes::FName& InParameterName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveTransformParameter");
        
        UMovieSceneParameterSection_RemoveTransformParameter_Params params {};
        params.InParameterName = InParameterName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2AB0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveScalarParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneParameterSection::RemoveScalarParameter(const BasicTypes::FName& InParameterName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveScalarParameter");
        
        UMovieSceneParameterSection_RemoveScalarParameter_Params params {};
        params.InParameterName = InParameterName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2570
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveColorParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneParameterSection::RemoveColorParameter(const BasicTypes::FName& InParameterName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveColorParameter");
        
        UMovieSceneParameterSection_RemoveColorParameter_Params params {};
        params.InParameterName = InParameterName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2960
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveBoolParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneParameterSection::RemoveBoolParameter(const BasicTypes::FName& InParameterName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.RemoveBoolParameter");
        
        UMovieSceneParameterSection_RemoveBoolParameter_Params params {};
        params.InParameterName = InParameterName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2170
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.GetParameterNames
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TSet<BasicTypes::FName>                ParameterNames                                             (Parm, OutParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::GetParameterNames(BasicTypes::TSet<BasicTypes::FName>* ParameterNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.GetParameterNames");
        
        UMovieSceneParameterSection_GetParameterNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ParameterNames != nullptr)
            *ParameterNames = params.ParameterNames;
    }

    /**
     * Function:
     *         RVA    -> 0x051B3080
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddVectorParameterKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InTime                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::AddVectorParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FVector& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddVectorParameterKey");
        
        UMovieSceneParameterSection_AddVectorParameterKey_Params params {};
        params.InParameterName = InParameterName;
        params.InTime = InTime;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x051B32A0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddVector2DParameterKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InTime                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::AddVector2DParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FVector2D& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddVector2DParameterKey");
        
        UMovieSceneParameterSection_AddVector2DParameterKey_Params params {};
        params.InParameterName = InParameterName;
        params.InTime = InTime;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2C00
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddTransformParameterKey
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InTime                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FTransform                            InValue                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::AddTransformParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FTransform& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddTransformParameterKey");
        
        UMovieSceneParameterSection_AddTransformParameterKey_Params params {};
        params.InParameterName = InParameterName;
        params.InTime = InTime;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x051B36D0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddScalarParameterKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InTime                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::AddScalarParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddScalarParameterKey");
        
        UMovieSceneParameterSection_AddScalarParameterKey_Params params {};
        params.InParameterName = InParameterName;
        params.InTime = InTime;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x051B2E60
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddColorParameterKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InTime                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::AddColorParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddColorParameterKey");
        
        UMovieSceneParameterSection_AddColorParameterKey_Params params {};
        params.InParameterName = InParameterName;
        params.InTime = InTime;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x051B34B0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddBoolParameterKey
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  InParameterName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          InTime                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneParameterSection::AddBoolParameterKey(const BasicTypes::FName& InParameterName, const CoreUObject::FFrameNumber& InTime, bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneParameterSection.AddBoolParameterKey");
        
        UMovieSceneParameterSection_AddBoolParameterKey_Params params {};
        params.InParameterName = InParameterName;
        params.InTime = InTime;
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneTransformOrigin.BP_GetTransformOrigin
     *         Flags  -> (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FTransform                            ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTransform IMovieSceneTransformOrigin::BP_GetTransformOrigin()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneTransformOrigin.BP_GetTransformOrigin");
        
        IMovieSceneTransformOrigin_BP_GetTransformOrigin_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05121EC0
     *         Name   -> Function /Script/MovieSceneTracks.MovieScene3DConstraintSection.SetConstraintBindingID
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             InConstraintBindingID                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieScene3DConstraintSection::SetConstraintBindingID(const MovieScene::FMovieSceneObjectBindingID& InConstraintBindingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieScene3DConstraintSection.SetConstraintBindingID");
        
        UMovieScene3DConstraintSection_SetConstraintBindingID_Params params {};
        params.InConstraintBindingID = InConstraintBindingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05121FD0
     *         Name   -> Function /Script/MovieSceneTracks.MovieScene3DConstraintSection.GetConstraintBindingID
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieScene3DConstraintSection::GetConstraintBindingID()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieScene3DConstraintSection.GetConstraintBindingID");
        
        UMovieScene3DConstraintSection_GetConstraintBindingID_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05128260
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAudioSection.SetStartOffset
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InStartOffset                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneAudioSection::SetStartOffset(const CoreUObject::FFrameNumber& InStartOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAudioSection.SetStartOffset");
        
        UMovieSceneAudioSection_SetStartOffset_Params params {};
        params.InStartOffset = InStartOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x05128370
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAudioSection.SetSound
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundBase*                                InSound                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneAudioSection::SetSound(Engine::USoundBase* InSound)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAudioSection.SetSound");
        
        UMovieSceneAudioSection_SetSound_Params params {};
        params.InSound = InSound;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04BA0360
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAudioSection.GetStartOffset
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UMovieSceneAudioSection::GetStartOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAudioSection.GetStartOffset");
        
        UMovieSceneAudioSection_GetStartOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x05128350
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAudioSection.GetSound
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::USoundBase*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::USoundBase* UMovieSceneAudioSection::GetSound()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAudioSection.GetSound");
        
        UMovieSceneAudioSection_GetSound_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512B5D0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneCameraCutSection.SetCameraBindingID
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             InCameraBindingID                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneCameraCutSection::SetCameraBindingID(const MovieScene::FMovieSceneObjectBindingID& InCameraBindingID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneCameraCutSection.SetCameraBindingID");
        
        UMovieSceneCameraCutSection_SetCameraBindingID_Params params {};
        params.InCameraBindingID = InCameraBindingID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512B6E0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneCameraCutSection.GetCameraBindingID
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieScene::FMovieSceneObjectBindingID             ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieScene::FMovieSceneObjectBindingID UMovieSceneCameraCutSection::GetCameraBindingID()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneCameraCutSection.GetCameraBindingID");
        
        UMovieSceneCameraCutSection_GetCameraBindingID_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512C470
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneCinematicShotSection.SetShotDisplayName
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InShotDisplayName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneCinematicShotSection::SetShotDisplayName(const BasicTypes::FString& InShotDisplayName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneCinematicShotSection.SetShotDisplayName");
        
        UMovieSceneCinematicShotSection_SetShotDisplayName_Params params {};
        params.InShotDisplayName = InShotDisplayName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512C5D0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneCinematicShotSection.GetShotDisplayName
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieSceneCinematicShotSection::GetShotDisplayName()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneCinematicShotSection.GetShotDisplayName");
        
        UMovieSceneCinematicShotSection_GetShotDisplayName_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512DCF0
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneCVarSection.SetFromString
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                InString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneCVarSection::SetFromString(const BasicTypes::FString& InString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneCVarSection.SetFromString");
        
        UMovieSceneCVarSection_SetFromString_Params params {};
        params.InString = InString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512DC70
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneCVarSection.GetString
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UMovieSceneCVarSection::GetString()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneCVarSection.GetString");
        
        UMovieSceneCVarSection_GetString_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512EF20
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetPrerollState
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::EDataLayerRuntimeState                     InPrerollState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneDataLayerSection::SetPrerollState(Engine::EDataLayerRuntimeState InPrerollState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetPrerollState");
        
        UMovieSceneDataLayerSection_SetPrerollState_Params params {};
        params.InPrerollState = InPrerollState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512EE10
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetFlushOnUnload
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bFlushOnUnload                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneDataLayerSection::SetFlushOnUnload(bool bFlushOnUnload)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetFlushOnUnload");
        
        UMovieSceneDataLayerSection_SetFlushOnUnload_Params params {};
        params.bFlushOnUnload = bFlushOnUnload;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512F030
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetDesiredState
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::EDataLayerRuntimeState                     InDesiredState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneDataLayerSection::SetDesiredState(Engine::EDataLayerRuntimeState InDesiredState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetDesiredState");
        
        UMovieSceneDataLayerSection_SetDesiredState_Params params {};
        params.InDesiredState = InDesiredState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512EB00
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetDataLayers
     *         Flags  -> (Final, Native, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<Engine::FActorDataLayer>        InDataLayers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneDataLayerSection::SetDataLayers(BasicTypes::TArray<Engine::FActorDataLayer> InDataLayers)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetDataLayers");
        
        UMovieSceneDataLayerSection_SetDataLayers_Params params {};
        params.InDataLayers = InDataLayers;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512EC40
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetDataLayerAssets
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<Engine::UDataLayerAsset*>       InDataLayerAssets                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneDataLayerSection::SetDataLayerAssets(BasicTypes::TArray<Engine::UDataLayerAsset*> InDataLayerAssets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.SetDataLayerAssets");
        
        UMovieSceneDataLayerSection_SetDataLayerAssets_Params params {};
        params.InDataLayerAssets = InDataLayerAssets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0512F010
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetPrerollState
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::EDataLayerRuntimeState                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::EDataLayerRuntimeState UMovieSceneDataLayerSection::GetPrerollState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetPrerollState");
        
        UMovieSceneDataLayerSection_GetPrerollState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512EF00
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetFlushOnUnload
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMovieSceneDataLayerSection::GetFlushOnUnload()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetFlushOnUnload");
        
        UMovieSceneDataLayerSection_GetFlushOnUnload_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512F120
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetDesiredState
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::EDataLayerRuntimeState                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::EDataLayerRuntimeState UMovieSceneDataLayerSection::GetDesiredState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetDesiredState");
        
        UMovieSceneDataLayerSection_GetDesiredState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512EC10
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetDataLayers
     *         Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::FActorDataLayer>        ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::FActorDataLayer> UMovieSceneDataLayerSection::GetDataLayers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetDataLayers");
        
        UMovieSceneDataLayerSection_GetDataLayers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0512ED80
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetDataLayerAssets
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::UDataLayerAsset*>       ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::UDataLayerAsset*> UMovieSceneDataLayerSection::GetDataLayerAssets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneDataLayerSection.GetDataLayerAssets");
        
        UMovieSceneDataLayerSection_GetDataLayerAssets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B0F40
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.SetVisibility
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         MovieSceneTracks::ELevelVisibility                 InVisibility                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneLevelVisibilitySection::SetVisibility(MovieSceneTracks::ELevelVisibility InVisibility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.SetVisibility");
        
        UMovieSceneLevelVisibilitySection_SetVisibility_Params params {};
        params.InVisibility = InVisibility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x051B0E00
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.SetLevelNames
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              InLevelNames                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMovieSceneLevelVisibilitySection::SetLevelNames(BasicTypes::TArray<BasicTypes::FName> InLevelNames)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.SetLevelNames");
        
        UMovieSceneLevelVisibilitySection_SetLevelNames_Params params {};
        params.InLevelNames = InLevelNames;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x04B9E930
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.GetVisibility
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         MovieSceneTracks::ELevelVisibility                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::ELevelVisibility UMovieSceneLevelVisibilitySection::GetVisibility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.GetVisibility");
        
        UMovieSceneLevelVisibilitySection_GetVisibility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051B0F10
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.GetLevelNames
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FName>              ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FName> UMovieSceneLevelVisibilitySection::GetLevelNames()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneLevelVisibilitySection.GetLevelNames");
        
        UMovieSceneLevelVisibilitySection_GetLevelNames_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051DBA20
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictWorldTransformAtTime
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequencePlayer*             Player                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* UMovieSceneAsyncAction_SequencePrediction::STATIC_PredictWorldTransformAtTime(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, float TimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictWorldTransformAtTime");
        
        UMovieSceneAsyncAction_SequencePrediction_PredictWorldTransformAtTime_Params params {};
        params.Player = Player;
        params.TargetComponent = TargetComponent;
        params.TimeInSeconds = TimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051DB770
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictWorldTransformAtFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequencePlayer*             Player                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            FrameTime                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* UMovieSceneAsyncAction_SequencePrediction::STATIC_PredictWorldTransformAtFrame(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, const CoreUObject::FFrameTime& FrameTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictWorldTransformAtFrame");
        
        UMovieSceneAsyncAction_SequencePrediction_PredictWorldTransformAtFrame_Params params {};
        params.Player = Player;
        params.TargetComponent = TargetComponent;
        params.FrameTime = FrameTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051DB410
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictLocalTransformAtTime
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequencePlayer*             Player                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* UMovieSceneAsyncAction_SequencePrediction::STATIC_PredictLocalTransformAtTime(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, float TimeInSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictLocalTransformAtTime");
        
        UMovieSceneAsyncAction_SequencePrediction_PredictLocalTransformAtTime_Params params {};
        params.Player = Player;
        params.TargetComponent = TargetComponent;
        params.TimeInSeconds = TimeInSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x051DB160
     *         Name   -> Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictLocalTransformAtFrame
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         MovieScene::UMovieSceneSequencePlayer*             Player                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            FrameTime                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    MovieSceneTracks::UMovieSceneAsyncAction_SequencePrediction* UMovieSceneAsyncAction_SequencePrediction::STATIC_PredictLocalTransformAtFrame(MovieScene::UMovieSceneSequencePlayer* Player, Engine::USceneComponent* TargetComponent, const CoreUObject::FFrameTime& FrameTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/MovieSceneTracks.MovieSceneAsyncAction_SequencePrediction.PredictLocalTransformAtFrame");
        
        UMovieSceneAsyncAction_SequencePrediction_PredictLocalTransformAtFrame_Params params {};
        params.Player = Player;
        params.TargetComponent = TargetComponent;
        params.FrameTime = FrameTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
