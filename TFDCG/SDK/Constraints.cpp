/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/Constraints_ENUMS.h"
#include "Headers/Constraints_PARAMS.h"
#include "Headers/Constraints_UTransformableHandle.h"
#include "Headers/Constraints_AConstraintsActor.h"
#include "Headers/Constraints_UTickableConstraint.h"
#include "Headers/Constraints_UConstraintsManager.h"
#include "Headers/Constraints_UConstraintsScriptingLibrary.h"
#include "Headers/Constraints_UTransformableComponentHandle.h"
#include "Headers/Constraints_UTickableTransformConstraint.h"
#include "Headers/Constraints_UTickableTranslationConstraint.h"
#include "Headers/Constraints_UTickableRotationConstraint.h"
#include "Headers/Constraints_UTickableScaleConstraint.h"
#include "Headers/Constraints_UTickableParentConstraint.h"
#include "Headers/Constraints_UTickableLookAtConstraint.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Constraints
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x050F92B0
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.RemoveThisConstraint
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTickableConstraint*                  InTickableConstraint                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UConstraintsScriptingLibrary::STATIC_RemoveThisConstraint(Engine::UWorld* InWorld, Constraints::UTickableConstraint* InTickableConstraint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.RemoveThisConstraint");
        
        UConstraintsScriptingLibrary_RemoveThisConstraint_Params params {};
        params.InWorld = InWorld;
        params.InTickableConstraint = InTickableConstraint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050F9120
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.RemoveConstraint
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            InIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UConstraintsScriptingLibrary::STATIC_RemoveConstraint(Engine::UWorld* InWorld, int32_t InIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.RemoveConstraint");
        
        UConstraintsScriptingLibrary_RemoveConstraint_Params params {};
        params.InWorld = InWorld;
        params.InIndex = InIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050FA040
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.GetManager
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UConstraintsManager*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Constraints::UConstraintsManager* UConstraintsScriptingLibrary::STATIC_GetManager(Engine::UWorld* InWorld)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.GetManager");
        
        UConstraintsScriptingLibrary_GetManager_Params params {};
        params.InWorld = InWorld;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050F9480
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.GetConstraintsArray
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Constraints::UTickableConstraint*> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Constraints::UTickableConstraint*> UConstraintsScriptingLibrary::STATIC_GetConstraintsArray(Engine::UWorld* InWorld)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.GetConstraintsArray");
        
        UConstraintsScriptingLibrary_GetConstraintsArray_Params params {};
        params.InWorld = InWorld;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050F9B10
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.CreateTransformableHandle
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              InObject                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InAttachmentName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTransformableHandle*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Constraints::UTransformableHandle* UConstraintsScriptingLibrary::STATIC_CreateTransformableHandle(Engine::UWorld* InWorld, CoreUObject::UObject* InObject, const BasicTypes::FName& InAttachmentName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.CreateTransformableHandle");
        
        UConstraintsScriptingLibrary_CreateTransformableHandle_Params params {};
        params.InWorld = InWorld;
        params.InObject = InObject;
        params.InAttachmentName = InAttachmentName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050F9E00
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.CreateTransformableComponentHandle
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USceneComponent*                           InSceneComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  InSocketName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTransformableComponentHandle*        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Constraints::UTransformableComponentHandle* UConstraintsScriptingLibrary::STATIC_CreateTransformableComponentHandle(Engine::UWorld* InWorld, Engine::USceneComponent* InSceneComponent, const BasicTypes::FName& InSocketName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.CreateTransformableComponentHandle");
        
        UConstraintsScriptingLibrary_CreateTransformableComponentHandle_Params params {};
        params.InWorld = InWorld;
        params.InSceneComponent = InSceneComponent;
        params.InSocketName = InSocketName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050F9990
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.CreateFromType
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AnimationCore::ETransformConstraintType            InType                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTickableTransformConstraint*         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Constraints::UTickableTransformConstraint* UConstraintsScriptingLibrary::STATIC_CreateFromType(Engine::UWorld* InWorld, AnimationCore::ETransformConstraintType InType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.CreateFromType");
        
        UConstraintsScriptingLibrary_CreateFromType_Params params {};
        params.InWorld = InWorld;
        params.InType = InType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x050F9640
     *         Name   -> Function /Script/Constraints.ConstraintsScriptingLibrary.AddConstraint
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UWorld*                                    InWorld                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTransformableHandle*                 InParentHandle                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTransformableHandle*                 InChildHandle                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Constraints::UTickableTransformConstraint*         InConstraint                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMaintainOffset                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UConstraintsScriptingLibrary::STATIC_AddConstraint(Engine::UWorld* InWorld, Constraints::UTransformableHandle* InParentHandle, Constraints::UTransformableHandle* InChildHandle, Constraints::UTickableTransformConstraint* InConstraint, bool bMaintainOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/Constraints.ConstraintsScriptingLibrary.AddConstraint");
        
        UConstraintsScriptingLibrary_AddConstraint_Params params {};
        params.InWorld = InWorld;
        params.InParentHandle = InParentHandle;
        params.InChildHandle = InChildHandle;
        params.InConstraint = InConstraint;
        params.bMaintainOffset = bMaintainOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
