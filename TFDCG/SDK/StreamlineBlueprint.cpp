/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/StreamlineBlueprint_ENUMS.h"
#include "Headers/StreamlineBlueprint_PARAMS.h"
#include "Headers/StreamlineBlueprint_UStreamlineLibrary.h"
#include "Headers/StreamlineBlueprint_UStreamlineLibraryDLSSG.h"
#include "Headers/StreamlineBlueprint_UStreamlineLibraryReflex.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::StreamlineBlueprint
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x01DE4820
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibrary.QueryStreamlineFeatureSupport
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineFeature           Feature                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         StreamlineBlueprint::EUStreamlineFeatureSupport    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineFeatureSupport UStreamlineLibrary::STATIC_QueryStreamlineFeatureSupport(StreamlineBlueprint::EUStreamlineFeature Feature)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibrary.QueryStreamlineFeatureSupport");
        
        UStreamlineLibrary_QueryStreamlineFeatureSupport_Params params {};
        params.Feature = Feature;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE4930
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibrary.IsStreamlineFeatureSupported
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineFeature           Feature                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UStreamlineLibrary::STATIC_IsStreamlineFeatureSupported(StreamlineBlueprint::EUStreamlineFeature Feature)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibrary.IsStreamlineFeatureSupported");
        
        UStreamlineLibrary_IsStreamlineFeatureSupported_Params params {};
        params.Feature = Feature;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE4E60
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibrary.GetStreamlineFeatureInformation
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineFeature           Feature                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         StreamlineBlueprint::FStreamlineFeatureRequirements ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::FStreamlineFeatureRequirements UStreamlineLibrary::STATIC_GetStreamlineFeatureInformation(StreamlineBlueprint::EUStreamlineFeature Feature)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibrary.GetStreamlineFeatureInformation");
        
        UStreamlineLibrary_GetStreamlineFeatureInformation_Params params {};
        params.Feature = Feature;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE4A50
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibrary.BreakStreamlineFeatureRequirements
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineFeatureRequirementsFlags Requirements                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               D3D11Supported                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               D3D12Supported                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               VulkanSupported                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               VSyncOffRequired                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               HardwareSchedulingRequired                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UStreamlineLibrary::STATIC_BreakStreamlineFeatureRequirements(StreamlineBlueprint::EUStreamlineFeatureRequirementsFlags Requirements, bool* D3D11Supported, bool* D3D12Supported, bool* VulkanSupported, bool* VSyncOffRequired, bool* HardwareSchedulingRequired)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibrary.BreakStreamlineFeatureRequirements");
        
        UStreamlineLibrary_BreakStreamlineFeatureRequirements_Params params {};
        params.Requirements = Requirements;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (D3D11Supported != nullptr)
            *D3D11Supported = params.D3D11Supported;
        if (D3D12Supported != nullptr)
            *D3D12Supported = params.D3D12Supported;
        if (VulkanSupported != nullptr)
            *VulkanSupported = params.VulkanSupported;
        if (VSyncOffRequired != nullptr)
            *VSyncOffRequired = params.VSyncOffRequired;
        if (HardwareSchedulingRequired != nullptr)
            *HardwareSchedulingRequired = params.HardwareSchedulingRequired;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5560
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.SetDLSSGMode
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineDLSSGMode         DLSSGMode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UStreamlineLibraryDLSSG::STATIC_SetDLSSGMode(StreamlineBlueprint::EUStreamlineDLSSGMode DLSSGMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.SetDLSSGMode");
        
        UStreamlineLibraryDLSSG_SetDLSSGMode_Params params {};
        params.DLSSGMode = DLSSGMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE58D0
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.QueryDLSSGSupport
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineFeatureSupport    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineFeatureSupport UStreamlineLibraryDLSSG::STATIC_QueryDLSSGSupport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.QueryDLSSGSupport");
        
        UStreamlineLibraryDLSSG_QueryDLSSGSupport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5910
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.IsDLSSGSupported
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UStreamlineLibraryDLSSG::STATIC_IsDLSSGSupported()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.IsDLSSGSupported");
        
        UStreamlineLibraryDLSSG_IsDLSSGSupported_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5760
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.IsDLSSGModeSupported
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineDLSSGMode         DLSSGMode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UStreamlineLibraryDLSSG::STATIC_IsDLSSGModeSupported(StreamlineBlueprint::EUStreamlineDLSSGMode DLSSGMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.IsDLSSGModeSupported");
        
        UStreamlineLibraryDLSSG_IsDLSSGModeSupported_Params params {};
        params.DLSSGMode = DLSSGMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5630
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetSupportedDLSSGModes
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         BasicTypes::TArray<StreamlineBlueprint::EUStreamlineDLSSGMode> ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<StreamlineBlueprint::EUStreamlineDLSSGMode> UStreamlineLibraryDLSSG::STATIC_GetSupportedDLSSGModes()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetSupportedDLSSGModes");
        
        UStreamlineLibraryDLSSG_GetSupportedDLSSGModes_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5470
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetDLSSGMode
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineDLSSGMode         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineDLSSGMode UStreamlineLibraryDLSSG::STATIC_GetDLSSGMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetDLSSGMode");
        
        UStreamlineLibraryDLSSG_GetDLSSGMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5280
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetDLSSGFrameTiming
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              FrameRateInHertz                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            FramesPresented                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UStreamlineLibraryDLSSG::STATIC_GetDLSSGFrameTiming(float* FrameRateInHertz, int32_t* FramesPresented)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetDLSSGFrameTiming");
        
        UStreamlineLibraryDLSSG_GetDLSSGFrameTiming_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (FrameRateInHertz != nullptr)
            *FrameRateInHertz = params.FrameRateInHertz;
        if (FramesPresented != nullptr)
            *FramesPresented = params.FramesPresented;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5430
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetDefaultDLSSGMode
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineDLSSGMode         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineDLSSGMode UStreamlineLibraryDLSSG::STATIC_GetDefaultDLSSGMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryDLSSG.GetDefaultDLSSGMode");
        
        UStreamlineLibraryDLSSG_GetDefaultDLSSGMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE6000
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.SetReflexMode
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineReflexMode        Mode                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UStreamlineLibraryReflex::STATIC_SetReflexMode(StreamlineBlueprint::EUStreamlineReflexMode Mode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.SetReflexMode");
        
        UStreamlineLibraryReflex_SetReflexMode_Params params {};
        params.Mode = Mode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE60D0
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.QueryReflexSupport
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineFeatureSupport    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineFeatureSupport UStreamlineLibraryReflex::STATIC_QueryReflexSupport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.QueryReflexSupport");
        
        UStreamlineLibraryReflex_QueryReflexSupport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE6100
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.IsReflexSupported
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UStreamlineLibraryReflex::STATIC_IsReflexSupported()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.IsReflexSupported");
        
        UStreamlineLibraryReflex_IsReflexSupported_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5D20
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetRenderLatencyInMs
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UStreamlineLibraryReflex::STATIC_GetRenderLatencyInMs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetRenderLatencyInMs");
        
        UStreamlineLibraryReflex_GetRenderLatencyInMs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5F30
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetReflexMode
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineReflexMode        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineReflexMode UStreamlineLibraryReflex::STATIC_GetReflexMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetReflexMode");
        
        UStreamlineLibraryReflex_GetReflexMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5E80
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetGameToRenderLatencyInMs
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UStreamlineLibraryReflex::STATIC_GetGameToRenderLatencyInMs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetGameToRenderLatencyInMs");
        
        UStreamlineLibraryReflex_GetGameToRenderLatencyInMs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DE5DD0
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetGameLatencyInMs
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UStreamlineLibraryReflex::STATIC_GetGameLatencyInMs()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetGameLatencyInMs");
        
        UStreamlineLibraryReflex_GetGameLatencyInMs_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DC67F0
     *         Name   -> Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetDefaultReflexMode
     *         Flags  -> (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         StreamlineBlueprint::EUStreamlineReflexMode        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    StreamlineBlueprint::EUStreamlineReflexMode UStreamlineLibraryReflex::STATIC_GetDefaultReflexMode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/StreamlineBlueprint.StreamlineLibraryReflex.GetDefaultReflexMode");
        
        UStreamlineLibraryReflex_GetDefaultReflexMode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
