/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AIModule_ENUMS.h"
#include "Headers/AIModule_PARAMS.h"
#include "Headers/AIModule_UBTNode.h"
#include "Headers/AIModule_UBTCompositeNode.h"
#include "Headers/AIModule_UBTAuxiliaryNode.h"
#include "Headers/AIModule_UBTDecorator.h"
#include "Headers/AIModule_UBTTask_Wait.h"
#include "Headers/AIModule_UAIPerceptionComponent.h"
#include "Headers/AIModule_UBTTaskNode.h"
#include "Headers/AIModule_UAIPerceptionStimuliSourceComponent.h"
#include "Headers/AIModule_UAISubsystem.h"
#include "Headers/AIModule_UAIPerceptionSystem.h"
#include "Headers/AIModule_UAISense.h"
#include "Headers/AIModule_UAISense_Sight.h"
#include "Headers/AIModule_AAIController.h"
#include "Headers/AIModule_UEnvQueryNode.h"
#include "Headers/AIModule_UEnvQueryGenerator.h"
#include "Headers/AIModule_UEnvQueryGenerator_ProjectedPoints.h"
#include "Headers/AIModule_UEnvQueryGenerator_Cone.h"
#include "Headers/AIModule_UEnvQueryTest.h"
#include "Headers/AIModule_UEnvQueryTest_Trace.h"
#include "Headers/AIModule_UPathFollowingComponent.h"
#include "Headers/AIModule_UCrowdFollowingComponent.h"
#include "Headers/AIModule_UAITask.h"
#include "Headers/AIModule_UAITask_MoveTo.h"
#include "Headers/AIModule_ANavLinkProxy.h"
#include "Headers/AIModule_UBlackboardKeyType_Int.h"
#include "Headers/AIModule_UBlackboardKeyType_Name.h"
#include "Headers/AIModule_UEnvQueryOption.h"
#include "Headers/AIModule_UEQSRenderingComponent.h"
#include "Headers/AIModule_AEQSTestingPawn.h"
#include "Headers/AIModule_UEnvQueryGenerator_ActorsOfClass.h"
#include "Headers/AIModule_UEnvQueryGenerator_BlueprintBase.h"
#include "Headers/AIModule_UEnvQueryGenerator_Composite.h"
#include "Headers/AIModule_UEnvQueryGenerator_CurrentLocation.h"
#include "Headers/AIModule_UEnvQueryGenerator_Donut.h"
#include "Headers/AIModule_UEnvQueryGenerator_OnCircle.h"
#include "Headers/AIModule_UEnvQueryGenerator_SimpleGrid.h"
#include "Headers/AIModule_UEnvQueryGenerator_PathingGrid.h"
#include "Headers/AIModule_UEnvQueryGenerator_PerceivedActors.h"
#include "Headers/AIModule_UEnvQueryItemType.h"
#include "Headers/AIModule_UEnvQueryItemType_VectorBase.h"
#include "Headers/AIModule_UEnvQueryItemType_ActorBase.h"
#include "Headers/AIModule_UEnvQueryItemType_Actor.h"
#include "Headers/AIModule_UEnvQueryItemType_Direction.h"
#include "Headers/AIModule_UEnvQueryItemType_Point.h"
#include "Headers/AIModule_UEnvQueryTest_Distance.h"
#include "Headers/AIModule_UEnvQueryTest_Dot.h"
#include "Headers/AIModule_UEnvQueryTest_GameplayTags.h"
#include "Headers/AIModule_UEnvQueryTest_Overlap.h"
#include "Headers/AIModule_UEnvQueryTest_Pathfinding.h"
#include "Headers/AIModule_UEnvQueryTest_PathfindingBatch.h"
#include "Headers/AIModule_UEnvQueryTest_Project.h"
#include "Headers/AIModule_UEnvQueryTest_Random.h"
#include "Headers/AIModule_UEnvQueryTest_Volume.h"
#include "Headers/AIModule_AGridPathAIController.h"
#include "Headers/AIModule_UBlackboardKeyType_NativeEnum.h"
#include "Headers/AIModule_UBlackboardKeyType_Object.h"
#include "Headers/AIModule_UBlackboardKeyType_Rotator.h"
#include "Headers/AIModule_UAIHotSpotManager.h"
#include "Headers/AIModule_UCrowdManager.h"
#include "Headers/AIModule_UGridPathFollowingComponent.h"
#include "Headers/AIModule_UNavFilter_AIControllerDefault.h"
#include "Headers/AIModule_UBlackboardKeyType_String.h"
#include "Headers/AIModule_UBlackboardKeyType_Vector.h"
#include "Headers/AIModule_UBTFunctionLibrary.h"
#include "Headers/AIModule_UBTService.h"
#include "Headers/AIModule_UBTComposite_Selector.h"
#include "Headers/AIModule_UBTComposite_Sequence.h"
#include "Headers/AIModule_UBTComposite_SimpleParallel.h"
#include "Headers/AIModule_UBTDecorator_BlackboardBase.h"
#include "Headers/AIModule_UBTDecorator_Blackboard.h"
#include "Headers/AIModule_UBTDecorator_BlueprintBase.h"
#include "Headers/AIModule_UNavLocalGridManager.h"
#include "Headers/AIModule_UPathFollowingManager.h"
#include "Headers/AIModule_UBTDecorator_CheckGameplayTagsOnActor.h"
#include "Headers/AIModule_UBTDecorator_CompareBBEntries.h"
#include "Headers/AIModule_UBTDecorator_ConditionalLoop.h"
#include "Headers/AIModule_UBTDecorator_ConeCheck.h"
#include "Headers/AIModule_UBTDecorator_Cooldown.h"
#include "Headers/AIModule_UBTDecorator_DoesPathExist.h"
#include "Headers/AIModule_UBTDecorator_ForceSuccess.h"
#include "Headers/AIModule_UBTDecorator_IsAtLocation.h"
#include "Headers/AIModule_UBTDecorator_IsBBEntryOfClass.h"
#include "Headers/AIModule_UBTDecorator_KeepInCone.h"
#include "Headers/AIModule_UBTDecorator_Loop.h"
#include "Headers/AIModule_UBTDecorator_ReachedMoveGoal.h"
#include "Headers/AIModule_IAIPerceptionListenerInterface.h"
#include "Headers/AIModule_UBTDecorator_SetTagCooldown.h"
#include "Headers/AIModule_UBTDecorator_TagCooldown.h"
#include "Headers/AIModule_UBTDecorator_TimeLimit.h"
#include "Headers/AIModule_UBTService_BlackboardBase.h"
#include "Headers/AIModule_UAISenseConfig_Damage.h"
#include "Headers/AIModule_UAISense_Blueprint.h"
#include "Headers/AIModule_UAISense_Damage.h"
#include "Headers/AIModule_UAISense_Hearing.h"
#include "Headers/AIModule_UAISense_Prediction.h"
#include "Headers/AIModule_UAISense_Team.h"
#include "Headers/AIModule_UAISense_Touch.h"
#include "Headers/AIModule_IAISightTargetInterface.h"
#include "Headers/AIModule_UBTService_BlueprintBase.h"
#include "Headers/AIModule_UBTService_DefaultFocus.h"
#include "Headers/AIModule_UBTService_RunEQS.h"
#include "Headers/AIModule_UBTTask_BlackboardBase.h"
#include "Headers/AIModule_UBTTask_BlueprintBase.h"
#include "Headers/AIModule_UBTTask_FinishWithResult.h"
#include "Headers/AIModule_UBTTask_GameplayTaskBase.h"
#include "Headers/AIModule_UBTTask_MakeNoise.h"
#include "Headers/AIModule_UBTTask_MoveTo.h"
#include "Headers/AIModule_UBTTask_MoveDirectlyToward.h"
#include "Headers/AIModule_UBTTask_PawnActionBase.h"
#include "Headers/AIModule_UPawnSensingComponent.h"
#include "Headers/AIModule_UAITask_LockLogic.h"
#include "Headers/AIModule_UAITask_RunEQS.h"
#include "Headers/AIModule_UVisualLoggerExtension.h"
#include "Headers/AIModule_UAIAsyncTaskBlueprintProxy.h"
#include "Headers/AIModule_IAIResourceInterface.h"
#include "Headers/AIModule_UBTTask_PlayAnimation.h"
#include "Headers/AIModule_UBTTask_PlaySound.h"
#include "Headers/AIModule_UBTTask_PushPawnAction.h"
#include "Headers/AIModule_UBTTask_RotateToFaceBBEntry.h"
#include "Headers/AIModule_UBTTask_RunBehavior.h"
#include "Headers/AIModule_UBTTask_RunBehaviorDynamic.h"
#include "Headers/AIModule_UBTTask_RunEQSQuery.h"
#include "Headers/AIModule_UBTTask_SetTagCooldown.h"
#include "Headers/AIModule_UBTTask_WaitBlackboardTime.h"
#include "Headers/AIModule_UAIBlueprintHelperLibrary.h"
#include "Headers/AIModule_UAIDataProvider.h"
#include "Headers/AIModule_UAIDataProvider_QueryParams.h"
#include "Headers/AIModule_UAIDataProvider_Random.h"
#include "Headers/AIModule_ADetourCrowdAIController.h"
#include "Headers/AIModule_UEnvQueryContext.h"
#include "Headers/AIModule_UEnvQueryContext_BlueprintBase.h"
#include "Headers/AIModule_UEnvQueryContext_Item.h"
#include "Headers/AIModule_UEnvQueryContext_Querier.h"
#include "Headers/AIModule_UEnvQuery.h"
#include "Headers/AIModule_UEnvQueryDebugHelpers.h"
#include "Headers/AIModule_UEnvQueryInstanceBlueprintWrapper.h"
#include "Headers/AIModule_UEnvQueryManager.h"
#include "Headers/AIModule_UAISenseBlueprintListener.h"
#include "Headers/AIModule_UAISenseConfig.h"
#include "Headers/AIModule_UAISenseConfig_Blueprint.h"
#include "Headers/AIModule_UAISenseConfig_Hearing.h"
#include "Headers/AIModule_UAISenseConfig_Prediction.h"
#include "Headers/AIModule_UAISenseConfig_Sight.h"
#include "Headers/AIModule_UAISenseConfig_Team.h"
#include "Headers/AIModule_UAISenseConfig_Touch.h"
#include "Headers/AIModule_UAISenseEvent.h"
#include "Headers/AIModule_UAISenseEvent_Damage.h"
#include "Headers/AIModule_UAISenseEvent_Hearing.h"
#include "Headers/AIModule_ICrowdAgentInterface.h"
#include "Headers/AIModule_UEnvQueryTypes.h"
#include "Headers/AIModule_IEQSQueryResultSourceInterface.h"
#include "Headers/AIModule_IGenericTeamAgentInterface.h"
#include "Headers/AIModule_UPawnAction.h"
#include "Headers/AIModule_UPawnActionsComponent.h"
#include "Headers/AIModule_UPawnAction_BlueprintBase.h"
#include "Headers/AIModule_UPawnAction_Move.h"
#include "Headers/AIModule_UPawnAction_Repeat.h"
#include "Headers/AIModule_UPawnAction_Sequence.h"
#include "Headers/AIModule_UPawnAction_Wait.h"
#include "Headers/AIModule_UAIResource_Movement.h"
#include "Headers/AIModule_UAIResource_Logic.h"
#include "Headers/AIModule_UAISystem.h"
#include "Headers/AIModule_UBehaviorTree.h"
#include "Headers/AIModule_UBrainComponent.h"
#include "Headers/AIModule_UBehaviorTreeComponent.h"
#include "Headers/AIModule_UBehaviorTreeManager.h"
#include "Headers/AIModule_UBehaviorTreeTypes.h"
#include "Headers/AIModule_IBlackboardAssetProvider.h"
#include "Headers/AIModule_UBlackboardComponent.h"
#include "Headers/AIModule_UBlackboardData.h"
#include "Headers/AIModule_UBlackboardKeyType.h"
#include "Headers/AIModule_UBlackboardKeyType_Bool.h"
#include "Headers/AIModule_UBlackboardKeyType_Class.h"
#include "Headers/AIModule_UBlackboardKeyType_Enum.h"
#include "Headers/AIModule_UBlackboardKeyType_Float.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AIModule
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x065B3A60
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.SetSenseEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UAISense*                                SenseClass                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bEnable                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::SetSenseEnabled(AIModule::UAISense* SenseClass, bool bEnable)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.SetSenseEnabled");
        
        UAIPerceptionComponent_SetSenseEnabled_Params params {};
        params.SenseClass = SenseClass;
        params.bEnable = bEnable;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065B47A0
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.RequestStimuliListenerUpdate
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::RequestStimuliListenerUpdate()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.RequestStimuliListenerUpdate");
        
        UAIPerceptionComponent_RequestStimuliListenerUpdate_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065B47F0
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.OnOwnerEndPlay
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EEndPlayReason                             EndPlayReason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::OnOwnerEndPlay(Engine::AActor* Actor, Engine::EEndPlayReason EndPlayReason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.OnOwnerEndPlay");
        
        UAIPerceptionComponent_OnOwnerEndPlay_Params params {};
        params.Actor = Actor;
        params.EndPlayReason = EndPlayReason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065B44B0
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.GetPerceivedHostileActorsBySense
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UAISense*                                SenseToUse                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                OutActors                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::GetPerceivedHostileActorsBySense(AIModule::UAISense* SenseToUse, BasicTypes::TArray<Engine::AActor*>* OutActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.GetPerceivedHostileActorsBySense");
        
        UAIPerceptionComponent_GetPerceivedHostileActorsBySense_Params params {};
        params.SenseToUse = SenseToUse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActors != nullptr)
            *OutActors = params.OutActors;
    }

    /**
     * Function:
     *         RVA    -> 0x065B4670
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.GetPerceivedHostileActors
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::AActor*>                OutActors                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::GetPerceivedHostileActors(BasicTypes::TArray<Engine::AActor*>* OutActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.GetPerceivedHostileActors");
        
        UAIPerceptionComponent_GetPerceivedHostileActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActors != nullptr)
            *OutActors = params.OutActors;
    }

    /**
     * Function:
     *         RVA    -> 0x065B4130
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.GetPerceivedActors
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UAISense*                                SenseToUse                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                OutActors                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::GetPerceivedActors(AIModule::UAISense* SenseToUse, BasicTypes::TArray<Engine::AActor*>* OutActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.GetPerceivedActors");
        
        UAIPerceptionComponent_GetPerceivedActors_Params params {};
        params.SenseToUse = SenseToUse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActors != nullptr)
            *OutActors = params.OutActors;
    }

    /**
     * Function:
     *         RVA    -> 0x065B42F0
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.GetKnownPerceivedActors
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UAISense*                                SenseToUse                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                OutActors                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::GetKnownPerceivedActors(AIModule::UAISense* SenseToUse, BasicTypes::TArray<Engine::AActor*>* OutActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.GetKnownPerceivedActors");
        
        UAIPerceptionComponent_GetKnownPerceivedActors_Params params {};
        params.SenseToUse = SenseToUse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActors != nullptr)
            *OutActors = params.OutActors;
    }

    /**
     * Function:
     *         RVA    -> 0x065B4130
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.GetCurrentlyPerceivedActors
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UAISense*                                SenseToUse                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                OutActors                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::GetCurrentlyPerceivedActors(AIModule::UAISense* SenseToUse, BasicTypes::TArray<Engine::AActor*>* OutActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.GetCurrentlyPerceivedActors");
        
        UAIPerceptionComponent_GetCurrentlyPerceivedActors_Params params {};
        params.SenseToUse = SenseToUse;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutActors != nullptr)
            *OutActors = params.OutActors;
    }

    /**
     * Function:
     *         RVA    -> 0x065B3D80
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.GetActorsPerception
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FActorPerceptionBlueprintInfo            Info                                                       (Parm, OutParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAIPerceptionComponent::GetActorsPerception(Engine::AActor* Actor, AIModule::FActorPerceptionBlueprintInfo* Info)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.GetActorsPerception");
        
        UAIPerceptionComponent_GetActorsPerception_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Info != nullptr)
            *Info = params.Info;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065B4780
     *         Name   -> Function /Script/AIModule.AIPerceptionComponent.ForgetAll
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAIPerceptionComponent::ForgetAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionComponent.ForgetAll");
        
        UAIPerceptionComponent_ForgetAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BB9A0
     *         Name   -> Function /Script/AIModule.AIPerceptionStimuliSourceComponent.UnregisterFromSense
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UAISense*                                SenseClass                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionStimuliSourceComponent::UnregisterFromSense(AIModule::UAISense* SenseClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionStimuliSourceComponent.UnregisterFromSense");
        
        UAIPerceptionStimuliSourceComponent_UnregisterFromSense_Params params {};
        params.SenseClass = SenseClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BBC10
     *         Name   -> Function /Script/AIModule.AIPerceptionStimuliSourceComponent.UnregisterFromPerceptionSystem
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAIPerceptionStimuliSourceComponent::UnregisterFromPerceptionSystem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionStimuliSourceComponent.UnregisterFromPerceptionSystem");
        
        UAIPerceptionStimuliSourceComponent_UnregisterFromPerceptionSystem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BBF10
     *         Name   -> Function /Script/AIModule.AIPerceptionStimuliSourceComponent.RegisterWithPerceptionSystem
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAIPerceptionStimuliSourceComponent::RegisterWithPerceptionSystem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionStimuliSourceComponent.RegisterWithPerceptionSystem");
        
        UAIPerceptionStimuliSourceComponent_RegisterWithPerceptionSystem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BBCD0
     *         Name   -> Function /Script/AIModule.AIPerceptionStimuliSourceComponent.RegisterForSense
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UAISense*                                SenseClass                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionStimuliSourceComponent::RegisterForSense(AIModule::UAISense* SenseClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionStimuliSourceComponent.RegisterForSense");
        
        UAIPerceptionStimuliSourceComponent_RegisterForSense_Params params {};
        params.SenseClass = SenseClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BCC50
     *         Name   -> Function /Script/AIModule.AIPerceptionSystem.ReportPerceptionEvent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAISenseEvent*                           PerceptionEvent                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionSystem::STATIC_ReportPerceptionEvent(CoreUObject::UObject* WorldContextObject, AIModule::UAISenseEvent* PerceptionEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionSystem.ReportPerceptionEvent");
        
        UAIPerceptionSystem_ReportPerceptionEvent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PerceptionEvent = PerceptionEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BCF30
     *         Name   -> Function /Script/AIModule.AIPerceptionSystem.ReportEvent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UAISenseEvent*                           PerceptionEvent                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionSystem::ReportEvent(AIModule::UAISenseEvent* PerceptionEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionSystem.ReportEvent");
        
        UAIPerceptionSystem_ReportEvent_Params params {};
        params.PerceptionEvent = PerceptionEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BC8C0
     *         Name   -> Function /Script/AIModule.AIPerceptionSystem.RegisterPerceptionStimuliSource
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAISense*                                Sense                                                      (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAIPerceptionSystem::STATIC_RegisterPerceptionStimuliSource(CoreUObject::UObject* WorldContextObject, AIModule::UAISense* Sense, Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionSystem.RegisterPerceptionStimuliSource");
        
        UAIPerceptionSystem_RegisterPerceptionStimuliSource_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Sense = Sense;
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065BC470
     *         Name   -> Function /Script/AIModule.AIPerceptionSystem.OnPerceptionStimuliSourceEndPlay
     *         Flags  -> (Final, Native, Protected)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EEndPlayReason                             EndPlayReason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIPerceptionSystem::OnPerceptionStimuliSourceEndPlay(Engine::AActor* Actor, Engine::EEndPlayReason EndPlayReason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionSystem.OnPerceptionStimuliSourceEndPlay");
        
        UAIPerceptionSystem_OnPerceptionStimuliSourceEndPlay_Params params {};
        params.Actor = Actor;
        params.EndPlayReason = EndPlayReason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065BC5F0
     *         Name   -> Function /Script/AIModule.AIPerceptionSystem.GetSenseClassForStimulus
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FAIStimulus                              Stimulus                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         AIModule::UAISense*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UAISense* UAIPerceptionSystem::STATIC_GetSenseClassForStimulus(CoreUObject::UObject* WorldContextObject, const AIModule::FAIStimulus& Stimulus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIPerceptionSystem.GetSenseClassForStimulus");
        
        UAIPerceptionSystem_GetSenseClassForStimulus_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Stimulus = Stimulus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651FC20
     *         Name   -> Function /Script/AIModule.AIController.UseBlackboard
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBlackboardData*                         BlackboardAsset                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBlackboardComponent*                    BlackboardComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AAIController::UseBlackboard(AIModule::UBlackboardData* BlackboardAsset, AIModule::UBlackboardComponent** BlackboardComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.UseBlackboard");
        
        AAIController_UseBlackboard_Params params {};
        params.BlackboardAsset = BlackboardAsset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (BlackboardComponent != nullptr)
            *BlackboardComponent = params.BlackboardComponent;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F840
     *         Name   -> Function /Script/AIModule.AIController.UnclaimTaskResource
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         GameplayTasks::UGameplayTaskResource*              ResourceClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::UnclaimTaskResource(GameplayTasks::UGameplayTaskResource* ResourceClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.UnclaimTaskResource");
        
        AAIController_UnclaimTaskResource_Params params {};
        params.ResourceClass = ResourceClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F200
     *         Name   -> Function /Script/AIModule.AIController.SetPathFollowingComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UPathFollowingComponent*                 NewPFComponent                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::SetPathFollowingComponent(AIModule::UPathFollowingComponent* NewPFComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.SetPathFollowingComponent");
        
        AAIController_SetPathFollowingComponent_Params params {};
        params.NewPFComponent = NewPFComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06520060
     *         Name   -> Function /Script/AIModule.AIController.SetMoveBlockDetection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::SetMoveBlockDetection(bool bEnable)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.SetMoveBlockDetection");
        
        AAIController_SetMoveBlockDetection_Params params {};
        params.bEnable = bEnable;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0651FF60
     *         Name   -> Function /Script/AIModule.AIController.RunBehaviorTree
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UBehaviorTree*                           BTAsset                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AAIController::RunBehaviorTree(AIModule::UBehaviorTree* BTAsset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.RunBehaviorTree");
        
        AAIController_RunBehaviorTree_Params params {};
        params.BTAsset = BTAsset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.AIController.OnUsingBlackBoard
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::UBlackboardComponent*                    BlackboardComp                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBlackboardData*                         BlackboardAsset                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::OnUsingBlackBoard(AIModule::UBlackboardComponent* BlackboardComp, AIModule::UBlackboardData* BlackboardAsset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.OnUsingBlackBoard");
        
        AAIController_OnUsingBlackBoard_Params params {};
        params.BlackboardComp = BlackboardComp;
        params.BlackboardAsset = BlackboardAsset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F310
     *         Name   -> Function /Script/AIModule.AIController.OnGameplayTaskResourcesClaimed
     *         Flags  -> (Native, Public)
     * Parameters:
     *         GameplayTasks::FGameplayResourceSet                NewlyClaimed                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         GameplayTasks::FGameplayResourceSet                FreshlyReleased                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::OnGameplayTaskResourcesClaimed(const GameplayTasks::FGameplayResourceSet& NewlyClaimed, const GameplayTasks::FGameplayResourceSet& FreshlyReleased)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.OnGameplayTaskResourcesClaimed");
        
        AAIController_OnGameplayTaskResourcesClaimed_Params params {};
        params.NewlyClaimed = NewlyClaimed;
        params.FreshlyReleased = FreshlyReleased;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06520290
     *         Name   -> Function /Script/AIModule.AIController.MoveToLocation
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               Dest                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AcceptanceRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopOnOverlap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUsePathfinding                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bProjectDestinationToNavigation                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCanStrafe                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllowPartialPath                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EPathFollowingRequestResult              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EPathFollowingRequestResult AAIController::MoveToLocation(const CoreUObject::FVector& Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, NavigationSystem::UNavigationQueryFilter* FilterClass, bool bAllowPartialPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.MoveToLocation");
        
        AAIController_MoveToLocation_Params params {};
        params.Dest = Dest;
        params.AcceptanceRadius = AcceptanceRadius;
        params.bStopOnOverlap = bStopOnOverlap;
        params.bUsePathfinding = bUsePathfinding;
        params.bProjectDestinationToNavigation = bProjectDestinationToNavigation;
        params.bCanStrafe = bCanStrafe;
        params.FilterClass = FilterClass;
        params.bAllowPartialPath = bAllowPartialPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065207A0
     *         Name   -> Function /Script/AIModule.AIController.MoveToActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Goal                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AcceptanceRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopOnOverlap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUsePathfinding                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bCanStrafe                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationQueryFilter*          FilterClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAllowPartialPath                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EPathFollowingRequestResult              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EPathFollowingRequestResult AAIController::MoveToActor(Engine::AActor* Goal, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bCanStrafe, NavigationSystem::UNavigationQueryFilter* FilterClass, bool bAllowPartialPath)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.MoveToActor");
        
        AAIController_MoveToActor_Params params {};
        params.Goal = Goal;
        params.AcceptanceRadius = AcceptanceRadius;
        params.bStopOnOverlap = bStopOnOverlap;
        params.bUsePathfinding = bUsePathfinding;
        params.bCanStrafe = bCanStrafe;
        params.FilterClass = FilterClass;
        params.bAllowPartialPath = bAllowPartialPath;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F500
     *         Name   -> Function /Script/AIModule.AIController.K2_SetFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    NewFocus                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::K2_SetFocus(Engine::AActor* NewFocus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.K2_SetFocus");
        
        AAIController_K2_SetFocus_Params params {};
        params.NewFocus = NewFocus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F5F0
     *         Name   -> Function /Script/AIModule.AIController.K2_SetFocalPoint
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               FP                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::K2_SetFocalPoint(const CoreUObject::FVector& FP)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.K2_SetFocalPoint");
        
        AAIController_K2_SetFocalPoint_Params params {};
        params.FP = FP;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F4A0
     *         Name   -> Function /Script/AIModule.AIController.K2_ClearFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void AAIController::K2_ClearFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.K2_ClearFocus");
        
        AAIController_K2_ClearFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06520200
     *         Name   -> Function /Script/AIModule.AIController.HasPartialPath
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool AAIController::HasPartialPath()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.HasPartialPath");
        
        AAIController_HasPartialPath_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0167BCF0
     *         Name   -> Function /Script/AIModule.AIController.GetPathFollowingComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UPathFollowingComponent*                 ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UPathFollowingComponent* AAIController::GetPathFollowingComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetPathFollowingComponent");
        
        AAIController_GetPathFollowingComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06520250
     *         Name   -> Function /Script/AIModule.AIController.GetMoveStatus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::EPathFollowingStatus                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EPathFollowingStatus AAIController::GetMoveStatus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetMoveStatus");
        
        AAIController_GetMoveStatus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06520190
     *         Name   -> Function /Script/AIModule.AIController.GetImmediateMoveDestination
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AAIController::GetImmediateMoveDestination()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetImmediateMoveDestination");
        
        AAIController_GetImmediateMoveDestination_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F4D0
     *         Name   -> Function /Script/AIModule.AIController.GetFocusActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* AAIController::GetFocusActor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetFocusActor");
        
        AAIController_GetFocusActor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F6F0
     *         Name   -> Function /Script/AIModule.AIController.GetFocalPointOnActor
     *         Flags  -> (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AAIController::GetFocalPointOnActor(Engine::AActor* Actor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetFocalPointOnActor");
        
        AAIController_GetFocalPointOnActor_Params params {};
        params.Actor = Actor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F800
     *         Name   -> Function /Script/AIModule.AIController.GetFocalPoint
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector AAIController::GetFocalPoint()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetFocalPoint");
        
        AAIController_GetFocalPoint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F1E0
     *         Name   -> Function /Script/AIModule.AIController.GetDeprecatedActionsComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UPawnActionsComponent*                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UPawnActionsComponent* AAIController::GetDeprecatedActionsComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetDeprecatedActionsComponent");
        
        AAIController_GetDeprecatedActionsComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651F2F0
     *         Name   -> Function /Script/AIModule.AIController.GetAIPerceptionComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UAIPerceptionComponent*                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UAIPerceptionComponent* AAIController::GetAIPerceptionComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.GetAIPerceptionComponent");
        
        AAIController_GetAIPerceptionComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651FA50
     *         Name   -> Function /Script/AIModule.AIController.ClaimTaskResource
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         GameplayTasks::UGameplayTaskResource*              ResourceClass                                              (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void AAIController::ClaimTaskResource(GameplayTasks::UGameplayTaskResource* ResourceClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIController.ClaimTaskResource");
        
        AAIController_ClaimTaskResource_Params params {};
        params.ResourceClass = ResourceClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065AB170
     *         Name   -> Function /Script/AIModule.PathFollowingComponent.OnNavDataRegistered
     *         Flags  -> (Final, Native, Protected)
     * Parameters:
     *         NavigationSystem::ANavigationData*                 NavData                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPathFollowingComponent::OnNavDataRegistered(NavigationSystem::ANavigationData* NavData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PathFollowingComponent.OnNavDataRegistered");
        
        UPathFollowingComponent_OnNavDataRegistered_Params params {};
        params.NavData = NavData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065AB400
     *         Name   -> Function /Script/AIModule.PathFollowingComponent.OnActorBump
     *         Flags  -> (Native, Public, HasOutParms, HasDefaults)
     * Parameters:
     *         Engine::AActor*                                    SelfActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FHitResult                                 Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPathFollowingComponent::OnActorBump(Engine::AActor* SelfActor, Engine::AActor* OtherActor, const CoreUObject::FVector& NormalImpulse, const Engine::FHitResult& Hit)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PathFollowingComponent.OnActorBump");
        
        UPathFollowingComponent_OnActorBump_Params params {};
        params.SelfActor = SelfActor;
        params.OtherActor = OtherActor;
        params.NormalImpulse = NormalImpulse;
        params.Hit = Hit;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065AB2C0
     *         Name   -> Function /Script/AIModule.PathFollowingComponent.GetPathDestination
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UPathFollowingComponent::GetPathDestination()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PathFollowingComponent.GetPathDestination");
        
        UPathFollowingComponent_GetPathDestination_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065AB360
     *         Name   -> Function /Script/AIModule.PathFollowingComponent.GetPathActionType
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::EPathFollowingAction                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EPathFollowingAction UPathFollowingComponent::GetPathActionType()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PathFollowingComponent.GetPathActionType");
        
        UPathFollowingComponent_GetPathActionType_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0659BD00
     *         Name   -> Function /Script/AIModule.CrowdFollowingComponent.SuspendCrowdSteering
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bSuspend                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCrowdFollowingComponent::SuspendCrowdSteering(bool bSuspend)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.CrowdFollowingComponent.SuspendCrowdSteering");
        
        UCrowdFollowingComponent_SuspendCrowdSteering_Params params {};
        params.bSuspend = bSuspend;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065CC1B0
     *         Name   -> Function /Script/AIModule.AITask_MoveTo.AIMoveTo
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AIModule::AAIController*                           Controller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               GoalLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    GoalActor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AcceptanceRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EAIOptionFlag                            StopOnOverlap                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EAIOptionFlag                            AcceptPartialPath                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUsePathfinding                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLockAILogic                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUseContinuousGoalTracking                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EAIOptionFlag                            ProjectGoalOnNavigation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAITask_MoveTo*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UAITask_MoveTo* UAITask_MoveTo::STATIC_AIMoveTo(AIModule::AAIController* Controller, const CoreUObject::FVector& GoalLocation, Engine::AActor* GoalActor, float AcceptanceRadius, AIModule::EAIOptionFlag StopOnOverlap, AIModule::EAIOptionFlag AcceptPartialPath, bool bUsePathfinding, bool bLockAILogic, bool bUseContinuousGoalTracking, AIModule::EAIOptionFlag ProjectGoalOnNavigation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AITask_MoveTo.AIMoveTo");
        
        UAITask_MoveTo_AIMoveTo_Params params {};
        params.Controller = Controller;
        params.GoalLocation = GoalLocation;
        params.GoalActor = GoalActor;
        params.AcceptanceRadius = AcceptanceRadius;
        params.StopOnOverlap = StopOnOverlap;
        params.AcceptPartialPath = AcceptPartialPath;
        params.bUsePathfinding = bUsePathfinding;
        params.bLockAILogic = bLockAILogic;
        params.bUseContinuousGoalTracking = bUseContinuousGoalTracking;
        params.ProjectGoalOnNavigation = ProjectGoalOnNavigation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A4830
     *         Name   -> Function /Script/AIModule.NavLinkProxy.SetSmartLinkEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ANavLinkProxy::SetSmartLinkEnabled(bool bEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLinkProxy.SetSmartLinkEnabled");
        
        ANavLinkProxy_SetSmartLinkEnabled_Params params {};
        params.bEnabled = bEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065A4950
     *         Name   -> Function /Script/AIModule.NavLinkProxy.ResumePathFollowing
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    Agent                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ANavLinkProxy::ResumePathFollowing(Engine::AActor* Agent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLinkProxy.ResumePathFollowing");
        
        ANavLinkProxy_ResumePathFollowing_Params params {};
        params.Agent = Agent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.NavLinkProxy.ReceiveSmartLinkReached
     *         Flags  -> (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    Agent                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Destination                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ANavLinkProxy::ReceiveSmartLinkReached(Engine::AActor* Agent, const CoreUObject::FVector& Destination)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLinkProxy.ReceiveSmartLinkReached");
        
        ANavLinkProxy_ReceiveSmartLinkReached_Params params {};
        params.Agent = Agent;
        params.Destination = Destination;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065A4920
     *         Name   -> Function /Script/AIModule.NavLinkProxy.IsSmartLinkEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ANavLinkProxy::IsSmartLinkEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLinkProxy.IsSmartLinkEnabled");
        
        ANavLinkProxy_IsSmartLinkEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A47F0
     *         Name   -> Function /Script/AIModule.NavLinkProxy.HasMovingAgents
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ANavLinkProxy::HasMovingAgents()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLinkProxy.HasMovingAgents");
        
        ANavLinkProxy_HasMovingAgents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0657DEA0
     *         Name   -> Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.GetQuerier
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UEnvQueryGenerator_BlueprintBase::GetQuerier()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.GetQuerier");
        
        UEnvQueryGenerator_BlueprintBase_GetQuerier_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.DoItemGenerationFromActors
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::AActor*>                ContextActors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryGenerator_BlueprintBase::DoItemGenerationFromActors(BasicTypes::TArray<Engine::AActor*> ContextActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.DoItemGenerationFromActors");
        
        UEnvQueryGenerator_BlueprintBase_DoItemGenerationFromActors_Params params {};
        params.ContextActors = ContextActors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.DoItemGeneration
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ContextLocations                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryGenerator_BlueprintBase::DoItemGeneration(BasicTypes::TArray<CoreUObject::FVector> ContextLocations)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.DoItemGeneration");
        
        UEnvQueryGenerator_BlueprintBase_DoItemGeneration_Params params {};
        params.ContextLocations = ContextLocations;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0657E120
     *         Name   -> Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.AddGeneratedVector
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, Const)
     * Parameters:
     *         CoreUObject::FVector                               GeneratedVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryGenerator_BlueprintBase::AddGeneratedVector(const CoreUObject::FVector& GeneratedVector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.AddGeneratedVector");
        
        UEnvQueryGenerator_BlueprintBase_AddGeneratedVector_Params params {};
        params.GeneratedVector = GeneratedVector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0657DF20
     *         Name   -> Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.AddGeneratedActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         Engine::AActor*                                    GeneratedActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryGenerator_BlueprintBase::AddGeneratedActor(Engine::AActor* GeneratedActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryGenerator_BlueprintBase.AddGeneratedActor");
        
        UEnvQueryGenerator_BlueprintBase_AddGeneratedActor_Params params {};
        params.GeneratedActor = GeneratedActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013BAD10
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.StopUsingExternalEvent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_StopUsingExternalEvent(AIModule::UBTNode* NodeOwner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.StopUsingExternalEvent");
        
        UBTFunctionLibrary_StopUsingExternalEvent_Params params {};
        params.NodeOwner = NodeOwner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x013EE4E0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.StartUsingExternalEvent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OwningActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_StartUsingExternalEvent(AIModule::UBTNode* NodeOwner, Engine::AActor* OwningActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.StartUsingExternalEvent");
        
        UBTFunctionLibrary_StartUsingExternalEvent_Params params {};
        params.NodeOwner = NodeOwner;
        params.OwningActor = OwningActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065407B0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsVector
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsVector(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const CoreUObject::FVector& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsVector");
        
        UBTFunctionLibrary_SetBlackboardValueAsVector_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06540CE0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsString(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const BasicTypes::FString& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsString");
        
        UBTFunctionLibrary_SetBlackboardValueAsString_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06540510
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsRotator
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsRotator(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const CoreUObject::FRotator& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsRotator");
        
        UBTFunctionLibrary_SetBlackboardValueAsRotator_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06541DE0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsObject
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Value                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsObject(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, CoreUObject::UObject* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsObject");
        
        UBTFunctionLibrary_SetBlackboardValueAsObject_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06540A50
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsName(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, const BasicTypes::FName& Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsName");
        
        UBTFunctionLibrary_SetBlackboardValueAsName_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065415B0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsInt
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsInt(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, int32_t Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsInt");
        
        UBTFunctionLibrary_SetBlackboardValueAsInt_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065412C0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsFloat
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsFloat(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, float Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsFloat");
        
        UBTFunctionLibrary_SetBlackboardValueAsFloat_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06541870
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsEnum
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         uint8_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsEnum(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, uint8_t Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsEnum");
        
        UBTFunctionLibrary_SetBlackboardValueAsEnum_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06541B20
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsClass
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Value                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsClass(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, CoreUObject::UObject* Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsClass");
        
        UBTFunctionLibrary_SetBlackboardValueAsClass_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06541000
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsBool
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_SetBlackboardValueAsBool(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key, bool Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.SetBlackboardValueAsBool");
        
        UBTFunctionLibrary_SetBlackboardValueAsBool_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06543A30
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetOwnersBlackboard
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBlackboardComponent*                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UBlackboardComponent* UBTFunctionLibrary::STATIC_GetOwnersBlackboard(AIModule::UBTNode* NodeOwner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetOwnersBlackboard");
        
        UBTFunctionLibrary_GetOwnersBlackboard_Params params {};
        params.NodeOwner = NodeOwner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06543900
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetOwnerComponent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBehaviorTreeComponent*                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UBehaviorTreeComponent* UBTFunctionLibrary::STATIC_GetOwnerComponent(AIModule::UBTNode* NodeOwner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetOwnerComponent");
        
        UBTFunctionLibrary_GetOwnerComponent_Params params {};
        params.NodeOwner = NodeOwner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065422D0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsVector
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UBTFunctionLibrary::STATIC_GetBlackboardValueAsVector(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsVector");
        
        UBTFunctionLibrary_GetBlackboardValueAsVector_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06542720
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UBTFunctionLibrary::STATIC_GetBlackboardValueAsString(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsString");
        
        UBTFunctionLibrary_GetBlackboardValueAsString_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065420A0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsRotator
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator UBTFunctionLibrary::STATIC_GetBlackboardValueAsRotator(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsRotator");
        
        UBTFunctionLibrary_GetBlackboardValueAsRotator_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065436D0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsObject
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UBTFunctionLibrary::STATIC_GetBlackboardValueAsObject(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsObject");
        
        UBTFunctionLibrary_GetBlackboardValueAsObject_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06542500
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsName
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UBTFunctionLibrary::STATIC_GetBlackboardValueAsName(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsName");
        
        UBTFunctionLibrary_GetBlackboardValueAsName_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06542E30
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsInt
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UBTFunctionLibrary::STATIC_GetBlackboardValueAsInt(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsInt");
        
        UBTFunctionLibrary_GetBlackboardValueAsInt_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06542C00
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsFloat
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UBTFunctionLibrary::STATIC_GetBlackboardValueAsFloat(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsFloat");
        
        UBTFunctionLibrary_GetBlackboardValueAsFloat_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06543060
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsEnum
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UBTFunctionLibrary::STATIC_GetBlackboardValueAsEnum(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsEnum");
        
        UBTFunctionLibrary_GetBlackboardValueAsEnum_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06543270
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsClass
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UBTFunctionLibrary::STATIC_GetBlackboardValueAsClass(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsClass");
        
        UBTFunctionLibrary_GetBlackboardValueAsClass_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065429D0
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsBool
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTFunctionLibrary::STATIC_GetBlackboardValueAsBool(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsBool");
        
        UBTFunctionLibrary_GetBlackboardValueAsBool_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06543480
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsActor
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* UBTFunctionLibrary::STATIC_GetBlackboardValueAsActor(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.GetBlackboardValueAsActor");
        
        UBTFunctionLibrary_GetBlackboardValueAsActor_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06540300
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.ClearBlackboardValueAsVector
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_ClearBlackboardValueAsVector(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.ClearBlackboardValueAsVector");
        
        UBTFunctionLibrary_ClearBlackboardValueAsVector_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06540300
     *         Name   -> Function /Script/AIModule.BTFunctionLibrary.ClearBlackboardValue
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AIModule::UBTNode*                                 NodeOwner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::FBlackboardKeySelector                   Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTFunctionLibrary::STATIC_ClearBlackboardValue(AIModule::UBTNode* NodeOwner, const AIModule::FBlackboardKeySelector& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTFunctionLibrary.ClearBlackboardValue");
        
        UBTFunctionLibrary_ClearBlackboardValue_Params params {};
        params.NodeOwner = NodeOwner;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveTickAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveTickAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveTickAI");
        
        UBTDecorator_BlueprintBase_ReceiveTickAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveTick
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveTick(Engine::AActor* OwnerActor, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveTick");
        
        UBTDecorator_BlueprintBase_ReceiveTick_Params params {};
        params.OwnerActor = OwnerActor;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverDeactivatedAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveObserverDeactivatedAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverDeactivatedAI");
        
        UBTDecorator_BlueprintBase_ReceiveObserverDeactivatedAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverDeactivated
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveObserverDeactivated(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverDeactivated");
        
        UBTDecorator_BlueprintBase_ReceiveObserverDeactivated_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverActivatedAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveObserverActivatedAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverActivatedAI");
        
        UBTDecorator_BlueprintBase_ReceiveObserverActivatedAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverActivated
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveObserverActivated(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveObserverActivated");
        
        UBTDecorator_BlueprintBase_ReceiveObserverActivated_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionStartAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveExecutionStartAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionStartAI");
        
        UBTDecorator_BlueprintBase_ReceiveExecutionStartAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionStart
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveExecutionStart(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionStart");
        
        UBTDecorator_BlueprintBase_ReceiveExecutionStart_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionFinishAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EBTNodeResult                            NodeResult                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveExecutionFinishAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn, AIModule::EBTNodeResult NodeResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionFinishAI");
        
        UBTDecorator_BlueprintBase_ReceiveExecutionFinishAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        params.NodeResult = NodeResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionFinish
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EBTNodeResult                            NodeResult                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTDecorator_BlueprintBase::ReceiveExecutionFinish(Engine::AActor* OwnerActor, AIModule::EBTNodeResult NodeResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.ReceiveExecutionFinish");
        
        UBTDecorator_BlueprintBase_ReceiveExecutionFinish_Params params {};
        params.OwnerActor = OwnerActor;
        params.NodeResult = NodeResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.PerformConditionCheckAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTDecorator_BlueprintBase::PerformConditionCheckAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.PerformConditionCheckAI");
        
        UBTDecorator_BlueprintBase_PerformConditionCheckAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.PerformConditionCheck
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTDecorator_BlueprintBase::PerformConditionCheck(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.PerformConditionCheck");
        
        UBTDecorator_BlueprintBase_PerformConditionCheck_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06547610
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.IsDecoratorObserverActive
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTDecorator_BlueprintBase::IsDecoratorObserverActive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.IsDecoratorObserverActive");
        
        UBTDecorator_BlueprintBase_IsDecoratorObserverActive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065476A0
     *         Name   -> Function /Script/AIModule.BTDecorator_BlueprintBase.IsDecoratorExecutionActive
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTDecorator_BlueprintBase::IsDecoratorExecutionActive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTDecorator_BlueprintBase.IsDecoratorExecutionActive");
        
        UBTDecorator_BlueprintBase_IsDecoratorExecutionActive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A9740
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.SetLocalNavigationGridDensity
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CellSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavLocalGridManager::STATIC_SetLocalNavigationGridDensity(CoreUObject::UObject* WorldContextObject, float CellSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.SetLocalNavigationGridDensity");
        
        UNavLocalGridManager_SetLocalNavigationGridDensity_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CellSize = CellSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A7D90
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.RemoveLocalNavigationGrid
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            GridId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRebuildGrids                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UNavLocalGridManager::STATIC_RemoveLocalNavigationGrid(CoreUObject::UObject* WorldContextObject, int32_t GridId, bool bRebuildGrids)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.RemoveLocalNavigationGrid");
        
        UNavLocalGridManager_RemoveLocalNavigationGrid_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.GridId = GridId;
        params.bRebuildGrids = bRebuildGrids;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065A79B0
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.FindLocalNavigationGridPath
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Start                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               End                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           PathPoints                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UNavLocalGridManager::STATIC_FindLocalNavigationGridPath(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Start, const CoreUObject::FVector& End, BasicTypes::TArray<CoreUObject::FVector>* PathPoints)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.FindLocalNavigationGridPath");
        
        UNavLocalGridManager_FindLocalNavigationGridPath_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Start = Start;
        params.End = End;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PathPoints != nullptr)
            *PathPoints = params.PathPoints;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A8C60
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForPoints
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           Locations                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         int32_t                                            Radius2D                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Height                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRebuildGrids                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UNavLocalGridManager::STATIC_AddLocalNavigationGridForPoints(CoreUObject::UObject* WorldContextObject, BasicTypes::TArray<CoreUObject::FVector> Locations, int32_t Radius2D, float Height, bool bRebuildGrids)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForPoints");
        
        UNavLocalGridManager_AddLocalNavigationGridForPoints_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Locations = Locations;
        params.Radius2D = Radius2D;
        params.Height = Height;
        params.bRebuildGrids = bRebuildGrids;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A9240
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForPoint
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Radius2D                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Height                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRebuildGrids                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UNavLocalGridManager::STATIC_AddLocalNavigationGridForPoint(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Location, int32_t Radius2D, float Height, bool bRebuildGrids)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForPoint");
        
        UNavLocalGridManager_AddLocalNavigationGridForPoint_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Location = Location;
        params.Radius2D = Radius2D;
        params.Height = Height;
        params.bRebuildGrids = bRebuildGrids;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A8100
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForCapsule
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CapsuleRadius                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CapsuleHalfHeight                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Radius2D                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Height                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRebuildGrids                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UNavLocalGridManager::STATIC_AddLocalNavigationGridForCapsule(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Location, float CapsuleRadius, float CapsuleHalfHeight, int32_t Radius2D, float Height, bool bRebuildGrids)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForCapsule");
        
        UNavLocalGridManager_AddLocalNavigationGridForCapsule_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Location = Location;
        params.CapsuleRadius = CapsuleRadius;
        params.CapsuleHalfHeight = CapsuleHalfHeight;
        params.Radius2D = Radius2D;
        params.Height = Height;
        params.bRebuildGrids = bRebuildGrids;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065A87F0
     *         Name   -> Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForBox
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Extent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         int32_t                                            Radius2D                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Height                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRebuildGrids                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UNavLocalGridManager::STATIC_AddLocalNavigationGridForBox(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& Location, const CoreUObject::FVector& Extent, const CoreUObject::FRotator& Rotation, int32_t Radius2D, float Height, bool bRebuildGrids)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.NavLocalGridManager.AddLocalNavigationGridForBox");
        
        UNavLocalGridManager_AddLocalNavigationGridForBox_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Location = Location;
        params.Extent = Extent;
        params.Rotation = Rotation;
        params.Radius2D = Radius2D;
        params.Height = Height;
        params.bRebuildGrids = bRebuildGrids;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.OnUpdate
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         BasicTypes::TArray<AIModule::UAISenseEvent*>       EventsToProcess                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UAISense_Blueprint::OnUpdate(BasicTypes::TArray<AIModule::UAISenseEvent*> EventsToProcess)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.OnUpdate");
        
        UAISense_Blueprint_OnUpdate_Params params {};
        params.EventsToProcess = EventsToProcess;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.OnListenerUpdated
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    ActorListener                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAIPerceptionComponent*                  PerceptionComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Blueprint::OnListenerUpdated(Engine::AActor* ActorListener, AIModule::UAIPerceptionComponent* PerceptionComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.OnListenerUpdated");
        
        UAISense_Blueprint_OnListenerUpdated_Params params {};
        params.ActorListener = ActorListener;
        params.PerceptionComponent = PerceptionComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.OnListenerUnregistered
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    ActorListener                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAIPerceptionComponent*                  PerceptionComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Blueprint::OnListenerUnregistered(Engine::AActor* ActorListener, AIModule::UAIPerceptionComponent* PerceptionComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.OnListenerUnregistered");
        
        UAISense_Blueprint_OnListenerUnregistered_Params params {};
        params.ActorListener = ActorListener;
        params.PerceptionComponent = PerceptionComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.OnListenerRegistered
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    ActorListener                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAIPerceptionComponent*                  PerceptionComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Blueprint::OnListenerRegistered(Engine::AActor* ActorListener, AIModule::UAIPerceptionComponent* PerceptionComponent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.OnListenerRegistered");
        
        UAISense_Blueprint_OnListenerRegistered_Params params {};
        params.ActorListener = ActorListener;
        params.PerceptionComponent = PerceptionComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.K2_OnNewPawn
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::APawn*                                     NewPawn                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Blueprint::K2_OnNewPawn(Engine::APawn* NewPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.K2_OnNewPawn");
        
        UAISense_Blueprint_K2_OnNewPawn_Params params {};
        params.NewPawn = NewPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065C0FF0
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.GetAllListenerComponents
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<AIModule::UAIPerceptionComponent*> ListenerComponents                                         (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Blueprint::GetAllListenerComponents(BasicTypes::TArray<AIModule::UAIPerceptionComponent*>* ListenerComponents)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.GetAllListenerComponents");
        
        UAISense_Blueprint_GetAllListenerComponents_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ListenerComponents != nullptr)
            *ListenerComponents = params.ListenerComponents;
    }

    /**
     * Function:
     *         RVA    -> 0x065C1140
     *         Name   -> Function /Script/AIModule.AISense_Blueprint.GetAllListenerActors
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::AActor*>                ListenerActors                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Blueprint::GetAllListenerActors(BasicTypes::TArray<Engine::AActor*>* ListenerActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Blueprint.GetAllListenerActors");
        
        UAISense_Blueprint_GetAllListenerActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ListenerActors != nullptr)
            *ListenerActors = params.ListenerActors;
    }

    /**
     * Function:
     *         RVA    -> 0x065C1F60
     *         Name   -> Function /Script/AIModule.AISense_Damage.ReportDamageEvent
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    DamagedActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Instigator                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DamageAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               EventLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Damage::STATIC_ReportDamageEvent(CoreUObject::UObject* WorldContextObject, Engine::AActor* DamagedActor, Engine::AActor* Instigator, float DamageAmount, const CoreUObject::FVector& EventLocation, const CoreUObject::FVector& HitLocation, const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Damage.ReportDamageEvent");
        
        UAISense_Damage_ReportDamageEvent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.DamagedActor = DamagedActor;
        params.Instigator = Instigator;
        params.DamageAmount = DamageAmount;
        params.EventLocation = EventLocation;
        params.HitLocation = HitLocation;
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065C2F30
     *         Name   -> Function /Script/AIModule.AISense_Hearing.ReportNoiseEvent
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               NoiseLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Loudness                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Instigator                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              MaxRange                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Hearing::STATIC_ReportNoiseEvent(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector& NoiseLocation, float Loudness, Engine::AActor* Instigator, float MaxRange, const BasicTypes::FName& Tag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Hearing.ReportNoiseEvent");
        
        UAISense_Hearing_ReportNoiseEvent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.NoiseLocation = NoiseLocation;
        params.Loudness = Loudness;
        params.Instigator = Instigator;
        params.MaxRange = MaxRange;
        params.Tag = Tag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065C45C0
     *         Name   -> Function /Script/AIModule.AISense_Prediction.RequestPawnPredictionEvent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APawn*                                     Requestor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    PredictedActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PredictionTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Prediction::STATIC_RequestPawnPredictionEvent(Engine::APawn* Requestor, Engine::AActor* PredictedActor, float PredictionTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Prediction.RequestPawnPredictionEvent");
        
        UAISense_Prediction_RequestPawnPredictionEvent_Params params {};
        params.Requestor = Requestor;
        params.PredictedActor = PredictedActor;
        params.PredictionTime = PredictionTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065C4910
     *         Name   -> Function /Script/AIModule.AISense_Prediction.RequestControllerPredictionEvent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::AAIController*                           Requestor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    PredictedActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PredictionTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Prediction::STATIC_RequestControllerPredictionEvent(AIModule::AAIController* Requestor, Engine::AActor* PredictedActor, float PredictionTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Prediction.RequestControllerPredictionEvent");
        
        UAISense_Prediction_RequestControllerPredictionEvent_Params params {};
        params.Requestor = Requestor;
        params.PredictedActor = PredictedActor;
        params.PredictionTime = PredictionTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065C9C40
     *         Name   -> Function /Script/AIModule.AISense_Touch.ReportTouchEvent
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    TouchReceiver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    OtherActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAISense_Touch::STATIC_ReportTouchEvent(CoreUObject::UObject* WorldContextObject, Engine::AActor* TouchReceiver, Engine::AActor* OtherActor, const CoreUObject::FVector& Location)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISense_Touch.ReportTouchEvent");
        
        UAISense_Touch_ReportTouchEvent_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.TouchReceiver = TouchReceiver;
        params.OtherActor = OtherActor;
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveTickAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveTickAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveTickAI");
        
        UBTService_BlueprintBase_ReceiveTickAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveTick
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveTick(Engine::AActor* OwnerActor, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveTick");
        
        UBTService_BlueprintBase_ReceiveTick_Params params {};
        params.OwnerActor = OwnerActor;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveSearchStartAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveSearchStartAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveSearchStartAI");
        
        UBTService_BlueprintBase_ReceiveSearchStartAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveSearchStart
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveSearchStart(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveSearchStart");
        
        UBTService_BlueprintBase_ReceiveSearchStart_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveDeactivationAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveDeactivationAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveDeactivationAI");
        
        UBTService_BlueprintBase_ReceiveDeactivationAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveDeactivation
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveDeactivation(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveDeactivation");
        
        UBTService_BlueprintBase_ReceiveDeactivation_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveActivationAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveActivationAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveActivationAI");
        
        UBTService_BlueprintBase_ReceiveActivationAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.ReceiveActivation
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTService_BlueprintBase::ReceiveActivation(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.ReceiveActivation");
        
        UBTService_BlueprintBase_ReceiveActivation_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065562E0
     *         Name   -> Function /Script/AIModule.BTService_BlueprintBase.IsServiceActive
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTService_BlueprintBase::IsServiceActive()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTService_BlueprintBase.IsServiceActive");
        
        UBTService_BlueprintBase_IsServiceActive_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06559480
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.SetFinishOnMessageWithId
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  MessageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            RequestID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::SetFinishOnMessageWithId(const BasicTypes::FName& MessageName, int32_t RequestID)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.SetFinishOnMessageWithId");
        
        UBTTask_BlueprintBase_SetFinishOnMessageWithId_Params params {};
        params.MessageName = MessageName;
        params.RequestID = RequestID;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06559640
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.SetFinishOnMessage
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  MessageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::SetFinishOnMessage(const BasicTypes::FName& MessageName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.SetFinishOnMessage");
        
        UBTTask_BlueprintBase_SetFinishOnMessage_Params params {};
        params.MessageName = MessageName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.ReceiveTickAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::ReceiveTickAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.ReceiveTickAI");
        
        UBTTask_BlueprintBase_ReceiveTickAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.ReceiveTick
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::ReceiveTick(Engine::AActor* OwnerActor, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.ReceiveTick");
        
        UBTTask_BlueprintBase_ReceiveTick_Params params {};
        params.OwnerActor = OwnerActor;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.ReceiveExecuteAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::ReceiveExecuteAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.ReceiveExecuteAI");
        
        UBTTask_BlueprintBase_ReceiveExecuteAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.ReceiveExecute
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::ReceiveExecute(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.ReceiveExecute");
        
        UBTTask_BlueprintBase_ReceiveExecute_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.ReceiveAbortAI
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         AIModule::AAIController*                           OwnerController                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::ReceiveAbortAI(AIModule::AAIController* OwnerController, Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.ReceiveAbortAI");
        
        UBTTask_BlueprintBase_ReceiveAbortAI_Params params {};
        params.OwnerController = OwnerController;
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.ReceiveAbort
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         Engine::AActor*                                    OwnerActor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::ReceiveAbort(Engine::AActor* OwnerActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.ReceiveAbort");
        
        UBTTask_BlueprintBase_ReceiveAbort_Params params {};
        params.OwnerActor = OwnerActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06559400
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.IsTaskExecuting
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTTask_BlueprintBase::IsTaskExecuting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.IsTaskExecuting");
        
        UBTTask_BlueprintBase_IsTaskExecuting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065593D0
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.IsTaskAborting
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBTTask_BlueprintBase::IsTaskAborting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.IsTaskAborting");
        
        UBTTask_BlueprintBase_IsTaskAborting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06559800
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.FinishExecute
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::FinishExecute(bool bSuccess)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.FinishExecute");
        
        UBTTask_BlueprintBase_FinishExecute_Params params {};
        params.bSuccess = bSuccess;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06559760
     *         Name   -> Function /Script/AIModule.BTTask_BlueprintBase.FinishAbort
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UBTTask_BlueprintBase::FinishAbort()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BTTask_BlueprintBase.FinishAbort");
        
        UBTTask_BlueprintBase_FinishAbort_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02C8EBD0
     *         Name   -> Function /Script/AIModule.PawnSensingComponent.SetSensingUpdatesEnabled
     *         Flags  -> (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bEnabled                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnSensingComponent::SetSensingUpdatesEnabled(bool bEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnSensingComponent.SetSensingUpdatesEnabled");
        
        UPawnSensingComponent_SetSensingUpdatesEnabled_Params params {};
        params.bEnabled = bEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065CA6C0
     *         Name   -> Function /Script/AIModule.PawnSensingComponent.SetSensingInterval
     *         Flags  -> (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewSensingInterval                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnSensingComponent::SetSensingInterval(float NewSensingInterval)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnSensingComponent.SetSensingInterval");
        
        UPawnSensingComponent_SetSensingInterval_Params params {};
        params.NewSensingInterval = NewSensingInterval;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065CA5D0
     *         Name   -> Function /Script/AIModule.PawnSensingComponent.SetPeripheralVisionAngle
     *         Flags  -> (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewPeripheralVisionAngle                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnSensingComponent::SetPeripheralVisionAngle(float NewPeripheralVisionAngle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnSensingComponent.SetPeripheralVisionAngle");
        
        UPawnSensingComponent_SetPeripheralVisionAngle_Params params {};
        params.NewPeripheralVisionAngle = NewPeripheralVisionAngle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AIModule.PawnSensingComponent.SeePawnDelegate__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         Engine::APawn*                                     Pawn                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnSensingComponent::SeePawnDelegate__DelegateSignature(Engine::APawn* Pawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AIModule.PawnSensingComponent.SeePawnDelegate__DelegateSignature");
        
        UPawnSensingComponent_SeePawnDelegate__DelegateSignature_Params params {};
        params.Pawn = Pawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AIModule.PawnSensingComponent.HearNoiseDelegate__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms, HasDefaults)
     * Parameters:
     *         Engine::APawn*                                     Instigator                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnSensingComponent::HearNoiseDelegate__DelegateSignature(Engine::APawn* Instigator, const CoreUObject::FVector& Location, float Volume)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AIModule.PawnSensingComponent.HearNoiseDelegate__DelegateSignature");
        
        UPawnSensingComponent_HearNoiseDelegate__DelegateSignature_Params params {};
        params.Instigator = Instigator;
        params.Location = Location;
        params.Volume = Volume;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02A38010
     *         Name   -> Function /Script/AIModule.PawnSensingComponent.GetPeripheralVisionCosine
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UPawnSensingComponent::GetPeripheralVisionCosine()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnSensingComponent.GetPeripheralVisionCosine");
        
        UPawnSensingComponent_GetPeripheralVisionCosine_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02BA4B40
     *         Name   -> Function /Script/AIModule.PawnSensingComponent.GetPeripheralVisionAngle
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UPawnSensingComponent::GetPeripheralVisionAngle()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnSensingComponent.GetPeripheralVisionAngle");
        
        UPawnSensingComponent_GetPeripheralVisionAngle_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065CE2A0
     *         Name   -> Function /Script/AIModule.AITask_RunEQS.RunEQS
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::AAIController*                           Controller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UEnvQuery*                               QueryTemplate                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAITask_RunEQS*                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UAITask_RunEQS* UAITask_RunEQS::STATIC_RunEQS(AIModule::AAIController* Controller, AIModule::UEnvQuery* QueryTemplate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AITask_RunEQS.RunEQS");
        
        UAITask_RunEQS_RunEQS_Params params {};
        params.Controller = Controller;
        params.QueryTemplate = QueryTemplate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065151C0
     *         Name   -> Function /Script/AIModule.AIAsyncTaskBlueprintProxy.OnMoveCompleted
     *         Flags  -> (Final, Native, Public)
     * Parameters:
     *         AIModule::FAIRequestID                             RequestID                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         AIModule::EPathFollowingResult                     MovementResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIAsyncTaskBlueprintProxy::OnMoveCompleted(const AIModule::FAIRequestID& RequestID, AIModule::EPathFollowingResult MovementResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIAsyncTaskBlueprintProxy.OnMoveCompleted");
        
        UAIAsyncTaskBlueprintProxy_OnMoveCompleted_Params params {};
        params.RequestID = RequestID;
        params.MovementResult = MovementResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06562CB0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.UnlockAIResourcesWithAnimation
     *         Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UAnimInstance*                             AnimInstance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bUnlockMovement                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               UnlockAILogic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIBlueprintHelperLibrary::STATIC_UnlockAIResourcesWithAnimation(Engine::UAnimInstance* AnimInstance, bool bUnlockMovement, bool UnlockAILogic)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.UnlockAIResourcesWithAnimation");
        
        UAIBlueprintHelperLibrary_UnlockAIResourcesWithAnimation_Params params {};
        params.AnimInstance = AnimInstance;
        params.bUnlockMovement = bUnlockMovement;
        params.UnlockAILogic = UnlockAILogic;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06563490
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.SpawnAIFromClass
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     PawnClass                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBehaviorTree*                           BehaviorTree                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               bNoCollisionFail                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Owner                                                      (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::APawn* UAIBlueprintHelperLibrary::STATIC_SpawnAIFromClass(CoreUObject::UObject* WorldContextObject, Engine::APawn* PawnClass, AIModule::UBehaviorTree* BehaviorTree, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Rotation, bool bNoCollisionFail, Engine::AActor* Owner)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.SpawnAIFromClass");
        
        UAIBlueprintHelperLibrary_SpawnAIFromClass_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PawnClass = PawnClass;
        params.BehaviorTree = BehaviorTree;
        params.Location = Location;
        params.Rotation = Rotation;
        params.bNoCollisionFail = bNoCollisionFail;
        params.Owner = Owner;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06561FB0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.SimpleMoveToLocation
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Goal                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIBlueprintHelperLibrary::STATIC_SimpleMoveToLocation(Engine::AController* Controller, const CoreUObject::FVector& Goal)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.SimpleMoveToLocation");
        
        UAIBlueprintHelperLibrary_SimpleMoveToLocation_Params params {};
        params.Controller = Controller;
        params.Goal = Goal;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06562130
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.SimpleMoveToActor
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    Goal                                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIBlueprintHelperLibrary::STATIC_SimpleMoveToActor(Engine::AController* Controller, Engine::AActor* Goal)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.SimpleMoveToActor");
        
        UAIBlueprintHelperLibrary_SimpleMoveToActor_Params params {};
        params.Controller = Controller;
        params.Goal = Goal;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065638F0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.SendAIMessage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APawn*                                     Target                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Message                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              MessageSource                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIBlueprintHelperLibrary::STATIC_SendAIMessage(Engine::APawn* Target, const BasicTypes::FName& Message, CoreUObject::UObject* MessageSource, bool bSuccess)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.SendAIMessage");
        
        UAIBlueprintHelperLibrary_SendAIMessage_Params params {};
        params.Target = Target;
        params.Message = Message;
        params.MessageSource = MessageSource;
        params.bSuccess = bSuccess;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06562F50
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.LockAIResourcesWithAnimation
     *         Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UAnimInstance*                             AnimInstance                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLockMovement                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               LockAILogic                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAIBlueprintHelperLibrary::STATIC_LockAIResourcesWithAnimation(Engine::UAnimInstance* AnimInstance, bool bLockMovement, bool LockAILogic)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.LockAIResourcesWithAnimation");
        
        UAIBlueprintHelperLibrary_LockAIResourcesWithAnimation_Params params {};
        params.AnimInstance = AnimInstance;
        params.bLockMovement = bLockMovement;
        params.LockAILogic = LockAILogic;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065628F0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.IsValidAIRotation
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAIBlueprintHelperLibrary::STATIC_IsValidAIRotation(const CoreUObject::FRotator& Rotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.IsValidAIRotation");
        
        UAIBlueprintHelperLibrary_IsValidAIRotation_Params params {};
        params.Rotation = Rotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06562B60
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.IsValidAILocation
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAIBlueprintHelperLibrary::STATIC_IsValidAILocation(const CoreUObject::FVector& Location)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.IsValidAILocation");
        
        UAIBlueprintHelperLibrary_IsValidAILocation_Params params {};
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06562A00
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.IsValidAIDirection
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FVector                               DirectionVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAIBlueprintHelperLibrary::STATIC_IsValidAIDirection(const CoreUObject::FVector& DirectionVector)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.IsValidAIDirection");
        
        UAIBlueprintHelperLibrary_IsValidAIDirection_Params params {};
        params.DirectionVector = DirectionVector;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065622A0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.GetNextNavLinkIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::AController*                               Controller                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAIBlueprintHelperLibrary::STATIC_GetNextNavLinkIndex(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.GetNextNavLinkIndex");
        
        UAIBlueprintHelperLibrary_GetNextNavLinkIndex_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06562600
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.GetCurrentPathPoints
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> UAIBlueprintHelperLibrary::STATIC_GetCurrentPathPoints(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.GetCurrentPathPoints");
        
        UAIBlueprintHelperLibrary_GetCurrentPathPoints_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065624B0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.GetCurrentPathIndex
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::AController*                               Controller                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAIBlueprintHelperLibrary::STATIC_GetCurrentPathIndex(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.GetCurrentPathIndex");
        
        UAIBlueprintHelperLibrary_GetCurrentPathIndex_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06562710
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.GetCurrentPath
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::AController*                               Controller                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         NavigationSystem::UNavigationPath*                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    NavigationSystem::UNavigationPath* UAIBlueprintHelperLibrary::STATIC_GetCurrentPath(Engine::AController* Controller)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.GetCurrentPath");
        
        UAIBlueprintHelperLibrary_GetCurrentPath_Params params {};
        params.Controller = Controller;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065631F0
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.GetBlackboard
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::AActor*                                    Target                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBlackboardComponent*                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UBlackboardComponent* UAIBlueprintHelperLibrary::STATIC_GetBlackboard(Engine::AActor* Target)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.GetBlackboard");
        
        UAIBlueprintHelperLibrary_GetBlackboard_Params params {};
        params.Target = Target;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06563350
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.GetAIController
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::AActor*                                    ControlledActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::AAIController*                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::AAIController* UAIBlueprintHelperLibrary::STATIC_GetAIController(Engine::AActor* ControlledActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.GetAIController");
        
        UAIBlueprintHelperLibrary_GetAIController_Params params {};
        params.ControlledActor = ControlledActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06563C20
     *         Name   -> Function /Script/AIModule.AIBlueprintHelperLibrary.CreateMoveToProxyObject
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APawn*                                     Pawn                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               Destination                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    TargetActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              AcceptanceRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bStopOnOverlap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UAIAsyncTaskBlueprintProxy*              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UAIAsyncTaskBlueprintProxy* UAIBlueprintHelperLibrary::STATIC_CreateMoveToProxyObject(CoreUObject::UObject* WorldContextObject, Engine::APawn* Pawn, const CoreUObject::FVector& Destination, Engine::AActor* TargetActor, float AcceptanceRadius, bool bStopOnOverlap)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AIBlueprintHelperLibrary.CreateMoveToProxyObject");
        
        UAIBlueprintHelperLibrary_CreateMoveToProxyObject_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Pawn = Pawn;
        params.Destination = Destination;
        params.TargetActor = TargetActor;
        params.AcceptanceRadius = AcceptanceRadius;
        params.bStopOnOverlap = bStopOnOverlap;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideSingleLocation
     *         Flags  -> (Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
     * Parameters:
     *         CoreUObject::UObject*                              QuerierObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    QuerierActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ResultingLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryContext_BlueprintBase::ProvideSingleLocation(CoreUObject::UObject* QuerierObject, Engine::AActor* QuerierActor, CoreUObject::FVector* ResultingLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideSingleLocation");
        
        UEnvQueryContext_BlueprintBase_ProvideSingleLocation_Params params {};
        params.QuerierObject = QuerierObject;
        params.QuerierActor = QuerierActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultingLocation != nullptr)
            *ResultingLocation = params.ResultingLocation;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideSingleActor
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         CoreUObject::UObject*                              QuerierObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    QuerierActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ResultingActor                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryContext_BlueprintBase::ProvideSingleActor(CoreUObject::UObject* QuerierObject, Engine::AActor* QuerierActor, Engine::AActor** ResultingActor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideSingleActor");
        
        UEnvQueryContext_BlueprintBase_ProvideSingleActor_Params params {};
        params.QuerierObject = QuerierObject;
        params.QuerierActor = QuerierActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultingActor != nullptr)
            *ResultingActor = params.ResultingActor;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideLocationsSet
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         CoreUObject::UObject*                              QuerierObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    QuerierActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector>           ResultingLocationSet                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryContext_BlueprintBase::ProvideLocationsSet(CoreUObject::UObject* QuerierObject, Engine::AActor* QuerierActor, BasicTypes::TArray<CoreUObject::FVector>* ResultingLocationSet)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideLocationsSet");
        
        UEnvQueryContext_BlueprintBase_ProvideLocationsSet_Params params {};
        params.QuerierObject = QuerierObject;
        params.QuerierActor = QuerierActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultingLocationSet != nullptr)
            *ResultingLocationSet = params.ResultingLocationSet;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideActorsSet
     *         Flags  -> (Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         CoreUObject::UObject*                              QuerierObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    QuerierActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<Engine::AActor*>                ResultingActorsSet                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryContext_BlueprintBase::ProvideActorsSet(CoreUObject::UObject* QuerierObject, Engine::AActor* QuerierActor, BasicTypes::TArray<Engine::AActor*>* ResultingActorsSet)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryContext_BlueprintBase.ProvideActorsSet");
        
        UEnvQueryContext_BlueprintBase_ProvideActorsSet_Params params {};
        params.QuerierObject = QuerierObject;
        params.QuerierActor = QuerierActor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultingActorsSet != nullptr)
            *ResultingActorsSet = params.ResultingActorsSet;
    }

    /**
     * Function:
     *         RVA    -> 0x0656C9A0
     *         Name   -> Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.SetNamedParam
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ParamName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryInstanceBlueprintWrapper::SetNamedParam(const BasicTypes::FName& ParamName, float Value)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.SetNamedParam");
        
        UEnvQueryInstanceBlueprintWrapper_SetNamedParam_Params params {};
        params.ParamName = ParamName;
        params.Value = Value;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0656CB80
     *         Name   -> Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetResultsAsLocations
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::FVector> UEnvQueryInstanceBlueprintWrapper::GetResultsAsLocations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetResultsAsLocations");
        
        UEnvQueryInstanceBlueprintWrapper_GetResultsAsLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0656CC60
     *         Name   -> Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetResultsAsActors
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::AActor*>                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<Engine::AActor*> UEnvQueryInstanceBlueprintWrapper::GetResultsAsActors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetResultsAsActors");
        
        UEnvQueryInstanceBlueprintWrapper_GetResultsAsActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0656CDD0
     *         Name   -> Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetQueryResultsAsLocations
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::FVector>           ResultLocations                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEnvQueryInstanceBlueprintWrapper::GetQueryResultsAsLocations(BasicTypes::TArray<CoreUObject::FVector>* ResultLocations)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetQueryResultsAsLocations");
        
        UEnvQueryInstanceBlueprintWrapper_GetQueryResultsAsLocations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultLocations != nullptr)
            *ResultLocations = params.ResultLocations;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0656CF70
     *         Name   -> Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetQueryResultsAsActors
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<Engine::AActor*>                ResultActors                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEnvQueryInstanceBlueprintWrapper::GetQueryResultsAsActors(BasicTypes::TArray<Engine::AActor*>* ResultActors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetQueryResultsAsActors");
        
        UEnvQueryInstanceBlueprintWrapper_GetQueryResultsAsActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultActors != nullptr)
            *ResultActors = params.ResultActors;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0656D080
     *         Name   -> Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetItemScore
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ItemIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UEnvQueryInstanceBlueprintWrapper::GetItemScore(int32_t ItemIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryInstanceBlueprintWrapper.GetItemScore");
        
        UEnvQueryInstanceBlueprintWrapper_GetItemScore_Params params {};
        params.ItemIndex = ItemIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> DelegateFunction /Script/AIModule.EnvQueryInstanceBlueprintWrapper.EQSQueryDoneSignature__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         AIModule::UEnvQueryInstanceBlueprintWrapper*       QueryInstance                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EEnvQueryStatus                          QueryStatus                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEnvQueryInstanceBlueprintWrapper::EQSQueryDoneSignature__DelegateSignature(AIModule::UEnvQueryInstanceBlueprintWrapper* QueryInstance, AIModule::EEnvQueryStatus QueryStatus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/AIModule.EnvQueryInstanceBlueprintWrapper.EQSQueryDoneSignature__DelegateSignature");
        
        UEnvQueryInstanceBlueprintWrapper_EQSQueryDoneSignature__DelegateSignature_Params params {};
        params.QueryInstance = QueryInstance;
        params.QueryStatus = QueryStatus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0656E050
     *         Name   -> Function /Script/AIModule.EnvQueryManager.RunEQSQuery
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UEnvQuery*                               QueryTemplate                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Querier                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EEnvQueryRunMode                         RunMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UEnvQueryInstanceBlueprintWrapper*       WrapperClass                                               (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UEnvQueryInstanceBlueprintWrapper*       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UEnvQueryInstanceBlueprintWrapper* UEnvQueryManager::STATIC_RunEQSQuery(CoreUObject::UObject* WorldContextObject, AIModule::UEnvQuery* QueryTemplate, CoreUObject::UObject* Querier, AIModule::EEnvQueryRunMode RunMode, AIModule::UEnvQueryInstanceBlueprintWrapper* WrapperClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.EnvQueryManager.RunEQSQuery");
        
        UEnvQueryManager_RunEQSQuery_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.QueryTemplate = QueryTemplate;
        params.Querier = Querier;
        params.RunMode = RunMode;
        params.WrapperClass = WrapperClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02D56460
     *         Name   -> Function /Script/AIModule.PawnAction.GetActionPriority
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AIModule::EAIRequestPriority                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EAIRequestPriority UPawnAction::GetActionPriority()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction.GetActionPriority");
        
        UPawnAction_GetActionPriority_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651A2F0
     *         Name   -> Function /Script/AIModule.PawnAction.Finish
     *         Flags  -> (Native, Protected, BlueprintCallable)
     * Parameters:
     *         AIModule::EPawnActionResult                        WithResult                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnAction::Finish(AIModule::EPawnActionResult WithResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction.Finish");
        
        UPawnAction_Finish_Params params {};
        params.WithResult = WithResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0651A3E0
     *         Name   -> Function /Script/AIModule.PawnAction.CreateActionInstance
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UPawnAction*                             ActionClass                                                (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UPawnAction*                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UPawnAction* UPawnAction::STATIC_CreateActionInstance(CoreUObject::UObject* WorldContextObject, AIModule::UPawnAction* ActionClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction.CreateActionInstance");
        
        UPawnAction_CreateActionInstance_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ActionClass = ActionClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651B740
     *         Name   -> Function /Script/AIModule.PawnActionsComponent.K2_PushAction
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UPawnAction*                             NewAction                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EAIRequestPriority                       Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              Instigator                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UPawnActionsComponent::K2_PushAction(AIModule::UPawnAction* NewAction, AIModule::EAIRequestPriority Priority, CoreUObject::UObject* Instigator)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnActionsComponent.K2_PushAction");
        
        UPawnActionsComponent_K2_PushAction_Params params {};
        params.NewAction = NewAction;
        params.Priority = Priority;
        params.Instigator = Instigator;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651B990
     *         Name   -> Function /Script/AIModule.PawnActionsComponent.K2_PerformAction
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APawn*                                     Pawn                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UPawnAction*                             Action                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EAIRequestPriority                       Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UPawnActionsComponent::STATIC_K2_PerformAction(Engine::APawn* Pawn, AIModule::UPawnAction* Action, AIModule::EAIRequestPriority Priority)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnActionsComponent.K2_PerformAction");
        
        UPawnActionsComponent_K2_PerformAction_Params params {};
        params.Pawn = Pawn;
        params.Action = Action;
        params.Priority = Priority;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651B4E0
     *         Name   -> Function /Script/AIModule.PawnActionsComponent.K2_ForceAbortAction
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UPawnAction*                             ActionToAbort                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EPawnActionAbortState                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EPawnActionAbortState UPawnActionsComponent::K2_ForceAbortAction(AIModule::UPawnAction* ActionToAbort)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnActionsComponent.K2_ForceAbortAction");
        
        UPawnActionsComponent_K2_ForceAbortAction_Params params {};
        params.ActionToAbort = ActionToAbort;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0651B630
     *         Name   -> Function /Script/AIModule.PawnActionsComponent.K2_AbortAction
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         AIModule::UPawnAction*                             ActionToAbort                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EPawnActionAbortState                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::EPawnActionAbortState UPawnActionsComponent::K2_AbortAction(AIModule::UPawnAction* ActionToAbort)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnActionsComponent.K2_AbortAction");
        
        UPawnActionsComponent_K2_AbortAction_Params params {};
        params.ActionToAbort = ActionToAbort;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.PawnAction_BlueprintBase.ActionTick
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnAction_BlueprintBase::ActionTick(Engine::APawn* ControlledPawn, float DeltaSeconds)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction_BlueprintBase.ActionTick");
        
        UPawnAction_BlueprintBase_ActionTick_Params params {};
        params.ControlledPawn = ControlledPawn;
        params.DeltaSeconds = DeltaSeconds;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.PawnAction_BlueprintBase.ActionStart
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnAction_BlueprintBase::ActionStart(Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction_BlueprintBase.ActionStart");
        
        UPawnAction_BlueprintBase_ActionStart_Params params {};
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.PawnAction_BlueprintBase.ActionResume
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnAction_BlueprintBase::ActionResume(Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction_BlueprintBase.ActionResume");
        
        UPawnAction_BlueprintBase_ActionResume_Params params {};
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.PawnAction_BlueprintBase.ActionPause
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnAction_BlueprintBase::ActionPause(Engine::APawn* ControlledPawn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction_BlueprintBase.ActionPause");
        
        UPawnAction_BlueprintBase_ActionPause_Params params {};
        params.ControlledPawn = ControlledPawn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x03A3F420
     *         Name   -> Function /Script/AIModule.PawnAction_BlueprintBase.ActionFinished
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         Engine::APawn*                                     ControlledPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::EPawnActionResult                        WithResult                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UPawnAction_BlueprintBase::ActionFinished(Engine::APawn* ControlledPawn, AIModule::EPawnActionResult WithResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.PawnAction_BlueprintBase.ActionFinished");
        
        UPawnAction_BlueprintBase_ActionFinished_Params params {};
        params.ControlledPawn = ControlledPawn;
        params.WithResult = WithResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02AD4C00
     *         Name   -> Function /Script/AIModule.AISystem.AILoggingVerbose
     *         Flags  -> (Exec, Native, Public)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAISystem::AILoggingVerbose()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISystem.AILoggingVerbose");
        
        UAISystem_AILoggingVerbose_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x015FAC10
     *         Name   -> Function /Script/AIModule.AISystem.AIIgnorePlayers
     *         Flags  -> (Exec, Native, Public)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAISystem::AIIgnorePlayers()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.AISystem.AIIgnorePlayers");
        
        UAISystem_AIIgnorePlayers_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06566F40
     *         Name   -> Function /Script/AIModule.BrainComponent.StopLogic
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBrainComponent::StopLogic(const BasicTypes::FString& Reason)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BrainComponent.StopLogic");
        
        UBrainComponent_StopLogic_Params params {};
        params.Reason = Reason;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02B1DB70
     *         Name   -> Function /Script/AIModule.BrainComponent.StartLogic
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UBrainComponent::StartLogic()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BrainComponent.StartLogic");
        
        UBrainComponent_StartLogic_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02ABA450
     *         Name   -> Function /Script/AIModule.BrainComponent.RestartLogic
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UBrainComponent::RestartLogic()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BrainComponent.RestartLogic");
        
        UBrainComponent_RestartLogic_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06566F10
     *         Name   -> Function /Script/AIModule.BrainComponent.IsRunning
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBrainComponent::IsRunning()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BrainComponent.IsRunning");
        
        UBrainComponent_IsRunning_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06566EE0
     *         Name   -> Function /Script/AIModule.BrainComponent.IsPaused
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBrainComponent::IsPaused()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BrainComponent.IsPaused");
        
        UBrainComponent_IsPaused_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06529800
     *         Name   -> Function /Script/AIModule.BehaviorTreeComponent.SetDynamicSubtree
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         GameplayTags::FGameplayTag                         InjectTag                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         AIModule::UBehaviorTree*                           BehaviorAsset                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBehaviorTreeComponent::SetDynamicSubtree(const GameplayTags::FGameplayTag& InjectTag, AIModule::UBehaviorTree* BehaviorAsset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BehaviorTreeComponent.SetDynamicSubtree");
        
        UBehaviorTreeComponent_SetDynamicSubtree_Params params {};
        params.InjectTag = InjectTag;
        params.BehaviorAsset = BehaviorAsset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06529BB0
     *         Name   -> Function /Script/AIModule.BehaviorTreeComponent.GetTagCooldownEndTime
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         GameplayTags::FGameplayTag                         CooldownTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         double                                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    double UBehaviorTreeComponent::GetTagCooldownEndTime(const GameplayTags::FGameplayTag& CooldownTag)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BehaviorTreeComponent.GetTagCooldownEndTime");
        
        UBehaviorTreeComponent_GetTagCooldownEndTime_Params params {};
        params.CooldownTag = CooldownTag;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06529990
     *         Name   -> Function /Script/AIModule.BehaviorTreeComponent.AddCooldownTagDuration
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         GameplayTags::FGameplayTag                         CooldownTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              CooldownDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAddToExistingDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBehaviorTreeComponent::AddCooldownTagDuration(const GameplayTags::FGameplayTag& CooldownTag, float CooldownDuration, bool bAddToExistingDuration)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BehaviorTreeComponent.AddCooldownTagDuration");
        
        UBehaviorTreeComponent_AddCooldownTagDuration_Params params {};
        params.CooldownTag = CooldownTag;
        params.CooldownDuration = CooldownDuration;
        params.bAddToExistingDuration = bAddToExistingDuration;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06534040
     *         Name   -> Function /Script/AIModule.BlackboardAssetProvider.GetBlackboardAsset
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         AIModule::UBlackboardData*                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AIModule::UBlackboardData* IBlackboardAssetProvider::GetBlackboardAsset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardAssetProvider.GetBlackboardAsset");
        
        IBlackboardAssetProvider_GetBlackboardAsset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06534860
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsVector
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               VectorValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsVector(const BasicTypes::FName& KeyName, const CoreUObject::FVector& VectorValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsVector");
        
        UBlackboardComponent_SetValueAsVector_Params params {};
        params.KeyName = KeyName;
        params.VectorValue = VectorValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06534BB0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsString
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StringValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsString(const BasicTypes::FName& KeyName, const BasicTypes::FString& StringValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsString");
        
        UBlackboardComponent_SetValueAsString_Params params {};
        params.KeyName = KeyName;
        params.StringValue = StringValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065346B0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsRotator
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              VectorValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsRotator(const BasicTypes::FName& KeyName, const CoreUObject::FRotator& VectorValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsRotator");
        
        UBlackboardComponent_SetValueAsRotator_Params params {};
        params.KeyName = KeyName;
        params.VectorValue = VectorValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065355F0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsObject
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ObjectValue                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsObject(const BasicTypes::FName& KeyName, CoreUObject::UObject* ObjectValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsObject");
        
        UBlackboardComponent_SetValueAsObject_Params params {};
        params.KeyName = KeyName;
        params.ObjectValue = ObjectValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06534A10
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsName
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  NameValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsName(const BasicTypes::FName& KeyName, const BasicTypes::FName& NameValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsName");
        
        UBlackboardComponent_SetValueAsName_Params params {};
        params.KeyName = KeyName;
        params.NameValue = NameValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06535110
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsInt
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            IntValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsInt(const BasicTypes::FName& KeyName, int32_t IntValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsInt");
        
        UBlackboardComponent_SetValueAsInt_Params params {};
        params.KeyName = KeyName;
        params.IntValue = IntValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06534F70
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsFloat
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              FloatValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsFloat(const BasicTypes::FName& KeyName, float FloatValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsFloat");
        
        UBlackboardComponent_SetValueAsFloat_Params params {};
        params.KeyName = KeyName;
        params.FloatValue = FloatValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x065352B0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsEnum
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            EnumValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsEnum(const BasicTypes::FName& KeyName, uint8_t EnumValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsEnum");
        
        UBlackboardComponent_SetValueAsEnum_Params params {};
        params.KeyName = KeyName;
        params.EnumValue = EnumValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06535450
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsClass
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ClassValue                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsClass(const BasicTypes::FName& KeyName, CoreUObject::UObject* ClassValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsClass");
        
        UBlackboardComponent_SetValueAsClass_Params params {};
        params.KeyName = KeyName;
        params.ClassValue = ClassValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06534DD0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.SetValueAsBool
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               BoolValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::SetValueAsBool(const BasicTypes::FName& KeyName, bool BoolValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.SetValueAsBool");
        
        UBlackboardComponent_SetValueAsBool_Params params {};
        params.KeyName = KeyName;
        params.BoolValue = BoolValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x06534570
     *         Name   -> Function /Script/AIModule.BlackboardComponent.IsVectorValueSet
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBlackboardComponent::IsVectorValueSet(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.IsVectorValueSet");
        
        UBlackboardComponent_IsVectorValueSet_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065358A0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsVector
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UBlackboardComponent::GetValueAsVector(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsVector");
        
        UBlackboardComponent_GetValueAsVector_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06535AA0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsString
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UBlackboardComponent::GetValueAsString(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsString");
        
        UBlackboardComponent_GetValueAsString_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06535790
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsRotator
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator UBlackboardComponent::GetValueAsRotator(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsRotator");
        
        UBlackboardComponent_GetValueAsRotator_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06536110
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsObject
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UBlackboardComponent::GetValueAsObject(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsObject");
        
        UBlackboardComponent_GetValueAsObject_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065359B0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsName
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FName UBlackboardComponent::GetValueAsName(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsName");
        
        UBlackboardComponent_GetValueAsName_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06535E00
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsInt
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UBlackboardComponent::GetValueAsInt(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsInt");
        
        UBlackboardComponent_GetValueAsInt_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06535D00
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsFloat
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UBlackboardComponent::GetValueAsFloat(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsFloat");
        
        UBlackboardComponent_GetValueAsFloat_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06535F10
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsEnum
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         uint8_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    uint8_t UBlackboardComponent::GetValueAsEnum(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsEnum");
        
        UBlackboardComponent_GetValueAsEnum_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06536010
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsClass
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UBlackboardComponent::GetValueAsClass(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsClass");
        
        UBlackboardComponent_GetValueAsClass_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06535BF0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetValueAsBool
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBlackboardComponent::GetValueAsBool(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetValueAsBool");
        
        UBlackboardComponent_GetValueAsBool_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06534210
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetRotationFromEntry
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FRotator                              ResultRotation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBlackboardComponent::GetRotationFromEntry(const BasicTypes::FName& KeyName, CoreUObject::FRotator* ResultRotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetRotationFromEntry");
        
        UBlackboardComponent_GetRotationFromEntry_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultRotation != nullptr)
            *ResultRotation = params.ResultRotation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x065343C0
     *         Name   -> Function /Script/AIModule.BlackboardComponent.GetLocationFromEntry
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               ResultLocation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBlackboardComponent::GetLocationFromEntry(const BasicTypes::FName& KeyName, CoreUObject::FVector* ResultLocation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.GetLocationFromEntry");
        
        UBlackboardComponent_GetLocationFromEntry_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ResultLocation != nullptr)
            *ResultLocation = params.ResultLocation;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x06534110
     *         Name   -> Function /Script/AIModule.BlackboardComponent.ClearValue
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  KeyName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBlackboardComponent::ClearValue(const BasicTypes::FName& KeyName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AIModule.BlackboardComponent.ClearValue");
        
        UBlackboardComponent_ClearValue_Params params {};
        params.KeyName = KeyName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
