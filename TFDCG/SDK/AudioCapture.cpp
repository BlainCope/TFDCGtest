/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AudioCapture_PARAMS.h"
#include "Headers/AudioCapture_UAudioCapture.h"
#include "Headers/AudioCapture_UAudioCaptureFunctionLibrary.h"
#include "Headers/AudioCapture_UAudioCaptureBlueprintLibrary.h"
#include "Headers/AudioCapture_UAudioCaptureComponent.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioCapture
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x02960BE0
     *         Name   -> Function /Script/AudioCapture.AudioCapture.StopCapturingAudio
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAudioCapture::StopCapturingAudio()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCapture.StopCapturingAudio");
        
        UAudioCapture_StopCapturingAudio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02960C40
     *         Name   -> Function /Script/AudioCapture.AudioCapture.StartCapturingAudio
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UAudioCapture::StartCapturingAudio()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCapture.StartCapturingAudio");
        
        UAudioCapture_StartCapturingAudio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02960B90
     *         Name   -> Function /Script/AudioCapture.AudioCapture.IsCapturingAudio
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAudioCapture::IsCapturingAudio()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCapture.IsCapturingAudio");
        
        UAudioCapture_IsCapturingAudio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02960CA0
     *         Name   -> Function /Script/AudioCapture.AudioCapture.GetAudioCaptureDeviceInfo
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioCapture::FAudioCaptureDeviceInfo              OutInfo                                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UAudioCapture::GetAudioCaptureDeviceInfo(AudioCapture::FAudioCaptureDeviceInfo* OutInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCapture.GetAudioCaptureDeviceInfo");
        
        UAudioCapture_GetAudioCaptureDeviceInfo_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutInfo != nullptr)
            *OutInfo = params.OutInfo;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02960FB0
     *         Name   -> Function /Script/AudioCapture.AudioCaptureFunctionLibrary.CreateAudioCapture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         AudioCapture::UAudioCapture*                       ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    AudioCapture::UAudioCapture* UAudioCaptureFunctionLibrary::STATIC_CreateAudioCapture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCaptureFunctionLibrary.CreateAudioCapture");
        
        UAudioCaptureFunctionLibrary_CreateAudioCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x02961490
     *         Name   -> Function /Script/AudioCapture.AudioCaptureBlueprintLibrary.GetAvailableAudioInputDevices
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        OnObtainDevicesEvent                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioCaptureBlueprintLibrary::STATIC_GetAvailableAudioInputDevices(CoreUObject::UObject* WorldContextObject, const BasicTypes::UScriptDelegate& OnObtainDevicesEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCaptureBlueprintLibrary.GetAvailableAudioInputDevices");
        
        UAudioCaptureBlueprintLibrary_GetAvailableAudioInputDevices_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.OnObtainDevicesEvent = OnObtainDevicesEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x02961630
     *         Name   -> Function /Script/AudioCapture.AudioCaptureBlueprintLibrary.Conv_AudioInputDeviceInfoToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         AudioCapture::FAudioInputDeviceInfo                Info                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UAudioCaptureBlueprintLibrary::STATIC_Conv_AudioInputDeviceInfoToString(const AudioCapture::FAudioInputDeviceInfo& Info)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioCapture.AudioCaptureBlueprintLibrary.Conv_AudioInputDeviceInfoToString");
        
        UAudioCaptureBlueprintLibrary_Conv_AudioInputDeviceInfoToString_Params params {};
        params.Info = Info;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
