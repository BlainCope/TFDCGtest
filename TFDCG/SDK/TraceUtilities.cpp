/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    TFDCG                       |
 * | Version: 1                           |
 * | Date:    08/22/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/TraceUtilities_PARAMS.h"
#include "Headers/TraceUtilities_UTraceUtilLibrary.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TraceUtilities
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x029D9860
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.TraceMarkRegionStart
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTraceUtilLibrary::STATIC_TraceMarkRegionStart(const BasicTypes::FString& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.TraceMarkRegionStart");
        
        UTraceUtilLibrary_TraceMarkRegionStart_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9860
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.TraceMarkRegionEnd
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTraceUtilLibrary::STATIC_TraceMarkRegionEnd(const BasicTypes::FString& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.TraceMarkRegionEnd");
        
        UTraceUtilLibrary_TraceMarkRegionEnd_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9860
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.TraceBookmark
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTraceUtilLibrary::STATIC_TraceBookmark(const BasicTypes::FString& Name)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.TraceBookmark");
        
        UTraceUtilLibrary_TraceBookmark_Params params {};
        params.Name = Name;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9B40
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.ToggleChannel
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ChannelName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               Enabled                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_ToggleChannel(const BasicTypes::FString& ChannelName, bool Enabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.ToggleChannel");
        
        UTraceUtilLibrary_ToggleChannel_Params params {};
        params.ChannelName = ChannelName;
        params.Enabled = Enabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272B1B0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.StopTracing
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_StopTracing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.StopTracing");
        
        UTraceUtilLibrary_StopTracing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9CE0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.StartTraceToFile
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            Channels                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_StartTraceToFile(const BasicTypes::FString& Filename, BasicTypes::TArray<BasicTypes::FString> Channels)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.StartTraceToFile");
        
        UTraceUtilLibrary_StartTraceToFile_Params params {};
        params.Filename = Filename;
        params.Channels = Channels;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9CE0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.StartTraceSendTo
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Target                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            Channels                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_StartTraceSendTo(const BasicTypes::FString& Target, BasicTypes::TArray<BasicTypes::FString> Channels)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.StartTraceSendTo");
        
        UTraceUtilLibrary_StartTraceSendTo_Params params {};
        params.Target = Target;
        params.Channels = Channels;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DC67F0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.ResumeTracing
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_ResumeTracing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.ResumeTracing");
        
        UTraceUtilLibrary_ResumeTracing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01DC67F0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.PauseTracing
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_PauseTracing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.PauseTracing");
        
        UTraceUtilLibrary_PauseTracing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0272B1B0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.IsTracing
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_IsTracing()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.IsTracing");
        
        UTraceUtilLibrary_IsTracing_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9A50
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.IsChannelEnabled
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                ChannelName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTraceUtilLibrary::STATIC_IsChannelEnabled(const BasicTypes::FString& ChannelName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.IsChannelEnabled");
        
        UTraceUtilLibrary_IsChannelEnabled_Params params {};
        params.ChannelName = ChannelName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029D99D0
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.GetEnabledChannels
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UTraceUtilLibrary::STATIC_GetEnabledChannels()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.GetEnabledChannels");
        
        UTraceUtilLibrary_GetEnabledChannels_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x029D9940
     *         Name   -> Function /Script/TraceUtilities.TraceUtilLibrary.GetAllChannels
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<BasicTypes::FString>            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<BasicTypes::FString> UTraceUtilLibrary::STATIC_GetAllChannels()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TraceUtilities.TraceUtilLibrary.GetAllChannels");
        
        UTraceUtilLibrary_GetAllChannels_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
